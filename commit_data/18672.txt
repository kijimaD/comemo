commit 1665b006a57099d7bdf5c9f1277784d36b7168d9
Author: Keith Randall <khr@golang.org>
Date:   Wed Feb 26 23:28:44 2014 -0800

    runtime: grow stack by copying
    
    On stack overflow, if all frames on the stack are
    copyable, we copy the frames to a new stack twice
    as large as the old one.  During GC, if a G is using
    less than 1/4 of its stack, copy the stack to a stack
    half its size.
    
    TODO
    - Do something about C frames.  When a C frame is in the
      stack segment, it isn't copyable.  We allocate a new segment
      in this case.
      - For idempotent C code, we can abort it, copy the stack,
        then retry.  I'm working on a separate CL for this.
      - For other C code, we can raise the stackguard
        to the lowest Go frame so the next call that Go frame
        makes triggers a copy, which will then succeed.
    - Pick a starting stack size?
    
    The plan is that eventually we reach a point where the
    stack contains only copyable frames.
    
    LGTM=rsc
    R=dvyukov, rsc
    CC=golang-codereviews
    https://golang.org/cl/54650044

 src/pkg/runtime/malloc.h        |  29 +++
 src/pkg/runtime/mem_darwin.c    |   6 +
 src/pkg/runtime/mem_dragonfly.c |   6 +
 src/pkg/runtime/mem_freebsd.c   |   6 +
 src/pkg/runtime/mem_linux.c     |   6 +
 src/pkg/runtime/mem_netbsd.c    |   6 +
 src/pkg/runtime/mem_openbsd.c   |   6 +
 src/pkg/runtime/mem_plan9.c     |   6 +
 src/pkg/runtime/mem_solaris.c   |   6 +
 src/pkg/runtime/mem_windows.c   |  13 ++
 src/pkg/runtime/mgc0.c          |  38 +---
 src/pkg/runtime/proc.c          |  45 ++++
 src/pkg/runtime/runtime.h       |   4 +-
 src/pkg/runtime/stack.c         | 458 +++++++++++++++++++++++++++++++++++++---
 src/pkg/runtime/stack.h         |   2 +-
 src/pkg/runtime/traceback_arm.c |   8 +-
 src/pkg/runtime/traceback_x86.c |   8 +-
 17 files changed, 586 insertions(+), 67 deletions(-)
