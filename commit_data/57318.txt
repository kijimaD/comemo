commit d8c75273cfae86e539af10d5000db9fb9ac3c4c0
Author: Dmitri Shuralyov <dmitshur@golang.org>
Date:   Fri Jul 21 15:59:02 2023 -0400

    cmd/dist: update isUnsupportedVMASize test skip
    
    The dist test name changed from "race" to "flag:race", "net:race",
    "os:race" and so on in CL 496181, we missed that this skip was checking
    the exact dist test name, and no builder reported a problem despite the
    skip becoming inactive.
    
    I considered deleting it as obsolete, but it may still be helpful
    if someone runs race.bash on a linux/arm64 machine configured with
    something other than the supported 48-bit VMA. So for now apply a
    simple change to restore the existing skip.
    
    Hopefully one day there will be a good way to check for unsupported VMA
    size and disable the race detector conditionally instead of relying on
    tests running, failing, and getting marked as skipped in cmd/dist.
    
    For #29948.
    For #37486.
    
    Change-Id: I8af6862c92fb0ee538ab27327d43c50921bd1873
    Reviewed-on: https://go-review.googlesource.com/c/go/+/512116
    Reviewed-by: Dmitri Shuralyov <dmitshur@google.com>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    Auto-Submit: Dmitri Shuralyov <dmitshur@golang.org>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
    Reviewed-by: Austin Clements <austin@google.com>
---
 src/cmd/dist/test.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/cmd/dist/test.go b/src/cmd/dist/test.go
index 5ae1b650aa..5e57c0c427 100644
--- a/src/cmd/dist/test.go
+++ b/src/cmd/dist/test.go
@@ -1528,7 +1528,7 @@ func (t *tester) makeGOROOTUnwritable() (undo func()) {
 // internal/platform.RaceDetectorSupported, which can't be used here
 // because cmd/dist can not import internal packages during bootstrap.
 // The race detector only supports 48-bit VMA on arm64. But we don't have
-// a good solution to check VMA size(See https://golang.org/issue/29948)
+// a good solution to check VMA size (see https://go.dev/issue/29948).
 // raceDetectorSupported will always return true for arm64. But race
 // detector tests may abort on non 48-bit VMA configuration, the tests
 // will be marked as "skipped" in this case.
@@ -1637,10 +1637,10 @@ func buildModeSupported(compiler, buildmode, goos, goarch string) bool {
 
 // isUnsupportedVMASize reports whether the failure is caused by an unsupported
 // VMA for the race detector (for example, running the race detector on an
-// arm64 machine configured with 39-bit VMA)
+// arm64 machine configured with 39-bit VMA).
 func isUnsupportedVMASize(w *work) bool {
 	unsupportedVMA := []byte("unsupported VMA range")
-	return w.dt.name == "race" && bytes.Contains(w.out.Bytes(), unsupportedVMA)
+	return strings.Contains(w.dt.name, ":race") && bytes.Contains(w.out.Bytes(), unsupportedVMA)
 }
 
 // isEnvSet reports whether the environment variable evar is
