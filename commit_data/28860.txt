commit 133d231a89c2d9f8bbceeb42cf47d8cd68fde357
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Wed Aug 10 10:36:42 2016 -0700

    cmd/compile/internal/gc: get rid of useless autopkg variable
    
    autopkg == localpkg, so it appears to be a remnant of earlier code.
    
    Change-Id: I65b6c074535e877317cbf9f1f35e94890f0ebf14
    Reviewed-on: https://go-review.googlesource.com/26662
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/cmd/compile/internal/gc/go.go   | 2 --
 src/cmd/compile/internal/gc/main.go | 2 --
 src/cmd/compile/internal/gc/ssa.go  | 2 +-
 3 files changed, 1 insertion(+), 5 deletions(-)

diff --git a/src/cmd/compile/internal/gc/go.go b/src/cmd/compile/internal/gc/go.go
index 2e4caca155..b6b858c0d9 100644
--- a/src/cmd/compile/internal/gc/go.go
+++ b/src/cmd/compile/internal/gc/go.go
@@ -156,8 +156,6 @@ var Debug_typeassert int
 
 var localpkg *Pkg // package being compiled
 
-var autopkg *Pkg // fake package for allocating auto variables
-
 var importpkg *Pkg // package being imported
 
 var itabpkg *Pkg // fake pkg for itab entries
diff --git a/src/cmd/compile/internal/gc/main.go b/src/cmd/compile/internal/gc/main.go
index b4df7ed20f..8ad3300dbe 100644
--- a/src/cmd/compile/internal/gc/main.go
+++ b/src/cmd/compile/internal/gc/main.go
@@ -108,8 +108,6 @@ func Main() {
 
 	localpkg = mkpkg("")
 	localpkg.Prefix = "\"\""
-	autopkg = mkpkg("")
-	autopkg.Prefix = "\"\""
 
 	// pseudo-package, for scoping
 	builtinpkg = mkpkg("go.builtin")
diff --git a/src/cmd/compile/internal/gc/ssa.go b/src/cmd/compile/internal/gc/ssa.go
index 997e972e0a..7ced255967 100644
--- a/src/cmd/compile/internal/gc/ssa.go
+++ b/src/cmd/compile/internal/gc/ssa.go
@@ -4521,7 +4521,7 @@ func (e *ssaExport) SplitStruct(name ssa.LocalSlot, i int) ssa.LocalSlot {
 // namedAuto returns a new AUTO variable with the given name and type.
 func (e *ssaExport) namedAuto(name string, typ ssa.Type) ssa.GCNode {
 	t := typ.(*Type)
-	s := &Sym{Name: name, Pkg: autopkg}
+	s := &Sym{Name: name, Pkg: localpkg}
 	n := Nod(ONAME, nil, nil)
 	s.Def = n
 	s.Def.Used = true
