commit d1b434b839357206484f94de1e9dc5343f62551f
Author: Ian Lance Taylor <iant@golang.org>
Date:   Fri Sep 10 12:44:37 2010 -0700

    test: Match gccgo error messages.
    
    undef.go:12:6: error: reference to undefined name ‘x’
    undef.go:13:6: error: reference to undefined name ‘x’
    undef.go:14:6: error: reference to undefined name ‘x’
    undef.go:22:25: error: reference to undefined name ‘y’
    undef.go:42:11: error: reference to undefined name ‘v’
    
    R=rsc
    CC=golang-dev
    https://golang.org/cl/2152045
---
 test/undef.go | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/test/undef.go b/test/undef.go
index 70785675ab..7ef07882aa 100644
--- a/test/undef.go
+++ b/test/undef.go
@@ -9,9 +9,9 @@
 package main
 
 var (
-	_ = x	// ERROR "undefined: x"
-	_ = x	// ERROR "undefined: x"
-	_ = x	// ERROR "undefined: x"
+	_ = x	// ERROR "undefined.*x"
+	_ = x	// ERROR "undefined.*x"
+	_ = x	// ERROR "undefined.*x"
 )
 
 type T struct {
@@ -19,7 +19,7 @@ type T struct {
 }
 
 func foo() *T { return &T{y: 99} }
-func bar() int { return y }	// ERROR "undefined: y"
+func bar() int { return y }	// ERROR "undefined.*y"
 
 type T1 struct {
 	y1 int
@@ -39,6 +39,6 @@ func f1(val interface{}) {
 func f2(val interface{}) {
 	switch val.(type) {
 	default:
-		println(v)	// ERROR "undefined: v"
+		println(v)	// ERROR "undefined.*v"
 	}
 }
