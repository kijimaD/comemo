commit 771f5f2e487db4eb2bcf6fa1660dc8cef1feaf14
Author: Daniel Martí <mvdan@mvdan.cc>
Date:   Fri Oct 16 15:05:04 2020 +0100

    compress/flate: revert a goto for-loop
    
    In https://golang.org/cl/16528, a goto loop was chosen over a regular
    for loop since that would make the function inlinable.
    
    Thanks to the recent https://golang.org/cl/256459, for loops without a
    label can now be inlined. So we can undo the workaround and simplify the
    code.
    
    Also add the function to TestIntendedInlining, which passes both before
    and after the change, as expected.
    
    For #14768.
    
    Change-Id: Ie5df55a6bcb07c538ca331eef2f908807ff0b516
    Reviewed-on: https://go-review.googlesource.com/c/go/+/263037
    Trust: Daniel Martí <mvdan@mvdan.cc>
    Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
---
 src/cmd/compile/internal/gc/inl_test.go | 1 +
 src/compress/flate/dict_decoder.go      | 6 ++----
 2 files changed, 3 insertions(+), 4 deletions(-)

diff --git a/src/cmd/compile/internal/gc/inl_test.go b/src/cmd/compile/internal/gc/inl_test.go
index 547a602ee0..afa6b98315 100644
--- a/src/cmd/compile/internal/gc/inl_test.go
+++ b/src/cmd/compile/internal/gc/inl_test.go
@@ -115,6 +115,7 @@ func TestIntendedInlining(t *testing.T) {
 			"byLiteral.Len",
 			"byLiteral.Less",
 			"byLiteral.Swap",
+			"(*dictDecoder).tryWriteCopy",
 		},
 		"encoding/base64": {
 			"assemble32",
diff --git a/src/compress/flate/dict_decoder.go b/src/compress/flate/dict_decoder.go
index 71c75a065e..3b59d48351 100644
--- a/src/compress/flate/dict_decoder.go
+++ b/src/compress/flate/dict_decoder.go
@@ -160,10 +160,8 @@ func (dd *dictDecoder) tryWriteCopy(dist, length int) int {
 	srcPos := dstPos - dist
 
 	// Copy possibly overlapping section before destination position.
-loop:
-	dstPos += copy(dd.hist[dstPos:endPos], dd.hist[srcPos:dstPos])
-	if dstPos < endPos {
-		goto loop // Avoid for-loop so that this function can be inlined
+	for dstPos < endPos {
+		dstPos += copy(dd.hist[dstPos:endPos], dd.hist[srcPos:dstPos])
 	}
 
 	dd.wrPos = dstPos
