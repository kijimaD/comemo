commit da19831c176e93e53f5037689066a4e7803ffb58
Author: Robert Hencke <robert.hencke@gmail.com>
Date:   Sun Jun 26 11:24:28 2011 +1000

    gofix: fixes for path/filepath changes
    
    Fixes #1970.
    
    R=rsc, r
    CC=golang-dev
    https://golang.org/cl/4650050
---
 src/cmd/gofix/Makefile         |  1 +
 src/cmd/gofix/filepath.go      | 53 ++++++++++++++++++++++++++++++++++++++++++
 src/cmd/gofix/filepath_test.go | 33 ++++++++++++++++++++++++++
 3 files changed, 87 insertions(+)

diff --git a/src/cmd/gofix/Makefile b/src/cmd/gofix/Makefile
index 60035e65e0..ab16bd5aa5 100644
--- a/src/cmd/gofix/Makefile
+++ b/src/cmd/gofix/Makefile
@@ -6,6 +6,7 @@ include ../../Make.inc
 
 TARG=gofix
 GOFILES=\
+	filepath.go\
 	fix.go\
 	httpfinalurl.go\
 	httpheaders.go\
diff --git a/src/cmd/gofix/filepath.go b/src/cmd/gofix/filepath.go
new file mode 100644
index 0000000000..1d0ad68794
--- /dev/null
+++ b/src/cmd/gofix/filepath.go
@@ -0,0 +1,53 @@
+// Copyright 2011 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package main
+
+import (
+	"go/ast"
+)
+
+func init() {
+	register(fix{
+		"filepath",
+		filepathFunc,
+		`Adapt code from filepath.[List]SeparatorString to string(filepath.[List]Separator).
+
+http://codereview.appspot.com/4527090
+`,
+	})
+}
+
+func filepathFunc(f *ast.File) (fixed bool) {
+	if !imports(f, "path/filepath") {
+		return
+	}
+
+	walk(f, func(n interface{}) {
+		e, ok := n.(*ast.Expr)
+		if !ok {
+			return
+		}
+
+		var ident string
+		switch {
+		case isPkgDot(*e, "filepath", "SeparatorString"):
+			ident = "filepath.Separator"
+		case isPkgDot(*e, "filepath", "ListSeparatorString"):
+			ident = "filepath.ListSeparator"
+		default:
+			return
+		}
+
+		// string(filepath.[List]Separator)
+		*e = &ast.CallExpr{
+			Fun:  ast.NewIdent("string"),
+			Args: []ast.Expr{ast.NewIdent(ident)},
+		}
+
+		fixed = true
+	})
+
+	return
+}
diff --git a/src/cmd/gofix/filepath_test.go b/src/cmd/gofix/filepath_test.go
new file mode 100644
index 0000000000..d170c3ae3c
--- /dev/null
+++ b/src/cmd/gofix/filepath_test.go
@@ -0,0 +1,33 @@
+// Copyright 2011 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package main
+
+func init() {
+	addTestCases(filepathTests)
+}
+
+var filepathTests = []testCase{
+	{
+		Name: "filepath.0",
+		In: `package main
+
+import (
+	"path/filepath"
+)
+
+var _ = filepath.SeparatorString
+var _ = filepath.ListSeparatorString
+`,
+		Out: `package main
+
+import (
+	"path/filepath"
+)
+
+var _ = string(filepath.Separator)
+var _ = string(filepath.ListSeparator)
+`,
+	},
+}
