commit fd3997168d24eca57394026428e39afea20f3ae1
Author: Than McIntosh <thanm@golang.org>
Date:   Sun Mar 9 08:59:45 2025 -0400

    cmd/cgo/internal/testsanitizers: bump GCC version for asan location checking
    
    Require GCC 11 or greater to turn on the location checking portion of
    the asan tests in this directory; the copy of libasan.so.6 shipped
    with GCC 10 doesn't seem to properly digest the new DWARF 5 being
    generated by the Go compiler+linker.
    
    Updates #72752.
    
    Change-Id: I92718c112df844d9333c4c798cddaae95665feb2
    Reviewed-on: https://go-review.googlesource.com/c/go/+/656175
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
---
 src/cmd/cgo/internal/testsanitizers/cc_test.go | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/cmd/cgo/internal/testsanitizers/cc_test.go b/src/cmd/cgo/internal/testsanitizers/cc_test.go
index fa0105b11a..7233b6a775 100644
--- a/src/cmd/cgo/internal/testsanitizers/cc_test.go
+++ b/src/cmd/cgo/internal/testsanitizers/cc_test.go
@@ -266,7 +266,12 @@ func compilerSupportsLocation() bool {
 	}
 	switch compiler.name {
 	case "gcc":
-		return compiler.major >= 10
+		// TODO(72752): the asan runtime support library
+		// (libasan.so.6) shipped with GCC 10 has problems digesting
+		// version 5 DWARF produced by the Go toolchain. Disable
+		// location checking if gcc is not sufficiently up to date in
+		// this case.
+		return compiler.major > 10
 	case "clang":
 		// TODO(65606): The clang toolchain on the LUCI builders is not built against
 		// zlib, the ASAN runtime can't actually symbolize its own stack trace. Once
