commit e7cfcda67d430a6e3cf4e8dfef27416870a2b007
Author: Ian Lance Taylor <iant@golang.org>
Date:   Wed Feb 22 13:00:14 2023 -0800

    debug/macho: don't crash if dynamic symtab with no symtab
    
    No test case because the problem can only happen for invalid data. Let
    the fuzzer find cases like this.
    
    For #47653
    Fixes #58642
    
    Change-Id: I19fee0dc9bd6239b520c15182b8f1e57bb0049bb
    Reviewed-on: https://go-review.googlesource.com/c/go/+/470397
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Run-TryBot: Ian Lance Taylor <iant@google.com>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Bryan Mills <bcmills@google.com>
---
 src/debug/macho/file.go | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/src/debug/macho/file.go b/src/debug/macho/file.go
index 9806c270bf..3e339c32c6 100644
--- a/src/debug/macho/file.go
+++ b/src/debug/macho/file.go
@@ -350,7 +350,9 @@ func NewFile(r io.ReaderAt) (*File, error) {
 			if err := binary.Read(b, bo, &hdr); err != nil {
 				return nil, err
 			}
-			if hdr.Iundefsym > uint32(len(f.Symtab.Syms)) {
+			if f.Symtab == nil {
+				return nil, &FormatError{offset, "dynamic symbol table seen before any ordinary symbol table", nil}
+			} else if hdr.Iundefsym > uint32(len(f.Symtab.Syms)) {
 				return nil, &FormatError{offset, fmt.Sprintf(
 					"undefined symbols index in dynamic symbol table command is greater than symbol table length (%d > %d)",
 					hdr.Iundefsym, len(f.Symtab.Syms)), nil}
