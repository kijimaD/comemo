commit c8791538315e633a41461173964a99bd90e103e3
Author: Daniel Mart√≠ <mvdan@mvdan.cc>
Date:   Tue Feb 20 10:21:41 2018 +0000

    cmd/compile/internal/syntax: use stringer for operators and tokens
    
    With its new -linecomment flag, it is now possible to use stringer on
    values whose strings aren't valid identifiers. This is the case with
    tokens and operators in Go.
    
    Operator alredy had inline comments with each operator's string
    representation; only minor modifications were needed. The inline
    comments were added to each of the token names, using the same strategy.
    
    Comments that were previously inline or part of the string arrays were
    moved to the line immediately before the name they correspond to.
    
    Finally, declare tokStrFast as a function that uses the generated arrays
    directly. Avoiding the branch and strconv call means that we avoid a
    performance regression in the scanner, perhaps due to the lack of
    mid-stack inlining.
    
    Performance is not affected. Measured with 'go test -run StdLib -fast'
    on an X1 Carbon Gen2 (i5-4300U @ 1.90GHz, 8GB RAM, SSD), the best of 5
    runs before and after the changes are:
    
            parsed 1709399 lines (3763 files) in 1.707402159s (1001169 lines/s)
            allocated 449.282Mb (263.137Mb/s)
    
            parsed 1709329 lines (3765 files) in 1.706663154s (1001562 lines/s)
            allocated 449.290Mb (263.256Mb/s)
    
    Change-Id: Idcc4f83393fcadd6579700e3602c09496ea2625b
    Reviewed-on: https://go-review.googlesource.com/95357
    Reviewed-by: Robert Griesemer <gri@golang.org>

 src/cmd/compile/fmt_test.go                        |   2 -
 src/cmd/compile/internal/syntax/operator_string.go |  17 ++
 src/cmd/compile/internal/syntax/scanner.go         |  10 +-
 src/cmd/compile/internal/syntax/token_string.go    |  17 ++
 src/cmd/compile/internal/syntax/tokens.go          | 232 ++++++---------------
 5 files changed, 103 insertions(+), 175 deletions(-)
