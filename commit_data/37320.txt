commit 3522cd8a203d268e9c4a6753cd19f1c12814a593
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Wed Jul 18 16:20:49 2018 +0000

    doc: fix a link in go1.11.html and flesh out a few sections
    
    Change-Id: Ic5b9ccb2772534cee77ffcaeee617c7d5edfb6fd
    Reviewed-on: https://go-review.googlesource.com/124715
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 doc/go1.11.html | 26 ++++++++++++++++----------
 1 file changed, 16 insertions(+), 10 deletions(-)

diff --git a/doc/go1.11.html b/doc/go1.11.html
index 7b16e121e2..70e9358c9d 100644
--- a/doc/go1.11.html
+++ b/doc/go1.11.html
@@ -117,6 +117,17 @@ Do not send CLs removing the interior tags from such phrases.
   If you have existing filenames matching those patterns, you will need to rename them.
 </p>
 
+<h3 id="riscv">RISC-V GOARCH values reserved</h3>
+<p><!-- CL 106256 -->
+  The main Go compiler does not yet support the RISC-V architecture
+  but we've reserved the <code>GOARCH</code> values
+  "<code>riscv</code>" and "<code>riscv64</code>", as used by Gccgo,
+  which does support RISC-V. This means that Go files
+  named <code>*_riscv.go</code> will now also
+  be <a href="/pkg/go/build/#hdr-Build_Constraints">ignored by Go
+  tools</a> except when those GOOS/GOARCH values are being used.
+</p>
+
 <h2 id="tools">Tools</h2>
 
 <h3 id="modules">Modules, package versioning, and dependency management</h3>
@@ -431,14 +442,6 @@ func f(v interface{}) {
 
 </dl><!-- encoding/csv -->
 
-<dl id="go/build, runtime/internal/sys"><dt><a href="/pkg/go/build, runtime/internal/sys/">go/build, runtime/internal/sys</a></dt>
-  <dd>
-    <p><!-- CL 106256 -->
-      TODO: <a href="https://golang.org/cl/106256">https://golang.org/cl/106256</a>: reserve RISC-V arch names
-    </p>
-
-</dl><!-- go/build, runtime/internal/sys -->
-
 <dl id="go/scanner"><dt><a href="/pkg/go/scanner/">go/scanner</a></dt>
   <dd>
     <p><!-- CL 100235 -->
@@ -680,7 +683,7 @@ func f(v interface{}) {
   <dd>
     <p><!-- CL 87095 -->
       The mutex profile now includes reader/writer contention
-      for <a href="/pkg/sync/#RWMutex"><code>RWMutex</code>.
+      for <a href="/pkg/sync/#RWMutex"><code>RWMutex</code></a>.
       Writer/writer contention was already included in the mutex
       profile.
     </p>
@@ -701,7 +704,10 @@ func f(v interface{}) {
     </p>
 
     <p><!-- CL 118658 -->
-      TODO: <a href="https://golang.org/cl/118658">https://golang.org/cl/118658</a>: check Fchmodat flags parameter on Linux
+      On Linux, the <code>flags</code> parameter to
+      <a href="/pkg/syscall/?GOOS=linux&GOARCH=amd64#Fchmodat"><code>Fchmodat</code></a>
+      is now validated. Linux's <code>fchmodat</code> doesn't support the <code>flags</code> parameter
+      so we now mimic glibc's behavior and return an error if it's non-zero.
     </p>
 
 </dl><!-- syscall -->
