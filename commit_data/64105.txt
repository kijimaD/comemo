commit 8f5c6904b616fd97dde4a0ba2f5c71114e588afd
Author: Joel Sing <joel@sing.id.au>
Date:   Sat Jun 15 02:00:29 2024 +1000

    syscall: selectively update zerrors_* on openbsd/386, openbsd/arm and openbsd/amd64
    
    The EBADMSG, ENOTRECOVERABLE, EOWNERDEAD and EPROTO Errno are missing
    on openbsd/386, openbsd/arm and openbsd/amd64. These are the earliest
    OpenBSD ports and they did not exist in the system headers when the
    relevant zerror_* file was generated.
    
    These exist for all other ports, hence it makes sense to add them
    for consistency. Update error and signal strings so that they are
    also consistent across OpenBSD ports.
    
    Fixes #67998
    
    Change-Id: I948857ef5bddcfbcdfb102c95e571d9cee009e77
    Reviewed-on: https://go-review.googlesource.com/c/go/+/592795
    Reviewed-by: Mauri de Souza Meneguzzo <mauri870@gmail.com>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Commit-Queue: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
---
 api/except.txt                       |  4 ++++
 api/go1.23.txt                       | 30 ++++++++++++++++++++++++++++++
 src/syscall/zerrors_openbsd_386.go   | 20 ++++++++++++++------
 src/syscall/zerrors_openbsd_amd64.go | 20 ++++++++++++++------
 src/syscall/zerrors_openbsd_arm.go   | 20 ++++++++++++++------
 5 files changed, 76 insertions(+), 18 deletions(-)

diff --git a/api/except.txt b/api/except.txt
index 5acc4d79c7..facae98033 100644
--- a/api/except.txt
+++ b/api/except.txt
@@ -598,3 +598,7 @@ pkg syscall (freebsd-arm64-cgo), const SYS_MKNODAT = 498
 pkg syscall (freebsd-arm64-cgo), const SYS_STAT = 188
 pkg syscall (freebsd-arm64-cgo), const SYS_STAT ideal-int
 pkg syscall (freebsd-arm64-cgo), const SYS_STATFS = 396
+pkg syscall (openbsd-386), const ELAST = 91
+pkg syscall (openbsd-386-cgo), const ELAST = 91
+pkg syscall (openbsd-amd64), const ELAST = 91
+pkg syscall (openbsd-amd64-cgo), const ELAST = 91
diff --git a/api/go1.23.txt b/api/go1.23.txt
index a548554591..dc92d3fe56 100644
--- a/api/go1.23.txt
+++ b/api/go1.23.txt
@@ -118,10 +118,40 @@ pkg sync/atomic, method (*Uint64) And(uint64) uint64 #61395
 pkg sync/atomic, method (*Uint64) Or(uint64) uint64 #61395
 pkg sync/atomic, method (*Uintptr) And(uintptr) uintptr #61395
 pkg sync/atomic, method (*Uintptr) Or(uintptr) uintptr #61395
+pkg syscall (openbsd-386), const EBADMSG = 92 #67998
+pkg syscall (openbsd-386), const ELAST = 95 #67998
+pkg syscall (openbsd-386), const ENOTRECOVERABLE = 93 #67998
+pkg syscall (openbsd-386), const ENOTRECOVERABLE Errno #67998
+pkg syscall (openbsd-386), const EOWNERDEAD = 94 #67998
+pkg syscall (openbsd-386), const EOWNERDEAD Errno #67998
+pkg syscall (openbsd-386), const EPROTO = 95 #67998
+pkg syscall (openbsd-386-cgo), const EBADMSG = 92 #67998
+pkg syscall (openbsd-386-cgo), const ELAST = 95 #67998
+pkg syscall (openbsd-386-cgo), const ENOTRECOVERABLE = 93 #67998
+pkg syscall (openbsd-386-cgo), const ENOTRECOVERABLE Errno #67998
+pkg syscall (openbsd-386-cgo), const EOWNERDEAD = 94 #67998
+pkg syscall (openbsd-386-cgo), const EOWNERDEAD Errno #67998
+pkg syscall (openbsd-386-cgo), const EPROTO = 95 #67998
+pkg syscall (openbsd-amd64), const EBADMSG = 92 #67998
+pkg syscall (openbsd-amd64), const ELAST = 95 #67998
+pkg syscall (openbsd-amd64), const ENOTRECOVERABLE = 93 #67998
+pkg syscall (openbsd-amd64), const ENOTRECOVERABLE Errno #67998
+pkg syscall (openbsd-amd64), const EOWNERDEAD = 94 #67998
+pkg syscall (openbsd-amd64), const EOWNERDEAD Errno #67998
+pkg syscall (openbsd-amd64), const EPROTO = 95 #67998
+pkg syscall (openbsd-amd64-cgo), const EBADMSG = 92 #67998
+pkg syscall (openbsd-amd64-cgo), const ELAST = 95 #67998
+pkg syscall (openbsd-amd64-cgo), const ENOTRECOVERABLE = 93 #67998
+pkg syscall (openbsd-amd64-cgo), const ENOTRECOVERABLE Errno #67998
+pkg syscall (openbsd-amd64-cgo), const EOWNERDEAD = 94 #67998
+pkg syscall (openbsd-amd64-cgo), const EOWNERDEAD Errno #67998
+pkg syscall (openbsd-amd64-cgo), const EPROTO = 95 #67998
 pkg syscall (windows-386), const WSAENOPROTOOPT = 10042 #62254
 pkg syscall (windows-386), const WSAENOPROTOOPT Errno #62254
 pkg syscall (windows-amd64), const WSAENOPROTOOPT = 10042 #62254
 pkg syscall (windows-amd64), const WSAENOPROTOOPT Errno #62254
+pkg syscall, const EBADMSG Errno #67998
+pkg syscall, const EPROTO Errno #67998
 pkg unicode/utf16, func RuneLen(int32) int #44940
 pkg unique, func Make[$0 comparable]($0) Handle[$0] #62483
 pkg unique, method (Handle[$0]) Value() $0 #62483
diff --git a/src/syscall/zerrors_openbsd_386.go b/src/syscall/zerrors_openbsd_386.go
index d17ecb96e5..a37d6d1634 100644
--- a/src/syscall/zerrors_openbsd_386.go
+++ b/src/syscall/zerrors_openbsd_386.go
@@ -1330,6 +1330,7 @@ const (
 	EALREADY        = Errno(0x25)
 	EAUTH           = Errno(0x50)
 	EBADF           = Errno(0x9)
+	EBADMSG         = Errno(0x5c)
 	EBADRPC         = Errno(0x48)
 	EBUSY           = Errno(0x10)
 	ECANCELED       = Errno(0x58)
@@ -1356,7 +1357,7 @@ const (
 	EIPSEC          = Errno(0x52)
 	EISCONN         = Errno(0x38)
 	EISDIR          = Errno(0x15)
-	ELAST           = Errno(0x5b)
+	ELAST           = Errno(0x5f)
 	ELOOP           = Errno(0x3e)
 	EMEDIUMTYPE     = Errno(0x56)
 	EMFILE          = Errno(0x18)
@@ -1384,12 +1385,14 @@ const (
 	ENOTCONN        = Errno(0x39)
 	ENOTDIR         = Errno(0x14)
 	ENOTEMPTY       = Errno(0x42)
+	ENOTRECOVERABLE = Errno(0x5d)
 	ENOTSOCK        = Errno(0x26)
 	ENOTSUP         = Errno(0x5b)
 	ENOTTY          = Errno(0x19)
 	ENXIO           = Errno(0x6)
 	EOPNOTSUPP      = Errno(0x2d)
 	EOVERFLOW       = Errno(0x57)
+	EOWNERDEAD      = Errno(0x5e)
 	EPERM           = Errno(0x1)
 	EPFNOSUPPORT    = Errno(0x2e)
 	EPIPE           = Errno(0x20)
@@ -1397,6 +1400,7 @@ const (
 	EPROCUNAVAIL    = Errno(0x4c)
 	EPROGMISMATCH   = Errno(0x4b)
 	EPROGUNAVAIL    = Errno(0x4a)
+	EPROTO          = Errno(0x5f)
 	EPROTONOSUPPORT = Errno(0x2b)
 	EPROTOTYPE      = Errno(0x29)
 	ERANGE          = Errno(0x22)
@@ -1514,7 +1518,7 @@ var errors = [...]string{
 	57: "socket is not connected",
 	58: "can't send after socket shutdown",
 	59: "too many references: can't splice",
-	60: "connection timed out",
+	60: "operation timed out",
 	61: "connection refused",
 	62: "too many levels of symbolic links",
 	63: "file name too long",
@@ -1523,12 +1527,12 @@ var errors = [...]string{
 	66: "directory not empty",
 	67: "too many processes",
 	68: "too many users",
-	69: "disc quota exceeded",
+	69: "disk quota exceeded",
 	70: "stale NFS file handle",
 	71: "too many levels of remote in path",
 	72: "RPC struct is bad",
 	73: "RPC version wrong",
-	74: "RPC prog. not avail",
+	74: "RPC program not available",
 	75: "program version wrong",
 	76: "bad procedure for program",
 	77: "no locks available",
@@ -1546,6 +1550,10 @@ var errors = [...]string{
 	89: "identifier removed",
 	90: "no message of desired type",
 	91: "not supported",
+	92: "bad message",
+	93: "state not recoverable",
+	94: "previous owner died",
+	95: "protocol error",
 }
 
 // Signal table
@@ -1566,8 +1574,8 @@ var signals = [...]string{
 	14: "alarm clock",
 	15: "terminated",
 	16: "urgent I/O condition",
-	17: "stopped (signal)",
-	18: "stopped",
+	17: "suspended (signal)",
+	18: "suspended",
 	19: "continued",
 	20: "child exited",
 	21: "stopped (tty input)",
diff --git a/src/syscall/zerrors_openbsd_amd64.go b/src/syscall/zerrors_openbsd_amd64.go
index 4904e7614f..812fd950a7 100644
--- a/src/syscall/zerrors_openbsd_amd64.go
+++ b/src/syscall/zerrors_openbsd_amd64.go
@@ -1329,6 +1329,7 @@ const (
 	EALREADY        = Errno(0x25)
 	EAUTH           = Errno(0x50)
 	EBADF           = Errno(0x9)
+	EBADMSG         = Errno(0x5c)
 	EBADRPC         = Errno(0x48)
 	EBUSY           = Errno(0x10)
 	ECANCELED       = Errno(0x58)
@@ -1355,7 +1356,7 @@ const (
 	EIPSEC          = Errno(0x52)
 	EISCONN         = Errno(0x38)
 	EISDIR          = Errno(0x15)
-	ELAST           = Errno(0x5b)
+	ELAST           = Errno(0x5f)
 	ELOOP           = Errno(0x3e)
 	EMEDIUMTYPE     = Errno(0x56)
 	EMFILE          = Errno(0x18)
@@ -1383,12 +1384,14 @@ const (
 	ENOTCONN        = Errno(0x39)
 	ENOTDIR         = Errno(0x14)
 	ENOTEMPTY       = Errno(0x42)
+	ENOTRECOVERABLE = Errno(0x5d)
 	ENOTSOCK        = Errno(0x26)
 	ENOTSUP         = Errno(0x5b)
 	ENOTTY          = Errno(0x19)
 	ENXIO           = Errno(0x6)
 	EOPNOTSUPP      = Errno(0x2d)
 	EOVERFLOW       = Errno(0x57)
+	EOWNERDEAD      = Errno(0x5e)
 	EPERM           = Errno(0x1)
 	EPFNOSUPPORT    = Errno(0x2e)
 	EPIPE           = Errno(0x20)
@@ -1396,6 +1399,7 @@ const (
 	EPROCUNAVAIL    = Errno(0x4c)
 	EPROGMISMATCH   = Errno(0x4b)
 	EPROGUNAVAIL    = Errno(0x4a)
+	EPROTO          = Errno(0x5f)
 	EPROTONOSUPPORT = Errno(0x2b)
 	EPROTOTYPE      = Errno(0x29)
 	ERANGE          = Errno(0x22)
@@ -1513,7 +1517,7 @@ var errors = [...]string{
 	57: "socket is not connected",
 	58: "can't send after socket shutdown",
 	59: "too many references: can't splice",
-	60: "connection timed out",
+	60: "operation timed out",
 	61: "connection refused",
 	62: "too many levels of symbolic links",
 	63: "file name too long",
@@ -1522,12 +1526,12 @@ var errors = [...]string{
 	66: "directory not empty",
 	67: "too many processes",
 	68: "too many users",
-	69: "disc quota exceeded",
+	69: "disk quota exceeded",
 	70: "stale NFS file handle",
 	71: "too many levels of remote in path",
 	72: "RPC struct is bad",
 	73: "RPC version wrong",
-	74: "RPC prog. not avail",
+	74: "RPC program not available",
 	75: "program version wrong",
 	76: "bad procedure for program",
 	77: "no locks available",
@@ -1545,6 +1549,10 @@ var errors = [...]string{
 	89: "identifier removed",
 	90: "no message of desired type",
 	91: "not supported",
+	92: "bad message",
+	93: "state not recoverable",
+	94: "previous owner died",
+	95: "protocol error",
 }
 
 // Signal table
@@ -1565,8 +1573,8 @@ var signals = [...]string{
 	14: "alarm clock",
 	15: "terminated",
 	16: "urgent I/O condition",
-	17: "stopped (signal)",
-	18: "stopped",
+	17: "suspended (signal)",
+	18: "suspended",
 	19: "continued",
 	20: "child exited",
 	21: "stopped (tty input)",
diff --git a/src/syscall/zerrors_openbsd_arm.go b/src/syscall/zerrors_openbsd_arm.go
index 76ac9173a9..2e19672b05 100644
--- a/src/syscall/zerrors_openbsd_arm.go
+++ b/src/syscall/zerrors_openbsd_arm.go
@@ -1329,6 +1329,7 @@ const (
 	EALREADY        = Errno(0x25)
 	EAUTH           = Errno(0x50)
 	EBADF           = Errno(0x9)
+	EBADMSG         = Errno(0x5c)
 	EBADRPC         = Errno(0x48)
 	EBUSY           = Errno(0x10)
 	ECANCELED       = Errno(0x58)
@@ -1355,7 +1356,7 @@ const (
 	EIPSEC          = Errno(0x52)
 	EISCONN         = Errno(0x38)
 	EISDIR          = Errno(0x15)
-	ELAST           = Errno(0x5b)
+	ELAST           = Errno(0x5f)
 	ELOOP           = Errno(0x3e)
 	EMEDIUMTYPE     = Errno(0x56)
 	EMFILE          = Errno(0x18)
@@ -1383,12 +1384,14 @@ const (
 	ENOTCONN        = Errno(0x39)
 	ENOTDIR         = Errno(0x14)
 	ENOTEMPTY       = Errno(0x42)
+	ENOTRECOVERABLE = Errno(0x5d)
 	ENOTSOCK        = Errno(0x26)
 	ENOTSUP         = Errno(0x5b)
 	ENOTTY          = Errno(0x19)
 	ENXIO           = Errno(0x6)
 	EOPNOTSUPP      = Errno(0x2d)
 	EOVERFLOW       = Errno(0x57)
+	EOWNERDEAD      = Errno(0x5e)
 	EPERM           = Errno(0x1)
 	EPFNOSUPPORT    = Errno(0x2e)
 	EPIPE           = Errno(0x20)
@@ -1396,6 +1399,7 @@ const (
 	EPROCUNAVAIL    = Errno(0x4c)
 	EPROGMISMATCH   = Errno(0x4b)
 	EPROGUNAVAIL    = Errno(0x4a)
+	EPROTO          = Errno(0x5f)
 	EPROTONOSUPPORT = Errno(0x2b)
 	EPROTOTYPE      = Errno(0x29)
 	ERANGE          = Errno(0x22)
@@ -1513,7 +1517,7 @@ var errors = [...]string{
 	57: "socket is not connected",
 	58: "can't send after socket shutdown",
 	59: "too many references: can't splice",
-	60: "connection timed out",
+	60: "operation timed out",
 	61: "connection refused",
 	62: "too many levels of symbolic links",
 	63: "file name too long",
@@ -1522,12 +1526,12 @@ var errors = [...]string{
 	66: "directory not empty",
 	67: "too many processes",
 	68: "too many users",
-	69: "disc quota exceeded",
+	69: "disk quota exceeded",
 	70: "stale NFS file handle",
 	71: "too many levels of remote in path",
 	72: "RPC struct is bad",
 	73: "RPC version wrong",
-	74: "RPC prog. not avail",
+	74: "RPC program not available",
 	75: "program version wrong",
 	76: "bad procedure for program",
 	77: "no locks available",
@@ -1545,6 +1549,10 @@ var errors = [...]string{
 	89: "identifier removed",
 	90: "no message of desired type",
 	91: "not supported",
+	92: "bad message",
+	93: "state not recoverable",
+	94: "previous owner died",
+	95: "protocol error",
 }
 
 // Signal table
@@ -1565,8 +1573,8 @@ var signals = [...]string{
 	14: "alarm clock",
 	15: "terminated",
 	16: "urgent I/O condition",
-	17: "stopped (signal)",
-	18: "stopped",
+	17: "suspended (signal)",
+	18: "suspended",
 	19: "continued",
 	20: "child exited",
 	21: "stopped (tty input)",
