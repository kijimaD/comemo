commit 0d4d582c68081733ec1c277d9748ec8c1ef3e177
Author: Shenghou Ma <minux@golang.org>
Date:   Fri Jan 9 01:23:45 2015 -0500

    cmd/5a, cmd/6a, cmd/8a, cmd/9a: check nerrors before exit
    
    Also fix one unaligned stack size for nacl that is caught
    by this change.
    
    Fixes #9539.
    
    Change-Id: Ib696a573d3f1f9bac7724f3a719aab65a11e04d3
    Reviewed-on: https://go-review.googlesource.com/2600
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/cmd/5a/lex.c           | 2 ++
 src/cmd/6a/lex.c           | 2 ++
 src/cmd/8a/lex.c           | 2 ++
 src/cmd/9a/lex.c           | 2 ++
 src/runtime/asm_amd64p32.s | 2 +-
 5 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/src/cmd/5a/lex.c b/src/cmd/5a/lex.c
index 9c69709479..9273d669b4 100644
--- a/src/cmd/5a/lex.c
+++ b/src/cmd/5a/lex.c
@@ -122,6 +122,8 @@ main(int argc, char *argv[])
 	if(assemble(argv[0]))
 		errorexit();
 	Bflush(&bstdout);
+	if(nerrors > 0)
+		errorexit();
 	exits(0);
 }
 
diff --git a/src/cmd/6a/lex.c b/src/cmd/6a/lex.c
index 8973d69743..0a47bfad5a 100644
--- a/src/cmd/6a/lex.c
+++ b/src/cmd/6a/lex.c
@@ -132,6 +132,8 @@ main(int argc, char *argv[])
 	if(assemble(argv[0]))
 		errorexit();
 	Bflush(&bstdout);
+	if(nerrors > 0)
+		errorexit();
 	exits(0);
 }
 
diff --git a/src/cmd/8a/lex.c b/src/cmd/8a/lex.c
index 7c172e0007..49a58c630d 100644
--- a/src/cmd/8a/lex.c
+++ b/src/cmd/8a/lex.c
@@ -127,6 +127,8 @@ main(int argc, char *argv[])
 	if(assemble(argv[0]))
 		errorexit();
 	Bflush(&bstdout);
+	if(nerrors > 0)
+		errorexit();
 	exits(0);
 }
 
diff --git a/src/cmd/9a/lex.c b/src/cmd/9a/lex.c
index c8073b07d0..e93365909e 100644
--- a/src/cmd/9a/lex.c
+++ b/src/cmd/9a/lex.c
@@ -131,6 +131,8 @@ main(int argc, char *argv[])
 	if(assemble(argv[0]))
 		errorexit();
 	Bflush(&bstdout);
+	if(nerrors > 0)
+		errorexit();
 	exits(0);
 }
 
diff --git a/src/runtime/asm_amd64p32.s b/src/runtime/asm_amd64p32.s
index 6d50ba9f4b..77355bb998 100644
--- a/src/runtime/asm_amd64p32.s
+++ b/src/runtime/asm_amd64p32.s
@@ -645,7 +645,7 @@ TEXT runtime·cputicks(SB),NOSPLIT,$0-0
 // memhash_varlen(p unsafe.Pointer, h seed) uintptr
 // redirects to memhash(p, h, size) using the size
 // stored in the closure.
-TEXT runtime·memhash_varlen(SB),NOSPLIT,$20-12
+TEXT runtime·memhash_varlen(SB),NOSPLIT,$24-12
 	GO_ARGS
 	NO_LOCAL_POINTERS
 	MOVL	p+0(FP), AX
