commit ddd67f2ecd1c100c48563addf4293bfe6dc7535f
Author: Andrew Gerrand <adg@golang.org>
Date:   Wed Jan 25 10:29:44 2012 +1100

    math/big: add examples for Rat and Int's SetString and Scan methods
    
    R=golang-dev, bradfitz, rsc, r, gri, r
    CC=golang-dev
    https://golang.org/cl/5543047
---
 src/pkg/math/big/example_test.go | 51 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 51 insertions(+)

diff --git a/src/pkg/math/big/example_test.go b/src/pkg/math/big/example_test.go
new file mode 100644
index 0000000000..ba676ec0c5
--- /dev/null
+++ b/src/pkg/math/big/example_test.go
@@ -0,0 +1,51 @@
+// Copyright 2012 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package big_test
+
+import (
+	"fmt"
+	"log"
+	"math/big"
+)
+
+// 3.142
+func ExampleRat_SetString() {
+	r := new(big.Rat)
+	r.SetString("355/113")
+	fmt.Println(r.FloatString(3))
+}
+
+// 420
+func ExampleInt_SetString() {
+	i := new(big.Int)
+	i.SetString("644", 8) // octal
+	fmt.Println(i)
+}
+
+// 3/2
+func ExampleRat_Scan() {
+	// The Scan function is rarely used directly;
+	// the fmt package recognizes it as an implementation of fmt.Scanner.
+	r := new(big.Rat)
+	_, err := fmt.Sscan("1.5000", r)
+	if err != nil {
+		log.Println("error scanning value:", err)
+	} else {
+		fmt.Println(r)
+	}
+}
+
+// 18446744073709551617
+func ExampleInt_Scan() {
+	// The Scan function is rarely used directly;
+	// the fmt package recognizes it as an implementation of fmt.Scanner.
+	i := new(big.Int)
+	_, err := fmt.Sscan("18446744073709551617", i)
+	if err != nil {
+		log.Println("error scanning value:", err)
+	} else {
+		fmt.Println(i)
+	}
+}
