commit 224f807e268e97aa7ddd17bb1f91705a00041511
Author: Mikio Hara <mikioh.mikioh@gmail.com>
Date:   Mon Apr 16 04:49:10 2018 +0900

    net: add missing deadline test for RawConn
    
    Updates #19435.
    
    Change-Id: Ife4a31972b05094a86c60a48fcacdfe52d133ee4
    Reviewed-on: https://go-review.googlesource.com/107395
    Run-TryBot: Mikio Hara <mikioh.mikioh@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/net/rawconn_test.go | 76 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 76 insertions(+)

diff --git a/src/net/rawconn_test.go b/src/net/rawconn_test.go
index ebada13e53..ecd9457c74 100644
--- a/src/net/rawconn_test.go
+++ b/src/net/rawconn_test.go
@@ -8,6 +8,7 @@ import (
 	"bytes"
 	"runtime"
 	"testing"
+	"time"
 )
 
 func TestRawConnReadWrite(t *testing.T) {
@@ -93,6 +94,81 @@ func TestRawConnReadWrite(t *testing.T) {
 			t.Fatalf("got %q; want %q", b[:n], data)
 		}
 	})
+	t.Run("Deadline", func(t *testing.T) {
+		switch runtime.GOOS {
+		case "windows":
+			t.Skipf("not supported on %s", runtime.GOOS)
+		}
+
+		ln, err := newLocalListener("tcp")
+		if err != nil {
+			t.Fatal(err)
+		}
+		defer ln.Close()
+
+		c, err := Dial(ln.Addr().Network(), ln.Addr().String())
+		if err != nil {
+			t.Fatal(err)
+		}
+		defer c.Close()
+
+		cc, err := c.(*TCPConn).SyscallConn()
+		if err != nil {
+			t.Fatal(err)
+		}
+		var b [1]byte
+
+		c.SetDeadline(noDeadline)
+		if err := c.SetDeadline(time.Now().Add(-1)); err != nil {
+			t.Fatal(err)
+		}
+		if err = writeRawConn(cc, b[:]); err == nil {
+			t.Fatal("Write should fail")
+		}
+		if perr := parseWriteError(err); perr != nil {
+			t.Error(perr)
+		}
+		if nerr, ok := err.(Error); !ok || !nerr.Timeout() {
+			t.Errorf("got %v; want timeout", err)
+		}
+		if _, err = readRawConn(cc, b[:]); err == nil {
+			t.Fatal("Read should fail")
+		}
+		if perr := parseReadError(err); perr != nil {
+			t.Error(perr)
+		}
+		if nerr, ok := err.(Error); !ok || !nerr.Timeout() {
+			t.Errorf("got %v; want timeout", err)
+		}
+
+		c.SetReadDeadline(noDeadline)
+		if err := c.SetReadDeadline(time.Now().Add(-1)); err != nil {
+			t.Fatal(err)
+		}
+		if _, err = readRawConn(cc, b[:]); err == nil {
+			t.Fatal("Read should fail")
+		}
+		if perr := parseReadError(err); perr != nil {
+			t.Error(perr)
+		}
+		if nerr, ok := err.(Error); !ok || !nerr.Timeout() {
+			t.Errorf("got %v; want timeout", err)
+		}
+
+		c.SetWriteDeadline(noDeadline)
+		if err := c.SetWriteDeadline(time.Now().Add(-1)); err != nil {
+			t.Fatal(err)
+		}
+		if err = writeRawConn(cc, b[:]); err == nil {
+			t.Fatal("Write should fail")
+		}
+		if perr := parseWriteError(err); perr != nil {
+			t.Error(perr)
+		}
+		if nerr, ok := err.(Error); !ok || !nerr.Timeout() {
+			t.Errorf("got %v; want timeout", err)
+		}
+	})
 }
 
 func TestRawConnControl(t *testing.T) {
