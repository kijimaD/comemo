commit 8b3df525a28c7aac6f8bc7e8186fe68f2c779737
Author: Ian Lance Taylor <iant@golang.org>
Date:   Thu Mar 19 17:33:28 2009 -0700

    Modify error regexps to match gccgo error messages.
    
    const1.go:23:13: error: integer constant overflow
    const1.go:25:13: error: integer constant overflow
    const1.go:26:14: error: integer constant overflow
    const1.go:27:18: error: integer constant overflow
    const1.go:28:19: error: integer constant overflow
    const1.go:29:16: error: integer constant overflow
    const1.go:29:25: error: integer constant overflow
    const1.go:30:13: error: integer constant overflow
    const1.go:33:14: error: integer constant overflow
    const1.go:34:14: error: integer constant overflow
    const1.go:36:22: error: integer constant overflow
    const1.go:37:7: error: integer constant overflow
    const1.go:38:8: error: integer constant overflow
    const1.go:39:7: error: integer constant overflow
    const1.go:40:7: error: integer constant overflow
    const1.go:41:8: error: integer constant overflow
    const1.go:44:23: error: integer constant overflow
    const1.go:46:13: error: integer constant overflow
    const1.go:47:24: error: integer constant overflow
    const1.go:48:24: error: integer constant overflow
    const1.go:49:22: error: integer constant overflow
    const1.go:51:23: error: integer constant overflow
    const1.go:52:19: error: division by zero
    const1.go:58:11: error: division by zero
    const1.go:43:17: error: integer constant overflow
    const1.go:45:13: error: integer constant overflow
    const1.go:55:19: error: floating point overflow
    const1.go:56:28: error: floating point overflow
    const1.go:57:11: error: floating point overflow
    const1.go:64:2: error: argument 0 has wrong type
    const1.go:65:2: error: argument 0 has wrong type
    const1.go:66:2: error: argument 0 has wrong type
    const1.go:68:2: error: argument 0 has wrong type
    const1.go:69:2: error: argument 0 has wrong type
    const1.go:70:4: error: floating point constant truncated to integer
    const1.go:72:2: error: argument 0 has wrong type
    const1.go:73:2: error: argument 0 has wrong type
    const1.go:74:2: error: argument 0 has wrong type
    
    R=rsc
    DELTA=34  (0 added, 0 deleted, 34 changed)
    OCL=26560
    CL=26560
---
 test/const1.go | 68 +++++++++++++++++++++++++++++-----------------------------
 1 file changed, 34 insertions(+), 34 deletions(-)

diff --git a/test/const1.go b/test/const1.go
index 09125a121e..d51e5823a6 100644
--- a/test/const1.go
+++ b/test/const1.go
@@ -24,56 +24,56 @@ const (
 )
 
 var (
-	a1 = Int8 * 100;	// ERROR "overflows"
+	a1 = Int8 * 100;	// ERROR "overflow"
 	a2 = Int8 * -1;	// OK
-	a3 = Int8 * 1000;	// ERROR "overflows"
-	a4 = Int8 * int8(1000);	// ERROR "overflows"
-	a5 = int8(Int8 * 1000);	// ERROR "overflows"
-	a6 = int8(Int8 * int8(1000));	// ERROR "overflows"
-	a7 = Int8 - 2*Int8 - 2*Int8;	// ERROR "overflows"
-	a8 = Int8 * Const / 100;	// ERROR "overflows"
+	a3 = Int8 * 1000;	// ERROR "overflow"
+	a4 = Int8 * int8(1000);	// ERROR "overflow"
+	a5 = int8(Int8 * 1000);	// ERROR "overflow"
+	a6 = int8(Int8 * int8(1000));	// ERROR "overflow"
+	a7 = Int8 - 2*Int8 - 2*Int8;	// ERROR "overflow"
+	a8 = Int8 * Const / 100;	// ERROR "overflow"
 	a9 = Int8 * (Const / 100);	// OK
 
-	b1 = Uint8 * Uint8;	// ERROR "overflows"
-	b2 = Uint8 * -1;	// ERROR "overflows"
+	b1 = Uint8 * Uint8;	// ERROR "overflow"
+	b2 = Uint8 * -1;	// ERROR "overflow"
 	b3 = Uint8 - Uint8;	// OK
-	b4 = Uint8 - Uint8 - Uint8;	// ERROR "overflows"
-	b5 = uint8(^0);	// ERROR "overflows"
-	b6 = ^uint8(0);	// ERROR "overflows"
-	b7 = uint8(Minus1);	// ERROR "overflows"
-	b8 = uint8(int8(-1));	// ERROR "overflows"
-	b8a = uint8(-1);	// ERROR "overflows"
+	b4 = Uint8 - Uint8 - Uint8;	// ERROR "overflow"
+	b5 = uint8(^0);	// ERROR "overflow"
+	b6 = ^uint8(0);	// ERROR "overflow"
+	b7 = uint8(Minus1);	// ERROR "overflow"
+	b8 = uint8(int8(-1));	// ERROR "overflow"
+	b8a = uint8(-1);	// ERROR "overflow"
 	b9 byte = (1<<10) >> 8;	// OK
-	b10 byte = (1<<10);	// ERROR "overflows"
-	b11 byte = (byte(1)<<10) >> 8;	// ERROR "overflows"
-	b12 byte = 1000;	// ERROR "overflows"
-	b13 byte = byte(1000);	// ERROR "overflows"
-	b14 byte = byte(100) * byte(100);	// ERROR "overflows"
-	b15 byte = byte(100) * 100;	// ERROR "overflows"
-	b16 byte = byte(0) * 1000;	// ERROR "overflows"
+	b10 byte = (1<<10);	// ERROR "overflow"
+	b11 byte = (byte(1)<<10) >> 8;	// ERROR "overflow"
+	b12 byte = 1000;	// ERROR "overflow"
+	b13 byte = byte(1000);	// ERROR "overflow"
+	b14 byte = byte(100) * byte(100);	// ERROR "overflow"
+	b15 byte = byte(100) * 100;	// ERROR "overflow"
+	b16 byte = byte(0) * 1000;	// ERROR "overflow"
 	b16a byte = 0 * 1000;	// OK
-	b17 byte = byte(0) * byte(1000);	// ERROR "overflows"
+	b17 byte = byte(0) * byte(1000);	// ERROR "overflow"
 	b18 byte = Uint8/0;	// ERROR "division by zero"
 
 	c1 float64 = Big;
-	c2 float64 = Big*Big;	// ERROR "overflows"
-	c3 float64 = float64(Big)*Big;	// ERROR "overflows"
-	c4 = Big*Big;	// ERROR "overflows"
+	c2 float64 = Big*Big;	// ERROR "overflow"
+	c3 float64 = float64(Big)*Big;	// ERROR "overflow"
+	c4 = Big*Big;	// ERROR "overflow"
 	c5 = Big/0;	// ERROR "division by zero"
 )
 
 func f(int);
 
 func main() {
-	f(Int8);	// ERROR "convert"
-	f(Minus1);	// ERROR "convert"
-	f(Uint8);	// ERROR "convert"
+	f(Int8);	// ERROR "convert|wrong type"
+	f(Minus1);	// ERROR "convert|wrong type"
+	f(Uint8);	// ERROR "convert|wrong type"
 	f(Const);	// OK
-	f(Float32);	// ERROR "convert"
-	f(Float);	// ERROR "convert"
+	f(Float32);	// ERROR "convert|wrong type"
+	f(Float);	// ERROR "convert|wrong type"
 	f(ConstFloat);	// ERROR "truncate"
 	f(ConstFloat - 0.5);	// OK
-	f(Big);	// ERROR "convert"
-	f(String);	// ERROR "convert"
-	f(Bool);	// ERROR "convert"
+	f(Big);	// ERROR "convert|wrong type"
+	f(String);	// ERROR "convert|wrong type"
+	f(Bool);	// ERROR "convert|wrong type"
 }
