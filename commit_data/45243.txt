commit 623319a8473fe947b0a95fbed33cf0824a429734
Author: Joel Sing <joel@sing.id.au>
Date:   Tue Aug 25 01:27:23 2020 +1000

    cmd/link/internal/arm64: handle calls to SDYNIMPORT with internal linking
    
    Handle calls to symbols that are SDYNIMPORT when linking internally on arm64.
    
    Update #36435
    
    Change-Id: I8b5421171bf471cf31c91d90b8ba99511d2c9e2a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/250181
    Trust: Joel Sing <joel@sing.id.au>
    Reviewed-by: Cherry Zhang <cherryyz@google.com>
---
 src/cmd/link/internal/arm64/asm.go | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/src/cmd/link/internal/arm64/asm.go b/src/cmd/link/internal/arm64/asm.go
index 7bf41c93a6..585c96852f 100644
--- a/src/cmd/link/internal/arm64/asm.go
+++ b/src/cmd/link/internal/arm64/asm.go
@@ -219,15 +219,16 @@ func adddynrel(target *ld.Target, ldr *loader.Loader, syms *ld.ArchSyms, s loade
 			// External linker will do this relocation.
 			return true
 		}
-		if target.IsDarwin() { // XXX why we don't need this for ELF?
-			// Internal linking.
-			// Build a PLT entry and change the relocation target to that entry.
-			addpltsym(target, ldr, syms, targ)
-			su := ldr.MakeSymbolUpdater(s)
-			su.SetRelocSym(rIdx, syms.PLT)
-			su.SetRelocAdd(rIdx, int64(ldr.SymPlt(targ)))
-			return true
+		// Internal linking.
+		if r.Add() != 0 {
+			ldr.Errorf(s, "PLT call with non-zero addend (%v)", r.Add())
 		}
+		// Build a PLT entry and change the relocation target to that entry.
+		addpltsym(target, ldr, syms, targ)
+		su := ldr.MakeSymbolUpdater(s)
+		su.SetRelocSym(rIdx, syms.PLT)
+		su.SetRelocAdd(rIdx, int64(ldr.SymPlt(targ)))
+		return true
 
 	case objabi.R_ADDR:
 		if ldr.SymType(s) == sym.STEXT && target.IsElf() {
