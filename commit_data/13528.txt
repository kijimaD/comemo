commit 41688046399e2971e423c425f0b3401eb2833791
Author: David Symonds <dsymonds@golang.org>
Date:   Mon Jul 30 14:11:51 2012 +1000

    misc/dashboard/codereview: bump user-specific table limits to 100.
    
    R=rsc
    CC=golang-dev
    https://golang.org/cl/6457051
---
 misc/dashboard/codereview/dashboard/front.go | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/misc/dashboard/codereview/dashboard/front.go b/misc/dashboard/codereview/dashboard/front.go
index 5c3a88b136..b55d570f6f 100644
--- a/misc/dashboard/codereview/dashboard/front.go
+++ b/misc/dashboard/codereview/dashboard/front.go
@@ -24,6 +24,9 @@ func init() {
 	http.HandleFunc("/favicon.ico", http.NotFound)
 }
 
+// maximum number of active CLs to show in person-specific tables.
+const maxCLs = 100
+
 func handleFront(w http.ResponseWriter, r *http.Request) {
 	c := appengine.NewContext(r)
 
@@ -55,7 +58,7 @@ func handleFront(w http.ResponseWriter, r *http.Request) {
 
 	if data.UserIsReviewer {
 		tableFetch(0, func(tbl *clTable) error {
-			q := activeCLs.Filter("Reviewer =", currentPerson).Limit(50)
+			q := activeCLs.Filter("Reviewer =", currentPerson).Limit(maxCLs)
 			tbl.Title = "CLs assigned to you for review"
 			tbl.Assignable = true
 			_, err := q.GetAll(c, &tbl.CLs)
@@ -64,7 +67,7 @@ func handleFront(w http.ResponseWriter, r *http.Request) {
 	}
 
 	tableFetch(1, func(tbl *clTable) error {
-		q := activeCLs.Filter("Author =", currentPerson).Limit(50)
+		q := activeCLs.Filter("Author =", currentPerson).Limit(maxCLs)
 		tbl.Title = "CLs sent by you"
 		tbl.Assignable = true
 		_, err := q.GetAll(c, &tbl.CLs)
