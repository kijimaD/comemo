commit 9311af79d5a9670d4ad2c9ab4f94d53563bc82d4
Author: Bryan C. Mills <bcmills@google.com>
Date:   Tue May 9 16:12:57 2017 -0400

    sync: release m.mu during (*RWMutexMap).Range callbacks in sync_test
    
    The mainline sync.Map has allowed mutations within Range callbacks
    since https://golang.org/cl/37342. The reference implementations need
    to do the same.
    
    This change integrates https://go-review.googlesource.com/c/42956/
    from x/sync.
    
    Change-Id: I6b58cf874bb31cd4f6fdb8bfa8278888ed617a5a
    Reviewed-on: https://go-review.googlesource.com/42957
    Run-TryBot: Bryan Mills <bcmills@google.com>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
---
 src/sync/map_bench_test.go     |  4 +---
 src/sync/map_reference_test.go | 13 +++++++++++--
 2 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/src/sync/map_bench_test.go b/src/sync/map_bench_test.go
index a5590a5ddc..e6a8badddb 100644
--- a/src/sync/map_bench_test.go
+++ b/src/sync/map_bench_test.go
@@ -203,12 +203,10 @@ func BenchmarkAdversarialDelete(b *testing.B) {
 				m.Load(i)
 
 				if i%mapSize == 0 {
-					var key int
 					m.Range(func(k, _ interface{}) bool {
-						key = k.(int)
+						m.Delete(k)
 						return false
 					})
-					m.Delete(key)
 					m.Store(i, i)
 				}
 			}
diff --git a/src/sync/map_reference_test.go b/src/sync/map_reference_test.go
index b21018c47f..9f27b07c32 100644
--- a/src/sync/map_reference_test.go
+++ b/src/sync/map_reference_test.go
@@ -64,8 +64,17 @@ func (m *RWMutexMap) Delete(key interface{}) {
 
 func (m *RWMutexMap) Range(f func(key, value interface{}) (shouldContinue bool)) {
 	m.mu.RLock()
-	defer m.mu.RUnlock()
-	for k, v := range m.dirty {
+	keys := make([]interface{}, 0, len(m.dirty))
+	for k := range m.dirty {
+		keys = append(keys, k)
+	}
+	m.mu.RUnlock()
+
+	for _, k := range keys {
+		v, ok := m.Load(k)
+		if !ok {
+			continue
+		}
 		if !f(k, v) {
 			break
 		}
