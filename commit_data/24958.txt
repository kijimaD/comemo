commit f5c53e0deb37b6f108e73bdb8b9a5955b2db5315
Author: Keith Randall <khr@golang.org>
Date:   Wed Sep 9 18:03:41 2015 -0700

    [dev.ssa] cmd/compile/internal/ssa: simplify how exit blocks are used
    
    Move to implicit (mostly) instead of explicit exit blocks.
    RET and RETJMP have no outgoing edges - they implicitly exit.
    CALL only has one outgoing edge, as its exception edge is
    implicit as well.
    Exit blocks are only used for unconditionally panicking code,
    like the failed branches of nil and bounds checks.
    
    There may now be more than one exit block.  No merges happen
    at exit blocks.
    
    The only downside is it is harder to find all the places code
    can exit the method.  See the reverse dominator code for an
    example.
    
    Change-Id: I42e2fd809a4bf81301ab993e29ad9f203ce48eb0
    Reviewed-on: https://go-review.googlesource.com/14462
    Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>

 src/cmd/compile/internal/gc/ssa.go             | 44 +++--------------
 src/cmd/compile/internal/ssa/check.go          | 18 +++----
 src/cmd/compile/internal/ssa/critical.go       |  2 +-
 src/cmd/compile/internal/ssa/dom.go            | 67 ++++++++++++++------------
 src/cmd/compile/internal/ssa/gen/genericOps.go | 25 +++++-----
 src/cmd/compile/internal/ssa/opGen.go          | 12 ++---
 6 files changed, 71 insertions(+), 97 deletions(-)
