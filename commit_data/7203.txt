commit ecbcd816dcf01177c62377f71a6f9da15a1e164f
Author: Russ Cox <rsc@golang.org>
Date:   Thu Jan 20 12:50:50 2011 -0500

    unsafe: add missing case to doc for Pointer
    
    Fixes #1433.
    
    R=r, gri
    CC=golang-dev
    https://golang.org/cl/3999047
---
 src/pkg/unsafe/unsafe.go | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/pkg/unsafe/unsafe.go b/src/pkg/unsafe/unsafe.go
index fc583fe95b..3a4e30c00c 100644
--- a/src/pkg/unsafe/unsafe.go
+++ b/src/pkg/unsafe/unsafe.go
@@ -14,8 +14,9 @@ type ArbitraryType int
 // Pointer represents a pointer to an arbitrary type.  There are three special operations
 // available for type Pointer that are not available for other types.
 //	1) A pointer value of any type can be converted to a Pointer.
-//	2) A uintptr can be converted to a Pointer.
-//	3) A Pointer can be converted to a uintptr.
+//	2) A Pointer can be converted to a pointer value of any type.
+//	3) A uintptr can be converted to a Pointer.
+//	4) A Pointer can be converted to a uintptr.
 // Pointer therefore allows a program to defeat the type system and read and write
 // arbitrary memory. It should be used with extreme care.
 type Pointer *ArbitraryType
