commit bd56cb90a72e6725eddb9622e93a0806c1d1f105
Author: Keith Randall <khr@golang.org>
Date:   Tue Aug 30 13:08:45 2022 -0700

    cmd/compile: regenerate node_gen.go
    
    Looks like CL 413361 which added CaseClause.RTypes missed the need
    to regenerate this file.
    
    Also CL 413357 added DynamicTypeAssertExpr.SrcRType, same issue.
    
    Change-Id: I45e4d0685cc2f9bdcef1fad2cfc92e7005ef363e
    Reviewed-on: https://go-review.googlesource.com/c/go/+/426675
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: David Chase <drchase@google.com>
    Run-TryBot: Keith Randall <khr@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
---
 src/cmd/compile/internal/ir/node_gen.go | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/src/cmd/compile/internal/ir/node_gen.go b/src/cmd/compile/internal/ir/node_gen.go
index 108e3c494c..761af8abc5 100644
--- a/src/cmd/compile/internal/ir/node_gen.go
+++ b/src/cmd/compile/internal/ir/node_gen.go
@@ -259,6 +259,7 @@ func (n *CaseClause) copy() Node {
 	c := *n
 	c.init = copyNodes(c.init)
 	c.List = copyNodes(c.List)
+	c.RTypes = copyNodes(c.RTypes)
 	c.Body = copyNodes(c.Body)
 	return &c
 }
@@ -272,6 +273,9 @@ func (n *CaseClause) doChildren(do func(Node) bool) bool {
 	if doNodes(n.List, do) {
 		return true
 	}
+	if doNodes(n.RTypes, do) {
+		return true
+	}
 	if doNodes(n.Body, do) {
 		return true
 	}
@@ -283,6 +287,7 @@ func (n *CaseClause) editChildren(edit func(Node) Node) {
 		n.Var = edit(n.Var).(*Name)
 	}
 	editNodes(n.List, edit)
+	editNodes(n.RTypes, edit)
 	editNodes(n.Body, edit)
 }
 
@@ -458,6 +463,9 @@ func (n *DynamicTypeAssertExpr) doChildren(do func(Node) bool) bool {
 	if n.X != nil && do(n.X) {
 		return true
 	}
+	if n.SrcRType != nil && do(n.SrcRType) {
+		return true
+	}
 	if n.RType != nil && do(n.RType) {
 		return true
 	}
@@ -471,6 +479,9 @@ func (n *DynamicTypeAssertExpr) editChildren(edit func(Node) Node) {
 	if n.X != nil {
 		n.X = edit(n.X).(Node)
 	}
+	if n.SrcRType != nil {
+		n.SrcRType = edit(n.SrcRType).(Node)
+	}
 	if n.RType != nil {
 		n.RType = edit(n.RType).(Node)
 	}
