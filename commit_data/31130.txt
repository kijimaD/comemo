commit 08a3a7c08a04a0041db3ee6923d9dccb8aaf764d
Author: Ian Lance Taylor <iant@golang.org>
Date:   Wed Feb 1 15:12:51 2017 -0800

    cmd/compile: update maxPtrmaskBytes comment for larger value
    
    The comment for maxPtrmaskBytes implied that the value was still 16,
    but that changed in CL 10815.
    
    Change-Id: I86e304bc7d9d1a0a6b22b600fefcc1325e4372d9
    Reviewed-on: https://go-review.googlesource.com/36120
    Reviewed-by: David Crawshaw <crawshaw@golang.org>
    Reviewed-by: Austin Clements <austin@google.com>
---
 src/cmd/compile/internal/gc/reflect.go | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

diff --git a/src/cmd/compile/internal/gc/reflect.go b/src/cmd/compile/internal/gc/reflect.go
index 7cd02749a5..9d744c6a96 100644
--- a/src/cmd/compile/internal/gc/reflect.go
+++ b/src/cmd/compile/internal/gc/reflect.go
@@ -1572,14 +1572,13 @@ func dalgsym(t *Type) *Sym {
 
 // maxPtrmaskBytes is the maximum length of a GC ptrmask bitmap,
 // which holds 1-bit entries describing where pointers are in a given type.
-// 16 bytes is enough to describe 128 pointer-sized words, 512 or 1024 bytes
-// depending on the system. Above this length, the GC information is
-// recorded as a GC program, which can express repetition compactly.
-// In either form, the information is used by the runtime to initialize the
-// heap bitmap, and for large types (like 128 or more words), they are
-// roughly the same speed. GC programs are never much larger and often
-// more compact. (If large arrays are involved, they can be arbitrarily more
-// compact.)
+// Above this length, the GC information is recorded as a GC program,
+// which can express repetition compactly. In either form, the
+// information is used by the runtime to initialize the heap bitmap,
+// and for large types (like 128 or more words), they are roughly the
+// same speed. GC programs are never much larger and often more
+// compact. (If large arrays are involved, they can be arbitrarily
+// more compact.)
 //
 // The cutoff must be large enough that any allocation large enough to
 // use a GC program is large enough that it does not share heap bitmap
