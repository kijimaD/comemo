commit 7f070af515b40fd1e7f1576b2327779df56fb782
Author: Dmitriy Vyukov <dvyukov@google.com>
Date:   Tue Mar 12 15:19:06 2013 +0400

    runtime: deflake TestStackMem
    The problem is that there are lots of dead G's from previous tests,
    each dead G consumes 1 stack segment.
    Fixes #5034.
    
    R=golang-dev, bradfitz
    CC=golang-dev
    https://golang.org/cl/7749043
---
 src/pkg/runtime/stack_test.go | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/pkg/runtime/stack_test.go b/src/pkg/runtime/stack_test.go
index 74f29f34ec..da0181a66e 100644
--- a/src/pkg/runtime/stack_test.go
+++ b/src/pkg/runtime/stack_test.go
@@ -1576,7 +1576,9 @@ func TestStackMem(t *testing.T) {
 	if consumed > estimate {
 		t.Fatalf("Stack mem: want %v, got %v", estimate, consumed)
 	}
-	if s1.StackInuse > 4<<20 {
-		t.Fatalf("Stack inuse: want %v, got %v", 4<<20, s1.StackInuse)
+	inuse := s1.StackInuse - s0.StackInuse
+	t.Logf("Inuse %vMB for stack mem", inuse>>20)
+	if inuse > 4<<20 {
+		t.Fatalf("Stack inuse: want %v, got %v", 4<<20, inuse)
 	}
 }
