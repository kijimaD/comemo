commit c3eddc4503adce7983ba5e38c6a5b4ad3626edf7
Author: David Symonds <dsymonds@golang.org>
Date:   Sat Jan 21 17:02:54 2012 +1100

    gc: test case for recursive interface bug.
    
    R=rsc
    CC=golang-dev
    https://golang.org/cl/5555066
---
 test/interface/recursive1.go | 15 +++++++++++++++
 test/interface/recursive2.go | 22 ++++++++++++++++++++++
 2 files changed, 37 insertions(+)

diff --git a/test/interface/recursive1.go b/test/interface/recursive1.go
new file mode 100644
index 0000000000..2c93a28363
--- /dev/null
+++ b/test/interface/recursive1.go
@@ -0,0 +1,15 @@
+// true  # used by recursive2
+
+// Copyright 2012 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package p
+
+type I1 interface {
+	F() I2
+}
+
+type I2 interface {
+	I1
+}
diff --git a/test/interface/recursive2.go b/test/interface/recursive2.go
new file mode 100644
index 0000000000..a7f9ab5dbd
--- /dev/null
+++ b/test/interface/recursive2.go
@@ -0,0 +1,22 @@
+// $G $D/recursive1.go && $G $D/$F.go
+
+// Copyright 2012 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Check that the mutually recursive types in recursive1.go made it
+// intact and with the same meaning, by assigning to or using them.
+
+package main
+
+import "./recursive1"
+
+func main() {
+	var i1 p.I1
+	var i2 p.I2
+	i1 = i2
+	i2 = i1
+	i1 = i2.F()
+	i2 = i1.F()
+	_, _ = i1, i2
+}
