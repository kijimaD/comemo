commit 44edc5d78740ab702bb782b5e4533f6dee07ad78
Author: Austin Clements <austin@google.com>
Date:   Wed Nov 16 20:58:38 2022 -0500

    cmd/dist: skip non-race tests
    
    In -race mode, the dist test command only registers the std, race,
    osusergo, and amd64ios tests before returning early from
    (*tester).registerTests. Prior to CL 450018, the osusergo and amd64ios
    tests weren't even affected by -race mode, so it seems their inclusion
    was unintentional. CL 450018 lifted the logic to run tests in race
    mode, which means these tests went from running without -race to
    running with -race. Unfortunately, amd64ios is not compatible with
    -race, so it is now failing on the darwin-amd64-race builder.
    
    Fix this by omitting the osusergo and amd64ios tests from -race mode,
    since it seems like they were really intended to be included anyway.
    
    This should fix the darwin-amd64-race builder.
    
    Updates #37486.
    
    Change-Id: I554bb60bc729dbb6f1bc926f1ea329768b0d6d81
    Reviewed-on: https://go-review.googlesource.com/c/go/+/451437
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Run-TryBot: Austin Clements <austin@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Auto-Submit: Austin Clements <austin@google.com>
---
 src/cmd/dist/test.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/cmd/dist/test.go b/src/cmd/dist/test.go
index 899d34dd3d..293d95e35b 100644
--- a/src/cmd/dist/test.go
+++ b/src/cmd/dist/test.go
@@ -660,6 +660,10 @@ func (t *tester) registerTests() {
 		}
 	}
 
+	if t.race {
+		return
+	}
+
 	// Test the os/user package in the pure-Go mode too.
 	if !t.compileOnly {
 		t.registerTest("osusergo", "os/user with tag osusergo",
@@ -681,10 +685,6 @@ func (t *tester) registerTests() {
 			})
 	}
 
-	if t.race {
-		return
-	}
-
 	// Runtime CPU tests.
 	if !t.compileOnly && goos != "js" { // js can't handle -cpu != 1
 		t.registerTest("runtime:cpu124", "GOMAXPROCS=2 runtime -cpu=1,2,4 -quick",
