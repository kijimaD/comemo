commit ba91dac3a9e01a68e13e3ea6f6798f2f3b4ea73f
Author: Andrew Gerrand <adg@golang.org>
Date:   Wed Jul 13 09:40:49 2011 +1000

    doc: gofix io2010 demo programs
    
    R=golang-dev, gri, r, agl
    CC=golang-dev
    https://golang.org/cl/4696046
---
 doc/talks/io2010/decrypt.go | 20 ++++++++++----------
 doc/talks/io2010/encrypt.go | 10 +++++-----
 2 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/doc/talks/io2010/decrypt.go b/doc/talks/io2010/decrypt.go
index 3292c30b24..8d21690be0 100644
--- a/doc/talks/io2010/decrypt.go
+++ b/doc/talks/io2010/decrypt.go
@@ -6,32 +6,32 @@ package main
 
 import (
 	"crypto/aes"
-	"crypto/block"
+	"crypto/cipher"
 	"compress/gzip"
 	"io"
 	"os"
 )
 
 func EncryptAndGzip(dstfile, srcfile string, key, iv []byte) {
-	r, _ := os.Open(srcfile, os.O_RDONLY, 0)
+	r, _ := os.Open(srcfile)
 	var w io.Writer
-	w, _ = os.Open(dstfile, os.O_WRONLY|os.O_CREATE, 0666)
+	w, _ = os.Create(dstfile)
 	c, _ := aes.NewCipher(key)
-	w = block.NewOFBWriter(c, iv, w)
-	w2, _ := gzip.NewDeflater(w)
+	w = cipher.StreamWriter{S: cipher.NewOFB(c, iv), W: w}
+	w2, _ := gzip.NewWriter(w)
 	io.Copy(w2, r)
 	w2.Close()
 }
 
 func DecryptAndGunzip(dstfile, srcfile string, key, iv []byte) {
-	f, _ := os.Open(srcfile, os.O_RDONLY, 0)
+	f, _ := os.Open(srcfile)
 	defer f.Close()
 	c, _ := aes.NewCipher(key)
-	r := block.NewOFBReader(c, iv, f)
-	r, _ = gzip.NewInflater(r)
-	w, _ := os.Open(dstfile, os.O_WRONLY|os.O_CREATE, 0666)
+	r := cipher.StreamReader{S: cipher.NewOFB(c, iv), R: f}
+	r2, _ := gzip.NewReader(r)
+	w, _ := os.Create(dstfile)
 	defer w.Close()
-	io.Copy(w, r)
+	io.Copy(w, r2)
 }
 
 func main() {
diff --git a/doc/talks/io2010/encrypt.go b/doc/talks/io2010/encrypt.go
index e5ab3fc595..56d1dc1b2f 100644
--- a/doc/talks/io2010/encrypt.go
+++ b/doc/talks/io2010/encrypt.go
@@ -6,21 +6,21 @@ package main
 
 import (
 	"crypto/aes"
-	"crypto/block"
+	"crypto/cipher"
 	"compress/gzip"
 	"io"
 	"os"
 )
 
 func EncryptAndGzip(dstfile, srcfile string, key, iv []byte) {
-	r, _ := os.Open(srcfile, os.O_RDONLY, 0)
+	r, _ := os.Open(srcfile)
 	var w io.WriteCloser
-	w, _ = os.Open(dstfile, os.O_WRONLY|os.O_CREATE, 0666)
+	w, _ = os.Create(dstfile)
 	defer w.Close()
-	w, _ = gzip.NewDeflater(w)
+	w, _ = gzip.NewWriter(w)
 	defer w.Close()
 	c, _ := aes.NewCipher(key)
-	io.Copy(block.NewCBCEncrypter(c, iv, w), r)
+	io.Copy(cipher.StreamWriter{S: cipher.NewOFB(c, iv), W: w}, r)
 }
 
 func main() {
