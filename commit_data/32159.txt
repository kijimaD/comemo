commit 7e1832d06c0dad102e18e8db0c45f5fcc979718e
Author: Austin Clements <austin@google.com>
Date:   Fri Apr 7 18:06:12 2017 -0400

    runtime: say where the compiler knows about var writeBarrier
    
    The runtime.writeBarrier variable tries to be helpful by telling you
    that the compiler also knows about this variable, which you could
    probably guess, but doesn't say how the compiler knows about it. In
    fact, the compiler has a complete copy in builtin/runtime.go that
    needs to be kept in sync. Say so.
    
    Change-Id: Ia7fb0c591cb6f9b8230decce01008b417dfcec89
    Reviewed-on: https://go-review.googlesource.com/40150
    Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/runtime/mgc.go | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/src/runtime/mgc.go b/src/runtime/mgc.go
index 03a58c3b27..b79617edf7 100644
--- a/src/runtime/mgc.go
+++ b/src/runtime/mgc.go
@@ -238,7 +238,9 @@ func setGCPercent(in int32) (out int32) {
 var gcphase uint32
 
 // The compiler knows about this variable.
-// If you change it, you must change the compiler too.
+// If you change it, you must change builtin/runtime.go, too.
+// If you change the first four bytes, you must also change the write
+// barrier insertion code.
 var writeBarrier struct {
 	enabled bool    // compiler emits a check of this before calling write barrier
 	pad     [3]byte // compiler uses 32-bit load for "enabled" field
