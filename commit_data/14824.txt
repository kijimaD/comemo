commit c863db4e8762d24df791025314ceb4241df921a3
Author: Robert Griesemer <gri@golang.org>
Date:   Mon Jan 7 18:02:58 2013 -0800

    spec: s/char_lit/rune_lit/
    
    The spec talks explicitly about rune literals but the
    respective production is still called char_lit for
    historic reasons. Updated the two occurences.
    
    Fixes #4602.
    
    R=rsc, iant, r, ken
    CC=golang-dev
    https://golang.org/cl/7070048
---
 doc/go_spec.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index e54068a2d7..59abbece68 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -1,6 +1,6 @@
 <!--{
 	"Title": "The Go Programming Language Specification",
-	"Subtitle": "Version of January 6, 2013",
+	"Subtitle": "Version of January 7, 2013",
 	"Path": "/ref/spec"
 }-->
 
@@ -423,7 +423,7 @@ After a backslash, certain single-character escapes represent special values:
 All other sequences starting with a backslash are illegal inside rune literals.
 </p>
 <pre class="ebnf">
-char_lit         = "'" ( unicode_value | byte_value ) "'" .
+rune_lit         = "'" ( unicode_value | byte_value ) "'" .
 unicode_value    = unicode_char | little_u_value | big_u_value | escaped_char .
 byte_value       = octal_byte_value | hex_byte_value .
 octal_byte_value = `\` octal_digit octal_digit octal_digit .
@@ -2063,7 +2063,7 @@ or a parenthesized expression.
 <pre class="ebnf">
 Operand    = Literal | OperandName | MethodExpr | "(" Expression ")" .
 Literal    = BasicLit | CompositeLit | FunctionLit .
-BasicLit   = int_lit | float_lit | imaginary_lit | char_lit | string_lit .
+BasicLit   = int_lit | float_lit | imaginary_lit | rune_lit | string_lit .
 OperandName = identifier | QualifiedIdent.
 </pre>
 
