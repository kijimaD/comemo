commit 7117819fdc1f9c365e4ec02d7e2f17eccf081a4d
Author: Jes Cok <xigua67damn@gmail.com>
Date:   Wed Sep 20 23:37:59 2023 +0000

    runtime: no need to convert 'c.fault()' to uintptr in sighandler
    
    After CL 528817, *sigctxt.fault of all arches return uintptr, so
    there is no need to convert 'c.fault()' to uintptr anymore.
    
    Change-Id: I062283b578adaaee69d8f439b109a573eeb15110
    GitHub-Last-Rev: 3ce3a75a66557d1a8ff089fd532ac694bfa0104f
    GitHub-Pull-Request: golang/go#63133
    Reviewed-on: https://go-review.googlesource.com/c/go/+/529995
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Michael Pratt <mpratt@google.com>
---
 src/runtime/signal_unix.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/runtime/signal_unix.go b/src/runtime/signal_unix.go
index 1423923e06..cd9fd5d796 100644
--- a/src/runtime/signal_unix.go
+++ b/src/runtime/signal_unix.go
@@ -698,7 +698,7 @@ func sighandler(sig uint32, info *siginfo, ctxt unsafe.Pointer, gp *g) {
 		// the unwinding code.
 		gp.sig = sig
 		gp.sigcode0 = uintptr(c.sigcode())
-		gp.sigcode1 = uintptr(c.fault())
+		gp.sigcode1 = c.fault()
 		gp.sigpc = c.sigpc()
 
 		c.preparePanic(sig, gp)
