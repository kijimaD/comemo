commit 249f807c39e96a30707f5005881b6c1b8e08077e
Author: Russ Cox <rsc@golang.org>
Date:   Thu Jul 18 12:19:38 2013 -0400

    runtime: mark concatstring as variadic (fixes 386 build)
    
    Windows was the only one seeing this bug reliably in the builder,
    but it was easy to reproduce using 'GOGC=1 go test strconv'.
    concatstring looked like it took only one string, but in fact it
    takes a long list of strings. Add an explicit ... so that the traceback
    will not use the "fixed" frame size and instead look at the
    frame size metadata recorded by the caller.
    
    R=golang-dev
    TBR=golang-dev
    CC=golang-dev
    https://golang.org/cl/11531043
---
 src/pkg/runtime/string.goc | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/pkg/runtime/string.goc b/src/pkg/runtime/string.goc
index 30639f9bb6..108487d69d 100644
--- a/src/pkg/runtime/string.goc
+++ b/src/pkg/runtime/string.goc
@@ -170,10 +170,13 @@ concatstring(intgo n, String *s)
 	return out;
 }
 
+// NOTE: Cannot use func syntax, because we need the ...,
+// to signal to the garbage collector that this function does
+// not have a fixed size argument count.
 #pragma textflag 7
-// s1 is the first of n strings.
-// the output string follows.
-func concatstring(n int, s1 String) {
+void
+runtimeÂ·concatstring(int32 n, String s1, ...)
+{
 	(&s1)[n] = concatstring(n, &s1);
 }
 
