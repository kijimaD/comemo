commit d166d1629a67054672f35c41cbc6b46e6a3bff47
Author: Christopher Wedgwood <cw@f00f.org>
Date:   Mon Mar 29 22:51:39 2010 -0700

    runtime: Remove unused runtime.write from linux/amd64
    
    Also minor reformatting.
    
    R=rsc
    CC=golang-dev
    https://golang.org/cl/845041
---
 src/pkg/runtime/linux/amd64/sys.s | 26 +++++++++-----------------
 1 file changed, 9 insertions(+), 17 deletions(-)

diff --git a/src/pkg/runtime/linux/amd64/sys.s b/src/pkg/runtime/linux/amd64/sys.s
index 18bf5b5092..78bb39ad62 100644
--- a/src/pkg/runtime/linux/amd64/sys.s
+++ b/src/pkg/runtime/linux/amd64/sys.s
@@ -10,11 +10,11 @@
 
 TEXT	exit(SB),7,$0-8
 	MOVL	8(SP), DI
-	MOVL	$231, AX	// exitgroup - force all os threads to exi
+	MOVL	$231, AX	// exitgroup - force all os threads to exit
 	SYSCALL
 	RET
 
-TEXT exit1(SB),7,$0-8
+TEXT	exit1(SB),7,$0-8
 	MOVL	8(SP), DI
 	MOVL	$60, AX	// exit - exit the current os thread
 	SYSCALL
@@ -36,15 +36,7 @@ TEXT	write(SB),7,$0-24
 	SYSCALL
 	RET
 
-TEXT	·write(SB),7,$0-24
-	MOVL	8(SP), DI
-	MOVQ	16(SP), SI
-	MOVL	24(SP), DX
-	MOVL	$1, AX			// syscall entry
-	SYSCALL
-	RET
-
-TEXT gettime(SB), 7, $32
+TEXT	gettime(SB), 7, $32
 	LEAQ	8(SP), DI
 	MOVQ	$0, SI
 	MOVQ	$0xffffffffff600000, AX
@@ -76,10 +68,10 @@ TEXT	sigtramp(SB),7,$24-16
 	CALL	sighandler(SB)
 	RET
 
-TEXT sigignore(SB),7,$0
+TEXT	sigignore(SB),7,$0
 	RET
 
-TEXT sigreturn(SB),7,$0
+TEXT	sigreturn(SB),7,$0
 	MOVL	$15, AX	// rt_sigreturn
 	SYSCALL
 	INT $3	// not reached
@@ -130,7 +122,7 @@ TEXT	·setcallerpc+0(SB),7,$0
 
 // int64 futex(int32 *uaddr, int32 op, int32 val,
 //	struct timespec *timeout, int32 *uaddr2, int32 val2);
-TEXT futex(SB),7,$0
+TEXT	futex(SB),7,$0
 	MOVQ	8(SP), DI
 	MOVL	16(SP), SI
 	MOVL	20(SP), DX
@@ -142,7 +134,7 @@ TEXT futex(SB),7,$0
 	RET
 
 // int64 clone(int32 flags, void *stack, M *m, G *g, void (*fn)(void));
-TEXT clone(SB),7,$0
+TEXT	clone(SB),7,$0
 	MOVL	flags+8(SP), DI
 	MOVQ	stack+16(SP), SI
 
@@ -174,13 +166,13 @@ TEXT clone(SB),7,$0
 	// Call fn
 	CALL	R12
 
-	// It shouldn't return.  If it does, exi
+	// It shouldn't return.  If it does, exit
 	MOVL	$111, DI
 	MOVL	$60, AX
 	SYSCALL
 	JMP	-3(PC)	// keep exiting
 
-TEXT sigaltstack(SB),7,$-8
+TEXT	sigaltstack(SB),7,$-8
 	MOVQ	new+8(SP), DI
 	MOVQ	old+16(SP), SI
 	MOVQ	$131, AX
