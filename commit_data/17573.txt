commit bab302dea2f31e1ab04d17bc42050d0610c15793
Author: Russ Cox <rsc@golang.org>
Date:   Wed Sep 11 20:29:22 2013 -0400

    undo CL 13348045 / 43675523c526
    
    There is no reason to do this, and it's more work.
    
    ««« original CL description
    net: make channel-based semaphore depend on receive, not send
    
    R=r, dvyukov
    CC=golang-dev
    https://golang.org/cl/13348045
    
    »»»
    
    R=golang-dev, r
    CC=golang-dev
    https://golang.org/cl/13632047
---
 src/pkg/net/net.go | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/src/pkg/net/net.go b/src/pkg/net/net.go
index 44288643d6..2e6db55514 100644
--- a/src/pkg/net/net.go
+++ b/src/pkg/net/net.go
@@ -408,16 +408,14 @@ func genericReadFrom(w io.Writer, r io.Reader) (n int64, err error) {
 
 var threadLimit = make(chan struct{}, 500)
 
-func init() {
-	for i := 0; i < cap(threadLimit); i++ {
-		threadLimit <- struct{}{}
-	}
-}
+// Using send for acquire is fine here because we are not using this
+// to protect any memory. All we care about is the number of goroutines
+// making calls at a time.
 
 func acquireThread() {
-	<-threadLimit
+	threadLimit <- struct{}{}
 }
 
 func releaseThread() {
-	threadLimit <- struct{}{}
+	<-threadLimit
 }
