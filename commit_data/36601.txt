commit cd1976dbef0a4a474cccb9e7fcb1e9cf2310df66
Author: Rob Pike <r@golang.org>
Date:   Wed May 9 05:51:30 2018 +1000

    doc/faq: tidy up a couple of nits
    
    The phrase "couple X" is considered colloquial, so make that "a couple of X".
    Also move the start of a sentence to a new line in a couple of places
    for easier editing, in one place thereby removing two spaces after a period.
    
    Change-Id: If5ef05eb496afc235f8f0134c4e7346375a65181
    Reviewed-on: https://go-review.googlesource.com/112176
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 doc/go_faq.html | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/doc/go_faq.html b/doc/go_faq.html
index 3893b82d7e..99a0e4a550 100644
--- a/doc/go_faq.html
+++ b/doc/go_faq.html
@@ -1855,7 +1855,8 @@ Why is my trivial program such a large binary?</h3>
 
 <p>
 The linker in the <code>gc</code> toolchain
-creates statically-linked binaries by default.  All Go binaries therefore include the Go
+creates statically-linked binaries by default.
+All Go binaries therefore include the Go
 run-time, along with the run-time type information necessary to support dynamic
 type checks, reflection, and even panic-time stack traces.
 </p>
@@ -1863,9 +1864,10 @@ type checks, reflection, and even panic-time stack traces.
 <p>
 A simple C "hello, world" program compiled and linked statically using
 gcc on Linux is around 750 kB, including an implementation of
-<code>printf</code>. An equivalent Go program using
-<code>fmt.Printf</code> weighs a couple megabytes, but that includes
-more powerful run-time support, and type and debugging information.
+<code>printf</code>.
+An equivalent Go program using
+<code>fmt.Printf</code> weighs a couple of megabytes, but that includes
+more powerful run-time support and type and debugging information.
 </p>
 
 <h3 id="unused_variables_and_imports">
