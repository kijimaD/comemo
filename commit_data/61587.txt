commit ec7824b6bb12481e7ffe50b7f1cbaa1faf465a44
Author: Michael Anthony Knyszek <mknyszek@google.com>
Date:   Mon Nov 18 22:23:43 2024 +0000

    cmd/go: disable fuzz instrumentation for internal/godebug
    
    This is thought to be the cause of certain recent longtest failures.
    Let's try it out.
    
    This appears to fix the longtests fuzz failures. I suspect that the
    sync.Map in internal/godebug is at fault with the implementation
    changing. I'm not sure yet exactly why this is a problem, maybe inlining
    that didn't happen before? I don't know exactly when coverage
    instrumentation happens in the compiler, but this is definitely the
    problem.
    
    For good measure, let's add internal/sync. If sync is on the list,
    internal/sync should be, too.
    
    Fixes #70429.
    Fixes #70430.
    Fixes #70431.
    
    Change-Id: Ic9f49daa0956e3a50192bcc7778983682b5d12b8
    Cq-Include-Trybots: luci.golang.try:gotip-linux-amd64-longtest
    Reviewed-on: https://go-review.googlesource.com/c/go/+/629475
    Reviewed-by: Roland Shoemaker <roland@golang.org>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
---
 src/cmd/go/internal/test/test.go | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/cmd/go/internal/test/test.go b/src/cmd/go/internal/test/test.go
index 534a1e2a5e..52f68183fe 100644
--- a/src/cmd/go/internal/test/test.go
+++ b/src/cmd/go/internal/test/test.go
@@ -933,7 +933,9 @@ func runTest(ctx context.Context, cmd *base.Command, args []string) {
 		var skipInstrumentation = map[string]bool{
 			"context":               true,
 			"internal/fuzz":         true,
+			"internal/godebug":      true,
 			"internal/runtime/maps": true,
+			"internal/sync":         true,
 			"reflect":               true,
 			"runtime":               true,
 			"sync":                  true,
