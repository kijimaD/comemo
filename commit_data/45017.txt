commit ca8540affd43580772589263951fd01e04f6ad07
Author: Than McIntosh <thanm@google.com>
Date:   Wed Apr 7 12:56:43 2021 -0400

    cmd/compile: fix buglet in walk convert phase relating to convT64
    
    The function runtime.convT64 accepts a single uint64 argument, but the
    compiler's rules in the walk phase for determining whether is it ok to
    pass a value of type T to a call to runtime.convT64 were slightly off.
    In particular the test was allowing a type T with size less than eight
    bytes but with more than one internal element (e.g. a struct). This
    patch tightens up the rules somewhat to prevent this from happening.
    
    Updates #40724.
    
    Change-Id: I3b909267534db59429b0aa73a3d73333e1bd6432
    Reviewed-on: https://go-review.googlesource.com/c/go/+/308069
    Trust: Than McIntosh <thanm@google.com>
    Run-TryBot: Than McIntosh <thanm@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Cherry Zhang <cherryyz@google.com>

 src/cmd/compile/internal/walk/convert.go | 11 ++++++++++-
 test/abi/convT64_criteria.go             | 25 +++++++++++++++++++++++++
 test/abi/convT64_criteria.out            |  1 +
 3 files changed, 36 insertions(+), 1 deletion(-)
