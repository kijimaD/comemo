commit 53c9b9588a3a811bdf8d7ac2ff371bc2f95ed261
Author: Michael Pratt <mpratt@google.com>
Date:   Fri Aug 21 11:49:56 2020 -0400

    runtime: check held locks with staticlockranking
    
    When lock ranking is enabled, we can now assert that lock preconditions
    are met by checking that the caller holds required locks on function
    entry.
    
    This change adds the infrastructure to add assertions. Actual assertions
    will be added for various locks in subsequent changes.
    
    Some functions are protected by locks that are not directly accessible
    in the function. In that case, we can use assertRankHeld to check that
    any lock with the rank is held. This is less precise, but it avoids
    requiring passing the lock into the functions.
    
    Updates #40677
    
    Change-Id: I843c6874867f975e90a063f087b6e2ffc147877b
    Reviewed-on: https://go-review.googlesource.com/c/go/+/245484
    Run-TryBot: Michael Pratt <mpratt@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Trust: Michael Pratt <mpratt@google.com>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>

 src/runtime/lockrank_off.go |  8 ++++++
 src/runtime/lockrank_on.go  | 70 +++++++++++++++++++++++++++++++++++++++++++--
 2 files changed, 75 insertions(+), 3 deletions(-)
