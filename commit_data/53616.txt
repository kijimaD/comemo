commit 48dbb6227acf3ebc8ac21924567aa2b6d5064915
Author: Jelle van den Hooff <jelle@vandenhooff.name>
Date:   Wed Jun 21 18:28:05 2023 -0700

    runtime: set raceignore to zero when starting a new goroutine
    
    When reusing a g struct the runtime did not reset
    g.raceignore. Initialize raceignore to zero when initially
    setting racectx.
    
    A goroutine can end with a non-zero raceignore if it exits
    after calling runtime.RaceDisable without a matching
    runtime.RaceEnable. If that goroutine's g is later reused
    the race detector is in a weird state: the underlying
    g.racectx is active, yet g.raceignore is non-zero, and
    raceacquire/racerelease which check g.raceignore become
    no-ops. This causes the race detector to report races when
    there are none.
    
    Fixes #60934
    
    Change-Id: Ib8e412f11badbaf69a480f03740da70891f4093f
    Reviewed-on: https://go-review.googlesource.com/c/go/+/505055
    Reviewed-by: Dmitri Shuralyov <dmitshur@google.com>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Run-TryBot: Michael Knyszek <mknyszek@google.com>

 src/runtime/proc.go                   |  1 +
 src/runtime/race/testdata/mop_test.go | 37 +++++++++++++++++++++++++++++++++++
 2 files changed, 38 insertions(+)
