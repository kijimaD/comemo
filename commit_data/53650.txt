commit f50e47308d60d2a043aa3f806069d49e1b7ad0c1
Author: Ludi Rehak <ludi317@gmail.com>
Date:   Mon Aug 8 18:55:56 2022 -0700

    cmd/go/internal/par: change cacheEntry.done type to atomic.Bool
    
    Change-Id: I95c941f83f74d57dfdd2d6803c9059691fb649b8
    Reviewed-on: https://go-review.googlesource.com/c/go/+/422176
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: hopehook <hopehook@qq.com>
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Auto-Submit: Bryan Mills <bcmills@google.com>
    Reviewed-by: David Chase <drchase@google.com>
    Run-TryBot: Bryan Mills <bcmills@google.com>
---
 src/cmd/go/internal/par/work.go | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/cmd/go/internal/par/work.go b/src/cmd/go/internal/par/work.go
index 496c41b150..7626251087 100644
--- a/src/cmd/go/internal/par/work.go
+++ b/src/cmd/go/internal/par/work.go
@@ -108,7 +108,7 @@ type Cache struct {
 }
 
 type cacheEntry struct {
-	done   uint32
+	done   atomic.Bool
 	mu     sync.Mutex
 	result any
 }
@@ -122,11 +122,11 @@ func (c *Cache) Do(key any, f func() any) any {
 		entryIface, _ = c.m.LoadOrStore(key, new(cacheEntry))
 	}
 	e := entryIface.(*cacheEntry)
-	if atomic.LoadUint32(&e.done) == 0 {
+	if !e.done.Load() {
 		e.mu.Lock()
-		if atomic.LoadUint32(&e.done) == 0 {
+		if !e.done.Load() {
 			e.result = f()
-			atomic.StoreUint32(&e.done, 1)
+			e.done.Store(true)
 		}
 		e.mu.Unlock()
 	}
@@ -142,7 +142,7 @@ func (c *Cache) Get(key any) any {
 		return nil
 	}
 	e := entryIface.(*cacheEntry)
-	if atomic.LoadUint32(&e.done) == 0 {
+	if !e.done.Load() {
 		return nil
 	}
 	return e.result
