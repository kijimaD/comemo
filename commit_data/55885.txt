commit efaca3170fc6d363704153586c7ad94255bf02c6
Author: Cuong Manh Le <cuong.manhle.vn@gmail.com>
Date:   Wed Mar 22 11:44:04 2023 +0700

    reflect: add test for interface type NumMethod
    
    While at it, also use concrete type for non-interface type test.
    
    Change-Id: Ie468c30ee31ba99ef8f9a810d3be851fd37b9b43
    Reviewed-on: https://go-review.googlesource.com/c/go/+/478356
    Run-TryBot: Cuong Manh Le <cuong.manhle.vn@gmail.com>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Auto-Submit: Cuong Manh Le <cuong.manhle.vn@gmail.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@google.com>
---
 src/reflect/all_test.go | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/src/reflect/all_test.go b/src/reflect/all_test.go
index c257bec1e5..31f6416ed9 100644
--- a/src/reflect/all_test.go
+++ b/src/reflect/all_test.go
@@ -3281,14 +3281,16 @@ type unexpI interface {
 	f() (int32, int8)
 }
 
-var unexpi unexpI = new(unexp)
-
 func TestUnexportedMethods(t *testing.T) {
-	typ := TypeOf(unexpi)
-
+	typ := TypeOf(new(unexp))
 	if got := typ.NumMethod(); got != 0 {
 		t.Errorf("NumMethod=%d, want 0 satisfied methods", got)
 	}
+
+	typ = TypeOf((*unexpI)(nil))
+	if got := typ.Elem().NumMethod(); got != 1 {
+		t.Errorf("NumMethod=%d, want 1 satisfied methods", got)
+	}
 }
 
 type InnerInt struct {
