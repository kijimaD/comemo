commit b7b36524143e64738997ce3dbcfe38437e070f3c
Author: Russ Cox <rsc@golang.org>
Date:   Thu Mar 15 15:10:19 2012 -0400

    os: do not assume syscall.Write will write everything
    
    Fixes #3323.
    
    R=golang-dev, remyoudompheng, gri
    CC=golang-dev
    https://golang.org/cl/5837047
---
 src/pkg/os/file_unix.go | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/src/pkg/os/file_unix.go b/src/pkg/os/file_unix.go
index 6aa0280f4a..6271c3189e 100644
--- a/src/pkg/os/file_unix.go
+++ b/src/pkg/os/file_unix.go
@@ -173,7 +173,21 @@ func (f *File) pread(b []byte, off int64) (n int, err error) {
 // write writes len(b) bytes to the File.
 // It returns the number of bytes written and an error, if any.
 func (f *File) write(b []byte) (n int, err error) {
-	return syscall.Write(f.fd, b)
+	for {
+		m, err := syscall.Write(f.fd, b)
+		n += m
+
+		// If the syscall wrote some data but not all (short write)
+		// or it returned EINTR, then assume it stopped early for
+		// reasons that are uninteresting to the caller, and try again.
+		if 0 < m && m < len(b) || err == syscall.EINTR {
+			b = b[m:]
+			continue
+		}
+
+		return n, err
+	}
+	panic("not reached")
 }
 
 // pwrite writes len(b) bytes to the File starting at byte offset off.
