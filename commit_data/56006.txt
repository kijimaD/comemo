commit 012297a862627e236e4d693476a97ffbbf5e27dc
Author: qmuntal <quimmuntal@gmail.com>
Date:   Thu Mar 30 10:28:32 2023 +0200

    cmd/gofmt: set backup file permissions on Windows
    
    File.Chmod is supported on Windows since CL 250077, there is no need
    to skip the call anymore.
    
    Updates #18026
    
    Change-Id: Ie03cf016e651b93241f73067614fc4cb341504ef
    Reviewed-on: https://go-review.googlesource.com/c/go/+/480416
    Run-TryBot: Quim Muntal <quimmuntal@gmail.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
---
 src/cmd/gofmt/gofmt.go | 14 +++++---------
 1 file changed, 5 insertions(+), 9 deletions(-)

diff --git a/src/cmd/gofmt/gofmt.go b/src/cmd/gofmt/gofmt.go
index e464d64c98..00c8cbdb93 100644
--- a/src/cmd/gofmt/gofmt.go
+++ b/src/cmd/gofmt/gofmt.go
@@ -470,8 +470,6 @@ func fileWeight(path string, info fs.FileInfo) int64 {
 	return info.Size()
 }
 
-const chmodSupported = runtime.GOOS != "windows"
-
 // backupFile writes data to a new file named filename<number> with permissions perm,
 // with <number randomly chosen such that the file name is unique. backupFile returns
 // the chosen file name.
@@ -485,13 +483,11 @@ func backupFile(filename string, data []byte, perm fs.FileMode) (string, error)
 		return "", err
 	}
 	bakname := f.Name()
-	if chmodSupported {
-		err = f.Chmod(perm)
-		if err != nil {
-			f.Close()
-			os.Remove(bakname)
-			return bakname, err
-		}
+	err = f.Chmod(perm)
+	if err != nil {
+		f.Close()
+		os.Remove(bakname)
+		return bakname, err
 	}
 
 	// write data to backup file
