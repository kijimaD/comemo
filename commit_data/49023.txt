commit 988d0248b404a82d8f5c5973610e8a56bffb38f4
Author: Jay Conrod <jayconrod@google.com>
Date:   Wed Jul 7 16:27:22 2021 -0700

    [dev.fuzz] internal/fuzz: improve handling of worker termination by signal
    
    With this change, we'll no longer silently ignore terminations by
    SIGKILL. We use SIGKILL to terminate unresponsive workers, but it can
    also be delivered by the OOM killer.
    
    When a worker is terminated by a signal not apparently due to a crash
    or interruption (like SIGKILL or SIGHUP, as opposed to SIGSEGV), we'll
    log a message, but we won't record a crash, since any given input is
    not likely to reproduce this termination.
    
    Fixes golang/go#46576
    
    Change-Id: I6ef18a7cf5a457c7b9bc44cf5416378271216bfd
    Reviewed-on: https://go-review.googlesource.com/c/go/+/333190
    Trust: Jay Conrod <jayconrod@google.com>
    Trust: Katie Hockman <katie@golang.org>
    Run-TryBot: Jay Conrod <jayconrod@google.com>
    Reviewed-by: Katie Hockman <katie@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>

 .../testdata/script/test_fuzz_non_crash_signal.txt | 55 ++++++++++++++++++++++
 src/internal/fuzz/sys_posix.go                     | 41 +++++++++++++++-
 src/internal/fuzz/sys_unimplemented.go             |  8 ++++
 src/internal/fuzz/sys_windows.go                   | 10 ++++
 src/internal/fuzz/worker.go                        |  8 ++++
 5 files changed, 121 insertions(+), 1 deletion(-)
