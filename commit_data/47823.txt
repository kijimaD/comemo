commit 3e5bba0a44b880541fb72220a883e259d0f34a83
Author: Paul E. Murphy <murp@ibm.com>
Date:   Mon Mar 15 15:21:57 2021 -0500

    cmd/link: support 32b TLS_LE offsets on PPC64
    
    When using the GCC thread sanitizer, it links in additional
    code which uses TLS, which causes us to exceed the range of
    the 16 bit TLS relocation used by statically compiled go
    code.
    
    Rewrite objabi.R_POWER_TLS_LE to handle 32b offsets when
    linking internally or externally into an ELF binary. The
    elf relocation translation is changed to generate a pair
    of R_PPC64_TPREL16_HA/LO relocations instead of a single
    R_PPC64_TPREL16.
    
    Likewise, updating the above exposed some behavioral differences
    in gnu ld which can rewrite TLS sequences. It expects the
    sequence to generate a valid TLS address, not offset. This was
    exposed when compiling PIC code. The proper fix is to generate
    the full TLS address in the destination register of the
    "MOVD tlsaddr, $Rx" pseudo-op. This removes the need to insert
    special objabi.R_POWER_TLS relocations elsewhere.
    
    Unfortunately, XCOFF (used by aix) doesn't appear to support 32
    bit offsets, so we rewrite this back into a 16b relocation when
    externally linking a static binary.
    
    Fixes #45040
    
    Change-Id: I1ee9afd0b427cd79888032aa1f60d3e265073e1d
    Reviewed-on: https://go-review.googlesource.com/c/go/+/302209
    Run-TryBot: Paul Murphy <murp@ibm.com>
    Reviewed-by: Cherry Zhang <cherryyz@google.com>
    Reviewed-by: Lynn Boger <laboger@linux.vnet.ibm.com>
    TryBot-Result: Go Bot <gobot@golang.org>

 src/cmd/internal/obj/ppc64/asm9.go   | 34 +++++++++----------------
 src/cmd/internal/objabi/reloctype.go | 14 ++++++-----
 src/cmd/link/internal/ppc64/asm.go   | 48 ++++++++++++++++++++++++++++++------
 src/runtime/race_ppc64le.s           | 28 ++++++++++-----------
 src/runtime/tls_ppc64x.s             |  4 +--
 5 files changed, 76 insertions(+), 52 deletions(-)
