commit cc99d8ad0bb8a2299a72dcf123d615335ea09964
Author: Russ Cox <rsc@golang.org>
Date:   Tue Mar 13 09:33:54 2012 -0400

    gc: use quoted string format in import error
    
    R=ken2
    CC=golang-dev
    https://golang.org/cl/5794077
---
 src/cmd/gc/subr.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/cmd/gc/subr.c b/src/cmd/gc/subr.c
index 4fc658f7bc..681c023a01 100644
--- a/src/cmd/gc/subr.c
+++ b/src/cmd/gc/subr.c
@@ -3624,23 +3624,23 @@ isbadimport(Strlit *path)
 	while(*s) {
 		s += chartorune(&r, s);
 		if(r == Runeerror) {
-			yyerror("import path contains invalid UTF-8 sequence: \"%s\"", path->s);
+			yyerror("import path contains invalid UTF-8 sequence: \"%Z\"", path);
 			return 1;
 		}
 		if(r < 0x20 || r == 0x7f) {
-			yyerror("import path contains control character: \"%s\"", path->s);
+			yyerror("import path contains control character: \"%Z\"", path);
 			return 1;
 		}
 		if(r == '\\') {
-			yyerror("import path contains backslash; use slash: \"%s\"", path->s);
+			yyerror("import path contains backslash; use slash: \"%Z\"", path);
 			return 1;
 		}
 		if(isspacerune(r)) {
-			yyerror("import path contains space character: \"%s\"", path->s);
+			yyerror("import path contains space character: \"%Z\"", path);
 			return 1;
 		}
 		if(utfrune("!\"#$%&'()*,:;<=>?[]^`{|}", r)) {
-			yyerror("import path contains invalid character '%C': \"%s\"", r, path->s);
+			yyerror("import path contains invalid character '%C': \"%Z\"", r, path);
 			return 1;
 		}
 	}
