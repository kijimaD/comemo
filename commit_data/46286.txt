commit ca8e17164e0adf9b3ec8465e361b41c1636a3b93
Merge: c45313bf45 89b44b4e2b
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Sun Dec 20 10:36:21 2020 -0800

    [dev.regabi] all: merge master into dev.regabi
    
    The list of conflicted files for this merge is:
    
       src/cmd/compile/internal/gc/inl.go
       src/cmd/compile/internal/gc/order.go
       src/cmd/compile/internal/gc/ssa.go
       test/fixedbugs/issue20415.go
       test/fixedbugs/issue22822.go
       test/fixedbugs/issue28079b.go
    
    inl.go was updated for changes on dev.regabi: namely that OSELRECV has
    been removed, and that OSELRECV2 now only uses List, rather than both
    Left and List.
    
    order.go was updated IsAutoTmp is now a standalone function, rather
    than a method on Node.
    
    ssa.go was similarly updated for new APIs involving package ir.
    
    The tests are all merging upstream additions for gccgo error messages
    with changes to cmd/compile's error messages on the dev.regabi branch.
    
    Change-Id: Icaaf186d69da791b5994dbb6688ec989caabec42

 api/go1.16.txt                                     | 481 +++++++++++++++++++++
 api/next.txt                                       | 452 -------------------
 doc/go1.15.html                                    |  13 +
 doc/go1.16.html                                    | 129 ++++--
 doc/install-source.html                            |  67 ++-
 src/cmd/asm/internal/flags/flags.go                |   1 +
 src/cmd/asm/main.go                                |   1 +
 src/cmd/compile/internal/gc/inl.go                 |   2 +-
 src/cmd/compile/internal/gc/order.go               |   2 +-
 src/cmd/compile/internal/gc/ssa.go                 |   4 +-
 src/cmd/compile/internal/ssa/check.go              |   5 +
 src/cmd/compile/internal/ssa/expand_calls.go       |   8 +-
 src/cmd/compile/internal/ssa/gen/S390X.rules       |  24 +-
 src/cmd/compile/internal/ssa/gen/S390XOps.go       |  30 +-
 src/cmd/compile/internal/ssa/gen/rulegen.go        |   4 +-
 src/cmd/compile/internal/ssa/op.go                 |   1 +
 src/cmd/compile/internal/ssa/opGen.go              |  14 +-
 src/cmd/compile/internal/ssa/rewriteS390X.go       | 290 ++++++-------
 src/cmd/go.mod                                     |   2 +-
 src/cmd/go.sum                                     |   4 +-
 src/cmd/go/alldocs.go                              |  11 +
 src/cmd/go/go_test.go                              |  25 ++
 src/cmd/go/internal/fix/fix.go                     |  14 +-
 src/cmd/go/internal/get/get.go                     |   7 +-
 src/cmd/go/internal/list/list.go                   |  17 +-
 src/cmd/go/internal/load/pkg.go                    |  58 +--
 src/cmd/go/internal/modget/get.go                  |   4 +-
 src/cmd/go/internal/test/test.go                   |   7 +-
 src/cmd/go/internal/vet/vet.go                     |   3 +-
 src/cmd/go/internal/work/build.go                  |  48 +-
 src/cmd/go/internal/work/exec.go                   |  36 +-
 src/cmd/go/internal/work/exec_test.go              |  86 ++++
 src/cmd/go/internal/work/init.go                   |   3 +-
 src/cmd/go/testdata/script/mod_outside.txt         |   5 +-
 src/cmd/internal/goobj/objfile.go                  |   9 +-
 src/cmd/internal/obj/s390x/rotate.go               |  14 +-
 src/cmd/internal/obj/s390x/rotate_test.go          |   2 +-
 src/cmd/internal/objabi/flag.go                    |  39 ++
 src/cmd/internal/objabi/flag_test.go               |  26 ++
 src/cmd/link/internal/arm64/asm.go                 |  93 +++-
 src/cmd/link/internal/arm64/obj.go                 |   1 +
 src/cmd/link/internal/ld/data.go                   |   3 +
 src/cmd/link/internal/ld/lib.go                    |  26 +-
 src/cmd/link/internal/ld/macho.go                  |  24 +
 src/cmd/link/internal/ld/pcln.go                   |   1 +
 src/cmd/link/internal/ld/pe.go                     |   2 +-
 src/cmd/link/internal/ld/symtab.go                 |  23 +
 src/cmd/link/internal/ld/xcoff.go                  |   1 +
 src/cmd/link/internal/loadelf/ldelf.go             |   4 +
 src/cmd/link/internal/loadpe/ldpe.go               |  17 +-
 src/cmd/link/link_test.go                          |  54 +++
 .../go/analysis/passes/structtag/structtag.go      |  94 ++--
 src/cmd/vendor/modules.txt                         |   2 +-
 src/crypto/tls/common.go                           |  21 -
 src/crypto/tls/conn.go                             |  62 +--
 src/crypto/tls/handshake_client.go                 |  11 +-
 src/crypto/tls/handshake_client_test.go            |  36 --
 src/crypto/tls/handshake_client_tls13.go           |   3 -
 src/crypto/tls/handshake_server.go                 |  17 +-
 src/crypto/tls/handshake_server_test.go            |  50 +--
 src/crypto/tls/handshake_server_tls13.go           |   4 +-
 src/crypto/tls/tls.go                              |  55 ++-
 src/database/sql/sql.go                            |   2 +-
 src/debug/dwarf/dwarf5ranges_test.go               |   7 +-
 src/debug/dwarf/entry.go                           | 123 ++++--
 src/debug/dwarf/entry_test.go                      | 100 +++--
 src/debug/dwarf/open.go                            |  85 +---
 src/debug/dwarf/testdata/line-clang-dwarf5.elf     | Bin 0 -> 18384 bytes
 src/debug/dwarf/testdata/line-gcc-dwarf5.elf       | Bin 0 -> 18040 bytes
 src/go.mod                                         |   2 +-
 src/go.sum                                         |   8 +-
 src/go/build/deps_test.go                          |  30 +-
 src/go/types/call.go                               |   4 +
 src/go/types/errorcodes.go                         |  10 +
 src/go/types/fixedbugs/issue43110.src              |  43 ++
 src/go/types/fixedbugs/issue43124.src              |  16 +
 src/go/types/stmt.go                               |   4 +
 src/html/template/exec_test.go                     |  70 +++
 src/html/template/template.go                      |  90 +++-
 src/io/fs/fs.go                                    |   3 +-
 src/math/big/nat_test.go                           |  10 +
 src/net/conn_test.go                               |   2 +-
 src/net/http/h2_bundle.go                          |  12 +-
 src/net/http/pprof/pprof.go                        |   2 +-
 src/net/http/response.go                           |   9 +-
 src/net/http/serve_test.go                         |   4 +
 src/net/http/server.go                             |   2 +-
 src/net/http/transport.go                          |  14 +-
 src/net/http/transport_test.go                     |   2 +-
 src/net/mockserver_test.go                         |  12 +-
 src/net/protoconn_test.go                          |   2 +-
 src/net/server_test.go                             |   4 +-
 src/net/tcpsock_test.go                            |   2 +-
 src/os/file_plan9.go                               |  10 -
 src/os/signal/signal_test.go                       | 102 +++--
 src/os/tempfile.go                                 |  17 +-
 src/runtime/metrics/description_test.go            |   2 +-
 src/runtime/metrics/doc.go                         |   8 +
 src/runtime/metrics/sample.go                      |  10 +
 src/runtime/race/output_test.go                    |  21 +-
 src/syscall/syscall.go                             |  10 +-
 src/syscall/timestruct.go                          |  12 +-
 src/text/template/exec.go                          |   4 +
 src/text/template/exec_test.go                     |  13 +
 src/vendor/modules.txt                             |   2 +-
 test/fixedbugs/bug13343.go                         |   4 +-
 test/fixedbugs/bug195.go                           |   2 +-
 test/fixedbugs/bug251.go                           |   2 +-
 test/fixedbugs/bug302.go                           |   2 +-
 test/fixedbugs/bug369.go                           |   2 +-
 test/fixedbugs/bug429.go                           |  14 -
 test/fixedbugs/bug429_run.go                       |  35 --
 test/fixedbugs/issue10607.go                       |   2 +-
 test/fixedbugs/issue10700.dir/test.go              |  30 +-
 test/fixedbugs/issue10975.go                       |   2 +-
 test/fixedbugs/issue11326.go                       |  16 +-
 test/fixedbugs/issue11326b.go                      |   4 +
 test/fixedbugs/issue11361.go                       |   4 +-
 test/fixedbugs/issue11362.go                       |   2 +-
 test/fixedbugs/issue11371.go                       |  10 +-
 test/fixedbugs/issue11590.go                       |   6 +-
 test/fixedbugs/issue11610.go                       |   4 +-
 test/fixedbugs/issue11614.go                       |   4 +-
 test/fixedbugs/issue11656.go                       |   8 +-
 test/fixedbugs/issue11674.go                       |  18 +-
 test/fixedbugs/issue11771.go                       |   2 +-
 test/fixedbugs/issue13248.go                       |   4 +-
 test/fixedbugs/issue13266.go                       |   2 +-
 test/fixedbugs/issue13268.go                       |   1 +
 test/fixedbugs/issue13273.go                       |   4 +-
 test/fixedbugs/issue13274.go                       |   2 +-
 test/fixedbugs/issue13365.go                       |  14 +-
 test/fixedbugs/issue13415.go                       |   2 +-
 test/fixedbugs/issue13471.go                       |  22 +-
 test/fixedbugs/issue13821b.go                      |  12 +-
 test/fixedbugs/issue14006.go                       |  14 +-
 test/fixedbugs/issue14010.go                       |   4 +-
 test/fixedbugs/issue14136.go                       |   4 +-
 test/fixedbugs/issue14321.go                       |   8 +-
 test/fixedbugs/issue14520.go                       |   4 +-
 test/fixedbugs/issue14636.go                       |   2 +-
 test/fixedbugs/issue14652.go                       |   2 +-
 test/fixedbugs/issue14729.go                       |   2 +-
 test/fixedbugs/issue15514.dir/c.go                 |   2 +-
 test/fixedbugs/issue15898.go                       |   4 +-
 test/fixedbugs/issue16037_run.go                   |   2 +-
 test/fixedbugs/issue16439.go                       |   8 +-
 test/fixedbugs/issue17328.go                       |   4 +-
 test/fixedbugs/issue17588.go                       |   2 +-
 test/fixedbugs/issue17631.go                       |   2 +-
 test/fixedbugs/issue17645.go                       |   2 +-
 test/fixedbugs/issue17758.go                       |   2 +-
 test/fixedbugs/issue18092.go                       |   4 +-
 test/fixedbugs/issue18231.go                       |   2 +-
 test/fixedbugs/issue18393.go                       |   2 +-
 test/fixedbugs/issue18419.dir/test.go              |   2 +-
 test/fixedbugs/issue18655.go                       |  16 +-
 test/fixedbugs/issue18915.go                       |   6 +-
 test/fixedbugs/issue19012.go                       |   8 +-
 test/fixedbugs/issue19028.dir/main.go              |   2 +-
 test/fixedbugs/issue19056.go                       |   2 +-
 test/fixedbugs/issue19323.go                       |   4 +-
 test/fixedbugs/issue19482.go                       |   8 +-
 test/fixedbugs/issue19658.go                       |   2 +-
 test/fixedbugs/issue19667.go                       |   4 +-
 test/fixedbugs/issue19880.go                       |   2 +-
 test/fixedbugs/issue19977.go                       |   2 +-
 test/fixedbugs/issue20185.go                       |   4 +-
 test/fixedbugs/issue20227.go                       |  10 +-
 test/fixedbugs/issue20415.go                       |   6 +-
 test/fixedbugs/issue20529.go                       |   2 +-
 test/fixedbugs/issue20602.go                       |   4 +-
 test/fixedbugs/issue20749.go                       |   4 +-
 test/fixedbugs/issue20780.go                       |   2 +-
 test/fixedbugs/issue20812.go                       |  10 +-
 test/fixedbugs/issue20813.go                       |   2 +-
 test/fixedbugs/issue21256.go                       |   2 +-
 test/fixedbugs/issue21273.go                       |   2 +-
 test/fixedbugs/issue21317.go                       |   6 +-
 test/fixedbugs/issue21576.go                       |   2 +-
 test/fixedbugs/issue21979.go                       |  34 +-
 test/fixedbugs/issue21988.go                       |   2 +-
 test/fixedbugs/issue22063.go                       |   2 +-
 test/fixedbugs/issue22200.go                       |   2 +-
 test/fixedbugs/issue22200b.go                      |   6 +-
 test/fixedbugs/issue22660.go                       |   6 +-
 test/fixedbugs/issue22662b.go                      |   6 +-
 test/fixedbugs/issue22794.go                       |   6 +-
 test/fixedbugs/issue22822.go                       |   4 +-
 test/fixedbugs/issue22904.go                       |   2 +-
 test/fixedbugs/issue22921.go                       |   6 +-
 test/fixedbugs/issue23093.go                       |   2 +-
 test/fixedbugs/issue23732.go                       |  10 +-
 test/fixedbugs/issue23823.go                       |   4 +-
 test/fixedbugs/issue24339.go                       |   2 +-
 test/fixedbugs/issue25507.go                       |   6 +-
 test/fixedbugs/issue25727.go                       |  10 +-
 test/fixedbugs/issue25958.go                       |   4 +-
 test/fixedbugs/issue26416.go                       |   6 +-
 test/fixedbugs/issue26616.go                       |  10 +-
 test/fixedbugs/issue26855.go                       |   4 +-
 test/fixedbugs/issue27356.go                       |   4 +-
 test/fixedbugs/issue27938.go                       |   6 +-
 test/fixedbugs/issue28079b.go                      |   4 +-
 test/fixedbugs/issue28079c.go                      |   2 +-
 test/fixedbugs/issue28268.go                       |   4 +-
 test/fixedbugs/issue28450.go                       |  12 +-
 test/fixedbugs/issue28926.go                       |   6 +-
 test/fixedbugs/issue29855.go                       |   2 +-
 test/fixedbugs/issue29870b.go                      |   2 +-
 test/fixedbugs/issue30085.go                       |   4 +-
 test/fixedbugs/issue30087.go                       |   8 +-
 test/fixedbugs/issue30722.go                       |   6 +-
 test/fixedbugs/issue32723.go                       |  12 +-
 test/fixedbugs/issue33275_run.go                   |   2 +-
 test/fixedbugs/issue33308.go                       |   2 +-
 test/fixedbugs/issue33386.go                       |  16 +-
 test/fixedbugs/issue33460.go                       |  12 +-
 test/fixedbugs/issue33555.go                       |   2 +-
 test/fixedbugs/issue35291.go                       |   2 +-
 test/fixedbugs/issue36437.go                       |   2 +-
 test/fixedbugs/issue38745.go                       |   6 +-
 test/fixedbugs/issue41247.go                       |   2 +-
 test/fixedbugs/issue41440.go                       |   2 +-
 test/fixedbugs/issue41500.go                       |   8 +-
 test/fixedbugs/issue41575.go                       |  18 +-
 test/fixedbugs/issue42058a.go                      |   4 +-
 test/fixedbugs/issue42058b.go                      |   2 +-
 test/fixedbugs/issue4215.go                        |  22 +-
 test/fixedbugs/issue43111.go                       |  70 +++
 test/fixedbugs/issue43112.go                       |  41 ++
 test/fixedbugs/issue43292.go                       |  59 +++
 test/fixedbugs/issue6402.go                        |   2 +-
 test/fixedbugs/issue6403.go                        |   4 +-
 test/fixedbugs/issue6772.go                        |   4 +-
 test/fixedbugs/issue6889.go                        |   2 +-
 test/fixedbugs/issue6964.go                        |   2 +-
 test/fixedbugs/issue7129.go                        |   6 +-
 test/fixedbugs/issue7150.go                        |  10 +-
 test/fixedbugs/issue7153.go                        |   2 +-
 test/fixedbugs/issue7310.go                        |   6 +-
 test/fixedbugs/issue7538a.go                       |   2 +-
 test/fixedbugs/issue7675.go                        |  10 +-
 test/fixedbugs/issue7746.go                        |   4 +-
 test/fixedbugs/issue7760.go                        |  16 +-
 test/fixedbugs/issue8183.go                        |   6 +-
 test/fixedbugs/issue8311.go                        |   2 +-
 test/fixedbugs/issue8385.go                        |  16 +-
 test/fixedbugs/issue8438.go                        |   6 +-
 test/fixedbugs/issue8440.go                        |   2 +-
 test/fixedbugs/issue8507.go                        |   2 +-
 test/fixedbugs/issue9036.go                        |   4 +-
 test/fixedbugs/issue9076.go                        |   4 +-
 test/fixedbugs/issue9083.go                        |   1 +
 test/fixedbugs/issue9355.go                        |   6 +-
 test/fixedbugs/issue9370.go                        | 140 +++---
 test/fixedbugs/issue9521.go                        |   4 +-
 test/fixedbugs/issue9862_run.go                    |   2 +-
 test/linkobj.go                                    |   2 +-
 test/linkx_run.go                                  |   2 +-
 test/nosplit.go                                    |   2 +-
 test/run.go                                        |   2 +-
 test/sinit_run.go                                  |   2 +-
 263 files changed, 2764 insertions(+), 1852 deletions(-)

diff --cc src/cmd/compile/internal/gc/inl.go
index b571c2b914,600d12b59b..d81aa52651
--- a/src/cmd/compile/internal/gc/inl.go
+++ b/src/cmd/compile/internal/gc/inl.go
@@@ -726,43 -801,94 +726,43 @@@ FindRHS
  // useful for -m output documenting the reason for inhibited optimizations.
  // NB: global variables are always considered to be re-assigned.
  // TODO: handle initial declaration not including an assignment and followed by a single assignment?
 -func reassigned(n *Node) (bool, *Node) {
 -	if n.Op != ONAME {
 -		Fatalf("reassigned %v", n)
 +func reassigned(name *ir.Name) bool {
 +	if name.Op() != ir.ONAME {
 +		base.Fatalf("reassigned %v", name)
  	}
  	// no way to reliably check for no-reassignment of globals, assume it can be
 -	if n.Name.Curfn == nil {
 -		return true, nil
 -	}
 -	f := n.Name.Curfn
 -	// There just might be a good reason for this although this can be pretty surprising:
 -	// local variables inside a closure have Curfn pointing to the OCLOSURE node instead
 -	// of the corresponding ODCLFUNC.
 -	// We need to walk the function body to check for reassignments so we follow the
 -	// linkage to the ODCLFUNC node as that is where body is held.
 -	if f.Op == OCLOSURE {
 -		f = f.Func.Closure
 -	}
 -	v := reassignVisitor{name: n}
 -	a := v.visitList(f.Nbody)
 -	return a != nil, a
 -}
 -
 -type reassignVisitor struct {
 -	name *Node
 -}
 -
 -func (v *reassignVisitor) visit(n *Node) *Node {
 -	if n == nil {
 -		return nil
 +	if name.Curfn == nil {
 +		return true
  	}
 -	switch n.Op {
 -	case OAS, OSELRECV:
 -		if n.Left == v.name && n != v.name.Name.Defn {
 -			return n
 -		}
 -	case OAS2, OAS2FUNC, OAS2MAPR, OAS2DOTTYPE, OAS2RECV:
 -		for _, p := range n.List.Slice() {
 -			if p == v.name && n != v.name.Name.Defn {
 -				return n
 +	return ir.Any(name.Curfn, func(n ir.Node) bool {
 +		switch n.Op() {
 +		case ir.OAS:
 +			if n.Left() == name && n != name.Defn {
 +				return true
 +			}
- 		case ir.OAS2, ir.OAS2FUNC, ir.OAS2MAPR, ir.OAS2DOTTYPE:
++		case ir.OAS2, ir.OAS2FUNC, ir.OAS2MAPR, ir.OAS2DOTTYPE, ir.OAS2RECV, ir.OSELRECV2:
 +			for _, p := range n.List().Slice() {
 +				if p == name && n != name.Defn {
 +					return true
 +				}
  			}
  		}
 -	case OSELRECV2:
 -		if (n.Left == v.name || n.List.First() == v.name) && n != v.name.Name.Defn {
 -			return n
 -		}
 -	}
 -	if a := v.visit(n.Left); a != nil {
 -		return a
 -	}
 -	if a := v.visit(n.Right); a != nil {
 -		return a
 -	}
 -	if a := v.visitList(n.List); a != nil {
 -		return a
 -	}
 -	if a := v.visitList(n.Rlist); a != nil {
 -		return a
 -	}
 -	if a := v.visitList(n.Ninit); a != nil {
 -		return a
 -	}
 -	if a := v.visitList(n.Nbody); a != nil {
 -		return a
 -	}
 -	return nil
 -}
 -
 -func (v *reassignVisitor) visitList(l Nodes) *Node {
 -	for _, n := range l.Slice() {
 -		if a := v.visit(n); a != nil {
 -			return a
 -		}
 -	}
 -	return nil
 +		return false
 +	})
  }
  
 -func inlParam(t *types.Field, as *Node, inlvars map[*Node]*Node) *Node {
 -	n := asNode(t.Nname)
 -	if n == nil || n.isBlank() {
 -		return nblank
 +func inlParam(t *types.Field, as ir.Node, inlvars map[*ir.Name]ir.Node) ir.Node {
 +	n := ir.AsNode(t.Nname)
 +	if n == nil || ir.IsBlank(n) {
 +		return ir.BlankNode
  	}
  
 -	inlvar := inlvars[n]
 +	inlvar := inlvars[n.(*ir.Name)]
  	if inlvar == nil {
 -		Fatalf("missing inlvar for %v", n)
 +		base.Fatalf("missing inlvar for %v", n)
  	}
 -	as.Ninit.Append(nod(ODCL, inlvar, nil))
 -	inlvar.Name.Defn = as
 +	as.PtrInit().Append(ir.Nod(ir.ODCL, inlvar, nil))
 +	inlvar.Name().Defn = as
  	return inlvar
  }
  
diff --cc src/cmd/compile/internal/gc/order.go
index 87d7cf3aa9,30e1535c09..888e8ea907
--- a/src/cmd/compile/internal/gc/order.go
+++ b/src/cmd/compile/internal/gc/order.go
@@@ -885,58 -856,94 +885,58 @@@ func (o *Order) stmt(n ir.Node) 
  			if r == nil {
  				continue
  			}
 -			switch r.Op {
 +			switch r.Op() {
  			default:
 -				Dump("select case", r)
 -				Fatalf("unknown op in select %v", r.Op)
 -
 -			// If this is case x := <-ch or case x, y := <-ch, the case has
 -			// the ODCL nodes to declare x and y. We want to delay that
 -			// declaration (and possible allocation) until inside the case body.
 -			// Delete the ODCL nodes here and recreate them inside the body below.
 -			case OSELRECV, OSELRECV2:
 -				if r.Colas() {
 -					i := 0
 -					if r.Ninit.Len() != 0 && r.Ninit.First().Op == ODCL && r.Ninit.First().Left == r.Left {
 -						i++
 -					}
 -					if i < r.Ninit.Len() && r.Ninit.Index(i).Op == ODCL && r.List.Len() != 0 && r.Ninit.Index(i).Left == r.List.First() {
 -						i++
 -					}
 -					if i >= r.Ninit.Len() {
 -						r.Ninit.Set(nil)
 -					}
 -				}
 +				ir.Dump("select case", r)
 +				base.Fatalf("unknown op in select %v", r.Op())
  
 -				if r.Ninit.Len() != 0 {
 -					dumplist("ninit", r.Ninit)
 -					Fatalf("ninit on select recv")
 -				}
 -
 -				// case x = <-c
 +			case ir.OSELRECV2:
  				// case x, ok = <-c
 -				// r->left is x, r->ntest is ok, r->right is ORECV, r->right->left is c.
 -				// r->left == N means 'case <-c'.
 -				// c is always evaluated; x and ok are only evaluated when assigned.
 -				r.Right.Left = o.expr(r.Right.Left, nil)
 -
 -				if !r.Right.Left.IsAutoTmp() {
 -					r.Right.Left = o.copyExpr(r.Right.Left, r.Right.Left.Type, false)
 +				recv := r.Rlist().First().(*ir.UnaryExpr)
 +				recv.SetLeft(o.expr(recv.Left(), nil))
- 				if recv.Left().Op() != ir.ONAME {
++				if !ir.IsAutoTmp(recv.Left()) {
 +					recv.SetLeft(o.copyExpr(recv.Left()))
  				}
 -
 -				// Introduce temporary for receive and move actual copy into case body.
 -				// avoids problems with target being addressed, as usual.
 -				// NOTE: If we wanted to be clever, we could arrange for just one
 -				// temporary per distinct type, sharing the temp among all receives
 -				// with that temp. Similarly one ok bool could be shared among all
 -				// the x,ok receives. Not worth doing until there's a clear need.
 -				if r.Left != nil && r.Left.isBlank() {
 -					r.Left = nil
 -				}
 -				if r.Left != nil {
 -					// use channel element type for temporary to avoid conversions,
 -					// such as in case interfacevalue = <-intchan.
 -					// the conversion happens in the OAS instead.
 -					tmp1 := r.Left
 -
 -					if r.Colas() {
 -						tmp2 := nod(ODCL, tmp1, nil)
 -						tmp2 = typecheck(tmp2, ctxStmt)
 -						n2.Ninit.Append(tmp2)
 +				r := r.(*ir.AssignListStmt)
 +				init := r.PtrInit().Slice()
 +				r.PtrInit().Set(nil)
 +
 +				colas := r.Colas()
 +				do := func(i int, t *types.Type) {
 +					n := r.List().Index(i)
 +					if ir.IsBlank(n) {
 +						return
  					}
 -
 -					r.Left = o.newTemp(r.Right.Left.Type.Elem(), r.Right.Left.Type.Elem().HasPointers())
 -					tmp2 := nod(OAS, tmp1, r.Left)
 -					tmp2 = typecheck(tmp2, ctxStmt)
 -					n2.Ninit.Append(tmp2)
 -				}
 -
 -				if r.List.Len() != 0 && r.List.First().isBlank() {
 -					r.List.Set(nil)
 -				}
 -				if r.List.Len() != 0 {
 -					tmp1 := r.List.First()
 -					if r.Colas() {
 -						tmp2 := nod(ODCL, tmp1, nil)
 -						tmp2 = typecheck(tmp2, ctxStmt)
 -						n2.Ninit.Append(tmp2)
 +					// If this is case x := <-ch or case x, y := <-ch, the case has
 +					// the ODCL nodes to declare x and y. We want to delay that
 +					// declaration (and possible allocation) until inside the case body.
 +					// Delete the ODCL nodes here and recreate them inside the body below.
 +					if colas {
 +						if len(init) > 0 && init[0].Op() == ir.ODCL && init[0].(*ir.Decl).Left() == n {
 +							init = init[1:]
 +						}
 +						dcl := ir.Nod(ir.ODCL, n, nil)
 +						dcl = typecheck(dcl, ctxStmt)
 +						ncas.PtrInit().Append(dcl)
  					}
 -
 -					r.List.Set1(o.newTemp(types.Types[TBOOL], false))
 -					tmp2 := okas(tmp1, r.List.First())
 -					tmp2 = typecheck(tmp2, ctxStmt)
 -					n2.Ninit.Append(tmp2)
 +					tmp := o.newTemp(t, t.HasPointers())
 +					as := ir.Nod(ir.OAS, n, conv(tmp, n.Type()))
 +					as = typecheck(as, ctxStmt)
 +					ncas.PtrInit().Append(as)
 +					r.PtrList().SetIndex(i, tmp)
  				}
 -				orderBlock(&n2.Ninit, o.free)
 +				do(0, recv.Left().Type().Elem())
 +				do(1, types.Types[types.TBOOL])
 +				if len(init) != 0 {
 +					ir.DumpList("ninit", r.Init())
 +					base.Fatalf("ninit on select recv")
 +				}
 +				orderBlock(ncas.PtrInit(), o.free)
  
 -			case OSEND:
 -				if r.Ninit.Len() != 0 {
 -					dumplist("ninit", r.Ninit)
 -					Fatalf("ninit on select send")
 +			case ir.OSEND:
 +				if r.Init().Len() != 0 {
 +					ir.DumpList("ninit", r.Init())
 +					base.Fatalf("ninit on select send")
  				}
  
  				// case c <- x
diff --cc src/cmd/compile/internal/gc/ssa.go
index fbfed0640d,5b74754b53..d3b4e903b2
--- a/src/cmd/compile/internal/gc/ssa.go
+++ b/src/cmd/compile/internal/gc/ssa.go
@@@ -6003,8 -5925,8 +6003,8 @@@ func (s *state) dottype(n *ir.TypeAsser
  				// Load type out of itab, build interface with existing idata.
  				off := s.newValue1I(ssa.OpOffPtr, byteptr, int64(Widthptr), itab)
  				typ := s.load(byteptr, off)
- 				idata := s.newValue1(ssa.OpIData, n.Type(), iface)
+ 				idata := s.newValue1(ssa.OpIData, byteptr, iface)
 -				res = s.newValue2(ssa.OpIMake, n.Type, typ, idata)
 +				res = s.newValue2(ssa.OpIMake, n.Type(), typ, idata)
  				return
  			}
  
@@@ -6025,10 -5947,10 +6025,10 @@@
  			bOk.AddEdgeTo(bEnd)
  			bFail.AddEdgeTo(bEnd)
  			s.startBlock(bEnd)
- 			idata := s.newValue1(ssa.OpIData, n.Type(), iface)
+ 			idata := s.newValue1(ssa.OpIData, byteptr, iface)
 -			res = s.newValue2(ssa.OpIMake, n.Type, s.variable(&typVar, byteptr), idata)
 +			res = s.newValue2(ssa.OpIMake, n.Type(), s.variable(typVar, byteptr), idata)
  			resok = cond
 -			delete(s.vars, &typVar)
 +			delete(s.vars, typVar)
  			return
  		}
  		// converting to a nonempty interface needs a runtime call.
diff --cc test/fixedbugs/issue20415.go
index 5ad085564b,9e7649fc95..1d9a745ab4
--- a/test/fixedbugs/issue20415.go
+++ b/test/fixedbugs/issue20415.go
@@@ -11,7 -11,7 +11,7 @@@ package 
  // 1
  var f byte
  
- var f interface{} // ERROR "issue20415.go:12: previous declaration"
 -var f interface{} // ERROR "previous declaration at issue20415.go:12|redefinition"
++var f interface{} // ERROR "issue20415.go:12: previous declaration|redefinition"
  
  func _(f int) {
  }
@@@ -22,7 -22,7 +22,7 @@@ var g byt
  func _(g int) {
  }
  
- var g interface{} // ERROR "issue20415.go:20: previous declaration"
 -var g interface{} // ERROR "previous declaration at issue20415.go:20|redefinition"
++var g interface{} // ERROR "issue20415.go:20: previous declaration|redefinition"
  
  // 3
  func _(h int) {
@@@ -30,4 -30,4 +30,4 @@@
  
  var h byte
  
- var h interface{} // ERROR "issue20415.go:31: previous declaration"
 -var h interface{} // ERROR "previous declaration at issue20415.go:31|redefinition"
++var h interface{} // ERROR "issue20415.go:31: previous declaration|redefinition"
diff --cc test/fixedbugs/issue22822.go
index 0e838cb597,ea53452f09..dc86c97fe5
--- a/test/fixedbugs/issue22822.go
+++ b/test/fixedbugs/issue22822.go
@@@ -12,7 -12,5 +12,7 @@@ package mai
  func F() {
  	slice := []int{1, 2, 3}
  	len := int(2)
- 	println(len(slice)) // ERROR "cannot call non-function len .type int., declared at LINE-1"
 -	println(len(slice)) // ERROR "cannot call non-function len .type int., declared at|expected function"
++	println(len(slice)) // ERROR "cannot call non-function len .type int., declared at LINE-1|expected function"
 +	const iota = 1
- 	println(iota(slice)) // ERROR "cannot call non-function iota .type int., declared at LINE-1"
++	println(iota(slice)) // ERROR "cannot call non-function iota .type int., declared at LINE-1|expected function"
  }
diff --cc test/fixedbugs/issue28079b.go
index 9ff221baff,d1992e1d09..54c9db994b
--- a/test/fixedbugs/issue28079b.go
+++ b/test/fixedbugs/issue28079b.go
@@@ -10,8 -10,8 +10,8 @@@ package 
  
  import "unsafe"
  
- type T [uintptr(unsafe.Pointer(nil))]int // ERROR "non-constant array bound"
+ type T [uintptr(unsafe.Pointer(nil))]int // ERROR "non-constant array bound|array bound is not constant"
  
  func f() {
- 	_ = complex(1<<uintptr(unsafe.Pointer(nil)), 0) // ERROR "shift of type float64"
 -	_ = complex(1<<uintptr(unsafe.Pointer(nil)), 0) // GCCGO_ERROR "non-integer type for left operand of shift"
++	_ = complex(1<<uintptr(unsafe.Pointer(nil)), 0) // ERROR "shift of type float64|non-integer type for left operand of shift"
  }
