commit 805b4d56364ec40f29fc7efba5de537d14036c6a
Author: Manlio Perillo <manlio.perillo@gmail.com>
Date:   Sun May 16 19:52:37 2021 +0200

    cmd/dist: wait for exit in bgwait after a fatal error
    
    Currently, when a command scheduled by bgrun fails, bgwait returns to
    the caller even in case the fatal error was detected.
    
    In case of a syntax error in one of the standard packages, as an
    example, the runInstall function will try to read the generated archive
    file, only to fail since the file does not exist.  Since the runInstall
    function is called in a goroutine, cmd/dist will continue to report
    errors until all background goroutines are done.
    
    Update the bgwait function to wait until program termination in case of
    a fatal error, since returning to the caller (with an error, as an
    example) will cause cmd/dist to report an additional error during the
    next build phase.
    
    Fixes #45410
    
    Change-Id: If89976abad70f8d6ec79b2a5a1f2306e9c034c5a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/320311
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
    Trust: Dmitri Shuralyov <dmitshur@golang.org>
---
 src/cmd/dist/util.go | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/cmd/dist/util.go b/src/cmd/dist/util.go
index 28fe5e1d8d..8856f467d5 100644
--- a/src/cmd/dist/util.go
+++ b/src/cmd/dist/util.go
@@ -172,6 +172,9 @@ func bgwait(wg *sync.WaitGroup) {
 	select {
 	case <-done:
 	case <-dying:
+		// Don't return to the caller, to avoid reporting additional errors
+		// to the user.
+		select {}
 	}
 }
 
