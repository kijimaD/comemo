commit ad8447bed94ccb89338b05e7e38f7d53874f0340
Author: David Chase <drchase@google.com>
Date:   Mon Jul 27 16:46:35 2020 -0400

    cmd/compile: fix late call expansion for SSA-able aggregate results and arguments
    
    This change incorporates the decision that it should be possible to
    run call expansion relatively late in the optimization chain, so that
    (1) calls themselves can be exposed to useful optimizations
    (2) the effect of selectors on aggregates is seen at the rewrite,
        so that assignment of parts into registers is less complicated
        (at least I hope it works that way).
    
    That means that selectors feeding into SelectN need to be processed,
    and Make* feeding into call parameters need to be processed.
    
    This does however require that call expansion run before decompose
    builtins.
    
    This doesn't yet handle rewrites of strings, slices, interfaces,
    and complex numbers.
    
    Passes run.bash and race.bash
    
    Change-Id: I71ff23d3c491043beb30e926949970c4f63ef1a4
    Reviewed-on: https://go-review.googlesource.com/c/go/+/245133
    Trust: David Chase <drchase@google.com>
    Run-TryBot: David Chase <drchase@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Cherry Zhang <cherryyz@google.com>

 src/cmd/compile/internal/gc/ssa.go           |  11 +-
 src/cmd/compile/internal/ssa/compile.go      |   2 +-
 src/cmd/compile/internal/ssa/config.go       |   8 +
 src/cmd/compile/internal/ssa/expand_calls.go | 392 +++++++++++++++++++++++----
 src/cmd/compile/internal/ssa/writebarrier.go |   6 +-
 5 files changed, 360 insertions(+), 59 deletions(-)
