commit edce6349639e321c3b1a34036a8fbc08ad363cd3
Author: Russ Cox <rsc@golang.org>
Date:   Sun Sep 23 23:04:28 2012 -0400

    time: prepare for 64-bit ints
    
    The code was trying to interpret a uint32 n as a signed quantity
    and then store it in an int. For this, int(n) currently works, but when
    int becomes 64 bits one must write int(int32(n)) instead, to get
    the 32-bit sign extension.
    
    Update #2188.
    
    R=golang-dev, nigeltao
    CC=golang-dev
    https://golang.org/cl/6551068
---
 src/pkg/time/zoneinfo_read.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/pkg/time/zoneinfo_read.go b/src/pkg/time/zoneinfo_read.go
index ebb4205a98..d57c09e115 100644
--- a/src/pkg/time/zoneinfo_read.go
+++ b/src/pkg/time/zoneinfo_read.go
@@ -141,7 +141,7 @@ func loadZoneData(bytes []byte) (l *Location, err error) {
 		if n, ok = zonedata.big4(); !ok {
 			return nil, badData
 		}
-		zone[i].offset = int(n)
+		zone[i].offset = int(int32(n))
 		var b byte
 		if b, ok = zonedata.byte(); !ok {
 			return nil, badData
