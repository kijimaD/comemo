commit ec4c9db21015cf53661661b95b19110ed71dd49d
Author: Alberto Donizetti <alb.donizetti@gmail.com>
Date:   Fri Feb 21 11:48:13 2020 +0100

    hash/maphash: add package-level example
    
    Change-Id: I05c7ca644410822a527e94a7a8b883a0f8b0a4ad
    Reviewed-on: https://go-review.googlesource.com/c/go/+/220420
    Run-TryBot: Alberto Donizetti <alb.donizetti@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
    Reviewed-by: Emmanuel Odeke <emm.odeke@gmail.com>
---
 src/hash/maphash/example_test.go | 37 +++++++++++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)

diff --git a/src/hash/maphash/example_test.go b/src/hash/maphash/example_test.go
new file mode 100644
index 0000000000..78690fd65d
--- /dev/null
+++ b/src/hash/maphash/example_test.go
@@ -0,0 +1,37 @@
+// Copyright 2020 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package maphash_test
+
+import (
+	"fmt"
+	"hash/maphash"
+)
+
+func Example() {
+	// The zero Hash value is valid and ready to use; setting an
+	// initial seed is not necessary.
+	var h maphash.Hash
+
+	// Add a string to the hash, and print the current hash value.
+	h.WriteString("hello, ")
+	fmt.Printf("%#x\n", h.Sum64())
+
+	// Append additional data (in the form of a byte array).
+	h.Write([]byte{'w', 'o', 'r', 'l', 'd'})
+	fmt.Printf("%#x\n", h.Sum64())
+
+	// Reset discards all data previously added to the Hash, without
+	// changing its seed.
+	h.Reset()
+
+	// Use SetSeed to create a new Hash h2 which will behave
+	// identically to h.
+	var h2 maphash.Hash
+	h2.SetSeed(h.Seed())
+
+	h.WriteString("same")
+	h2.WriteString("same")
+	fmt.Printf("%#x == %#x\n", h.Sum64(), h2.Sum64())
+}
