commit d75fb40e52888dbd3ec9ff22e63e48b18cd5be31
Author: Filippo Valsorda <filippo@golang.org>
Date:   Wed Oct 2 13:29:47 2024 +0200

    crypto/internal/fips/sha3: reduce s390x divergence
    
    It's a little annoying, but we can fit the IBM instructions on top of
    the regular state, avoiding more intrusive interventions.
    
    Going forward we should not accept assembly that replaces the whole
    implementation, because it doubles the work to do any refactoring like
    the one in this chain.
    
    Also, it took me a while to find the specification of these
    instructions, which should have been linked from the source for the next
    person who'd have to touch this.
    
    Finally, it's really painful to test this without a LUCI TryBot, per #67307.
    
    For #69536
    
    Change-Id: I90632a90f06b2aa2e863967de972b12dbaa5b2ae
    Reviewed-on: https://go-review.googlesource.com/c/go/+/617359
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Auto-Submit: Filippo Valsorda <filippo@golang.org>
    Reviewed-by: Carlos Amedee <carlos@golang.org>
    Reviewed-by: Daniel McCarney <daniel@binaryparadox.net>
    Reviewed-by: Roland Shoemaker <roland@golang.org>

 .../internal/fips/sha3/_asm/keccakf_amd64_asm.go   |   2 +-
 src/crypto/internal/fips/sha3/hashes.go            |  24 +-
 src/crypto/internal/fips/sha3/keccakf.go           |  29 +-
 src/crypto/internal/fips/sha3/keccakf_amd64.go     |  13 -
 src/crypto/internal/fips/sha3/sha3.go              |  29 +-
 src/crypto/internal/fips/sha3/sha3_amd64.go        |  20 ++
 .../fips/sha3/{keccakf_amd64.s => sha3_amd64.s}    |   4 +-
 src/crypto/internal/fips/sha3/sha3_noasm.go        |  28 +-
 src/crypto/internal/fips/sha3/sha3_s390x.go        | 356 +++++++--------------
 src/crypto/internal/fips/sha3/sha3_s390x.s         |  11 +-
 src/crypto/internal/fips/sha3/sha3_test.go         |  16 +-
 src/crypto/internal/fips/sha3/shake.go             |  10 +-
 12 files changed, 198 insertions(+), 344 deletions(-)
