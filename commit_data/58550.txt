commit 3cdc2a13b9cc84b74c6914df1a50907f9410e772
Author: Jes Cok <xigua67damn@gmail.com>
Date:   Wed Nov 15 23:18:20 2023 +0000

    slices: add cases for TestInsertPanics when there are values
    
    For #64152
    
    Change-Id: I32531aa8d147f4f10f6498f5ea1474555e93b6de
    GitHub-Last-Rev: 48bb3bb05c6acc3761680a8a0eac9df9dfd154d3
    GitHub-Pull-Request: golang/go#64180
    Reviewed-on: https://go-review.googlesource.com/c/go/+/542535
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Run-TryBot: Jes Cok <xigua67damn@gmail.com>
    Reviewed-by: Keith Randall <khr@google.com>
    Reviewed-by: Keith Randall <khr@golang.org>
    Reviewed-by: David Chase <drchase@google.com>
---
 src/slices/slices_test.go | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/src/slices/slices_test.go b/src/slices/slices_test.go
index b86638172a..8772fe1f19 100644
--- a/src/slices/slices_test.go
+++ b/src/slices/slices_test.go
@@ -538,6 +538,7 @@ func TestInsertOverlap(t *testing.T) {
 
 func TestInsertPanics(t *testing.T) {
 	a := [3]int{}
+	b := [1]int{}
 	for _, test := range []struct {
 		name string
 		s    []int
@@ -549,6 +550,12 @@ func TestInsertPanics(t *testing.T) {
 		{"with out-of-bounds index and > cap", a[:1:1], 2, nil},
 		{"with out-of-bounds index and = cap", a[:1:2], 2, nil},
 		{"with out-of-bounds index and < cap", a[:1:3], 2, nil},
+
+		// There are values.
+		{"with negative index", a[:1:1], -1, b[:]},
+		{"with out-of-bounds index and > cap", a[:1:1], 2, b[:]},
+		{"with out-of-bounds index and = cap", a[:1:2], 2, b[:]},
+		{"with out-of-bounds index and < cap", a[:1:3], 2, b[:]},
 	} {
 		if !panics(func() { Insert(test.s, test.i, test.v...) }) {
 			t.Errorf("Insert %s: got no panic, want panic", test.name)
