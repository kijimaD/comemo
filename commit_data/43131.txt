commit 576fa692774137633b09dd244e1de36993dd2803
Author: Jay Conrod <jayconrod@google.com>
Date:   Tue Feb 25 11:00:08 2020 -0500

    cmd/go: extract module zip files in place
    
    Previously, we extracted module zip files to temporary directories
    with random names, then renamed them to their final locations. This
    failed with ERROR_ACCESS_DENIED on Windows if any file in the
    temporary was open. Antivirus programs did this occasionally. Retrying
    the rename did not work (CL 220978).
    
    With this change, we extract module zip files in place. We create a
    .partial file alongside the .lock file to indicate a directory is not
    fully populated, and we delete this at the end of the process.
    
    Updates #36568
    
    Change-Id: I75c09df879a602841f3459322c021896292b2fdb
    Reviewed-on: https://go-review.googlesource.com/c/go/+/221157
    Run-TryBot: Jay Conrod <jayconrod@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Bryan C. Mills <bcmills@google.com>
    Reviewed-by: Michael Matloob <matloob@golang.org>

 src/cmd/go/internal/modfetch/fetch.go              |  93 +++++++++++-----
 src/cmd/go/script_test.go                          |   1 +
 src/cmd/go/testdata/script/README                  |   1 +
 .../script/mod_concurrent_unzipinplace.txt         |  17 +++
 .../script/mod_download_concurrent_read.txt        | 120 +++++++++++++++++++++
 .../go/testdata/script/mod_download_partial.txt    |  10 ++
 6 files changed, 214 insertions(+), 28 deletions(-)
