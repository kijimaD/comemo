commit 429a4041eb2657fad8870cad5662202f3bd0eeb6
Author: Robert Findley <rfindley@google.com>
Date:   Tue Jun 7 09:42:03 2022 -0400

    doc/go1.19: complete TODOs for go/types
    
    Fill in the details of outstanding TODO items for go/types changes.
    
    For #51400
    
    Change-Id: Ib40d75fa1018aa164022cb49b293795dd597d49d
    Reviewed-on: https://go-review.googlesource.com/c/go/+/410815
    Run-TryBot: Robert Findley <rfindley@google.com>
    Reviewed-by: Russ Cox <rsc@golang.org>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Robert Griesemer <gri@google.com>
---
 doc/go1.19.html | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/doc/go1.19.html b/doc/go1.19.html
index db2b1e1ab8..42494c203e 100644
--- a/doc/go1.19.html
+++ b/doc/go1.19.html
@@ -446,10 +446,19 @@ Do not send CLs removing the interior tags from such phrases.
 <dl id="go/types"><dt><a href="/pkg/go/types/">go/types</a></dt>
   <dd>
     <p><!-- https://go.dev/issue/51682 --><!-- CL 395535 -->
-      TODO: <a href="https://go.dev/cl/395535">https://go.dev/cl/395535</a>: add Var.Origin and Func.Origin
-    </p>
-    <p><!-- CL 404885 -->
-      TODO: <a href="https://go.dev/cl/404885">https://go.dev/cl/404885</a>: a finite number of types are reachable via Named.Underlying, Named.Method
+      The new methods <a href="/pkg/go/types/#Func.Origin"><code>Func.Origin</code></a>
+      and <a href="/pkg/go/types/#Var.Origin"><code>Var.Origin</code></a> return the
+      corresponding <a href="/pkg/go/types/#Object"><code>Object</code></a> of the
+      generic type for synthetic <a href="/pkg/go/types/#Func"><code>Func</code></a>
+      and <a href="/pkg/go/types/#Var"><code>Var</code></a> objects created during type
+      instantiation.
+    </p>
+    <p><!-- https://go.dev/issue/52728 --><!-- CL 404885 -->
+      It is no longer possible to produce an infinite number of distinct-but-identical
+      <a href="/pkg/go/types/#Named"><code>Named</code></a> type instantiations via
+      recursive calls to
+      <a href="/pkg/go/types/#Named.Underlying"><code>Named.Underlying</code></a> or
+      <a href="/pkg/go/types/#Named.Method"><code>Named.Method</code></a>.
     </p>
   </dd>
 </dl><!-- go/types -->
