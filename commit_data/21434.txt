commit 3c0fee10dbe82771dcaa956a95bdfabdced5fff7
Author: Austin Clements <austin@google.com>
Date:   Wed Jan 14 11:09:50 2015 -0500

    cmd/6g, liblink, runtime: support saving base pointers
    
    This adds a "framepointer" GOEXPERIMENT that that makes the amd64
    toolchain maintain base pointer chains in the same way that gcc
    -fno-omit-frame-pointer does.  Go doesn't use these saved base
    pointers, but this does enable external tools like Linux perf and
    VTune to unwind Go stacks when collecting system-wide profiles.
    
    This requires support in the compilers to not clobber BP, support in
    liblink for generating the BP-saving function prologue and unwinding
    epilogue, and support in the runtime to save BPs across preemption, to
    skip saved BPs during stack unwinding and, and to adjust saved BPs
    during stack moving.
    
    As with other GOEXPERIMENTs, everything from the toolchain to the
    runtime must be compiled with this experiment enabled.  To do this,
    run make.bash (or all.bash) with GOEXPERIMENT=framepointer.
    
    Change-Id: I4024853beefb9539949e5ca381adfdd9cfada544
    Reviewed-on: https://go-review.googlesource.com/2992
    Reviewed-by: Russ Cox <rsc@golang.org>

 src/cmd/6g/gsubr.c         |  5 +++++
 src/cmd/6g/reg.c           |  3 +++
 src/liblink/go.c           |  2 +-
 src/liblink/obj6.c         | 52 +++++++++++++++++++++++++++++++++++++++++++---
 src/runtime/arch1_amd64.go |  2 +-
 src/runtime/asm_amd64.s    | 26 ++++++++++++++++++++---
 src/runtime/cgocall.go     |  5 +++++
 src/runtime/proc1.go       |  3 +++
 src/runtime/runtime2.go    |  1 +
 src/runtime/stack1.go      | 17 +++++++++++++++
 src/runtime/traceback.go   |  6 ++++++
 test/nosplit.go            | 20 ++++++++++++++++++
 12 files changed, 134 insertions(+), 8 deletions(-)
