commit 0440fb833405a5c61ed0269af9c5897b03390bac
Author: Ian Lance Taylor <iant@golang.org>
Date:   Wed Nov 17 11:07:44 2021 -0800

    runtime: make faketime more robust against GC
    
    When using faketime, only run the scavenger for one loop.
    It tries to run for 1 ms, but with faketime that calculation fails.
    
    Prohibit write barriers in the faketime write function, in case
    the GC wants to print something (e.g., with GODEBUG=gctrace=1).
    
    Fixes #49614
    
    Change-Id: Iab5097fe78b6e0032ea8b493088264dfb25013c6
    Reviewed-on: https://go-review.googlesource.com/c/go/+/364757
    Trust: Ian Lance Taylor <iant@golang.org>
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
---
 src/runtime/mgcscavenge.go | 5 +++++
 src/runtime/time_fake.go   | 4 ++++
 2 files changed, 9 insertions(+)

diff --git a/src/runtime/mgcscavenge.go b/src/runtime/mgcscavenge.go
index 286aa1bbae..0399c2d21c 100644
--- a/src/runtime/mgcscavenge.go
+++ b/src/runtime/mgcscavenge.go
@@ -344,6 +344,11 @@ func bgscavenge(c chan int) {
 				crit += float64(end - start)
 			}
 			released += r
+
+			// When using fake time just do one loop.
+			if faketime != 0 {
+				break
+			}
 		}
 
 		if released == 0 {
diff --git a/src/runtime/time_fake.go b/src/runtime/time_fake.go
index 107f6be335..b5e0463588 100644
--- a/src/runtime/time_fake.go
+++ b/src/runtime/time_fake.go
@@ -41,6 +41,10 @@ func time_now() (sec int64, nsec int32, mono int64) {
 	return faketime / 1e9, int32(faketime % 1e9), faketime
 }
 
+// write is like the Unix write system call.
+// We have to avoid write barriers to avoid potential deadlock
+// on write calls.
+//go:nowritebarrierrec
 func write(fd uintptr, p unsafe.Pointer, n int32) int32 {
 	if !(fd == 1 || fd == 2) {
 		// Do an ordinary write.
