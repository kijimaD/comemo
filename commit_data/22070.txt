commit 4e408e0cc9ba09298aea4c18d800d54e78a3e553
Author: Mark Bucciarelli <mkbucc@gmail.com>
Date:   Sat Feb 21 21:14:45 2015 -0500

    Call --> CallSlice in two spots.  No logic change, docs only.
    
    Change-Id: I6011e162214db2d65efc1ecdb5ec600ca8e5bfe9
    Reviewed-on: https://go-review.googlesource.com/5542
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/reflect/value.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/reflect/value.go b/src/reflect/value.go
index 081c4d9d7b..ad48152730 100644
--- a/src/reflect/value.go
+++ b/src/reflect/value.go
@@ -302,8 +302,8 @@ func (v Value) Call(in []Value) []Value {
 
 // CallSlice calls the variadic function v with the input arguments in,
 // assigning the slice in[len(in)-1] to v's final variadic argument.
-// For example, if len(in) == 3, v.Call(in) represents the Go call v(in[0], in[1], in[2]...).
-// Call panics if v's Kind is not Func or if v is not variadic.
+// For example, if len(in) == 3, v.CallSlice(in) represents the Go call v(in[0], in[1], in[2]...).
+// CallSlice panics if v's Kind is not Func or if v is not variadic.
 // It returns the output results as Values.
 // As in Go, each input argument must be assignable to the
 // type of the function's corresponding input parameter.
