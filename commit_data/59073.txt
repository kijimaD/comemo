commit 10d070668c24a3f1b3982c323ba1334437941dff
Author: Joel Sing <joel@sing.id.au>
Date:   Mon Feb 24 00:37:45 2025 +1100

    cmd/compile/internal/ssa: remove double negation with addition on riscv64
    
    On riscv64, subtraction from a constant is typically implemented as an
    ADDI with the negative constant, followed by a negation. However this can
    lead to multiple NEG/ADDI/NEG sequences that can be optimised out.
    
    For example, runtime.(*_panic).nextDefer currently contains:
    
       lbu     t0, 0(t0)
       addi    t0, t0, -8
       neg     t0, t0
       addi    t0, t0, -7
       neg     t0, t0
    
    Which is now optimised to:
    
       lbu     t0, 0(t0)
       addi    t0, t0, -1
    
    Change-Id: Idf5815e6db2e3705cc4a4811ca9130a064ae3d80
    Reviewed-on: https://go-review.googlesource.com/c/go/+/652318
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    Reviewed-by: Meng Zhuo <mengzhuo1203@gmail.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Mark Ryan <markdryan@rivosinc.com>
    Reviewed-by: David Chase <drchase@google.com>

 src/cmd/compile/internal/ssa/_gen/RISCV64.rules |  1 +
 src/cmd/compile/internal/ssa/rewriteRISCV64.go  | 22 ++++++++++++++++++++++
 test/codegen/arithmetic.go                      |  2 +-
 3 files changed, 24 insertions(+), 1 deletion(-)
