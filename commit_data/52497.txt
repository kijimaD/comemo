commit 3ea3bc0e9636228dda88b823e42a45227297f43b
Author: Meng Zhuo <mzh@golangcn.org>
Date:   Thu May 5 12:08:42 2022 +0800

    cmd/compile: update TestStmtLines threshold for riscv64
    
    CL402374 default regabi for riscv64 but TestStmtLines
    keep fail trybot within a tiny overlimit (2.006% > 2%).
    This CL update this threshold to 3% for riscv64 as an
    acceptable temporary solution.
    
    Change-Id: I5c6f37099a76bc048998eb95f49944dbe55492f4
    Reviewed-on: https://go-review.googlesource.com/c/go/+/404195
    Run-TryBot: mzh <mzh@golangcn.org>
    Reviewed-by: David Chase <drchase@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Russ Cox <rsc@golang.org>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
---
 src/cmd/compile/internal/ssa/stmtlines_test.go | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/src/cmd/compile/internal/ssa/stmtlines_test.go b/src/cmd/compile/internal/ssa/stmtlines_test.go
index a94ff9c994..673c88a600 100644
--- a/src/cmd/compile/internal/ssa/stmtlines_test.go
+++ b/src/cmd/compile/internal/ssa/stmtlines_test.go
@@ -118,12 +118,17 @@ func TestStmtLines(t *testing.T) {
 		}
 	}
 
+	var m int
 	if runtime.GOARCH == "amd64" {
-		if len(nonStmtLines)*100 > len(lines) { // > 99% obtained on amd64, no backsliding
-			t.Errorf("Saw too many (amd64, > 1%%) lines without statement marks, total=%d, nostmt=%d ('-run TestStmtLines -v' lists failing lines)\n", len(lines), len(nonStmtLines))
-		}
-	} else if len(nonStmtLines)*100 > 2*len(lines) { // expect 98% elsewhere.
-		t.Errorf("Saw too many (not amd64, > 2%%) lines without statement marks, total=%d, nostmt=%d ('-run TestStmtLines -v' lists failing lines)\n", len(lines), len(nonStmtLines))
+		m = 1 // > 99% obtained on amd64, no backsliding
+	} else if runtime.GOARCH == "riscv64" {
+		m = 3 // XXX temporary update threshold to 97% for regabi
+	} else {
+		m = 2 // expect 98% elsewhere.
+	}
+
+	if len(nonStmtLines)*100 > m*len(lines) {
+		t.Errorf("Saw too many (%s, > %d%%) lines without statement marks, total=%d, nostmt=%d ('-run TestStmtLines -v' lists failing lines)\n", runtime.GOARCH, m, len(lines), len(nonStmtLines))
 	}
 	t.Logf("Saw %d out of %d lines without statement marks", len(nonStmtLines), len(lines))
 	if testing.Verbose() {
