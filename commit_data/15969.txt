commit 30e29ee9b6b71a4c40f781c513a8680e8f2c4f64
Author: Ian Lance Taylor <iant@golang.org>
Date:   Wed Mar 27 13:27:35 2013 -0700

    cmd/ld: emit TLS relocations during external linking
    
    This CL was written by rsc.  I just tweaked 8l.
    
    This CL adds TLS relocation to the ELF .o file we write during external linking,
    so that the host linker (gcc) can decide the final location of m and g.
    
    Similar relocations are not necessary on OS X because we use an alternate
    program start-time mechanism to acquire thread-local storage.
    
    Similar relocations are not necessary on ARM or Plan 9 or Windows
    because external linking mode is not yet supported on those systems.
    
    On almost all ELF systems, the references we use are like %fs:-0x4 or %gs:-0x4,
    which we write in 6a/8a as -0x4(FS) or -0x4(GS). On Linux/ELF, however,
    Xen's lack of support for this mode forced us long ago to use a two-instruction
    sequence: first we load %gs:0x0 into a register r, and then we use -0x4(r).
    (The ELF program loader arranges that %gs:0x0 contains a regular pointer to
    that same memory location.) In order to relocate those -0x4(r) references,
    the linker must know where they are. This CL adds the equivalent notation
    -0x4(r)(GS*1) for this purpose: it assembles to the same encoding as -0x4(r)
    but the (GS*1) indicates to the linker that this is one of those thread-local
    references that needs relocation.
    
    Thanks to Elias Naur for reminding me about this missing piece and
    also for writing the test.
    
    R=r
    CC=golang-dev
    https://golang.org/cl/7891047
---
 misc/cgo/testtls/tls.go      |   28 +
 misc/cgo/testtls/tls_test.go |   13 +
 misc/cgo/testtls/tls_unix.c  |   19 +
 src/cmd/5l/5.out.h           |    1 +
 src/cmd/6l/6.out.h           |    1 +
 src/cmd/6l/asm.c             |    7 +
 src/cmd/6l/obj.c             |    2 +-
 src/cmd/6l/span.c            |   23 +
 src/cmd/8a/a.y               |    9 +
 src/cmd/8a/y.tab.c           | 1326 +++++++++++++++++-------------------------
 src/cmd/8a/y.tab.h           |   46 +-
 src/cmd/8l/8.out.h           |    1 +
 src/cmd/8l/asm.c             |    6 +
 src/cmd/8l/obj.c             |    2 +-
 src/cmd/8l/pass.c            |   50 +-
 src/cmd/8l/span.c            |   35 +-
 src/cmd/dist/buildruntime.c  |   11 +-
 src/cmd/ld/data.c            |   31 +-
 src/cmd/ld/elf.c             |    8 +-
 src/cmd/ld/lib.h             |    1 +
 src/cmd/ld/symtab.c          |   20 +
 src/run.bash                 |    8 +-
 22 files changed, 798 insertions(+), 850 deletions(-)

diff --git a/misc/cgo/testtls/tls.go b/misc/cgo/testtls/tls.go
new file mode 100644
index 0000000000..a9546a61c2
--- /dev/null
+++ b/misc/cgo/testtls/tls.go
@@ -0,0 +1,28 @@
+// Copyright 2013 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package cgotlstest
+
+// #include <pthread.h>
+// extern void setTLS(int);
+// extern int getTLS();
+import "C"
+
+import (
+	"runtime"
+	"testing"
+)
+
+func testTLS(t *testing.T) {
+	var keyVal C.int = 1234
+
+	runtime.LockOSThread()
+	defer runtime.UnlockOSThread()
+	C.setTLS(C.int(keyVal))
+	storedVal := C.getTLS()
+
+	if storedVal != keyVal {
+		t.Fatalf("stored %d want %d", storedVal, keyVal)
+	}
+}
diff --git a/misc/cgo/testtls/tls_test.go b/misc/cgo/testtls/tls_test.go
new file mode 100644
index 0000000000..3076c2d594
--- /dev/null
+++ b/misc/cgo/testtls/tls_test.go
@@ -0,0 +1,13 @@
+// Copyright 2013 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// +build !windows
+
+package cgotlstest
+
+import "testing"
+
+func TestTLS(t *testing.T) {
+	testTLS(t)
+}
diff --git a/misc/cgo/testtls/tls_unix.c b/misc/cgo/testtls/tls_unix.c
new file mode 100644
index 0000000000..545951631e
--- /dev/null
+++ b/misc/cgo/testtls/tls_unix.c
@@ -0,0 +1,19 @@
+// Copyright 2013 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+#include <pthread.h>
+
+static __thread int tls;
+
+void
+setTLS(int v)
+{
+	tls = v;
+}
+
+int
+getTLS()
+{
+	return tls;
+}
diff --git a/src/cmd/5l/5.out.h b/src/cmd/5l/5.out.h
index 4aef8a27f4..97a2421b38 100644
--- a/src/cmd/5l/5.out.h
+++ b/src/cmd/5l/5.out.h
@@ -275,6 +275,7 @@ enum	as
 #define	D_PLT1		(D_NONE+44) // R_ARM_PLT32, 2nd inst: add ip, ip, #0xNN000
 #define	D_PLT2		(D_NONE+45) // R_ARM_PLT32, 3rd inst: ldr pc, [ip, #0xNNN]!
 #define	D_CALL		(D_NONE+46) // R_ARM_PLT32/R_ARM_CALL/R_ARM_JUMP24, bl xxxxx or b yyyyy
+#define	D_TLS		(D_NONE+47)
 
 /*
  * this is the ranlib header
diff --git a/src/cmd/6l/6.out.h b/src/cmd/6l/6.out.h
index 28de749447..237a802cde 100644
--- a/src/cmd/6l/6.out.h
+++ b/src/cmd/6l/6.out.h
@@ -866,6 +866,7 @@ enum
 
 	D_SIZE = D_INDIR + D_INDIR,	/* 6l internal */
 	D_PCREL,
+	D_TLS,
 
 	T_TYPE		= 1<<0,
 	T_INDEX		= 1<<1,
diff --git a/src/cmd/6l/asm.c b/src/cmd/6l/asm.c
index 07ba59ad98..8807a6ed53 100644
--- a/src/cmd/6l/asm.c
+++ b/src/cmd/6l/asm.c
@@ -310,6 +310,13 @@ elfreloc1(Reloc *r, vlong sectoff)
 		else
 			return -1;
 		break;
+	
+	case D_TLS:
+		if(r->siz == 4)
+			VPUT(R_X86_64_TPOFF32 | (uint64)elfsym<<32);
+		else
+			return -1;
+		break;		
 	}
 
 	VPUT(r->xadd);
diff --git a/src/cmd/6l/obj.c b/src/cmd/6l/obj.c
index ab8b22e231..738a2a07f4 100644
--- a/src/cmd/6l/obj.c
+++ b/src/cmd/6l/obj.c
@@ -83,7 +83,7 @@ main(int argc, char *argv[])
 	INITRND = -1;
 	INITENTRY = 0;
 	LIBINITENTRY = 0;
-	linkmode = LinkInternal; // TODO: LinkAuto once everything works.
+	linkmode = LinkAuto;
 	nuxiinit();
 
 	flagcount("1", "use alternate profiling code", &debug['1']);
diff --git a/src/cmd/6l/span.c b/src/cmd/6l/span.c
index fa94d8cf96..b0b666f04c 100644
--- a/src/cmd/6l/span.c
+++ b/src/cmd/6l/span.c
@@ -32,6 +32,7 @@
 
 #include	"l.h"
 #include	"../ld/lib.h"
+#include	"../ld/elf.h"
 
 static int	rexflag;
 static int	asmode;
@@ -880,7 +881,29 @@ putrelv:
 		r = addrel(cursym);
 		*r = rel;
 		r->off = curp->pc + andptr - and;
+	} else if(iself && linkmode == LinkExternal && a->type == D_INDIR+D_FS) {
+		Reloc *r;
+		Sym *s;
+		
+		r = addrel(cursym);
+		r->off = curp->pc + andptr - and;
+		r->add = 0;
+		r->xadd = 0;
+		r->siz = 4;
+		r->type = D_TLS;
+		if(a->offset == tlsoffset+0)
+			s = lookup("runtime.g", 0);
+		else
+			s = lookup("runtime.m", 0);
+		s->type = STLSBSS;
+		s->reachable = 1;
+		s->size = PtrSize;
+		s->hide = 1;
+		r->sym = s;
+		r->xsym = s;
+		v = 0;
 	}
+		
 	put4(v);
 	return;
 
diff --git a/src/cmd/8a/a.y b/src/cmd/8a/a.y
index 516e5fbe7c..246643427b 100644
--- a/src/cmd/8a/a.y
+++ b/src/cmd/8a/a.y
@@ -507,6 +507,15 @@ omem:
 		$$.scale = $8;
 		checkscale($$.scale);
 	}
+|	con '(' LLREG ')' '(' LSREG '*' con ')'
+	{
+		$$ = nullgen;
+		$$.type = D_INDIR+$3;
+		$$.offset = $1;
+		$$.index = $6;
+		$$.scale = $8;
+		checkscale($$.scale);
+	}
 |	'(' LLREG ')'
 	{
 		$$ = nullgen;
diff --git a/src/cmd/8a/y.tab.c b/src/cmd/8a/y.tab.c
index 7eaff0bb05..6616c91390 100644
--- a/src/cmd/8a/y.tab.c
+++ b/src/cmd/8a/y.tab.c
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,50 +55,11 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 
 
-/* Copy the first part of user declarations.  */
-
-/* Line 268 of yacc.c  */
-#line 31 "a.y"
-
-#include <u.h>
-#include <stdio.h>	/* if we don't, bison will, and a.h re-#defines getc */
-#include <libc.h>
-#include "a.h"
-
-
-/* Line 268 of yacc.c  */
-#line 79 "y.tab.c"
-
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-
-/* Enabling verbose error messages.  */
-#ifdef YYERROR_VERBOSE
-# undef YYERROR_VERBOSE
-# define YYERROR_VERBOSE 1
-#else
-# define YYERROR_VERBOSE 0
-#endif
-
-/* Enabling the token table.  */
-#ifndef YYTOKEN_TABLE
-# define YYTOKEN_TABLE 0
-#endif
-
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -171,13 +135,37 @@
 
 
 
+/* Copy the first part of user declarations.  */
+#line 31 "a.y"
+
+#include <u.h>
+#include <stdio.h>	/* if we don't, bison will, and a.h re-#defines getc */
+#include <libc.h>
+#include "a.h"
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
+
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 37 "a.y"
-
+{
 	Sym	*sym;
 	int32	lval;
 	struct {
@@ -188,23 +176,22 @@ typedef union YYSTYPE
 	char	sval[8];
 	Gen	gen;
 	Gen2	gen2;
-
-
-
-/* Line 293 of yacc.c  */
-#line 196 "y.tab.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 182 "y.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 208 "y.tab.c"
+/* Line 216 of yacc.c.  */
+#line 195 "y.tab.c"
 
 #ifdef short
 # undef short
@@ -279,14 +266,14 @@ typedef short int yytype_int16;
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -307,11 +294,11 @@ YYID (yyi)
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -334,24 +321,24 @@ YYID (yyi)
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -367,9 +354,9 @@ void free (void *); /* INFRINGES ON USER NAME SPACE */
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -380,27 +367,6 @@ union yyalloc
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -418,21 +384,38 @@ union yyalloc
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  2
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   553
+#define YYLAST   537
 
 /* YYNTOKENS -- Number of terminals.  */
 #define YYNTOKENS  52
 /* YYNNTS -- Number of nonterminals.  */
 #define YYNNTS  39
 /* YYNRULES -- Number of rules.  */
-#define YYNRULES  130
+#define YYNRULES  131
 /* YYNRULES -- Number of states.  */
-#define YYNSTATES  262
+#define YYNSTATES  266
 
 /* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
 #define YYUNDEFTOK  2
@@ -490,10 +473,10 @@ static const yytype_uint16 yyprhs[] =
      216,   218,   223,   226,   229,   231,   233,   235,   237,   239,
      241,   244,   247,   250,   253,   258,   264,   268,   271,   273,
      276,   280,   285,   287,   289,   291,   296,   301,   308,   318,
-     322,   326,   331,   337,   346,   348,   355,   361,   369,   370,
-     373,   376,   378,   380,   382,   384,   386,   389,   392,   395,
-     399,   401,   405,   409,   413,   417,   421,   426,   431,   435,
-     439
+     328,   332,   336,   341,   347,   356,   358,   365,   371,   379,
+     380,   383,   386,   388,   390,   392,   394,   396,   399,   402,
+     405,   409,   411,   415,   419,   423,   427,   431,   436,   441,
+     445,   449
 };
 
 /* YYRHS -- A `-1'-separated list of the rules' RHS.  */
@@ -530,7 +513,8 @@ static const yytype_int8 yyrhs[] =
        9,    29,     9,    29,    -1,    84,    -1,    85,    -1,    89,
       -1,    89,    48,    34,    49,    -1,    89,    48,    40,    49,
       -1,    89,    48,    34,    10,    89,    49,    -1,    89,    48,
-      34,    49,    48,    34,    10,    89,    49,    -1,    48,    34,
+      34,    49,    48,    34,    10,    89,    49,    -1,    89,    48,
+      34,    49,    48,    35,    10,    89,    49,    -1,    48,    34,
       49,    -1,    48,    40,    49,    -1,    89,    48,    35,    49,
       -1,    48,    34,    10,    89,    49,    -1,    48,    34,    49,
       48,    34,    10,    89,    49,    -1,    86,    -1,    86,    48,
@@ -559,10 +543,10 @@ static const yytype_uint16 yyrline[] =
      331,   334,   340,   349,   358,   363,   368,   373,   378,   383,
      390,   396,   407,   413,   419,   425,   431,   439,   448,   453,
      458,   463,   470,   471,   474,   480,   486,   492,   501,   510,
-     515,   520,   526,   534,   544,   548,   557,   564,   573,   576,
-     580,   586,   587,   591,   594,   595,   599,   603,   607,   611,
-     617,   618,   622,   626,   630,   634,   638,   642,   646,   650,
-     654
+     519,   524,   529,   535,   543,   553,   557,   566,   573,   582,
+     585,   589,   595,   596,   600,   603,   604,   608,   612,   616,
+     620,   626,   627,   631,   635,   639,   643,   647,   651,   655,
+     659,   663
 };
 #endif
 
@@ -577,12 +561,11 @@ static const char *const yytname[] =
   "LTYPEM", "LTYPEI", "LTYPEG", "LTYPEXC", "LTYPEX", "LCONST", "LFP",
   "LPC", "LSB", "LBREG", "LLREG", "LSREG", "LFREG", "LXREG", "LFCONST",
   "LSCONST", "LSP", "LNAME", "LLAB", "LVAR", "':'", "';'", "'='", "','",
-  "'('", "')'", "'$'", "'~'", "$accept", "prog", "$@1", "line", "$@2",
-  "$@3", "inst", "nonnon", "rimrem", "remrim", "rimnon", "nonrem",
-  "nonrel", "spec1", "spec2", "spec3", "spec4", "spec5", "spec6", "spec7",
-  "spec8", "spec9", "spec10", "rem", "rom", "rim", "rel", "reg", "imm",
-  "imm2", "con2", "mem", "omem", "nmem", "nam", "offset", "pointer", "con",
-  "expr", 0
+  "'('", "')'", "'$'", "'~'", "$accept", "prog", "@1", "line", "@2", "@3",
+  "inst", "nonnon", "rimrem", "remrim", "rimnon", "nonrem", "nonrel",
+  "spec1", "spec2", "spec3", "spec4", "spec5", "spec6", "spec7", "spec8",
+  "spec9", "spec10", "rem", "rom", "rim", "rel", "reg", "imm", "imm2",
+  "con2", "mem", "omem", "nmem", "nam", "offset", "pointer", "con", "expr", 0
 };
 #endif
 
@@ -613,10 +596,10 @@ static const yytype_uint8 yyr1[] =
       77,    78,    78,    78,    79,    79,    79,    79,    79,    79,
       80,    80,    80,    80,    80,    80,    80,    81,    82,    82,
       82,    82,    83,    83,    84,    84,    84,    84,    84,    84,
-      84,    84,    84,    84,    85,    85,    86,    86,    87,    87,
-      87,    88,    88,    88,    89,    89,    89,    89,    89,    89,
-      90,    90,    90,    90,    90,    90,    90,    90,    90,    90,
-      90
+      84,    84,    84,    84,    84,    85,    85,    86,    86,    87,
+      87,    87,    88,    88,    88,    89,    89,    89,    89,    89,
+      89,    90,    90,    90,    90,    90,    90,    90,    90,    90,
+      90,    90
 };
 
 /* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
@@ -631,45 +614,45 @@ static const yytype_uint8 yyr2[] =
        1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
        1,     4,     2,     2,     1,     1,     1,     1,     1,     1,
        2,     2,     2,     2,     4,     5,     3,     2,     1,     2,
-       3,     4,     1,     1,     1,     4,     4,     6,     9,     3,
-       3,     4,     5,     8,     1,     6,     5,     7,     0,     2,
-       2,     1,     1,     1,     1,     1,     2,     2,     2,     3,
-       1,     3,     3,     3,     3,     3,     4,     4,     3,     3,
-       3
+       3,     4,     1,     1,     1,     4,     4,     6,     9,     9,
+       3,     3,     4,     5,     8,     1,     6,     5,     7,     0,
+       2,     2,     1,     1,     1,     1,     1,     2,     2,     2,
+       3,     1,     3,     3,     3,     3,     3,     4,     4,     3,
+       3,     3
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
        2,     3,     1,     0,     0,    30,     0,     0,     0,     0,
        0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     9,     4,     0,    11,    31,    14,
-       0,     0,   114,    74,    76,    79,    75,    77,    78,   108,
-     115,     0,     0,     0,    15,    37,    60,    61,    92,    93,
-     104,    94,     0,    16,    69,    35,    70,    17,     0,    18,
-       0,     0,   108,   108,     0,    22,    45,    62,    66,    68,
-      67,    63,    94,    20,     0,    31,    47,    48,    23,   108,
+       0,     0,   115,    74,    76,    79,    75,    77,    78,   109,
+     116,     0,     0,     0,    15,    37,    60,    61,    92,    93,
+     105,    94,     0,    16,    69,    35,    70,    17,     0,    18,
+       0,     0,   109,   109,     0,    22,    45,    62,    66,    68,
+      67,    63,    94,    20,     0,    31,    47,    48,    23,   109,
        0,     0,    19,    39,     0,     0,    21,     0,    24,     0,
       25,     0,    26,    54,    27,     0,    28,     0,    29,     0,
-       7,     0,     5,     0,    10,   117,   116,     0,     0,     0,
-       0,    36,     0,     0,   120,     0,   118,     0,     0,     0,
+       7,     0,     5,     0,    10,   118,   117,     0,     0,     0,
+       0,    36,     0,     0,   121,     0,   119,     0,     0,     0,
       83,    82,     0,    81,    80,    34,     0,     0,    64,    65,
       46,    72,    73,     0,    44,     0,     0,    72,    38,     0,
        0,     0,     0,     0,    53,     0,     0,     0,     0,    12,
-       0,    13,   108,   109,   110,     0,     0,    99,   100,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,   119,
+       0,    13,   109,   110,   111,     0,     0,   100,   101,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,   120,
        0,     0,     0,     0,    86,     0,     0,    32,    33,     0,
        0,    40,     0,    42,     0,    49,    51,    55,    56,     0,
-       0,     0,     8,     6,     0,   113,   111,   112,     0,     0,
-       0,   130,   129,   128,     0,     0,   121,   122,   123,   124,
-     125,     0,     0,    95,   101,    96,     0,    84,    71,     0,
+       0,     0,     8,     6,     0,   114,   112,   113,     0,     0,
+       0,   131,   130,   129,     0,     0,   122,   123,   124,   125,
+     126,     0,     0,    95,   102,    96,     0,    84,    71,     0,
        0,    88,    87,     0,     0,     0,     0,     0,     0,     0,
-     106,   102,     0,   126,   127,     0,     0,     0,    85,    41,
+     107,   103,     0,   127,   128,     0,     0,     0,    85,    41,
       89,     0,    43,    50,    52,    57,    58,    59,     0,     0,
-     105,    97,     0,     0,    90,   107,     0,     0,    91,   103,
-       0,    98
+     106,    97,     0,     0,     0,    90,   108,     0,     0,     0,
+      91,   104,     0,     0,    98,    99
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
@@ -686,47 +669,48 @@ static const yytype_int16 yydefgoto[] =
 #define YYPACT_NINF -100
 static const yytype_int16 yypact[] =
 {
-    -100,    22,  -100,   165,   -32,   -22,   263,   286,   286,   332,
-     195,    -1,   309,   212,   414,   286,   286,   286,   414,    81,
+    -100,    22,  -100,   165,   -32,   -22,   265,   288,   288,   334,
+     195,    -1,   311,   212,   416,   288,   288,   288,   416,    81,
        7,   -16,    24,   -12,  -100,  -100,    -4,  -100,  -100,  -100,
-     485,   485,  -100,  -100,  -100,  -100,  -100,  -100,  -100,    39,
-    -100,   332,   385,   485,  -100,  -100,  -100,  -100,  -100,  -100,
-      46,    65,   370,  -100,  -100,    72,  -100,  -100,    75,  -100,
-      76,   332,    39,   102,   240,  -100,  -100,  -100,  -100,  -100,
-    -100,  -100,    77,  -100,   117,   332,  -100,  -100,  -100,   102,
-     408,   485,  -100,  -100,    83,    85,  -100,    89,  -100,    91,
-    -100,    92,  -100,    97,  -100,    98,  -100,   100,  -100,   101,
-    -100,   485,  -100,   485,  -100,  -100,  -100,   135,   485,   485,
-     104,  -100,    -6,   113,  -100,    71,  -100,   119,    32,   423,
-    -100,  -100,   438,  -100,  -100,  -100,   332,   286,  -100,  -100,
-    -100,   104,  -100,   355,  -100,    29,   485,  -100,  -100,   408,
-     146,   455,   332,   332,   332,   461,   332,   332,   165,   164,
-     165,   164,   102,  -100,  -100,     6,   485,   161,  -100,   485,
-     485,   485,   206,   207,   485,   485,   485,   485,   485,  -100,
-     203,     4,   166,   167,  -100,   470,   173,  -100,  -100,   174,
-     178,  -100,    15,  -100,   179,   183,   189,  -100,  -100,   187,
-     193,   197,  -100,  -100,   204,  -100,  -100,  -100,   202,   208,
-     222,   533,   541,    78,   485,   485,    95,    95,  -100,  -100,
-    -100,   485,   485,   210,  -100,  -100,   215,  -100,  -100,     7,
-     232,   256,  -100,   216,   233,   235,     7,   485,    81,   236,
-    -100,  -100,   268,   188,   188,   230,   237,   250,  -100,  -100,
-     276,   258,  -100,  -100,  -100,  -100,  -100,  -100,   244,   485,
-    -100,  -100,   279,   272,  -100,  -100,   253,   485,  -100,  -100,
-     259,  -100
+     469,   469,  -100,  -100,  -100,  -100,  -100,  -100,  -100,    39,
+    -100,   334,   387,   469,  -100,  -100,  -100,  -100,  -100,  -100,
+      46,    65,   372,  -100,  -100,    72,  -100,  -100,    83,  -100,
+      86,   334,    39,   102,   242,  -100,  -100,  -100,  -100,  -100,
+    -100,  -100,    77,  -100,   117,   334,  -100,  -100,  -100,   102,
+     410,   469,  -100,  -100,    89,    90,  -100,    92,  -100,    97,
+    -100,    98,  -100,   100,  -100,   101,  -100,   105,  -100,   106,
+    -100,   469,  -100,   469,  -100,  -100,  -100,   135,   469,   469,
+     114,  -100,    -6,   128,  -100,    71,  -100,   175,    32,   218,
+    -100,  -100,   425,  -100,  -100,  -100,   334,   288,  -100,  -100,
+    -100,   114,  -100,   357,  -100,    29,   469,  -100,  -100,   410,
+     181,   440,   334,   334,   334,   457,   334,   334,   165,   164,
+     165,   164,   102,  -100,  -100,     6,   469,   166,  -100,   469,
+     469,   469,   207,   208,   469,   469,   469,   469,   469,  -100,
+     206,     4,   173,   174,  -100,   463,   176,  -100,  -100,   184,
+     187,  -100,    15,  -100,   193,   200,   213,  -100,  -100,   211,
+     217,   220,  -100,  -100,   222,  -100,  -100,  -100,   216,   219,
+     238,   517,   525,    78,   469,   469,    95,    95,  -100,  -100,
+    -100,   469,   469,   232,  -100,  -100,   237,  -100,  -100,     7,
+     252,   278,  -100,   239,   254,   256,     7,   469,    81,   263,
+    -100,  -100,   293,   188,   188,   255,   258,    88,  -100,  -100,
+     300,   281,  -100,  -100,  -100,  -100,  -100,  -100,   262,   469,
+    -100,  -100,   304,   305,   289,  -100,  -100,   277,   469,   469,
+    -100,  -100,   283,   284,  -100,  -100
 };
 
 /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
-    -100,  -100,  -100,   -99,  -100,  -100,  -100,   293,  -100,  -100,
-    -100,   295,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,
-    -100,  -100,  -100,    17,   245,     0,    -7,    -9,    -8,    90,
+    -100,  -100,  -100,   -99,  -100,  -100,  -100,   315,  -100,  -100,
+    -100,   318,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,
+    -100,  -100,  -100,    17,   270,     0,    -7,    -9,    -8,   112,
     -100,    13,     1,    -3,    -2,   -44,  -100,   -10,   -64
 };
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint16 yytable[] =
 {
@@ -742,58 +726,50 @@ static const yytype_uint16 yytable[] =
      168,   114,   111,   114,   117,   201,   202,   203,   153,   154,
      206,   207,   208,   209,   210,   166,   167,   168,   194,   106,
      108,   109,   114,   118,    33,    34,    35,    36,    37,   125,
-     169,    38,   126,   127,   128,   135,   180,   178,   136,    85,
-     139,   184,   181,   140,   129,   189,   141,   188,   142,   143,
-     233,   234,   152,   177,   144,   145,   199,   146,   147,   114,
-     114,   114,   155,   170,   114,   114,   114,   114,   114,   185,
-     186,   187,   158,   190,   191,   106,     4,   159,   160,   161,
-     162,   163,   164,   165,   166,   167,   168,   179,     5,     6,
+     169,    38,   252,   253,   128,   135,   180,   178,   136,    85,
+     126,   184,   181,   127,   129,   189,   139,   188,   140,   141,
+     233,   234,   152,   177,   142,   143,   199,   144,   145,   114,
+     114,   114,   146,   147,   114,   114,   114,   114,   114,   185,
+     186,   187,   155,   190,   191,   106,     4,   159,   160,   161,
+     162,   163,   164,   165,   166,   167,   168,   158,     5,     6,
        7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
       17,    18,    19,    20,   114,   114,   164,   165,   166,   167,
-     168,   235,   236,    30,    31,    61,    21,    22,    23,   200,
-      24,   239,   204,   211,   205,   214,   215,   246,   245,   247,
-      30,    31,   217,   218,    32,   219,   223,   224,    33,    34,
-      35,    36,    37,   225,   226,    38,    62,    63,    40,   256,
-     227,    32,    64,    42,   228,    52,    43,   260,    30,    31,
-     133,   230,   229,    79,    63,    40,   232,   231,   237,    80,
-      81,   240,    52,    43,   238,   241,   182,   243,   248,    32,
-     244,    30,    31,    33,    34,    35,    36,    37,   249,   250,
-      38,    62,    63,    40,   252,   253,   251,   254,    42,   257,
-      52,    43,    32,   255,    30,    31,    33,    34,    35,    36,
-      37,   258,   259,    38,    39,    76,    40,    77,   261,   134,
-      41,    42,     0,   242,    43,    32,     0,    30,    31,    33,
-      34,    35,    36,    37,     0,     0,    38,    39,     0,    40,
-       0,     0,     0,     0,    42,     0,    52,    43,    32,     0,
-      30,    31,    33,    34,    35,    36,    37,     0,     0,    38,
-      39,     0,    40,     0,     0,     0,    75,    42,     0,     0,
-      43,    32,     0,    30,    31,    33,    34,    35,    36,    37,
-       0,     0,    38,    39,     0,    40,     0,     0,    30,   119,
-      42,     0,     0,    43,    32,     0,     0,     0,    33,    34,
-      35,    36,    37,    30,    31,    38,     0,     0,    40,    32,
-       0,     0,     0,    42,     0,     0,    43,     0,   120,   121,
-       0,    39,     0,    40,    32,     0,    30,    31,   122,   112,
-       0,    43,    30,    31,     0,   113,     0,     0,    40,     0,
-       0,    30,    31,    81,     0,     0,    43,    32,     0,     0,
-       0,     0,     0,    32,     0,     0,    30,   175,     0,    79,
-      63,    40,    32,     0,     0,    39,    81,    40,     0,    43,
-       0,   174,    42,    30,    31,    43,    40,    32,     0,    30,
-      31,    81,     0,     0,    43,     0,   176,     0,    30,    31,
-       0,    40,     0,     0,    32,     0,    81,     0,     0,    43,
-      32,     0,     0,    30,    31,     0,     0,     0,    40,    32,
-       0,     0,     0,    81,    40,   182,    43,     0,   216,    81,
-       0,    52,    43,    40,    32,     0,     0,     0,    81,     0,
-       0,    43,     0,     0,     0,     0,     0,     0,    40,     0,
-       0,     0,     0,    81,     0,     0,    43,   160,   161,   162,
-     163,   164,   165,   166,   167,   168,   161,   162,   163,   164,
-     165,   166,   167,   168
+     168,   235,   236,    30,    31,    61,    21,    22,    23,   170,
+      24,   239,   179,   204,   200,   205,   211,   246,   245,   247,
+      30,    31,   214,   215,    32,   217,    30,    31,    33,    34,
+      35,    36,    37,   218,   219,    38,    62,    63,    40,   257,
+     223,    32,    64,    42,   224,    52,    43,    32,   262,   263,
+      30,    31,   133,    79,    63,    40,   174,   225,   226,    80,
+      81,    40,    52,    43,   227,   230,    81,   228,   231,    43,
+     229,    32,   232,    30,    31,    33,    34,    35,    36,    37,
+     237,   240,    38,    62,    63,    40,   238,   241,   243,   182,
+      42,   244,    52,    43,    32,   248,    30,    31,    33,    34,
+      35,    36,    37,   249,   250,    38,    39,   251,    40,   254,
+     255,   256,    41,    42,   258,   259,    43,    32,   260,    30,
+      31,    33,    34,    35,    36,    37,   261,    76,    38,    39,
+      77,    40,   264,   265,   134,   242,    42,     0,    52,    43,
+      32,     0,    30,    31,    33,    34,    35,    36,    37,     0,
+       0,    38,    39,     0,    40,     0,     0,     0,    75,    42,
+       0,     0,    43,    32,     0,    30,    31,    33,    34,    35,
+      36,    37,     0,     0,    38,    39,     0,    40,     0,     0,
+      30,   119,    42,     0,     0,    43,    32,     0,     0,     0,
+      33,    34,    35,    36,    37,    30,    31,    38,     0,     0,
+      40,    32,     0,     0,     0,    42,     0,     0,    43,     0,
+     120,   121,     0,    39,     0,    40,    32,     0,    30,    31,
+     122,   112,     0,    43,    30,    31,     0,   113,     0,     0,
+      40,     0,     0,    30,   175,    81,     0,     0,    43,    32,
+       0,     0,     0,     0,     0,    32,     0,     0,    30,    31,
+       0,    79,    63,    40,    32,     0,     0,    39,    81,    40,
+       0,    43,     0,   176,    42,    30,    31,    43,    40,    32,
+       0,    30,    31,    81,     0,     0,    43,    30,    31,     0,
+       0,     0,     0,    40,     0,     0,    32,     0,    81,     0,
+     182,    43,    32,     0,     0,     0,     0,     0,    32,     0,
+      40,   216,     0,     0,     0,    81,    40,    52,    43,     0,
+       0,    81,    40,     0,    43,     0,     0,    81,     0,     0,
+      43,   160,   161,   162,   163,   164,   165,   166,   167,   168,
+     161,   162,   163,   164,   165,   166,   167,   168
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-100))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int16 yycheck[] =
 {
       10,    10,    10,    13,    10,    13,    13,    10,     8,    11,
@@ -808,50 +784,48 @@ static const yytype_int16 yycheck[] =
       12,   101,    75,   103,    48,   159,   160,   161,   108,   109,
      164,   165,   166,   167,   168,    10,    11,    12,   152,   119,
        8,     9,   122,    48,    33,    34,    35,    36,    37,    47,
-      49,    40,    47,    47,   133,    48,   136,   127,    11,   139,
-      47,   141,   139,    48,   133,   145,    47,   145,    47,    47,
+      49,    40,    34,    35,   133,    48,   136,   127,    11,   139,
+      47,   141,   139,    47,   133,   145,    47,   145,    48,    47,
      204,   205,     7,   126,    47,    47,   156,    47,    47,   159,
-     160,   161,    48,    34,   164,   165,   166,   167,   168,   142,
-     143,   144,    49,   146,   147,   175,     1,     3,     4,     5,
-       6,     7,     8,     9,    10,    11,    12,    31,    13,    14,
+     160,   161,    47,    47,   164,   165,   166,   167,   168,   142,
+     143,   144,    48,   146,   147,   175,     1,     3,     4,     5,
+       6,     7,     8,     9,    10,    11,    12,    49,    13,    14,
       15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
       25,    26,    27,    28,   204,   205,     8,     9,    10,    11,
-      12,   211,   212,     8,     9,    10,    41,    42,    43,    48,
-      45,   219,     6,    10,     7,    49,    49,   227,   226,   228,
-       8,     9,    49,    49,    29,    47,    47,    44,    33,    34,
-      35,    36,    37,    44,    47,    40,    41,    42,    43,   249,
-      47,    29,    47,    48,    47,    50,    51,   257,     8,     9,
-      10,    49,    48,    41,    42,    43,    34,    49,    48,    47,
-      48,    29,    50,    51,    49,     9,    50,    34,    32,    29,
-      35,     8,     9,    33,    34,    35,    36,    37,    10,    49,
-      40,    41,    42,    43,    34,     9,    49,    29,    48,    10,
-      50,    51,    29,    49,     8,     9,    33,    34,    35,    36,
-      37,    29,    49,    40,    41,    12,    43,    12,    49,    64,
-      47,    48,    -1,   223,    51,    29,    -1,     8,     9,    33,
-      34,    35,    36,    37,    -1,    -1,    40,    41,    -1,    43,
-      -1,    -1,    -1,    -1,    48,    -1,    50,    51,    29,    -1,
-       8,     9,    33,    34,    35,    36,    37,    -1,    -1,    40,
-      41,    -1,    43,    -1,    -1,    -1,    47,    48,    -1,    -1,
-      51,    29,    -1,     8,     9,    33,    34,    35,    36,    37,
-      -1,    -1,    40,    41,    -1,    43,    -1,    -1,     8,     9,
-      48,    -1,    -1,    51,    29,    -1,    -1,    -1,    33,    34,
-      35,    36,    37,     8,     9,    40,    -1,    -1,    43,    29,
-      -1,    -1,    -1,    48,    -1,    -1,    51,    -1,    38,    39,
-      -1,    41,    -1,    43,    29,    -1,     8,     9,    48,    34,
-      -1,    51,     8,     9,    -1,    40,    -1,    -1,    43,    -1,
-      -1,     8,     9,    48,    -1,    -1,    51,    29,    -1,    -1,
-      -1,    -1,    -1,    29,    -1,    -1,     8,     9,    -1,    41,
-      42,    43,    29,    -1,    -1,    41,    48,    43,    -1,    51,
-      -1,    38,    48,     8,     9,    51,    43,    29,    -1,     8,
-       9,    48,    -1,    -1,    51,    -1,    38,    -1,     8,     9,
-      -1,    43,    -1,    -1,    29,    -1,    48,    -1,    -1,    51,
-      29,    -1,    -1,     8,     9,    -1,    -1,    -1,    43,    29,
-      -1,    -1,    -1,    48,    43,    50,    51,    -1,    38,    48,
-      -1,    50,    51,    43,    29,    -1,    -1,    -1,    48,    -1,
-      -1,    51,    -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,
-      -1,    -1,    -1,    48,    -1,    -1,    51,     4,     5,     6,
-       7,     8,     9,    10,    11,    12,     5,     6,     7,     8,
-       9,    10,    11,    12
+      12,   211,   212,     8,     9,    10,    41,    42,    43,    34,
+      45,   219,    31,     6,    48,     7,    10,   227,   226,   228,
+       8,     9,    49,    49,    29,    49,     8,     9,    33,    34,
+      35,    36,    37,    49,    47,    40,    41,    42,    43,   249,
+      47,    29,    47,    48,    44,    50,    51,    29,   258,   259,
+       8,     9,    10,    41,    42,    43,    38,    44,    47,    47,
+      48,    43,    50,    51,    47,    49,    48,    47,    49,    51,
+      48,    29,    34,     8,     9,    33,    34,    35,    36,    37,
+      48,    29,    40,    41,    42,    43,    49,     9,    34,    50,
+      48,    35,    50,    51,    29,    32,     8,     9,    33,    34,
+      35,    36,    37,    10,    49,    40,    41,    49,    43,     9,
+      29,    49,    47,    48,    10,    10,    51,    29,    29,     8,
+       9,    33,    34,    35,    36,    37,    49,    12,    40,    41,
+      12,    43,    49,    49,    64,   223,    48,    -1,    50,    51,
+      29,    -1,     8,     9,    33,    34,    35,    36,    37,    -1,
+      -1,    40,    41,    -1,    43,    -1,    -1,    -1,    47,    48,
+      -1,    -1,    51,    29,    -1,     8,     9,    33,    34,    35,
+      36,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    -1,
+       8,     9,    48,    -1,    -1,    51,    29,    -1,    -1,    -1,
+      33,    34,    35,    36,    37,     8,     9,    40,    -1,    -1,
+      43,    29,    -1,    -1,    -1,    48,    -1,    -1,    51,    -1,
+      38,    39,    -1,    41,    -1,    43,    29,    -1,     8,     9,
+      48,    34,    -1,    51,     8,     9,    -1,    40,    -1,    -1,
+      43,    -1,    -1,     8,     9,    48,    -1,    -1,    51,    29,
+      -1,    -1,    -1,    -1,    -1,    29,    -1,    -1,     8,     9,
+      -1,    41,    42,    43,    29,    -1,    -1,    41,    48,    43,
+      -1,    51,    -1,    38,    48,     8,     9,    51,    43,    29,
+      -1,     8,     9,    48,    -1,    -1,    51,     8,     9,    -1,
+      -1,    -1,    -1,    43,    -1,    -1,    29,    -1,    48,    -1,
+      50,    51,    29,    -1,    -1,    -1,    -1,    -1,    29,    -1,
+      43,    38,    -1,    -1,    -1,    48,    43,    50,    51,    -1,
+      -1,    48,    43,    -1,    51,    -1,    -1,    48,    -1,    -1,
+      51,     4,     5,     6,     7,     8,     9,    10,    11,    12,
+       5,     6,     7,     8,     9,    10,    11,    12
 };
 
 /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
@@ -883,8 +857,8 @@ static const yytype_uint8 yystos[] =
        9,    29,    82,    47,    44,    44,    47,    47,    47,    48,
       49,    49,    34,    90,    90,    89,    89,    48,    49,    80,
       29,     9,    81,    34,    35,    80,    89,    79,    32,    10,
-      49,    49,    34,     9,    29,    49,    89,    10,    29,    49,
-      89,    49
+      49,    49,    34,    35,     9,    29,    49,    89,    10,    10,
+      29,    49,    89,    89,    49,    49
 };
 
 #define yyerrok		(yyerrstatus = 0)
@@ -899,18 +873,9 @@ static const yytype_uint8 yystos[] =
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -920,6 +885,7 @@ do								\
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -961,10 +927,19 @@ while (YYID (0))
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -1068,20 +1043,17 @@ yy_symbol_print (yyoutput, yytype, yyvaluep)
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -1115,11 +1087,11 @@ yy_reduce_print (yyvsp, yyrule)
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -1156,6 +1128,7 @@ int yydebug;
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -1258,142 +1231,115 @@ yytnamerr (char *yyres, const char *yystr)
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
-    {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
+    {
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
+
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
+
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
 
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1425,9 +1371,10 @@ yydestruct (yymsg, yytype, yyvaluep)
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1443,16 +1390,18 @@ int yyparse ();
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1479,37 +1428,14 @@ yyparse ()
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1517,28 +1443,51 @@ yyparse ()
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1568,6 +1517,7 @@ yyparse ()
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1575,6 +1525,7 @@ yyparse ()
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1597,8 +1548,9 @@ yyparse ()
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1609,6 +1561,7 @@ yyparse ()
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1618,9 +1571,6 @@ yyparse ()
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1629,16 +1579,16 @@ yyparse ()
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1664,22 +1614,26 @@ yybackup:
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1719,8 +1673,6 @@ yyreduce:
   switch (yyn)
     {
         case 3:
-
-/* Line 1806 of yacc.c  */
 #line 70 "a.y"
     {
 		stmtline = lineno;
@@ -1728,8 +1680,6 @@ yyreduce:
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 77 "a.y"
     {
 		if((yyvsp[(1) - (2)].sym)->value != pc)
@@ -1739,8 +1689,6 @@ yyreduce:
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 84 "a.y"
     {
 		(yyvsp[(1) - (2)].sym)->type = LLAB;
@@ -1749,8 +1697,6 @@ yyreduce:
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 95 "a.y"
     {
 		(yyvsp[(1) - (3)].sym)->type = LVAR;
@@ -1759,8 +1705,6 @@ yyreduce:
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 100 "a.y"
     {
 		if((yyvsp[(1) - (3)].sym)->value != (yyvsp[(3) - (3)].lval))
@@ -1770,120 +1714,86 @@ yyreduce:
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 105 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 106 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 107 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 108 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 109 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 110 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 111 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 112 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 113 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 114 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 115 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 116 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 117 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 118 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 119 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 120 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 123 "a.y"
     {
 		(yyval.gen2).from = nullgen;
@@ -1892,8 +1802,6 @@ yyreduce:
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 128 "a.y"
     {
 		(yyval.gen2).from = nullgen;
@@ -1902,8 +1810,6 @@ yyreduce:
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 135 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
@@ -1912,8 +1818,6 @@ yyreduce:
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 142 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
@@ -1922,8 +1826,6 @@ yyreduce:
     break;
 
   case 34:
-
-/* Line 1806 of yacc.c  */
 #line 149 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (2)].gen);
@@ -1932,8 +1834,6 @@ yyreduce:
     break;
 
   case 35:
-
-/* Line 1806 of yacc.c  */
 #line 154 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (1)].gen);
@@ -1942,8 +1842,6 @@ yyreduce:
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 161 "a.y"
     {
 		(yyval.gen2).from = nullgen;
@@ -1952,8 +1850,6 @@ yyreduce:
     break;
 
   case 37:
-
-/* Line 1806 of yacc.c  */
 #line 166 "a.y"
     {
 		(yyval.gen2).from = nullgen;
@@ -1962,8 +1858,6 @@ yyreduce:
     break;
 
   case 38:
-
-/* Line 1806 of yacc.c  */
 #line 173 "a.y"
     {
 		(yyval.gen2).from = nullgen;
@@ -1972,8 +1866,6 @@ yyreduce:
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 178 "a.y"
     {
 		(yyval.gen2).from = nullgen;
@@ -1982,8 +1874,6 @@ yyreduce:
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 183 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
@@ -1992,8 +1882,6 @@ yyreduce:
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 190 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
@@ -2003,8 +1891,6 @@ yyreduce:
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 198 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
@@ -2013,8 +1899,6 @@ yyreduce:
     break;
 
   case 43:
-
-/* Line 1806 of yacc.c  */
 #line 203 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
@@ -2024,8 +1908,6 @@ yyreduce:
     break;
 
   case 44:
-
-/* Line 1806 of yacc.c  */
 #line 211 "a.y"
     {
 		(yyval.gen2).from = nullgen;
@@ -2034,8 +1916,6 @@ yyreduce:
     break;
 
   case 45:
-
-/* Line 1806 of yacc.c  */
 #line 216 "a.y"
     {
 		(yyval.gen2).from = nullgen;
@@ -2044,8 +1924,6 @@ yyreduce:
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 221 "a.y"
     {
 		(yyval.gen2).from = nullgen;
@@ -2056,8 +1934,6 @@ yyreduce:
     break;
 
   case 49:
-
-/* Line 1806 of yacc.c  */
 #line 234 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
@@ -2066,8 +1942,6 @@ yyreduce:
     break;
 
   case 50:
-
-/* Line 1806 of yacc.c  */
 #line 239 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
@@ -2079,8 +1953,6 @@ yyreduce:
     break;
 
   case 51:
-
-/* Line 1806 of yacc.c  */
 #line 249 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
@@ -2089,8 +1961,6 @@ yyreduce:
     break;
 
   case 52:
-
-/* Line 1806 of yacc.c  */
 #line 254 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
@@ -2102,8 +1972,6 @@ yyreduce:
     break;
 
   case 53:
-
-/* Line 1806 of yacc.c  */
 #line 264 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (2)].gen);
@@ -2112,8 +1980,6 @@ yyreduce:
     break;
 
   case 54:
-
-/* Line 1806 of yacc.c  */
 #line 269 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (1)].gen);
@@ -2122,8 +1988,6 @@ yyreduce:
     break;
 
   case 55:
-
-/* Line 1806 of yacc.c  */
 #line 274 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
@@ -2132,8 +1996,6 @@ yyreduce:
     break;
 
   case 56:
-
-/* Line 1806 of yacc.c  */
 #line 281 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
@@ -2142,8 +2004,6 @@ yyreduce:
     break;
 
   case 57:
-
-/* Line 1806 of yacc.c  */
 #line 286 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
@@ -2153,8 +2013,6 @@ yyreduce:
     break;
 
   case 58:
-
-/* Line 1806 of yacc.c  */
 #line 294 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
@@ -2164,8 +2022,6 @@ yyreduce:
     break;
 
   case 59:
-
-/* Line 1806 of yacc.c  */
 #line 302 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(3) - (5)].gen);
@@ -2177,8 +2033,6 @@ yyreduce:
     break;
 
   case 64:
-
-/* Line 1806 of yacc.c  */
 #line 318 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
@@ -2186,8 +2040,6 @@ yyreduce:
     break;
 
   case 65:
-
-/* Line 1806 of yacc.c  */
 #line 322 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
@@ -2195,8 +2047,6 @@ yyreduce:
     break;
 
   case 71:
-
-/* Line 1806 of yacc.c  */
 #line 335 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2206,8 +2056,6 @@ yyreduce:
     break;
 
   case 72:
-
-/* Line 1806 of yacc.c  */
 #line 341 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2220,8 +2068,6 @@ yyreduce:
     break;
 
   case 73:
-
-/* Line 1806 of yacc.c  */
 #line 350 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2232,8 +2078,6 @@ yyreduce:
     break;
 
   case 74:
-
-/* Line 1806 of yacc.c  */
 #line 359 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2242,8 +2086,6 @@ yyreduce:
     break;
 
   case 75:
-
-/* Line 1806 of yacc.c  */
 #line 364 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2252,8 +2094,6 @@ yyreduce:
     break;
 
   case 76:
-
-/* Line 1806 of yacc.c  */
 #line 369 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2262,8 +2102,6 @@ yyreduce:
     break;
 
   case 77:
-
-/* Line 1806 of yacc.c  */
 #line 374 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2272,8 +2110,6 @@ yyreduce:
     break;
 
   case 78:
-
-/* Line 1806 of yacc.c  */
 #line 379 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2282,8 +2118,6 @@ yyreduce:
     break;
 
   case 79:
-
-/* Line 1806 of yacc.c  */
 #line 384 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2292,8 +2126,6 @@ yyreduce:
     break;
 
   case 80:
-
-/* Line 1806 of yacc.c  */
 #line 391 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2303,8 +2135,6 @@ yyreduce:
     break;
 
   case 81:
-
-/* Line 1806 of yacc.c  */
 #line 397 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
@@ -2319,8 +2149,6 @@ yyreduce:
     break;
 
   case 82:
-
-/* Line 1806 of yacc.c  */
 #line 408 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2330,8 +2158,6 @@ yyreduce:
     break;
 
   case 83:
-
-/* Line 1806 of yacc.c  */
 #line 414 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2341,8 +2167,6 @@ yyreduce:
     break;
 
   case 84:
-
-/* Line 1806 of yacc.c  */
 #line 420 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2352,8 +2176,6 @@ yyreduce:
     break;
 
   case 85:
-
-/* Line 1806 of yacc.c  */
 #line 426 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2363,8 +2185,6 @@ yyreduce:
     break;
 
   case 86:
-
-/* Line 1806 of yacc.c  */
 #line 432 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2374,8 +2194,6 @@ yyreduce:
     break;
 
   case 87:
-
-/* Line 1806 of yacc.c  */
 #line 440 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2386,8 +2204,6 @@ yyreduce:
     break;
 
   case 88:
-
-/* Line 1806 of yacc.c  */
 #line 449 "a.y"
     {
 		(yyval.con2).v1 = (yyvsp[(1) - (1)].lval);
@@ -2396,8 +2212,6 @@ yyreduce:
     break;
 
   case 89:
-
-/* Line 1806 of yacc.c  */
 #line 454 "a.y"
     {
 		(yyval.con2).v1 = -(yyvsp[(2) - (2)].lval);
@@ -2406,8 +2220,6 @@ yyreduce:
     break;
 
   case 90:
-
-/* Line 1806 of yacc.c  */
 #line 459 "a.y"
     {
 		(yyval.con2).v1 = (yyvsp[(1) - (3)].lval);
@@ -2416,8 +2228,6 @@ yyreduce:
     break;
 
   case 91:
-
-/* Line 1806 of yacc.c  */
 #line 464 "a.y"
     {
 		(yyval.con2).v1 = -(yyvsp[(2) - (4)].lval);
@@ -2426,8 +2236,6 @@ yyreduce:
     break;
 
   case 94:
-
-/* Line 1806 of yacc.c  */
 #line 475 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2437,8 +2245,6 @@ yyreduce:
     break;
 
   case 95:
-
-/* Line 1806 of yacc.c  */
 #line 481 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2448,8 +2254,6 @@ yyreduce:
     break;
 
   case 96:
-
-/* Line 1806 of yacc.c  */
 #line 487 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2459,8 +2263,6 @@ yyreduce:
     break;
 
   case 97:
-
-/* Line 1806 of yacc.c  */
 #line 493 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2473,8 +2275,6 @@ yyreduce:
     break;
 
   case 98:
-
-/* Line 1806 of yacc.c  */
 #line 502 "a.y"
     {
 		(yyval.gen) = nullgen;
@@ -2487,29 +2287,35 @@ yyreduce:
     break;
 
   case 99:
-
-/* Line 1806 of yacc.c  */
 #line 511 "a.y"
     {
 		(yyval.gen) = nullgen;
-		(yyval.gen).type = D_INDIR+(yyvsp[(2) - (3)].lval);
+		(yyval.gen).type = D_INDIR+(yyvsp[(3) - (9)].lval);
+		(yyval.gen).offset = (yyvsp[(1) - (9)].lval);
+		(yyval.gen).index = (yyvsp[(6) - (9)].lval);
+		(yyval.gen).scale = (yyvsp[(8) - (9)].lval);
+		checkscale((yyval.gen).scale);
 	}
     break;
 
   case 100:
-
-/* Line 1806 of yacc.c  */
-#line 516 "a.y"
+#line 520 "a.y"
     {
 		(yyval.gen) = nullgen;
-		(yyval.gen).type = D_INDIR+D_SP;
+		(yyval.gen).type = D_INDIR+(yyvsp[(2) - (3)].lval);
 	}
     break;
 
   case 101:
+#line 525 "a.y"
+    {
+		(yyval.gen) = nullgen;
+		(yyval.gen).type = D_INDIR+D_SP;
+	}
+    break;
 
-/* Line 1806 of yacc.c  */
-#line 521 "a.y"
+  case 102:
+#line 530 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(3) - (4)].lval);
@@ -2517,10 +2323,8 @@ yyreduce:
 	}
     break;
 
-  case 102:
-
-/* Line 1806 of yacc.c  */
-#line 527 "a.y"
+  case 103:
+#line 536 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_NONE;
@@ -2530,10 +2334,8 @@ yyreduce:
 	}
     break;
 
-  case 103:
-
-/* Line 1806 of yacc.c  */
-#line 535 "a.y"
+  case 104:
+#line 544 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(2) - (8)].lval);
@@ -2543,19 +2345,15 @@ yyreduce:
 	}
     break;
 
-  case 104:
-
-/* Line 1806 of yacc.c  */
-#line 545 "a.y"
+  case 105:
+#line 554 "a.y"
     {
 		(yyval.gen) = (yyvsp[(1) - (1)].gen);
 	}
     break;
 
-  case 105:
-
-/* Line 1806 of yacc.c  */
-#line 549 "a.y"
+  case 106:
+#line 558 "a.y"
     {
 		(yyval.gen) = (yyvsp[(1) - (6)].gen);
 		(yyval.gen).index = (yyvsp[(3) - (6)].lval);
@@ -2564,10 +2362,8 @@ yyreduce:
 	}
     break;
 
-  case 106:
-
-/* Line 1806 of yacc.c  */
-#line 558 "a.y"
+  case 107:
+#line 567 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(4) - (5)].lval);
@@ -2576,10 +2372,8 @@ yyreduce:
 	}
     break;
 
-  case 107:
-
-/* Line 1806 of yacc.c  */
-#line 565 "a.y"
+  case 108:
+#line 574 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_STATIC;
@@ -2588,194 +2382,144 @@ yyreduce:
 	}
     break;
 
-  case 108:
-
-/* Line 1806 of yacc.c  */
-#line 573 "a.y"
+  case 109:
+#line 582 "a.y"
     {
 		(yyval.lval) = 0;
 	}
     break;
 
-  case 109:
-
-/* Line 1806 of yacc.c  */
-#line 577 "a.y"
+  case 110:
+#line 586 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 110:
-
-/* Line 1806 of yacc.c  */
-#line 581 "a.y"
+  case 111:
+#line 590 "a.y"
     {
 		(yyval.lval) = -(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 112:
-
-/* Line 1806 of yacc.c  */
-#line 588 "a.y"
+  case 113:
+#line 597 "a.y"
     {
 		(yyval.lval) = D_AUTO;
 	}
     break;
 
-  case 115:
-
-/* Line 1806 of yacc.c  */
-#line 596 "a.y"
+  case 116:
+#line 605 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (1)].sym)->value;
 	}
     break;
 
-  case 116:
-
-/* Line 1806 of yacc.c  */
-#line 600 "a.y"
+  case 117:
+#line 609 "a.y"
     {
 		(yyval.lval) = -(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 117:
-
-/* Line 1806 of yacc.c  */
-#line 604 "a.y"
+  case 118:
+#line 613 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 118:
-
-/* Line 1806 of yacc.c  */
-#line 608 "a.y"
+  case 119:
+#line 617 "a.y"
     {
 		(yyval.lval) = ~(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 119:
-
-/* Line 1806 of yacc.c  */
-#line 612 "a.y"
+  case 120:
+#line 621 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (3)].lval);
 	}
     break;
 
-  case 121:
-
-/* Line 1806 of yacc.c  */
-#line 619 "a.y"
+  case 122:
+#line 628 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) + (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 122:
-
-/* Line 1806 of yacc.c  */
-#line 623 "a.y"
+  case 123:
+#line 632 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) - (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 123:
-
-/* Line 1806 of yacc.c  */
-#line 627 "a.y"
+  case 124:
+#line 636 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) * (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 124:
-
-/* Line 1806 of yacc.c  */
-#line 631 "a.y"
+  case 125:
+#line 640 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) / (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 125:
-
-/* Line 1806 of yacc.c  */
-#line 635 "a.y"
+  case 126:
+#line 644 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) % (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 126:
-
-/* Line 1806 of yacc.c  */
-#line 639 "a.y"
+  case 127:
+#line 648 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (4)].lval) << (yyvsp[(4) - (4)].lval);
 	}
     break;
 
-  case 127:
-
-/* Line 1806 of yacc.c  */
-#line 643 "a.y"
+  case 128:
+#line 652 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (4)].lval) >> (yyvsp[(4) - (4)].lval);
 	}
     break;
 
-  case 128:
-
-/* Line 1806 of yacc.c  */
-#line 647 "a.y"
+  case 129:
+#line 656 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) & (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 129:
-
-/* Line 1806 of yacc.c  */
-#line 651 "a.y"
+  case 130:
+#line 660 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) ^ (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 130:
-
-/* Line 1806 of yacc.c  */
-#line 655 "a.y"
+  case 131:
+#line 664 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) | (yyvsp[(3) - (3)].lval);
 	}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 2766 "y.tab.c"
+/* Line 1267 of yacc.c.  */
+#line 2521 "y.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -2784,6 +2528,7 @@ yyreduce:
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -2803,10 +2548,6 @@ yyreduce:
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -2814,36 +2555,37 @@ yyerrlab:
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -2851,7 +2593,7 @@ yyerrlab:
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -2868,7 +2610,7 @@ yyerrlab:
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -2902,7 +2644,7 @@ yyerrlab1:
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -2925,6 +2667,9 @@ yyerrlab1:
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -2949,7 +2694,7 @@ yyabortlab:
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -2960,14 +2705,9 @@ yyexhaustedlab:
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
diff --git a/src/cmd/8a/y.tab.h b/src/cmd/8a/y.tab.h
index 4d7bbe80df..4a84b53e4d 100644
--- a/src/cmd/8a/y.tab.h
+++ b/src/cmd/8a/y.tab.h
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -108,11 +110,8 @@
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 37 "a.y"
-
+{
 	Sym	*sym;
 	int32	lval;
 	struct {
@@ -123,17 +122,14 @@ typedef union YYSTYPE
 	char	sval[8];
 	Gen	gen;
 	Gen2	gen2;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 131 "y.tab.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 128 "y.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE yylval;
 
-
diff --git a/src/cmd/8l/8.out.h b/src/cmd/8l/8.out.h
index 93d44eb519..d647f28908 100644
--- a/src/cmd/8l/8.out.h
+++ b/src/cmd/8l/8.out.h
@@ -654,6 +654,7 @@ enum
 	D_PCREL,
 	D_GOTOFF,
 	D_GOTREL,
+	D_TLS,
 
 	T_TYPE		= 1<<0,
 	T_INDEX		= 1<<1,
diff --git a/src/cmd/8l/asm.c b/src/cmd/8l/asm.c
index bfeb138390..18591cd2f3 100644
--- a/src/cmd/8l/asm.c
+++ b/src/cmd/8l/asm.c
@@ -294,6 +294,12 @@ elfreloc1(Reloc *r, vlong sectoff)
 		else
 			return -1;
 		break;
+	
+	case D_TLS:
+		if(r->siz == 4)
+			LPUT(R_386_TLS_LE | elfsym<<8);
+		else
+			return -1;
 	}
 
 	return 0;
diff --git a/src/cmd/8l/obj.c b/src/cmd/8l/obj.c
index fda96d09ca..35a65edb60 100644
--- a/src/cmd/8l/obj.c
+++ b/src/cmd/8l/obj.c
@@ -90,7 +90,7 @@ main(int argc, char *argv[])
 	INITRND = -1;
 	INITENTRY = 0;
 	LIBINITENTRY = 0;
-	linkmode = LinkInternal; // TODO: LinkAuto once everything works.
+	linkmode = LinkAuto;
 	nuxiinit();
 
 	flagcount("1", "use alternate profiling code", &debug['1']);
diff --git a/src/cmd/8l/pass.c b/src/cmd/8l/pass.c
index 14dd3e0dc1..4871761ff5 100644
--- a/src/cmd/8l/pass.c
+++ b/src/cmd/8l/pass.c
@@ -296,16 +296,23 @@ patch(void)
 				//	MOVL 0(GS), reg
 				// and then off(reg) instead of saying off(GS) directly
 				// when the offset is negative.
+				// In external mode we just produce a reloc.
 				if(p->from.type == D_INDIR+D_GS && p->from.offset < 0
 				&& p->to.type >= D_AX && p->to.type <= D_DI) {
-					q = appendp(p);
-					q->from = p->from;
-					q->from.type = D_INDIR + p->to.type;
-					q->to = p->to;
-					q->as = p->as;
-					p->as = AMOVL;
-					p->from.type = D_INDIR+D_GS;
-					p->from.offset = 0;
+					if(linkmode != LinkExternal) {
+						q = appendp(p);
+						q->from = p->from;
+						q->from.type = D_INDIR + p->to.type;
+						q->to = p->to;
+						q->as = p->as;
+						p->as = AMOVL;
+						p->from.type = D_INDIR+D_GS;
+						p->from.offset = 0;
+					} else {
+						// Add signals to relocate.
+						p->from.index = D_GS;
+						p->from.scale = 1;
+					}
 				}
 			}
 			if(HEADTYPE == Hplan9x32) {
@@ -450,16 +457,25 @@ dostkoff(void)
 				break;
 			
 			case Hlinux:
-				p->as = AMOVL;
-				p->from.type = D_INDIR+D_GS;
-				p->from.offset = 0;
-				p->to.type = D_CX;
+				if(linkmode != LinkExternal) {
+					p->as = AMOVL;
+					p->from.type = D_INDIR+D_GS;
+					p->from.offset = 0;
+					p->to.type = D_CX;
 
-				p = appendp(p);
-				p->as = AMOVL;
-				p->from.type = D_INDIR+D_CX;
-				p->from.offset = tlsoffset + 0;
-				p->to.type = D_CX;
+					p = appendp(p);
+					p->as = AMOVL;
+					p->from.type = D_INDIR+D_CX;
+					p->from.offset = tlsoffset + 0;
+					p->to.type = D_CX;
+				} else {
+					p->as = AMOVL;
+					p->from.type = D_INDIR+D_GS;
+					p->from.offset = tlsoffset + 0;
+					p->to.type = D_CX;
+					p->from.index = D_GS;
+					p->from.scale = 1;
+				}
 				break;
 			
 			case Hplan9x32:
diff --git a/src/cmd/8l/span.c b/src/cmd/8l/span.c
index 0678fa8f26..c9e1c28bb2 100644
--- a/src/cmd/8l/span.c
+++ b/src/cmd/8l/span.c
@@ -32,6 +32,7 @@
 
 #include	"l.h"
 #include	"../ld/lib.h"
+#include	"../ld/elf.h"
 
 static int32	vaddr(Adr*, Reloc*);
 
@@ -559,6 +560,14 @@ vaddr(Adr *a, Reloc *r)
 	return v;
 }
 
+static int
+istls(Adr *a)
+{
+	if(HEADTYPE == Hlinux)
+		return a->index == D_GS;
+	return a->type == D_INDIR+D_GS;
+}
+
 void
 asmand(Adr *a, int r)
 {
@@ -569,7 +578,7 @@ asmand(Adr *a, int r)
 	v = a->offset;
 	t = a->type;
 	rel.siz = 0;
-	if(a->index != D_NONE) {
+	if(a->index != D_NONE && a->index != D_FS && a->index != D_GS) {
 		if(t < D_INDIR || t >= 2*D_INDIR) {
 			switch(t) {
 			default:
@@ -658,7 +667,7 @@ asmand(Adr *a, int r)
 			*andptr++ = (0 << 6) | (reg[t] << 0) | (r << 3);
 			return;
 		}
-		if(v >= -128 && v < 128 && rel.siz == 0) {
+		if(v >= -128 && v < 128 && rel.siz == 0 && a->index != D_FS && a->index != D_GS) {
 			andptr[0] = (1 << 6) | (reg[t] << 0) | (r << 3);
 			andptr[1] = v;
 			andptr += 2;
@@ -680,7 +689,29 @@ putrelv:
 		r = addrel(cursym);
 		*r = rel;
 		r->off = curp->pc + andptr - and;
+	} else if(iself && linkmode == LinkExternal && istls(a)) {
+		Reloc *r;
+		Sym *s;
+
+		r = addrel(cursym);
+		r->off = curp->pc + andptr - and;
+		r->add = 0;
+		r->xadd = 0;
+		r->siz = 4;
+		r->type = D_TLS;
+		if(a->offset == tlsoffset+0)
+			s = lookup("runtime.g", 0);
+		else
+			s = lookup("runtime.m", 0);
+		s->type = STLSBSS;
+		s->reachable = 1;
+		s->hide = 1;
+		s->size = PtrSize;
+		r->sym = s;
+		r->xsym = s;
+		v = 0;
 	}
+
 	put4(v);
 	return;
 
diff --git a/src/cmd/dist/buildruntime.c b/src/cmd/dist/buildruntime.c
index f46f72d4b9..ee867566fb 100644
--- a/src/cmd/dist/buildruntime.c
+++ b/src/cmd/dist/buildruntime.c
@@ -133,12 +133,17 @@ static struct {
 		"// which is where these macros come into play.\n"
 		"// get_tls sets up the temporary and then g and r use it.\n"
 		"//\n"
-		"// The final wrinkle is that get_tls needs to read from %gs:0,\n"
+		"// Another wrinkle is that get_tls needs to read from %gs:0,\n"
 		"// but in 8l input it's called 8(GS), because 8l is going to\n"
 		"// subtract 8 from all the offsets, as described above.\n"
+		"//\n"
+		"// The final wrinkle is that when generating an ELF .o file for\n"
+		"// external linking mode, we need to be able to relocate the\n"
+		"// -8(r) and -4(r) instructions. Tag them with an extra (GS*1)\n"
+		"// that is ignored by the linker except for that identification.\n"
 		"#define	get_tls(r)	MOVL 8(GS), r\n"
-		"#define	g(r)	-8(r)\n"
-		"#define	m(r)	-4(r)\n"
+		"#define	g(r)	-8(r)(GS*1)\n"
+		"#define	m(r)	-4(r)(GS*1)\n"
 	},
 	{"386", "",
 		"#define	get_tls(r)\n"
diff --git a/src/cmd/ld/data.c b/src/cmd/ld/data.c
index b70d4636cc..9f7ae0c409 100644
--- a/src/cmd/ld/data.c
+++ b/src/cmd/ld/data.c
@@ -172,7 +172,7 @@ relocsym(Sym *s)
 		if(r->sym != S && r->sym->type == SDYNIMPORT)
 			diag("unhandled relocation for %s (type %d rtype %d)", r->sym->name, r->sym->type, r->type);
 
-		if(r->sym != S && !r->sym->reachable)
+		if(r->sym != S && r->sym->type != STLSBSS && !r->sym->reachable)
 			diag("unreachable sym in relocation: %s %s", s->name, r->sym->name);
 
 		switch(r->type) {
@@ -181,6 +181,10 @@ relocsym(Sym *s)
 			if(linkmode == LinkExternal || archreloc(r, s, &o) < 0)
 				diag("unknown reloc %d", r->type);
 			break;
+		case D_TLS:
+			r->done = 0;
+			o = 0;
+			break;
 		case D_ADDR:
 			if(linkmode == LinkExternal && r->sym->type != SCONST) {
 				r->done = 0;
@@ -1193,11 +1197,7 @@ dodata(void)
 	sect->vaddr = datsize;
 	lookup("noptrbss", 0)->sect = sect;
 	lookup("enoptrbss", 0)->sect = sect;
-	for(; s != nil; s = s->next) {
-		if(s->type > SNOPTRBSS) {
-			cursym = s;
-			diag("unexpected symbol type %d", s->type);
-		}
+	for(; s != nil && s->type == SNOPTRBSS; s = s->next) {
 		datsize = aligndatsize(datsize, s);
 		s->sect = sect;
 		s->value = datsize;
@@ -1205,6 +1205,25 @@ dodata(void)
 	}
 	sect->len = datsize - sect->vaddr;
 	lookup("end", 0)->sect = sect;
+	
+	if(iself && linkmode == LinkExternal && s != nil && s->type == STLSBSS) {
+		sect = addsection(&segdata, ".tbss", 06);
+		sect->align = PtrSize;
+		sect->vaddr = 0;
+		datsize = 0;
+		for(; s != nil && s->type == STLSBSS; s = s->next) {
+			datsize = aligndatsize(datsize, s);
+			s->sect = sect;
+			s->value = datsize;
+			datsize += s->size;
+		}
+		sect->len = datsize;
+	}
+	
+	if(s != nil) {
+		cursym = nil;
+		diag("unexpected symbol type %d for %s", s->type, s->name);
+	}
 
 	/* we finished segdata, begin segtext */
 	s = datap;
diff --git a/src/cmd/ld/elf.c b/src/cmd/ld/elf.c
index f5cce9c524..7e1ef7dc6d 100644
--- a/src/cmd/ld/elf.c
+++ b/src/cmd/ld/elf.c
@@ -758,6 +758,10 @@ elfshbits(Section *sect)
 		sh->flags |= SHF_EXECINSTR;
 	if(sect->rwx & 2)
 		sh->flags |= SHF_WRITE;
+	if(strcmp(sect->name, ".tbss") == 0) {
+		sh->flags |= SHF_TLS;
+		sh->type = SHT_NOBITS;
+	}
 	if(linkmode != LinkExternal)
 		sh->addr = sect->vaddr;
 	sh->addralign = sect->align;
@@ -779,7 +783,7 @@ elfshreloc(Section *sect)
 	// Also nothing to relocate in .shstrtab.
 	if(sect->vaddr >= sect->seg->vaddr + sect->seg->filelen)
 		return nil;
-	if(strcmp(sect->name, ".shstrtab") == 0)
+	if(strcmp(sect->name, ".shstrtab") == 0 || strcmp(sect->name, ".tbss") == 0)
 		return nil;
 
 	if(thechar == '6') {
@@ -883,6 +887,8 @@ doelf(void)
 	addstring(shstrtab, ".data");
 	addstring(shstrtab, ".bss");
 	addstring(shstrtab, ".noptrbss");
+	if(linkmode == LinkExternal)
+		addstring(shstrtab, ".tbss");
 	if(HEADTYPE == Hnetbsd)
 		addstring(shstrtab, ".note.netbsd.ident");
 	if(HEADTYPE == Hopenbsd)
diff --git a/src/cmd/ld/lib.h b/src/cmd/ld/lib.h
index a5ca7d3c3b..521f12479f 100644
--- a/src/cmd/ld/lib.h
+++ b/src/cmd/ld/lib.h
@@ -52,6 +52,7 @@ enum
 	SWINDOWS,
 	SBSS,
 	SNOPTRBSS,
+	STLSBSS,
 
 	SXREF,
 	SMACHOSYMSTR,
diff --git a/src/cmd/ld/symtab.c b/src/cmd/ld/symtab.c
index 698194f849..1bf5c58eb7 100644
--- a/src/cmd/ld/symtab.c
+++ b/src/cmd/ld/symtab.c
@@ -152,6 +152,26 @@ asmelfsym(void)
 
 	elfbind = STB_LOCAL;
 	genasmsym(putelfsym);
+	
+	if(linkmode == LinkExternal) {
+		s = lookup("runtime.m", 0);
+		if(s->sect == nil) {
+			cursym = nil;
+			diag("missing section for %s", s->name);
+			errorexit();
+		}
+		putelfsyment(putelfstr(s->name), 0, PtrSize, (STB_LOCAL<<4)|STT_TLS, s->sect->elfsect->shnum, 0);
+		s->elfsym = numelfsym++;
+
+		s = lookup("runtime.g", 0);
+		if(s->sect == nil) {
+			cursym = nil;
+			diag("missing section for %s", s->name);
+			errorexit();
+		}
+		putelfsyment(putelfstr(s->name), PtrSize, PtrSize, (STB_LOCAL<<4)|STT_TLS, s->sect->elfsect->shnum, 0);
+		s->elfsym = numelfsym++;
+	}
 
 	elfbind = STB_GLOBAL;
 	elfglobalsymndx = numelfsym;
diff --git a/src/run.bash b/src/run.bash
index b7c89d96a7..df5b95b0e1 100755
--- a/src/run.bash
+++ b/src/run.bash
@@ -83,8 +83,14 @@ set -e
 go test -ldflags '-linkmode=auto'
 go test -ldflags '-linkmode=internal'
 case "$GOHOSTOS-$GOARCH" in
-darwin-386 | darwin-amd64 | freebsd-386 | freebsd-amd64 | linux-386 | linux-amd64 | netbsd-386 | netbsd-amd64 | openbsd-386 | openbsd-amd64)
+darwin-386 | darwin-amd64 | openbsd-386 | openbsd-amd64)
+	# test linkmode=external, but __thread not supported, so skip testtls.
 	go test -ldflags '-linkmode=external'
+	;;
+freebsd-386 | freebsd-amd64 | linux-386 | linux-amd64 | netbsd-386 | netbsd-amd64)
+	go test -ldflags '-linkmode=external'
+	go test -ldflags '-linkmode=auto' ../testtls
+	go test -ldflags '-linkmode=external' ../testtls
 esac
 ) || exit $?
 
