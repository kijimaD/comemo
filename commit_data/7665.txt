commit 2ae4f356cc785ef5ac4f756143cc6c2eb3a273d6
Author: Alex Brainman <alex.brainman@gmail.com>
Date:   Mon Mar 7 15:48:39 2011 +1100

    doc/codelab/wiki: include into windows build
    
    R=adg, rsc
    CC=Joe Poirier, golang-dev
    https://golang.org/cl/4257052
---
 doc/codelab/wiki/Makefile  |  2 +-
 doc/codelab/wiki/test.sh   |  2 +-
 doc/codelab/wiki/wiki.html | 70 +++++++++++++++++++++++-----------------------
 src/run.bash               |  1 -
 4 files changed, 37 insertions(+), 38 deletions(-)

diff --git a/doc/codelab/wiki/Makefile b/doc/codelab/wiki/Makefile
index 0d948ed4b8..43f05b21d0 100644
--- a/doc/codelab/wiki/Makefile
+++ b/doc/codelab/wiki/Makefile
@@ -11,7 +11,7 @@ include ../../../src/Make.common
 CLEANFILES+=index.html srcextract.bin htmlify.bin
 
 index.html: srcextract.bin htmlify.bin
-	awk '/^!/{system(substr($$0,2)); next} {print}' "$$@" < wiki.html > index.html
+	PATH=.:$$PATH awk '/^!/{system(substr($$0,2)); next} {print}' < wiki.html | tr -d '\r' > index.html
 
 test: get.bin
 	bash ./test.sh
diff --git a/doc/codelab/wiki/test.sh b/doc/codelab/wiki/test.sh
index 95ff145b97..ed63ff20ff 100755
--- a/doc/codelab/wiki/test.sh
+++ b/doc/codelab/wiki/test.sh
@@ -12,7 +12,7 @@ gomake get.bin
 addr=$(./get.bin -addr)
 sed s/:8080/$addr/ < final.go > final-test.go
 gomake final-test.bin
-./final-test.bin &
+(./final-test.bin) &
 wiki_pid=$!
 
 sleep 1
diff --git a/doc/codelab/wiki/wiki.html b/doc/codelab/wiki/wiki.html
index 7ef97b45ba..3628eeb564 100644
--- a/doc/codelab/wiki/wiki.html
+++ b/doc/codelab/wiki/wiki.html
@@ -76,7 +76,7 @@ the title and body.
 </p>
 
 <pre>
-!./srcextract.bin -src=part1.go -name=Page
+!srcextract.bin -src=part1.go -name=Page
 </pre>
 
 <p>
@@ -95,7 +95,7 @@ But what about persistent storage? We can address that by creating a
 </p>
 
 <pre>
-!./srcextract.bin -src=part1.go -name=save
+!srcextract.bin -src=part1.go -name=save
 </pre>
 
 <p>
@@ -131,7 +131,7 @@ We will want to load pages, too:
 </p>
 
 <pre>
-!./srcextract.bin -src=part1-noerror.go -name=loadPage
+!srcextract.bin -src=part1-noerror.go -name=loadPage
 </pre>
 
 <p>
@@ -155,7 +155,7 @@ function to return <code>*Page</code> and <code>os.Error</code>.
 </p>
 
 <pre>
-!./srcextract.bin -src=part1.go -name=loadPage
+!srcextract.bin -src=part1.go -name=loadPage
 </pre>
 
 <p>
@@ -173,7 +173,7 @@ written:
 </p>
 
 <pre>
-!./srcextract.bin -src=part1.go -name=main
+!srcextract.bin -src=part1.go -name=main
 </pre>
 
 <p>
@@ -211,7 +211,7 @@ Here's a full working example of a simple web server:
 </p>
 
 <pre>
-!./htmlify.bin < http-sample.go
+!htmlify.bin < http-sample.go
 </pre>
 
 <p>
@@ -276,9 +276,9 @@ Let's create a handler to view a wiki page:
 </p>
 
 <pre>
-!./srcextract.bin -src=part2.go -name=lenPath
+!srcextract.bin -src=part2.go -name=lenPath
 
-!./srcextract.bin -src=part2.go -name=viewHandler
+!srcextract.bin -src=part2.go -name=viewHandler
 </pre>
 
 <p>
@@ -309,7 +309,7 @@ any requests under the path <code>/view/</code>.
 </p>
 
 <pre>
-!./srcextract.bin -src=part2.go -name=main
+!srcextract.bin -src=part2.go -name=main
 </pre>
 
 <p>
@@ -348,7 +348,7 @@ First, we add them to <code>main()</code>:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-noclosure.go -name=main
+!srcextract.bin -src=final-noclosure.go -name=main
 </pre>
 
 <p>
@@ -358,7 +358,7 @@ and displays an HTML form.
 </p>
 
 <pre>
-!./srcextract.bin -src=notemplate.go -name=editHandler
+!srcextract.bin -src=notemplate.go -name=editHandler
 </pre>
 
 <p>
@@ -394,7 +394,7 @@ Open a new file named <code>edit.html</code>, and add the following lines:
 </p>
 
 <pre>
-!./htmlify.bin < edit.html
+!htmlify.bin < edit.html
 </pre>
 
 <p>
@@ -403,7 +403,7 @@ HTML:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-noerror.go -name=editHandler
+!srcextract.bin -src=final-noerror.go -name=editHandler
 </pre>
 
 <p>
@@ -438,7 +438,7 @@ While we're working with templates, let's create a template for our
 </p>
 
 <pre>
-!./htmlify.bin < view.html
+!htmlify.bin < view.html
 </pre>
 
 <p>
@@ -446,7 +446,7 @@ Modify <code>viewHandler</code> accordingly:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-noerror.go -name=viewHandler
+!srcextract.bin -src=final-noerror.go -name=viewHandler
 </pre>
 
 <p>
@@ -456,11 +456,11 @@ to its own function:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-template.go -name=viewHandler
+!srcextract.bin -src=final-template.go -name=viewHandler
 
-!./srcextract.bin -src=final-template.go -name=editHandler
+!srcextract.bin -src=final-template.go -name=editHandler
 
-!./srcextract.bin -src=final-template.go -name=renderTemplate
+!srcextract.bin -src=final-template.go -name=renderTemplate
 </pre>
 
 <p>
@@ -477,7 +477,7 @@ redirect the client to the edit Page so the content may be created:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-noclosure.go -name=viewHandler
+!srcextract.bin -src=final-noclosure.go -name=viewHandler
 </pre>
 
 <p>
@@ -493,7 +493,7 @@ The function <code>saveHandler</code> will handle the form submission.
 </p>
 
 <pre>
-!./srcextract.bin -src=final-template.go -name=saveHandler
+!srcextract.bin -src=final-template.go -name=saveHandler
 </pre>
 
 <p>
@@ -525,7 +525,7 @@ First, let's handle the errors in <code>renderTemplate</code>:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-parsetemplate.go -name=renderTemplate
+!srcextract.bin -src=final-parsetemplate.go -name=renderTemplate
 </pre>
 
 <p>
@@ -539,7 +539,7 @@ Now let's fix up <code>saveHandler</code>:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-noclosure.go -name=saveHandler
+!srcextract.bin -src=final-noclosure.go -name=saveHandler
 </pre>
 
 <p>
@@ -564,7 +564,7 @@ our <code>*Template</code> values, keyed by <code>string</code>
 </p>
 
 <pre>
-!./srcextract.bin -src=final.go -name=templates
+!srcextract.bin -src=final.go -name=templates
 </pre>
 
 <p>
@@ -577,7 +577,7 @@ be loaded the only sensible thing to do is exit the program.
 </p>
 
 <pre>
-!./srcextract.bin -src=final.go -name=init
+!srcextract.bin -src=final.go -name=init
 </pre>
 
 <p>
@@ -593,7 +593,7 @@ the <code>Execute</code> method on the appropriate <code>Template</code> from
 <code>templates</code>:
 
 <pre>
-!./srcextract.bin -src=final.go -name=renderTemplate
+!srcextract.bin -src=final.go -name=renderTemplate
 </pre>
 
 <h2>Validation</h2>
@@ -610,7 +610,7 @@ Then we can create a global variable to store our validation regexp:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-noclosure.go -name=titleValidator
+!srcextract.bin -src=final-noclosure.go -name=titleValidator
 </pre>
 
 <p>
@@ -628,7 +628,7 @@ URL, and tests it against our <code>TitleValidator</code> expression:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-noclosure.go -name=getTitle
+!srcextract.bin -src=final-noclosure.go -name=getTitle
 </pre>
 
 <p>
@@ -643,11 +643,11 @@ Let's put a call to <code>getTitle</code> in each of the handlers:
 </p>
 
 <pre>
-!./srcextract.bin -src=final-noclosure.go -name=viewHandler
+!srcextract.bin -src=final-noclosure.go -name=viewHandler
 
-!./srcextract.bin -src=final-noclosure.go -name=editHandler
+!srcextract.bin -src=final-noclosure.go -name=editHandler
 
-!./srcextract.bin -src=final-noclosure.go -name=saveHandler
+!srcextract.bin -src=final-noclosure.go -name=saveHandler
 </pre>
 
 <h2>Introducing Function Literals and Closures</h2>
@@ -700,7 +700,7 @@ Now we can take the code from <code>getTitle</code> and use it here
 </p>
 
 <pre>
-!./srcextract.bin -src=final.go -name=makeHandler
+!srcextract.bin -src=final.go -name=makeHandler
 </pre>
 
 <p>
@@ -723,7 +723,7 @@ package:
 </p>
 
 <pre>
-!./srcextract.bin -src=final.go -name=main
+!srcextract.bin -src=final.go -name=main
 </pre>
 
 <p>
@@ -732,11 +732,11 @@ making them much simpler:
 </p>
 
 <pre>
-!./srcextract.bin -src=final.go -name=viewHandler
+!srcextract.bin -src=final.go -name=viewHandler
 
-!./srcextract.bin -src=final.go -name=editHandler
+!srcextract.bin -src=final.go -name=editHandler
 
-!./srcextract.bin -src=final.go -name=saveHandler
+!srcextract.bin -src=final.go -name=saveHandler
 </pre>
 
 <h2>Try it out!</h2>
diff --git a/src/run.bash b/src/run.bash
index a3e90cc4f8..aec4901090 100755
--- a/src/run.bash
+++ b/src/run.bash
@@ -91,7 +91,6 @@ time gomake ogle
 time ./run
 ) || exit $?
 
-[ "$GOHOSTOS" == windows ] ||
 (xcd ../doc/codelab/wiki
 gomake clean
 gomake
