commit b847d4cd2c2293d025720d4ae57b2e9578831d29
Author: Cuong Manh Le <cuong.manhle.vn@gmail.com>
Date:   Wed Feb 21 18:50:11 2024 +0700

    cmd/compile: fix early deadcode with label statement
    
    CL 517775 moved early deadcode into unified writer. with new way to
    handle dead code with label statement involved: any statements after
    terminating statement will be considered dead until next label
    statement.
    
    However, this is not safe, because code after label statement may still
    refer to dead statements between terminating and label statement.
    
    It's only safe to remove statements after terminating *and* label one.
    
    Fixes #65593
    
    Change-Id: Idb630165240931fad50789304a9e4535f51f56e2
    Reviewed-on: https://go-review.googlesource.com/c/go/+/565596
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Keith Randall <khr@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    Run-TryBot: Cuong Manh Le <cuong.manhle.vn@gmail.com>
    Auto-Submit: Cuong Manh Le <cuong.manhle.vn@gmail.com>
---
 src/cmd/compile/internal/noder/writer.go | 15 +++++++++++----
 test/fixedbugs/issue65593.go             | 21 +++++++++++++++++++++
 2 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/src/cmd/compile/internal/noder/writer.go b/src/cmd/compile/internal/noder/writer.go
index 641374e03c..87c54b9769 100644
--- a/src/cmd/compile/internal/noder/writer.go
+++ b/src/cmd/compile/internal/noder/writer.go
@@ -1217,10 +1217,17 @@ func (w *writer) stmt(stmt syntax.Stmt) {
 func (w *writer) stmts(stmts []syntax.Stmt) {
 	dead := false
 	w.Sync(pkgbits.SyncStmts)
-	for _, stmt := range stmts {
-		if dead {
-			// Any statements after a terminating statement are safe to
-			// omit, at least until the next labeled statement.
+	var lastLabel = -1
+	for i, stmt := range stmts {
+		if _, ok := stmt.(*syntax.LabeledStmt); ok {
+			lastLabel = i
+		}
+	}
+	for i, stmt := range stmts {
+		if dead && i > lastLabel {
+			// Any statements after a terminating and last label statement are safe to omit.
+			// Otherwise, code after label statement may refer to dead stmts between terminating
+			// and label statement, see issue #65593.
 			if _, ok := stmt.(*syntax.LabeledStmt); !ok {
 				continue
 			}
diff --git a/test/fixedbugs/issue65593.go b/test/fixedbugs/issue65593.go
new file mode 100644
index 0000000000..892a78122e
--- /dev/null
+++ b/test/fixedbugs/issue65593.go
@@ -0,0 +1,21 @@
+// compile
+
+// Copyright 2024 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package p
+
+const run = false
+
+func f() {
+	if !run {
+		return
+	}
+
+	messages := make(chan struct{}, 1)
+main:
+	for range messages {
+		break main
+	}
+}
