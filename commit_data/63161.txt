commit 7ba996874b541aa13b6bf1d1174b97372e0de20d
Author: Daniel McCarney <daniel@binaryparadox.net>
Date:   Fri May 16 13:08:16 2025 -0400

    crypto/tls: verify server chooses advertised curve
    
    When a crypto/tls client using TLS < 1.3 sends supported elliptic_curves
    in a client hello message the server must limit itself to choosing one
    of the supported options from our message. If we process a server key
    exchange message that chooses an unadvertised curve, abort the
    handshake w/ an error.
    
    Previously we would not note that the server chose a curve we didn't
    include in the client hello message, and would proceed with the
    handshake as long as the chosen curve was one that we've implemented.
    However, RFC 8422 5.1 makes it clear this is a server acting
    out-of-spec, as it says:
    
      If a server does not understand the Supported Elliptic Curves
      Extension, does not understand the Supported Point Formats Extension,
      or is unable to complete the ECC handshake while restricting itself
      to the enumerated curves and point formats, it MUST NOT negotiate the
      use of an ECC cipher suite.
    
    Changing our behaviour to enforce this also allows enabling the
    UnsupportedCurve BoGo test.
    
    Updates #72006
    
    Change-Id: I27a2cd231e4b8762b0d9e2dbd3d8ddd5b87fd5cc
    Reviewed-on: https://go-review.googlesource.com/c/go/+/673735
    TryBot-Bypass: Daniel McCarney <daniel@binaryparadox.net>
    Reviewed-by: David Chase <drchase@google.com>
    Auto-Submit: Daniel McCarney <daniel@binaryparadox.net>
    Reviewed-by: Filippo Valsorda <filippo@golang.org>
    Reviewed-by: Roland Shoemaker <roland@golang.org>

 src/crypto/tls/bogo_config.json | 1 -
 src/crypto/tls/key_agreement.go | 5 +++++
 2 files changed, 5 insertions(+), 1 deletion(-)
