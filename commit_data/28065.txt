commit 3479b065d43f2990ac12e7b00ddff6f63a876ca9
Author: Rick Hudson <rlh@golang.org>
Date:   Thu Feb 11 13:57:58 2016 -0500

    [dev.garbage] runtime: allocate directly from GC mark bits
    
    Instead of building a freelist from the mark bits generated
    by the GC this CL allocates directly from the mark bits.
    
    The approach moves the mark bits from the pointer/no pointer
    heap structures into their own per span data structures. The
    mark/allocation vectors consist of a single mark bit per
    object. Two vectors are maintained, one for allocation and
    one for the GC's mark phase. During the GC cycle's sweep
    phase the interpretation of the vectors is swapped. The
    mark vector becomes the allocation vector and the old
    allocation vector is cleared and becomes the mark vector that
    the next GC cycle will use.
    
    Marked entries in the allocation vector indicate that the
    object is not free. Each allocation vector maintains a boundary
    between areas of the span already allocated from and areas
    not yet allocated from. As objects are allocated this boundary
    is moved until it reaches the end of the span. At this point
    further allocations will be done from another span.
    
    Since we no longer sweep a span inspecting each freed object
    the responsibility for maintaining pointer/scalar bits in
    the heapBitMap containing is now the responsibility of the
    the routines doing the actual allocation.
    
    This CL is functionally complete and ready for performance
    tuning.
    
    Change-Id: I336e0fc21eef1066e0b68c7067cc71b9f3d50e04
    Reviewed-on: https://go-review.googlesource.com/19470
    Reviewed-by: Austin Clements <austin@google.com>

 src/runtime/heapdump.go |  10 +-
 src/runtime/malloc.go   |  36 ++++--
 src/runtime/mbitmap.go  | 306 ++++++++++++++++++++++++++++++------------------
 src/runtime/mcache.go   |  13 +-
 src/runtime/mcentral.go |  35 ++----
 src/runtime/mgcmark.go  |  10 +-
 src/runtime/mgcsweep.go |  72 ++++--------
 src/runtime/mheap.go    |  16 ++-
 src/runtime/stack.go    |   1 -
 9 files changed, 281 insertions(+), 218 deletions(-)
