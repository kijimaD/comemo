commit 66331532cd512ae2d506c7a120796c203c78099c
Author: Russ Cox <rsc@golang.org>
Date:   Wed Sep 12 17:37:39 2012 -0400

    net/rpc/jsonrpc: fix test error message
    
    Fixes #4041.
    
    R=golang-dev, bradfitz
    CC=golang-dev
    https://golang.org/cl/6495121
---
 src/pkg/net/rpc/jsonrpc/all_test.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/pkg/net/rpc/jsonrpc/all_test.go b/src/pkg/net/rpc/jsonrpc/all_test.go
index 71ae5fc519..3c7c4d48fa 100644
--- a/src/pkg/net/rpc/jsonrpc/all_test.go
+++ b/src/pkg/net/rpc/jsonrpc/all_test.go
@@ -131,7 +131,7 @@ func TestClient(t *testing.T) {
 		t.Errorf("Add: expected no error but got string %q", err.Error())
 	}
 	if reply.C != args.A+args.B {
-		t.Errorf("Add: expected %d got %d", reply.C, args.A+args.B)
+		t.Errorf("Add: got %d expected %d", reply.C, args.A+args.B)
 	}
 
 	args = &Args{7, 8}
@@ -141,7 +141,7 @@ func TestClient(t *testing.T) {
 		t.Errorf("Mul: expected no error but got string %q", err.Error())
 	}
 	if reply.C != args.A*args.B {
-		t.Errorf("Mul: expected %d got %d", reply.C, args.A*args.B)
+		t.Errorf("Mul: got %d expected %d", reply.C, args.A*args.B)
 	}
 
 	// Out of order.
@@ -156,7 +156,7 @@ func TestClient(t *testing.T) {
 		t.Errorf("Add: expected no error but got string %q", addCall.Error.Error())
 	}
 	if addReply.C != args.A+args.B {
-		t.Errorf("Add: expected %d got %d", addReply.C, args.A+args.B)
+		t.Errorf("Add: got %d expected %d", addReply.C, args.A+args.B)
 	}
 
 	mulCall = <-mulCall.Done
@@ -164,7 +164,7 @@ func TestClient(t *testing.T) {
 		t.Errorf("Mul: expected no error but got string %q", mulCall.Error.Error())
 	}
 	if mulReply.C != args.A*args.B {
-		t.Errorf("Mul: expected %d got %d", mulReply.C, args.A*args.B)
+		t.Errorf("Mul: got %d expected %d", mulReply.C, args.A*args.B)
 	}
 
 	// Error test
