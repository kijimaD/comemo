commit 49b7af8a308c24b1e3f6e83ded9e97513316c8d5
Author: Russ Cox <rsc@golang.org>
Date:   Tue Jan 24 14:59:22 2017 -0500

    [dev.typealias] reflect: add test for type aliases
    
    For #18130.
    
    Change-Id: Idd77cb391178c185227cfd779c70fec16351f825
    Reviewed-on: https://go-review.googlesource.com/35733
    Run-TryBot: Russ Cox <rsc@golang.org>
    Reviewed-by: Robert Griesemer <gri@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/reflect/all_test.go | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/src/reflect/all_test.go b/src/reflect/all_test.go
index ed3ad33835..1fed972eea 100644
--- a/src/reflect/all_test.go
+++ b/src/reflect/all_test.go
@@ -5985,6 +5985,11 @@ func TestUnaddressableField(t *testing.T) {
 	})
 }
 
+
+type Tint int
+
+type Tint2 = Tint
+
 type Talias1 struct {
 	byte
 	uint8
@@ -5993,6 +5998,11 @@ type Talias1 struct {
 	rune
 }
 
+type Talias2 struct {
+	Tint
+	Tint2
+}
+
 func TestAliasNames(t *testing.T) {
 	t1 := Talias1{byte: 1, uint8: 2, int: 3, int32: 4, rune: 5}
 	out := fmt.Sprintf("%#v", t1)
@@ -6000,4 +6010,12 @@ func TestAliasNames(t *testing.T) {
 	if out != want {
 		t.Errorf("Talias1 print:\nhave: %s\nwant: %s", out, want)
 	}
+
+	t2 := Talias2{Tint: 1, Tint2: 2}
+	out = fmt.Sprintf("%#v", t2)
+	want = "reflect_test.Talias2{Tint:1, Tint2:2}"
+	if out != want {
+		t.Errorf("Talias2 print:\nhave: %s\nwant: %s", out, want)
+	}
 }
+
