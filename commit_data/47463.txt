commit e58fb90c753ce8ac1ccd6e26035e7ec0f4f108bc
Author: Emmanuel T Odeke <emmanuel@orijtech.com>
Date:   Sun Mar 7 14:56:52 2021 -0800

    net/http: make ExampleGet show StatusCode checks for non-1XX,2XX responses
    
    Updates ExampleGet to show how to handle bad responses with non-1XX,2XX
    status codes. Given that the canonical examples are copied, we need
    to have them properly check against failures. This is a bug I've seen
    often in the wild, that's exacerbated when for example unmarshalling
    JSON or even protobufs, and no errors are returned by the decoders,
    so code fails silently after making a request for example to a gateway
    that they were unauthorized to access.
    
    Fixes #39778
    
    Change-Id: I1cd688f2fab47581c8cf228235d3662b4c8e4315
    Reviewed-on: https://go-review.googlesource.com/c/go/+/299609
    Trust: Emmanuel Odeke <emmanuel@orijtech.com>
    Run-TryBot: Emmanuel Odeke <emmanuel@orijtech.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Damien Neil <dneil@google.com>
---
 src/net/http/example_test.go | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/src/net/http/example_test.go b/src/net/http/example_test.go
index c677d52238..2f411d1d2e 100644
--- a/src/net/http/example_test.go
+++ b/src/net/http/example_test.go
@@ -45,12 +45,15 @@ func ExampleGet() {
 	if err != nil {
 		log.Fatal(err)
 	}
-	robots, err := io.ReadAll(res.Body)
+	body, err := io.ReadAll(res.Body)
 	res.Body.Close()
+	if res.StatusCode > 299 {
+		log.Fatalf("Response failed with status code: %d and\nbody: %s\n", res.StatusCode, body)
+	}
 	if err != nil {
 		log.Fatal(err)
 	}
-	fmt.Printf("%s", robots)
+	fmt.Printf("%s", body)
 }
 
 func ExampleFileServer() {
