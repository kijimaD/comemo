commit 916ad62d5182bf2ecc006edf5d7fac874f4e5fa7
Author: Michael Munday <mike.munday@ibm.com>
Date:   Fri Oct 20 10:21:05 2017 -0400

    cmd/go: skip gold-specific part of TestNoteReading if gold is unavailable
    
    The test already contained logic to do this however it did not match
    the error "cannot find 'ld'" which appears to be how gcc fails when
    ld.gold is missing.
    
    Fixes #22340.
    
    Change-Id: I841248cc489b8fa72bc00a95000ad405f9ef8a4f
    Reviewed-on: https://go-review.googlesource.com/72111
    Run-TryBot: Michael Munday <mike.munday@ibm.com>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
---
 src/cmd/go/note_test.go | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/cmd/go/note_test.go b/src/cmd/go/note_test.go
index 13ccfc74c0..d198138d83 100644
--- a/src/cmd/go/note_test.go
+++ b/src/cmd/go/note_test.go
@@ -54,10 +54,14 @@ func TestNoteReading(t *testing.T) {
 		// Test while forcing use of the gold linker, since in the past
 		// we've had trouble reading the notes generated by gold.
 		err := tg.doRun([]string{"build", "-ldflags", "-buildid=" + buildID + " -linkmode=external -extldflags=-fuse-ld=gold", "-o", tg.path("hello3.exe"), tg.path("hello.go")})
-		if err != nil && (tg.grepCountBoth("invalid linker") > 0 || tg.grepCountBoth("gold") > 0) {
-			// It's not an error if gold isn't there.
-			t.Log("skipping gold test")
-			break
+		if err != nil {
+			if tg.grepCountBoth("(invalid linker|gold|cannot find 'ld')") > 0 {
+				// It's not an error if gold isn't there. gcc claims it "cannot find 'ld'" if
+				// ld.gold is missing, see issue #22340.
+				t.Log("skipping gold test")
+				break
+			}
+			t.Fatalf("building hello binary: %v", err)
 		}
 		id, err = buildid.ReadFile(tg.path("hello3.exe"))
 		if err != nil {
