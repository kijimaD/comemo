commit 754216d1d7642e8f254d0c8b8cd47ce3426ea051
Author: Rob Pike <r@golang.org>
Date:   Wed Jan 20 16:08:31 2016 -0800

    text/template: fix documentation for pipelines
    
    The header was in the wrong place, so the definition of a pipeline
    was not in the section labeled "Pipelines".
    
    Fixes #13972
    
    Change-Id: Ibca791a4511ca112047b57091c391f6e959fdd78
    Reviewed-on: https://go-review.googlesource.com/18775
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
    Reviewed-by: Andrew Gerrand <adg@golang.org>
---
 src/text/template/doc.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/text/template/doc.go b/src/text/template/doc.go
index 6c60091bc5..df8c95f8c8 100644
--- a/src/text/template/doc.go
+++ b/src/text/template/doc.go
@@ -64,7 +64,7 @@ space, horizontal tab, carriage return, and newline.
 Actions
 
 Here is the list of actions. "Arguments" and "pipelines" are evaluations of
-data, defined in detail below.
+data, defined in detail in the corresponding sections that follow.
 
 */
 //	{{/* a comment */}}
@@ -200,6 +200,8 @@ field of a struct, the function is not invoked automatically, but it
 can be used as a truth value for an if action and the like. To invoke
 it, use the call function, defined below.
 
+Pipelines
+
 A pipeline is a possibly chained sequence of "commands". A command is a simple
 value (argument) or a function or method call, possibly with multiple arguments:
 
@@ -217,8 +219,6 @@ value (argument) or a function or method call, possibly with multiple arguments:
 			function(Argument1, etc.)
 		Functions and function names are described below.
 
-Pipelines
-
 A pipeline may be "chained" by separating a sequence of commands with pipeline
 characters '|'. In a chained pipeline, the result of the each command is
 passed as the last argument of the following command. The output of the final
