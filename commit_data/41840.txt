commit e071cc4873d6b22c4ffe66f541bc65698b86afe2
Author: Josh Bleecher Snyder <josharian@gmail.com>
Date:   Mon Oct 28 08:32:06 2019 -0700

    cmd/compile: update comment about OpPhi argLength
    
    We use -1 for Phi argLength, not "a really large number".
    
    Change-Id: I5d4fa364c22c3cf40213f2368a9a20de7e989aac
    Reviewed-on: https://go-review.googlesource.com/c/go/+/203883
    Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
---
 src/cmd/compile/internal/ssa/gen/genericOps.go | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/cmd/compile/internal/ssa/gen/genericOps.go b/src/cmd/compile/internal/ssa/gen/genericOps.go
index 7bd79312e3..748805f369 100644
--- a/src/cmd/compile/internal/ssa/gen/genericOps.go
+++ b/src/cmd/compile/internal/ssa/gen/genericOps.go
@@ -316,8 +316,7 @@ var genericOps = []opData{
 	// See section 7.2 in ieee754.
 	{name: "Fma", argLength: 3}, // compute (a*b)+c without intermediate rounding
 
-	// Data movement, max argument length for Phi is indefinite so just pick
-	// a really large number
+	// Data movement. Max argument length for Phi is indefinite.
 	{name: "Phi", argLength: -1, zeroWidth: true}, // select an argument based on which predecessor block we came from
 	{name: "Copy", argLength: 1},                  // output = arg0
 	// Convert converts between pointers and integers.
