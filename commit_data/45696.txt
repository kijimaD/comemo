commit 39da9ae5130afa58f8b9e4ea609a57d516bd78db
Author: Rob Findley <rfindley@google.com>
Date:   Thu May 6 22:28:37 2021 -0400

    go/types: ensure that Named.check is nilled out once it is expanded
    
    To support lazy expansion of defined types, *Named holds on to a
    *Checker field, which can pin the *Checker in memory. This can have
    meaningful memory implications for applications that keep type
    information around.
    
    Ensure that the Checker field is nilled out for any Named types that are
    instantiated during the type checking pass, by deferring a clean up to
    'later' boundaries.
    
    In testing this almost exactly offset the ~6% memory footprint increase
    I observed with 1.17.
    
    Fixes #45580
    
    Change-Id: I8aa5bb777573a924afe36e79fa65f8729336bceb
    Reviewed-on: https://go-review.googlesource.com/c/go/+/318849
    Trust: Robert Findley <rfindley@google.com>
    Trust: Robert Griesemer <gri@golang.org>
    Run-TryBot: Robert Findley <rfindley@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Robert Griesemer <gri@golang.org>

 src/go/types/decl.go     | 53 ++++++++++++++++++++++++++++++++++++------------
 src/go/types/sanitize.go |  3 +++
 src/go/types/type.go     | 17 +++++++++++++++-
 3 files changed, 59 insertions(+), 14 deletions(-)
