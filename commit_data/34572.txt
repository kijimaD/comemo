commit 541bf9f8ea458560353acf78d940c69f5080750a
Author: Mikio Hara <mikioh.mikioh@gmail.com>
Date:   Fri Oct 27 18:13:17 2017 +0900

    net/smtp: don't call testing.T.Fatal{,f} from goroutines not running Test function
    
    Also replaces verbs for error message from %s to %v. In general, low
    level IO APIs return an error value containing non-string types and
    there's no guarantee that all the types implement fmt.Stringer
    interface.
    
    Change-Id: I8a6e2a80d5c721c772a83b9556bac16556eaa771
    Reviewed-on: https://go-review.googlesource.com/73931
    Run-TryBot: Mikio Hara <mikioh.mikioh@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/net/smtp/smtp_test.go | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/net/smtp/smtp_test.go b/src/net/smtp/smtp_test.go
index e050e2a9fa..d489922597 100644
--- a/src/net/smtp/smtp_test.go
+++ b/src/net/smtp/smtp_test.go
@@ -385,21 +385,21 @@ func TestNewClientWithTLS(t *testing.T) {
 	if err != nil {
 		ln, err = tls.Listen("tcp", "[::1]:0", &config)
 		if err != nil {
-			t.Fatalf("server: listen: %s", err)
+			t.Fatalf("server: listen: %v", err)
 		}
 	}
 
 	go func() {
 		conn, err := ln.Accept()
 		if err != nil {
-			t.Fatalf("server: accept: %s", err)
+			t.Errorf("server: accept: %v", err)
 			return
 		}
 		defer conn.Close()
 
 		_, err = conn.Write([]byte("220 SIGNS\r\n"))
 		if err != nil {
-			t.Fatalf("server: write: %s", err)
+			t.Errorf("server: write: %v", err)
 			return
 		}
 	}()
@@ -407,13 +407,13 @@ func TestNewClientWithTLS(t *testing.T) {
 	config.InsecureSkipVerify = true
 	conn, err := tls.Dial("tcp", ln.Addr().String(), &config)
 	if err != nil {
-		t.Fatalf("client: dial: %s", err)
+		t.Fatalf("client: dial: %v", err)
 	}
 	defer conn.Close()
 
 	client, err := NewClient(conn, ln.Addr().String())
 	if err != nil {
-		t.Fatalf("smtp: newclient: %s", err)
+		t.Fatalf("smtp: newclient: %v", err)
 	}
 	if !client.tls {
 		t.Errorf("client.tls Got: %t Expected: %t", client.tls, true)
