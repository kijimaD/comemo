commit e45141b86cad1b907b4193dd7401630acd55d5d0
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Mon Apr 14 17:20:30 2014 -0700

    os/exec: quiet distracting log output during test
    
    TLS handshake failures didn't use to log, but do in Go 1.3.
    Shut it up so the actual failure can be seen in e.g.
    http://build.golang.org/log/ede7e12362a941d93bf1fe21db9208a3e298029e
    
    LGTM=adg
    R=adg
    CC=golang-codereviews
    https://golang.org/cl/87870043
---
 src/pkg/os/exec/exec_test.go | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/src/pkg/os/exec/exec_test.go b/src/pkg/os/exec/exec_test.go
index f237312280..e4ad7d3157 100644
--- a/src/pkg/os/exec/exec_test.go
+++ b/src/pkg/os/exec/exec_test.go
@@ -13,6 +13,7 @@ import (
 	"fmt"
 	"io"
 	"io/ioutil"
+	"log"
 	"net"
 	"net/http"
 	"net/http/httptest"
@@ -401,11 +402,15 @@ func TestExtraFiles(t *testing.T) {
 
 	// Force TLS root certs to be loaded (which might involve
 	// cgo), to make sure none of that potential C code leaks fds.
-	ts := httptest.NewTLSServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
-		w.Write([]byte("Hello"))
-	}))
+	ts := httptest.NewUnstartedServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {}))
+	// quiet expected TLS handshake error "remote error: bad certificate"
+	ts.Config.ErrorLog = log.New(ioutil.Discard, "", 0)
+	ts.StartTLS()
 	defer ts.Close()
-	http.Get(ts.URL) // ignore result; just calling to force root cert loading
+	_, err = http.Get(ts.URL)
+	if err == nil {
+		t.Errorf("success trying to fetch %s; want an error", ts.URL)
+	}
 
 	tf, err := ioutil.TempFile("", "")
 	if err != nil {
