commit b03dce927b30db5dc36747d009ffeb435eea9c20
Author: Emmanuel Odeke <emm.odeke@gmail.com>
Date:   Wed Jan 4 19:21:13 2017 -0700

    cmd/compile: avoid n.Right nil dereference on non-existent interface methods
    
    Fixes #18392.
    
    Avoid nil dereferencing n.Right when dealing with non-existent
    self referenced interface methods e.g.
    type A interface{
      Fn(A.Fn)
    }
    
    Instead, infer the symbol name from n.Sym itself.
    
    Change-Id: I60d5f8988e7318693e5c8da031285d8d7347b771
    Reviewed-on: https://go-review.googlesource.com/34817
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
---
 src/cmd/compile/internal/gc/typecheck.go |  2 +-
 test/fixedbugs/issue18392.go             | 11 +++++++++++
 2 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/src/cmd/compile/internal/gc/typecheck.go b/src/cmd/compile/internal/gc/typecheck.go
index 23c60fa0d0..5ec1c9e2f2 100644
--- a/src/cmd/compile/internal/gc/typecheck.go
+++ b/src/cmd/compile/internal/gc/typecheck.go
@@ -859,7 +859,7 @@ OpSwitch:
 			}
 
 			if n.Type.Etype != TFUNC || !n.IsMethod() {
-				yyerror("type %v has no method %S", n.Left.Type, n.Right.Sym)
+				yyerror("type %v has no method %S", n.Left.Type, n.Sym)
 				n.Type = nil
 				return n
 			}
diff --git a/test/fixedbugs/issue18392.go b/test/fixedbugs/issue18392.go
new file mode 100644
index 0000000000..ad64238983
--- /dev/null
+++ b/test/fixedbugs/issue18392.go
@@ -0,0 +1,11 @@
+// errorcheck
+
+// Copyright 2017 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package p
+
+type A interface {
+	Fn(A.Fn) // ERROR "type A has no method A.Fn"
+}
