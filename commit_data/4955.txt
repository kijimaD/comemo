commit 8fbd5f8a8273054e4a1cdae39b26f0a34534b01c
Author: Russ Cox <rsc@golang.org>
Date:   Thu Feb 25 16:43:43 2010 -0800

    use []byte("abc") in place of []byte{'a', 'b', 'c'}
    
    R=gri
    CC=golang-dev
    https://golang.org/cl/223059
---
 src/pkg/asn1/asn1_test.go     |  2 +-
 src/pkg/fmt/print.go          | 18 +++++++++---------
 src/pkg/go/ast/filter.go      |  2 +-
 src/pkg/go/scanner/scanner.go |  2 +-
 4 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/src/pkg/asn1/asn1_test.go b/src/pkg/asn1/asn1_test.go
index bb380ca0b8..f488663ba0 100644
--- a/src/pkg/asn1/asn1_test.go
+++ b/src/pkg/asn1/asn1_test.go
@@ -276,7 +276,7 @@ var unmarshalTestData []unmarshalTest = []unmarshalTest{
 	unmarshalTest{[]byte{0x02, 0x01, 0x10}, newInt(16)},
 	unmarshalTest{[]byte{0x13, 0x04, 't', 'e', 's', 't'}, newString("test")},
 	unmarshalTest{[]byte{0x16, 0x04, 't', 'e', 's', 't'}, newString("test")},
-	unmarshalTest{[]byte{0x16, 0x04, 't', 'e', 's', 't'}, &RawValue{0, 22, false, []byte{'t', 'e', 's', 't'}}},
+	unmarshalTest{[]byte{0x16, 0x04, 't', 'e', 's', 't'}, &RawValue{0, 22, false, []byte("test")}},
 	unmarshalTest{[]byte{0x04, 0x04, 1, 2, 3, 4}, &RawValue{0, 4, false, []byte{1, 2, 3, 4}}},
 	unmarshalTest{[]byte{0x30, 0x03, 0x81, 0x01, 0x01}, &TestContextSpecificTags{1}},
 	unmarshalTest{[]byte{0x30, 0x08, 0xa1, 0x03, 0x02, 0x01, 0x01, 0x02, 0x01, 0x02}, &TestContextSpecificTags2{1, 2}},
diff --git a/src/pkg/fmt/print.go b/src/pkg/fmt/print.go
index ffe187a313..ecb8adbc37 100644
--- a/src/pkg/fmt/print.go
+++ b/src/pkg/fmt/print.go
@@ -87,15 +87,15 @@ import (
 // Some constants in the form of bytes, to avoid string overhead.
 // Needlessly fastidious, I suppose.
 var (
-	trueBytes       = []byte{'t', 'r', 'u', 'e'}
-	falseBytes      = []byte{'f', 'a', 'l', 's', 'e'}
-	commaSpaceBytes = []byte{',', ' '}
-	nilAngleBytes   = []byte{'<', 'n', 'i', 'l', '>'}
-	nilParenBytes   = []byte{'(', 'n', 'i', 'l', ')'}
-	nilBytes        = []byte{'n', 'i', 'l'}
-	mapBytes        = []byte{'m', 'a', 'p', '['}
-	missingBytes    = []byte{'m', 'i', 's', 's', 'i', 'n', 'g'}
-	extraBytes      = []byte{'?', '(', 'e', 'x', 't', 'r', 'a', ' '}
+	trueBytes       = []byte("true")
+	falseBytes      = []byte("false")
+	commaSpaceBytes = []byte(", ")
+	nilAngleBytes   = []byte("<nil>")
+	nilParenBytes   = []byte("(nil)")
+	nilBytes        = []byte("nil")
+	mapBytes        = []byte("map[")
+	missingBytes    = []byte("missing")
+	extraBytes      = []byte("?(extra ")
 )
 
 // State represents the printer state passed to custom formatters.
diff --git a/src/pkg/go/ast/filter.go b/src/pkg/go/ast/filter.go
index bad1a58b41..2646ea886b 100644
--- a/src/pkg/go/ast/filter.go
+++ b/src/pkg/go/ast/filter.go
@@ -192,7 +192,7 @@ func PackageExports(pkg *Package) bool {
 // separator is an empty //-style comment that is interspersed between
 // different comment groups when they are concatenated into a single group
 //
-var separator = &Comment{noPos, []byte{'/', '/'}}
+var separator = &Comment{noPos, []byte("//")}
 
 
 // MergePackageFiles creates a file AST by merging the ASTs of the
diff --git a/src/pkg/go/scanner/scanner.go b/src/pkg/go/scanner/scanner.go
index a59212011e..dc2f35939a 100644
--- a/src/pkg/go/scanner/scanner.go
+++ b/src/pkg/go/scanner/scanner.go
@@ -145,7 +145,7 @@ func (S *Scanner) expect(ch int) {
 }
 
 
-var prefix = []byte{'l', 'i', 'n', 'e', ' '} // "line "
+var prefix = []byte("line ")
 
 func (S *Scanner) scanComment(pos token.Position) {
 	// first '/' already consumed
