commit f07cbc7f88e5e15e41ec8b9c2b850d2179e0834e
Author: Cherry Zhang <cherryyz@google.com>
Date:   Thu Oct 31 10:32:31 2019 -0400

    runtime: don't fetch G from signal stack when using cgo
    
    When using cgo, we save G to TLS, and when a signal happens, we
    load G from TLS in sigtramp. This should give us a valid G. Don't
    try to fetch from the signal stack. In particular, C code may
    change the signal stack or call our signal handler directly (e.g.
    TSAN), so we are not necessarily running on the original gsignal
    stack where we saved G.
    
    Also skip saving G on the signal stack when using cgo.
    
    Updates #35249.
    
    Change-Id: I40749ce6682709bd4ebfdfd9f23bd0f317fc197d
    Reviewed-on: https://go-review.googlesource.com/c/go/+/204519
    Reviewed-by: Ian Lance Taylor <iant@golang.org>

 src/runtime/signal_unix.go    |  8 +++++---
 src/runtime/sys_linux_arm.s   | 30 ++++++++++++++++++++++--------
 src/runtime/sys_linux_arm64.s | 26 ++++++++++++++++++++------
 3 files changed, 47 insertions(+), 17 deletions(-)
