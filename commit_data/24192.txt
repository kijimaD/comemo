commit 7126da2fd5c922ea2dd4ba3fe5578aa1e17ce510
Author: Russ Cox <rsc@golang.org>
Date:   Wed Jul 15 00:51:24 2015 -0400

    cmd/go: fix build
    
    Failures noted by dashboard.
    
    Change-Id: I22f90120c6687b64b9efff9df7a7fa8f26d24bac
    Reviewed-on: https://go-review.googlesource.com/12207
    Reviewed-by: Russ Cox <rsc@golang.org>
---
 src/cmd/go/build.go                           |  2 +-
 src/cmd/go/go_test.go                         | 11 +++++++++--
 src/cmd/go/testdata/src/testdep/p1/p1.go      |  1 +
 src/cmd/go/testdata/src/testdep/p1/p1_test.go |  3 +++
 src/cmd/go/testdata/src/testdep/p2/p2.go      |  3 +++
 src/cmd/go/testdata/src/testdep/p3/p3.go      |  3 +++
 6 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/src/cmd/go/build.go b/src/cmd/go/build.go
index 54944a6340..2d2f10dc36 100644
--- a/src/cmd/go/build.go
+++ b/src/cmd/go/build.go
@@ -719,7 +719,7 @@ func goFilesPackage(gofiles []string) *Package {
 		}
 		dir1, _ := filepath.Split(file)
 		if dir1 == "" {
-			dir1 = "."
+			dir1 = "./"
 		}
 		if dir == "" {
 			dir = dir1
diff --git a/src/cmd/go/go_test.go b/src/cmd/go/go_test.go
index 1e7388467b..f3ab829729 100644
--- a/src/cmd/go/go_test.go
+++ b/src/cmd/go/go_test.go
@@ -2081,9 +2081,9 @@ func TestGoRunDirs(t *testing.T) {
 	defer tg.cleanup()
 	tg.cd("testdata/rundir")
 	tg.runFail("run", "x.go", "sub/sub.go")
-	tg.grepStderr("named files must all be in one directory; have . and sub/", "wrong output")
+	tg.grepStderr("named files must all be in one directory; have ./ and sub/", "wrong output")
 	tg.runFail("run", "sub/sub.go", "x.go")
-	tg.grepStderr("named files must all be in one directory; have sub/ and .", "wrong output")
+	tg.grepStderr("named files must all be in one directory; have sub/ and ./", "wrong output")
 }
 
 func TestGoInstallPkgdir(t *testing.T) {
@@ -2099,6 +2099,13 @@ func TestGoInstallPkgdir(t *testing.T) {
 }
 
 func TestGoTestRaceInstallCgo(t *testing.T) {
+	switch sys := runtime.GOOS + "/" + runtime.GOARCH; sys {
+	case "darwin/amd64", "freebsd/amd64", "linux/amd64", "windows/amd64":
+		// ok
+	default:
+		t.Skip("no race detector on %s", sys)
+	}
+
 	// golang.org/issue/10500.
 	// This used to install a race-enabled cgo.
 	tg := testgo(t)
diff --git a/src/cmd/go/testdata/src/testdep/p1/p1.go b/src/cmd/go/testdata/src/testdep/p1/p1.go
new file mode 100644
index 0000000000..a457035a43
--- /dev/null
+++ b/src/cmd/go/testdata/src/testdep/p1/p1.go
@@ -0,0 +1 @@
+package p1
diff --git a/src/cmd/go/testdata/src/testdep/p1/p1_test.go b/src/cmd/go/testdata/src/testdep/p1/p1_test.go
new file mode 100644
index 0000000000..8be7533442
--- /dev/null
+++ b/src/cmd/go/testdata/src/testdep/p1/p1_test.go
@@ -0,0 +1,3 @@
+package p1
+
+import _ "testdep/p2"
diff --git a/src/cmd/go/testdata/src/testdep/p2/p2.go b/src/cmd/go/testdata/src/testdep/p2/p2.go
new file mode 100644
index 0000000000..15ba2eacea
--- /dev/null
+++ b/src/cmd/go/testdata/src/testdep/p2/p2.go
@@ -0,0 +1,3 @@
+package p2
+
+import _ "testdep/p3"
diff --git a/src/cmd/go/testdata/src/testdep/p3/p3.go b/src/cmd/go/testdata/src/testdep/p3/p3.go
new file mode 100644
index 0000000000..0219e7fae5
--- /dev/null
+++ b/src/cmd/go/testdata/src/testdep/p3/p3.go
@@ -0,0 +1,3 @@
+// +build ignore
+
+package ignored
