commit 5b84d50038ae852e638631b0a7e71c719e41d240
Author: Than McIntosh <thanm@google.com>
Date:   Mon Dec 18 16:00:06 2023 -0500

    test: skip rangegen.go on 32-bit platforms
    
    Add a skip for this test that effectively disables it for 32-bit platforms,
    so as to not run into timeouts or OOMs on smaller machines.
    
    Fixes #64789.
    
    Change-Id: I2d428e1dccae62b8bb1a69c5f95699692a282bbb
    Reviewed-on: https://go-review.googlesource.com/c/go/+/550975
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Carlos Amedee <carlos@golang.org>
---
 test/rangegen.go | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/test/rangegen.go b/test/rangegen.go
index bdcf099862..8231c64db7 100644
--- a/test/rangegen.go
+++ b/test/rangegen.go
@@ -25,6 +25,7 @@ import (
 	"bytes"
 	"fmt"
 	"log"
+	"math/bits"
 	"os"
 	"os/exec"
 	"strings"
@@ -37,6 +38,13 @@ func main() {
 	log.SetFlags(0)
 	log.SetPrefix("rangegen: ")
 
+	if !long && bits.UintSize == 32 {
+		// Skip this test on 32-bit platforms, where it seems to
+		// cause timeouts and build problems.
+		skip()
+		return
+	}
+
 	b := new(bytes.Buffer)
 	tests := ""
 	flush := func(force bool) {
@@ -331,3 +339,12 @@ func run(f func(*output, int)int, i int) *output {
 }
 
 `
+
+func skip() {
+	const code = `
+package main
+func main() {
+}
+`
+	fmt.Printf("%s\n", code)
+}
