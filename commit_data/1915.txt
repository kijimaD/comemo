commit e5ba266e938344c4e12ef601efa6d7376dbfd44e
Author: Russ Cox <rsc@golang.org>
Date:   Mon Mar 30 17:15:54 2009 -0700

    delete dregs: inarggen, genpanic, regret
    
    R=ken
    OCL=26916
    CL=26918
---
 src/cmd/6g/cgen.c  | 10 ----------
 src/cmd/6g/gen.c   | 26 --------------------------
 src/cmd/6g/gg.h    |  3 ---
 src/cmd/6g/gsubr.c |  8 --------
 4 files changed, 47 deletions(-)

diff --git a/src/cmd/6g/cgen.c b/src/cmd/6g/cgen.c
index 162617dcaa..5a08a15223 100644
--- a/src/cmd/6g/cgen.c
+++ b/src/cmd/6g/cgen.c
@@ -574,16 +574,6 @@ ret:
 	;
 }
 
-vlong
-fieldoffset(Type *t, Node *n)
-{
-	if(t->etype != TSTRUCT)
-		fatal("fieldoffset: not struct %lT", t);
-	if(n->op != ONAME)
-		fatal("fieldoffset: not field name %N", n);
-	return 0;
-}
-
 /*
  * generate:
  *	newreg = &n;
diff --git a/src/cmd/6g/gen.c b/src/cmd/6g/gen.c
index 46c542aafd..bf7c32d55b 100644
--- a/src/cmd/6g/gen.c
+++ b/src/cmd/6g/gen.c
@@ -79,8 +79,6 @@ compile(Node *fn)
 	ptxt = gins(ATEXT, curfn->nname, &nod1);
 	afunclit(&ptxt->from);
 
-//	inarggen();
-
 	ginit();
 	gen(curfn->enter);
 	gen(curfn->nbody);
@@ -190,10 +188,6 @@ loop:
 		n = n->right;
 		goto loop;
 
-	case OPANIC:
-		genpanic();
-		break;
-
 	case OCASE:
 	case OFALL:
 	case OXCASE:
@@ -375,26 +369,6 @@ ret:
 	lineno = lno;
 }
 
-void
-inarggen(void)
-{
-	fatal("inarggen");
-}
-
-void
-genpanic(void)
-{
-	Node n1, n2;
-	Prog *p;
-
-	nodconst(&n1, types[TINT64], 0xf0);
-	nodreg(&n2, types[TINT64], D_AX);
-	gins(AMOVL, &n1, &n2);
-	p = pc;
-	gins(AMOVQ, &n2, N);
-	p->to.type = D_INDIR+D_AX;
-}
-
 /*
  * compute total size of f's in/out arguments.
  */
diff --git a/src/cmd/6g/gg.h b/src/cmd/6g/gg.h
index 7fe47e1f58..1aad145c13 100644
--- a/src/cmd/6g/gg.h
+++ b/src/cmd/6g/gg.h
@@ -119,7 +119,6 @@ void	compile(Node*);
 void	proglist(void);
 void	gen(Node*);
 Node*	lookdot(Node*, Node*, int);
-void	inarggen(void);
 void	cgen_as(Node*, Node*);
 void	cgen_asop(Node*);
 void	cgen_ret(Node*);
@@ -132,7 +131,6 @@ void	cgen_div(int, Node*, Node*, Node*);
 void	cgen_bmul(int, Node*, Node*, Node*);
 void	cgen_shift(int, Node*, Node*, Node*);
 void	cgen_dcl(Node*);
-void	genpanic(void);
 int	needconvert(Type*, Type*);
 void	genconv(Type*, Type*);
 void	allocparams(void);
@@ -178,7 +176,6 @@ void	ginit(void);
 void	gclean(void);
 void	regalloc(Node*, Type*, Node*);
 void	regfree(Node*);
-void	regret(Node*, Type*);
 Node*	nodarg(Type*, int);
 void	nodreg(Node*, Type*, int);
 void	nodindreg(Node*, Type*, int);
diff --git a/src/cmd/6g/gsubr.c b/src/cmd/6g/gsubr.c
index c0822644e7..da0f3256b7 100644
--- a/src/cmd/6g/gsubr.c
+++ b/src/cmd/6g/gsubr.c
@@ -239,14 +239,6 @@ regfree(Node *n)
 	reg[i]--;
 }
 
-void
-regret(Node *n, Type *t)
-{
-	if(t == T)
-		fatal("regret: t nil");
-	fatal("regret");
-}
-
 /*
  * initialize n to be register r of type t.
  */
