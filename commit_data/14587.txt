commit 45fe306ac85dae6fa599b51f215090b73cf75bad
Author: RÃ©my Oudompheng <oudomphe@phare.normalesup.org>
Date:   Sun Dec 9 19:10:52 2012 +0100

    cmd/[568]g: recycle ONAME nodes used in regopt to denote registers.
    
    The reported decrease in memory usage is about 5%.
    
    R=golang-dev, dave, rsc
    CC=golang-dev
    https://golang.org/cl/6902064
---
 src/cmd/5g/reg.c | 9 +++++++--
 src/cmd/6g/reg.c | 9 +++++++--
 src/cmd/8g/reg.c | 9 +++++++--
 3 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/src/cmd/5g/reg.c b/src/cmd/5g/reg.c
index 0181ba4ba4..100cff2dee 100644
--- a/src/cmd/5g/reg.c
+++ b/src/cmd/5g/reg.c
@@ -170,6 +170,8 @@ static char* regname[] = {
 	".F15",
 };
 
+static Node* regnodes[NREGVAR];
+
 void
 regopt(Prog *firstp)
 {
@@ -216,8 +218,11 @@ regopt(Prog *firstp)
 	 */
 	nvar = NREGVAR;
 	memset(var, 0, NREGVAR*sizeof var[0]);
-	for(i=0; i<NREGVAR; i++)
-		var[i].node = newname(lookup(regname[i]));
+	for(i=0; i<NREGVAR; i++) {
+		if(regnodes[i] == N)
+			regnodes[i] = newname(lookup(regname[i]));
+		var[i].node = regnodes[i];
+	}
 
 	regbits = RtoB(REGSP)|RtoB(REGLINK)|RtoB(REGPC);
 	for(z=0; z<BITS; z++) {
diff --git a/src/cmd/6g/reg.c b/src/cmd/6g/reg.c
index f9d0b11aec..c92630f07c 100644
--- a/src/cmd/6g/reg.c
+++ b/src/cmd/6g/reg.c
@@ -151,6 +151,8 @@ static char* regname[] = {
 	".X15",
 };
 
+static Node* regnodes[NREGVAR];
+
 static void fixjmp(Prog*);
 
 void
@@ -191,8 +193,11 @@ regopt(Prog *firstp)
 	 */
 	nvar = NREGVAR;
 	memset(var, 0, NREGVAR*sizeof var[0]);
-	for(i=0; i<NREGVAR; i++)
-		var[i].node = newname(lookup(regname[i]));
+	for(i=0; i<NREGVAR; i++) {
+		if(regnodes[i] == N)
+			regnodes[i] = newname(lookup(regname[i]));
+		var[i].node = regnodes[i];
+	}
 
 	regbits = RtoB(D_SP);
 	for(z=0; z<BITS; z++) {
diff --git a/src/cmd/8g/reg.c b/src/cmd/8g/reg.c
index bb942a16d2..aa2f6fde18 100644
--- a/src/cmd/8g/reg.c
+++ b/src/cmd/8g/reg.c
@@ -121,6 +121,8 @@ setaddrs(Bits bit)
 
 static char* regname[] = { ".ax", ".cx", ".dx", ".bx", ".sp", ".bp", ".si", ".di" };
 
+static Node* regnodes[NREGVAR];
+
 void
 regopt(Prog *firstp)
 {
@@ -159,8 +161,11 @@ regopt(Prog *firstp)
 	 */
 	nvar = NREGVAR;
 	memset(var, 0, NREGVAR*sizeof var[0]);
-	for(i=0; i<NREGVAR; i++)
-		var[i].node = newname(lookup(regname[i]));
+	for(i=0; i<NREGVAR; i++) {
+		if(regnodes[i] == N)
+			regnodes[i] = newname(lookup(regname[i]));
+		var[i].node = regnodes[i];
+	}
 
 	regbits = RtoB(D_SP);
 	for(z=0; z<BITS; z++) {
