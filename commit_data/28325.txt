commit 5fae488633ff247b9b7964dc45b8fe4b491f5a16
Author: Mikio Hara <mikioh.mikioh@gmail.com>
Date:   Sun May 15 17:16:04 2016 +0900

    syscall: deprecate BPF/LSF
    
    Updates #14982.
    
    Change-Id: Id12b1e61456832d2b2ffbdbe8cf0a1db4444b1e4
    Reviewed-on: https://go-review.googlesource.com/23122
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/syscall/bpf_bsd.go   | 18 ++++++++++++++++++
 src/syscall/lsf_linux.go |  6 ++++++
 2 files changed, 24 insertions(+)

diff --git a/src/syscall/bpf_bsd.go b/src/syscall/bpf_bsd.go
index 2523e9b001..8b587559ed 100644
--- a/src/syscall/bpf_bsd.go
+++ b/src/syscall/bpf_bsd.go
@@ -12,14 +12,17 @@ import (
 	"unsafe"
 )
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func BpfStmt(code, k int) *BpfInsn {
 	return &BpfInsn{Code: uint16(code), K: uint32(k)}
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func BpfJump(code, k, jt, jf int) *BpfInsn {
 	return &BpfInsn{Code: uint16(code), Jt: uint8(jt), Jf: uint8(jf), K: uint32(k)}
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func BpfBuflen(fd int) (int, error) {
 	var l int
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCGBLEN, uintptr(unsafe.Pointer(&l)))
@@ -29,6 +32,7 @@ func BpfBuflen(fd int) (int, error) {
 	return l, nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func SetBpfBuflen(fd, l int) (int, error) {
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCSBLEN, uintptr(unsafe.Pointer(&l)))
 	if err != 0 {
@@ -37,6 +41,7 @@ func SetBpfBuflen(fd, l int) (int, error) {
 	return l, nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func BpfDatalink(fd int) (int, error) {
 	var t int
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCGDLT, uintptr(unsafe.Pointer(&t)))
@@ -46,6 +51,7 @@ func BpfDatalink(fd int) (int, error) {
 	return t, nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func SetBpfDatalink(fd, t int) (int, error) {
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCSDLT, uintptr(unsafe.Pointer(&t)))
 	if err != 0 {
@@ -54,6 +60,7 @@ func SetBpfDatalink(fd, t int) (int, error) {
 	return t, nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func SetBpfPromisc(fd, m int) error {
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCPROMISC, uintptr(unsafe.Pointer(&m)))
 	if err != 0 {
@@ -62,6 +69,7 @@ func SetBpfPromisc(fd, m int) error {
 	return nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func FlushBpf(fd int) error {
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCFLUSH, 0)
 	if err != 0 {
@@ -75,6 +83,7 @@ type ivalue struct {
 	value int16
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func BpfInterface(fd int, name string) (string, error) {
 	var iv ivalue
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCGETIF, uintptr(unsafe.Pointer(&iv)))
@@ -84,6 +93,7 @@ func BpfInterface(fd int, name string) (string, error) {
 	return name, nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func SetBpfInterface(fd int, name string) error {
 	var iv ivalue
 	copy(iv.name[:], []byte(name))
@@ -94,6 +104,7 @@ func SetBpfInterface(fd int, name string) error {
 	return nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func BpfTimeout(fd int) (*Timeval, error) {
 	var tv Timeval
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCGRTIMEOUT, uintptr(unsafe.Pointer(&tv)))
@@ -103,6 +114,7 @@ func BpfTimeout(fd int) (*Timeval, error) {
 	return &tv, nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func SetBpfTimeout(fd int, tv *Timeval) error {
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCSRTIMEOUT, uintptr(unsafe.Pointer(tv)))
 	if err != 0 {
@@ -111,6 +123,7 @@ func SetBpfTimeout(fd int, tv *Timeval) error {
 	return nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func BpfStats(fd int) (*BpfStat, error) {
 	var s BpfStat
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCGSTATS, uintptr(unsafe.Pointer(&s)))
@@ -120,6 +133,7 @@ func BpfStats(fd int) (*BpfStat, error) {
 	return &s, nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func SetBpfImmediate(fd, m int) error {
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCIMMEDIATE, uintptr(unsafe.Pointer(&m)))
 	if err != 0 {
@@ -128,6 +142,7 @@ func SetBpfImmediate(fd, m int) error {
 	return nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func SetBpf(fd int, i []BpfInsn) error {
 	var p BpfProgram
 	p.Len = uint32(len(i))
@@ -139,6 +154,7 @@ func SetBpf(fd int, i []BpfInsn) error {
 	return nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func CheckBpfVersion(fd int) error {
 	var v BpfVersion
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCVERSION, uintptr(unsafe.Pointer(&v)))
@@ -151,6 +167,7 @@ func CheckBpfVersion(fd int) error {
 	return nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func BpfHeadercmpl(fd int) (int, error) {
 	var f int
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCGHDRCMPLT, uintptr(unsafe.Pointer(&f)))
@@ -160,6 +177,7 @@ func BpfHeadercmpl(fd int) (int, error) {
 	return f, nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func SetBpfHeadercmpl(fd, f int) error {
 	_, _, err := Syscall(SYS_IOCTL, uintptr(fd), BIOCSHDRCMPLT, uintptr(unsafe.Pointer(&f)))
 	if err != 0 {
diff --git a/src/syscall/lsf_linux.go b/src/syscall/lsf_linux.go
index 4a6aa2d6eb..b89239eba8 100644
--- a/src/syscall/lsf_linux.go
+++ b/src/syscall/lsf_linux.go
@@ -10,14 +10,17 @@ import (
 	"unsafe"
 )
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func LsfStmt(code, k int) *SockFilter {
 	return &SockFilter{Code: uint16(code), K: uint32(k)}
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func LsfJump(code, k, jt, jf int) *SockFilter {
 	return &SockFilter{Code: uint16(code), Jt: uint8(jt), Jf: uint8(jf), K: uint32(k)}
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func LsfSocket(ifindex, proto int) (int, error) {
 	var lsall SockaddrLinklayer
 	s, e := Socket(AF_PACKET, SOCK_RAW, proto)
@@ -41,6 +44,7 @@ type iflags struct {
 	flags uint16
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func SetLsfPromisc(name string, m bool) error {
 	s, e := Socket(AF_INET, SOCK_DGRAM, 0)
 	if e != nil {
@@ -65,6 +69,7 @@ func SetLsfPromisc(name string, m bool) error {
 	return nil
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func AttachLsf(fd int, i []SockFilter) error {
 	var p SockFprog
 	p.Len = uint16(len(i))
@@ -72,6 +77,7 @@ func AttachLsf(fd int, i []SockFilter) error {
 	return setsockopt(fd, SOL_SOCKET, SO_ATTACH_FILTER, unsafe.Pointer(&p), unsafe.Sizeof(p))
 }
 
+// Deprecated: Use golang.org/x/net/bpf instead.
 func DetachLsf(fd int) error {
 	var dummy int
 	return setsockopt(fd, SOL_SOCKET, SO_DETACH_FILTER, unsafe.Pointer(&dummy), unsafe.Sizeof(dummy))
