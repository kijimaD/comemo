commit 36b09f334f4d6ca96573b275118bd45db80f3727
Author: Marcel van Lohuizen <mpvl@golang.org>
Date:   Fri Feb 8 17:50:07 2019 +0100

    strconv: remove use of DeepEqual for testing errors
    
    Comparing errors using DeepEqual breaks if frame information
    is added as proposed in Issue #29934.
    
    Updates #29934.
    
    Change-Id: I0372883288f974998138f95f6c7c79a60f922a3e
    Reviewed-on: https://go-review.googlesource.com/c/162177
    Run-TryBot: Marcel van Lohuizen <mpvl@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Russ Cox <rsc@golang.org>
    Reviewed-by: Damien Neil <dneil@google.com>
---
 src/strconv/atoi_test.go | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

diff --git a/src/strconv/atoi_test.go b/src/strconv/atoi_test.go
index 8b0576b659..b167c96833 100644
--- a/src/strconv/atoi_test.go
+++ b/src/strconv/atoi_test.go
@@ -521,12 +521,22 @@ var parseBaseTests = []parseErrorTest{
 	{37, baseErrStub},
 }
 
+func equalError(a, b error) bool {
+	if a == nil {
+		return b == nil
+	}
+	if b == nil {
+		return a == nil
+	}
+	return a.Error() == b.Error()
+}
+
 func TestParseIntBitSize(t *testing.T) {
 	for i := range parseBitSizeTests {
 		test := &parseBitSizeTests[i]
 		testErr := test.errStub("ParseInt", test.arg)
 		_, err := ParseInt("0", 0, test.arg)
-		if !reflect.DeepEqual(testErr, err) {
+		if !equalError(testErr, err) {
 			t.Errorf("ParseInt(\"0\", 0, %v) = 0, %v want 0, %v",
 				test.arg, err, testErr)
 		}
@@ -538,7 +548,7 @@ func TestParseUintBitSize(t *testing.T) {
 		test := &parseBitSizeTests[i]
 		testErr := test.errStub("ParseUint", test.arg)
 		_, err := ParseUint("0", 0, test.arg)
-		if !reflect.DeepEqual(testErr, err) {
+		if !equalError(testErr, err) {
 			t.Errorf("ParseUint(\"0\", 0, %v) = 0, %v want 0, %v",
 				test.arg, err, testErr)
 		}
@@ -550,7 +560,7 @@ func TestParseIntBase(t *testing.T) {
 		test := &parseBaseTests[i]
 		testErr := test.errStub("ParseInt", test.arg)
 		_, err := ParseInt("0", test.arg, 0)
-		if !reflect.DeepEqual(testErr, err) {
+		if !equalError(testErr, err) {
 			t.Errorf("ParseInt(\"0\", %v, 0) = 0, %v want 0, %v",
 				test.arg, err, testErr)
 		}
@@ -562,7 +572,7 @@ func TestParseUintBase(t *testing.T) {
 		test := &parseBaseTests[i]
 		testErr := test.errStub("ParseUint", test.arg)
 		_, err := ParseUint("0", test.arg, 0)
-		if !reflect.DeepEqual(testErr, err) {
+		if !equalError(testErr, err) {
 			t.Errorf("ParseUint(\"0\", %v, 0) = 0, %v want 0, %v",
 				test.arg, err, testErr)
 		}
