commit f41ffc2bf4a5a29bdff0b11a787e2536859ea61d
Author: Andrew Gerrand <adg@golang.org>
Date:   Mon Feb 4 15:28:55 2013 +1100

    regexp: add (*Regexp).Longest
    
    Fixes #3696.
    
    R=rsc
    CC=golang-dev
    https://golang.org/cl/7133051
---
 src/pkg/regexp/exec_test.go | 14 ++++++++++++++
 src/pkg/regexp/regexp.go    |  8 ++++++++
 2 files changed, 22 insertions(+)

diff --git a/src/pkg/regexp/exec_test.go b/src/pkg/regexp/exec_test.go
index e5d52b40df..d3eddf2a74 100644
--- a/src/pkg/regexp/exec_test.go
+++ b/src/pkg/regexp/exec_test.go
@@ -706,3 +706,17 @@ func BenchmarkMatchHard_1K(b *testing.B)    { benchmark(b, hard, 1<<10) }
 func BenchmarkMatchHard_32K(b *testing.B)   { benchmark(b, hard, 32<<10) }
 func BenchmarkMatchHard_1M(b *testing.B)    { benchmark(b, hard, 1<<20) }
 func BenchmarkMatchHard_32M(b *testing.B)   { benchmark(b, hard, 32<<20) }
+
+func TestLongest(t *testing.T) {
+	re, err := Compile(`a(|b)`)
+	if err != nil {
+		t.Fatal(err)
+	}
+	if g, w := re.FindString("ab"), "a"; g != w {
+		t.Errorf("first match was %q, want %q", g, w)
+	}
+	re.Longest()
+	if g, w := re.FindString("ab"), "ab"; g != w {
+		t.Errorf("longest match was %q, want %q", g, w)
+	}
+}
diff --git a/src/pkg/regexp/regexp.go b/src/pkg/regexp/regexp.go
index c516a1566f..c0ecc01c35 100644
--- a/src/pkg/regexp/regexp.go
+++ b/src/pkg/regexp/regexp.go
@@ -130,6 +130,14 @@ func CompilePOSIX(expr string) (*Regexp, error) {
 	return compile(expr, syntax.POSIX, true)
 }
 
+// Longest sets the match semantics of the regexp to leftmost-longest.
+// That is, when matching against text, the regexp returns a match that
+// begins as early as possible in the input (leftmost), and among those
+// it chooses a match that is as long as possible.
+func (re *Regexp) Longest() {
+	re.longest = true
+}
+
 func compile(expr string, mode syntax.Flags, longest bool) (*Regexp, error) {
 	re, err := syntax.Parse(expr, mode)
 	if err != nil {
