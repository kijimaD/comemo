commit 81c5d92f525d46113475d2972775d141f6d487ca
Author: Jes Cok <xigua67damn@gmail.com>
Date:   Fri Sep 22 23:27:51 2023 +0000

    all: use the indefinite article an in comments
    
    Change-Id: I8787458f9ccd3b5cdcdda820d8a45deb4f77eade
    GitHub-Last-Rev: be865d67ef68815b8c1c2a9ad222fff594620e66
    GitHub-Pull-Request: golang/go#63165
    Reviewed-on: https://go-review.googlesource.com/c/go/+/530120
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Than McIntosh <thanm@google.com>
---
 src/archive/zip/reader_test.go     | 2 +-
 src/cmd/go/internal/cache/cache.go | 2 +-
 src/cmd/go/internal/vcs/vcs.go     | 2 +-
 src/crypto/tls/ticket.go           | 2 +-
 src/crypto/x509/verify_test.go     | 2 +-
 src/crypto/x509/x509_test.go       | 2 +-
 src/image/gif/reader_test.go       | 2 +-
 src/os/signal/signal_test.go       | 2 +-
 test/typeparam/boundmethod.go      | 2 +-
 9 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/archive/zip/reader_test.go b/src/archive/zip/reader_test.go
index a1ae1c97cc..631515cf5d 100644
--- a/src/archive/zip/reader_test.go
+++ b/src/archive/zip/reader_test.go
@@ -1822,7 +1822,7 @@ func TestBaseOffsetPlusOverflow(t *testing.T) {
 		}
 	}()
 	// Previously, this would trigger a panic as we attempt to read from
-	// a io.SectionReader which would access a slice at a negative offset
+	// an io.SectionReader which would access a slice at a negative offset
 	// as the section reader offset & size were < 0.
 	NewReader(bytes.NewReader(data), int64(len(data))+1875)
 }
diff --git a/src/cmd/go/internal/cache/cache.go b/src/cmd/go/internal/cache/cache.go
index 4a82d27e7a..14b2deccd4 100644
--- a/src/cmd/go/internal/cache/cache.go
+++ b/src/cmd/go/internal/cache/cache.go
@@ -477,7 +477,7 @@ func (c *DiskCache) putIndexEntry(id ActionID, out OutputID, size int64, allowVe
 	return nil
 }
 
-// noVerifyReadSeeker is a io.ReadSeeker wrapper sentinel type
+// noVerifyReadSeeker is an io.ReadSeeker wrapper sentinel type
 // that says that Cache.Put should skip the verify check
 // (from GODEBUG=goverifycache=1).
 type noVerifyReadSeeker struct {
diff --git a/src/cmd/go/internal/vcs/vcs.go b/src/cmd/go/internal/vcs/vcs.go
index 2a88179404..a86ed07d3f 100644
--- a/src/cmd/go/internal/vcs/vcs.go
+++ b/src/cmd/go/internal/vcs/vcs.go
@@ -1443,7 +1443,7 @@ type metaImport struct {
 	Prefix, VCS, RepoRoot string
 }
 
-// A ImportMismatchError is returned where metaImport/s are present
+// An ImportMismatchError is returned where metaImport/s are present
 // but none match our import path.
 type ImportMismatchError struct {
 	importPath string
diff --git a/src/crypto/tls/ticket.go b/src/crypto/tls/ticket.go
index b43101ff66..b5ae35b67e 100644
--- a/src/crypto/tls/ticket.go
+++ b/src/crypto/tls/ticket.go
@@ -69,7 +69,7 @@ type SessionState struct {
 	// To allow different layers in a protocol stack to share this field,
 	// applications must only append to it, not replace it, and must use entries
 	// that can be recognized even if out of order (for example, by starting
-	// with a id and version prefix).
+	// with an id and version prefix).
 	Extra [][]byte
 
 	// EarlyData indicates whether the ticket can be used for 0-RTT in a QUIC
diff --git a/src/crypto/x509/verify_test.go b/src/crypto/x509/verify_test.go
index 3551b470ce..b1dddb644b 100644
--- a/src/crypto/x509/verify_test.go
+++ b/src/crypto/x509/verify_test.go
@@ -368,7 +368,7 @@ var verifyTests = []verifyTest{
 		},
 	},
 	{
-		// When there are two parents, one with a incorrect subject but matching SKID
+		// When there are two parents, one with an incorrect subject but matching SKID
 		// and one with a correct subject but missing SKID, the latter should be
 		// considered as a possible parent.
 		leaf:        leafMatchingAKIDMatchingIssuer,
diff --git a/src/crypto/x509/x509_test.go b/src/crypto/x509/x509_test.go
index 19deeab54d..9a80b2b434 100644
--- a/src/crypto/x509/x509_test.go
+++ b/src/crypto/x509/x509_test.go
@@ -3652,7 +3652,7 @@ func TestDisableSHA1ForCertOnly(t *testing.T) {
 	}
 
 	// This is an unrelated OCSP response, which will fail signature verification
-	// but shouldn't return a InsecureAlgorithmError, since SHA1 should be allowed
+	// but shouldn't return an InsecureAlgorithmError, since SHA1 should be allowed
 	// for OCSP.
 	ocspTBSHex := "30819fa2160414884451ff502a695e2d88f421bad90cf2cecbea7c180f32303133303631383037323434335a30743072304a300906052b0e03021a0500041448b60d38238df8456e4ee5843ea394111802979f0414884451ff502a695e2d88f421bad90cf2cecbea7c021100f78b13b946fc9635d8ab49de9d2148218000180f32303133303631383037323434335aa011180f32303133303632323037323434335a"
 	ocspTBS, err := hex.DecodeString(ocspTBSHex)
diff --git a/src/image/gif/reader_test.go b/src/image/gif/reader_test.go
index a7f943adeb..f90ebc5d7d 100644
--- a/src/image/gif/reader_test.go
+++ b/src/image/gif/reader_test.go
@@ -28,7 +28,7 @@ const (
 	trailerStr = "\x3b"
 )
 
-// lzw.NewReader wants a io.ByteReader, this ensures we're compatible.
+// lzw.NewReader wants an io.ByteReader, this ensures we're compatible.
 var _ io.ByteReader = (*blockReader)(nil)
 
 // lzwEncode returns an LZW encoding (with 2-bit literals) of in.
diff --git a/src/os/signal/signal_test.go b/src/os/signal/signal_test.go
index e7575eb70e..35f1620c5d 100644
--- a/src/os/signal/signal_test.go
+++ b/src/os/signal/signal_test.go
@@ -53,7 +53,7 @@ func init() {
 		// Older linux kernels seem to have some hiccups delivering the signal
 		// in a timely manner on ppc64 and ppc64le. When running on a
 		// ppc64le/ubuntu 16.04/linux 4.4 host the time can vary quite
-		// substantially even on a idle system. 5 seconds is twice any value
+		// substantially even on an idle system. 5 seconds is twice any value
 		// observed when running 10000 tests on such a system.
 		settleTime = 5 * time.Second
 	} else if s := os.Getenv("GO_TEST_TIMEOUT_SCALE"); s != "" {
diff --git a/test/typeparam/boundmethod.go b/test/typeparam/boundmethod.go
index 510519a274..b78318cced 100644
--- a/test/typeparam/boundmethod.go
+++ b/test/typeparam/boundmethod.go
@@ -5,7 +5,7 @@
 // license that can be found in the LICENSE file.
 
 // This test illustrates how a type bound method (String below) can be implemented
-// either by a concrete type (myint below) or a instantiated generic type
+// either by a concrete type (myint below) or an instantiated generic type
 // (StringInt[myint] below).
 
 package main
