commit 8405cd3005a5274e80e41676146629c4086b6380
Author: Tobias Klauser <tklauser@distanz.ch>
Date:   Fri Nov 1 13:49:20 2019 +0100

    internal/syscall/unix: add support for linux/riscv64
    
    Based on the riscv-go port.
    
    Updates #27532
    
    Change-Id: I3a4d86783fbd625e3ade16d08f87d66e4502f3f7
    Reviewed-on: https://go-review.googlesource.com/c/go/+/204660
    Run-TryBot: Tobias Klauser <tobias.klauser@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/internal/syscall/unix/at_sysnum_fstatat_linux.go |  2 +-
 src/internal/syscall/unix/getrandom_linux_generic.go | 10 +++++-----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/internal/syscall/unix/at_sysnum_fstatat_linux.go b/src/internal/syscall/unix/at_sysnum_fstatat_linux.go
index 580e7997f8..31fe6a5a7b 100644
--- a/src/internal/syscall/unix/at_sysnum_fstatat_linux.go
+++ b/src/internal/syscall/unix/at_sysnum_fstatat_linux.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-// +build arm64
+// +build arm64 riscv64
 
 package unix
 
diff --git a/src/internal/syscall/unix/getrandom_linux_generic.go b/src/internal/syscall/unix/getrandom_linux_generic.go
index f8490ce978..e69bf6b675 100644
--- a/src/internal/syscall/unix/getrandom_linux_generic.go
+++ b/src/internal/syscall/unix/getrandom_linux_generic.go
@@ -2,15 +2,15 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-// +build linux,arm64
+// +build linux
+// +build arm64 riscv64
 
 package unix
 
 // Linux getrandom system call number.
 // See GetRandom in getrandom_linux.go.
 //
-// This file is named "generic" because at a certain point Linux
-// started standardizing on system call numbers across
-// architectures. So far this means only arm64 uses the standard
-// numbers.
+// This file is named "generic" because at a certain point Linux started
+// standardizing on system call numbers across architectures. So far this means
+// only arm64 and riscv64 use the standard numbers.
 const randomTrap uintptr = 278
