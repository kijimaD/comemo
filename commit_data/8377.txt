commit 4336116d3b9bc89b48d78260ff2dc9dad0961458
Author: Mikio Hara <mikioh.mikioh@gmail.com>
Date:   Fri May 13 07:00:06 2011 -0700

    net: remove unused functions
    
    Remove unused functions, getip() and sockaddrToString().
    Remove unnecessary linebreaks.
    
    R=golang-dev
    CC=golang-dev
    https://golang.org/cl/4523062
---
 src/pkg/net/dnsconfig.go |  1 -
 src/pkg/net/dnsmsg.go    |  1 -
 src/pkg/net/ipsock.go    | 19 -------------------
 src/pkg/net/sock.go      | 13 -------------
 4 files changed, 34 deletions(-)

diff --git a/src/pkg/net/dnsconfig.go b/src/pkg/net/dnsconfig.go
index 26f0e04e90..54e334342a 100644
--- a/src/pkg/net/dnsconfig.go
+++ b/src/pkg/net/dnsconfig.go
@@ -30,7 +30,6 @@ func (e *DNSConfigError) String() string {
 func (e *DNSConfigError) Timeout() bool   { return false }
 func (e *DNSConfigError) Temporary() bool { return false }
 
-
 // See resolv.conf(5) on a Linux machine.
 // TODO(rsc): Supposed to call uname() and chop the beginning
 // of the host name to get the default search domain.
diff --git a/src/pkg/net/dnsmsg.go b/src/pkg/net/dnsmsg.go
index 731efe26a4..0ba69a0ce9 100644
--- a/src/pkg/net/dnsmsg.go
+++ b/src/pkg/net/dnsmsg.go
@@ -117,7 +117,6 @@ type dnsRR interface {
 	Header() *dnsRR_Header
 }
 
-
 // Specific DNS RR formats for each query type.
 
 type dnsRR_CNAME struct {
diff --git a/src/pkg/net/ipsock.go b/src/pkg/net/ipsock.go
index e8bcac6460..43357fe014 100644
--- a/src/pkg/net/ipsock.go
+++ b/src/pkg/net/ipsock.go
@@ -119,25 +119,6 @@ Error:
 	return nil, &OpError{mode, net, addr, oserr}
 }
 
-func getip(fd int, remote bool) (ip []byte, port int, ok bool) {
-	// No attempt at error reporting because
-	// there are no possible errors, and the
-	// caller won't report them anyway.
-	var sa syscall.Sockaddr
-	if remote {
-		sa, _ = syscall.Getpeername(fd)
-	} else {
-		sa, _ = syscall.Getsockname(fd)
-	}
-	switch sa := sa.(type) {
-	case *syscall.SockaddrInet4:
-		return sa.Addr[0:], sa.Port, true
-	case *syscall.SockaddrInet6:
-		return sa.Addr[0:], sa.Port, true
-	}
-	return
-}
-
 type InvalidAddrError string
 
 func (e InvalidAddrError) String() string  { return string(e) }
diff --git a/src/pkg/net/sock.go b/src/pkg/net/sock.go
index 21bd5f03e8..5c47e4f77b 100644
--- a/src/pkg/net/sock.go
+++ b/src/pkg/net/sock.go
@@ -153,16 +153,3 @@ type UnknownSocketError struct {
 func (e *UnknownSocketError) String() string {
 	return "unknown socket address type " + reflect.TypeOf(e.sa).String()
 }
-
-func sockaddrToString(sa syscall.Sockaddr) (name string, err os.Error) {
-	switch a := sa.(type) {
-	case *syscall.SockaddrInet4:
-		return JoinHostPort(IP(a.Addr[0:]).String(), itoa(a.Port)), nil
-	case *syscall.SockaddrInet6:
-		return JoinHostPort(IP(a.Addr[0:]).String(), itoa(a.Port)), nil
-	case *syscall.SockaddrUnix:
-		return a.Name, nil
-	}
-
-	return "", &UnknownSocketError{sa}
-}
