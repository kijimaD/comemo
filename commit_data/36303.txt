commit 47435b1da1e2a5698d1cfddc0eff889e4fdb6111
Author: Tobias Klauser <tklauser@distanz.ch>
Date:   Wed Apr 18 11:52:39 2018 +0200

    reflect: define MyBuffer more locally in TestImplicitMapConversion
    
    There are no strange messages anymore, so define type MyBuffer in the
    block where it is used.
    
    Change-Id: Ic65b15dc76a40f6f734d9ac2116338502fbb66fd
    Reviewed-on: https://go-review.googlesource.com/107735
    Run-TryBot: Tobias Klauser <tobias.klauser@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/reflect/set_test.go | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/src/reflect/set_test.go b/src/reflect/set_test.go
index 7c39623a9d..a633e6eee2 100644
--- a/src/reflect/set_test.go
+++ b/src/reflect/set_test.go
@@ -14,8 +14,6 @@ import (
 	"unsafe"
 )
 
-type MyBuffer bytes.Buffer
-
 func TestImplicitMapConversion(t *testing.T) {
 	// Test implicit conversions in MapIndex and SetMapIndex.
 	{
@@ -102,10 +100,7 @@ func TestImplicitMapConversion(t *testing.T) {
 	}
 	{
 		// convert identical underlying types
-		// TODO(rsc): Should be able to define MyBuffer here.
-		// 6l prints very strange messages about .this.Bytes etc
-		// when we do that though, so MyBuffer is defined
-		// at top level.
+		type MyBuffer bytes.Buffer
 		m := make(map[*MyBuffer]*bytes.Buffer)
 		mv := ValueOf(m)
 		b1 := new(MyBuffer)
