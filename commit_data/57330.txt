commit 6eaad824e56aec91266854bf7890a94c3f08b614
Author: Joel Sing <joel@sing.id.au>
Date:   Sat Apr 29 20:29:41 2023 +1000

    cmd/internal/obj/arm64: improve splitting of 24 bit unsigned scaled immediates
    
    The previous implementation would limit itself to 0xfff000 | 0xfff << shift,
    while the maximum possible value is 0xfff000 + 0xfff << shift. In practical
    terms, this means that an additional ((1 << shift) - 1) * 0x1000 of offset
    is reachable for operations that use this splitting format. In the case of
    an 8 byte load/store, this is an additional 0x7000 that can be reached
    without needing to use the literal pool.
    
    Updates #59615
    
    Change-Id: Ice7023104042d31c115eafb9398c2b999bdd6583
    Reviewed-on: https://go-review.googlesource.com/c/go/+/512540
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: David Chase <drchase@google.com>
    Run-TryBot: Joel Sing <joel@sing.id.au>

 src/cmd/asm/internal/asm/testdata/arm64.s    | 30 +++++++++++++-------------
 src/cmd/internal/obj/arm64/asm7.go           | 19 +++++++++++------
 src/cmd/internal/obj/arm64/asm_arm64_test.go | 32 +++++++++++-----------------
 3 files changed, 41 insertions(+), 40 deletions(-)
