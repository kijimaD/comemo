commit 7b1f055eb1fb5f600081563d3cb2f987fe400e46
Author: Austin Clements <austin@google.com>
Date:   Mon Jan 11 16:52:11 2016 -0500

    runtime: remove out-of-date comment
    
    It used to be the case that repeatedly getting one GC pointer and
    enqueuing one GC pointer could cause contention on the work buffers as
    each operation passed over the boundary of a work buffer. As of
    b6c0934, we use a two buffer cache that prevents this sort of
    contention.
    
    Change-Id: I4f1111623f76df9c5493dd9124dec1e0bfaf53b7
    Reviewed-on: https://go-review.googlesource.com/18532
    Run-TryBot: Austin Clements <austin@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Rick Hudson <rlh@golang.org>

 src/runtime/mgcmark.go | 6 ------
 1 file changed, 6 deletions(-)
