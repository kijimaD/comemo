commit b5077f82fade43dcfcc40648ffd65dc98a1515df
Author: Anthony Martin <ality@pbrane.org>
Date:   Fri Oct 14 17:09:38 2011 -0700

    http: avoid panic caused by nil URL
    
    The current code will panic if an invalid
    request (one with a nil URL) is passed to
    the doFollowingRedirects function.
    
    Also, remove a redundant nil Header check.
    
    R=bradfitz
    CC=golang-dev
    https://golang.org/cl/5270046
---
 src/pkg/http/client.go | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/pkg/http/client.go b/src/pkg/http/client.go
index bce9014c4b..3fa4a056ad 100644
--- a/src/pkg/http/client.go
+++ b/src/pkg/http/client.go
@@ -115,9 +115,6 @@ func send(req *Request, t RoundTripper) (resp *Response, err os.Error) {
 
 	info := req.URL.RawUserinfo
 	if len(info) > 0 {
-		if req.Header == nil {
-			req.Header = make(Header)
-		}
 		req.Header.Set("Authorization", "Basic "+base64.URLEncoding.EncodeToString([]byte(info)))
 	}
 	return t.RoundTrip(req)
@@ -176,6 +173,10 @@ func (c *Client) doFollowingRedirects(ireq *Request) (r *Response, err os.Error)
 	}
 	var via []*Request
 
+	if ireq.URL == nil {
+		return nil, os.NewError("http: nil Request.URL")
+	}
+
 	req := ireq
 	urlStr := "" // next relative or absolute URL to fetch (after first request)
 	for redirect := 0; ; redirect++ {
