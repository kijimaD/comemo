commit f340b3de5a19c310aa38abc6f474c366a7b7d89b
Author: Wei Guangjing <vcc.163@gmail.com>
Date:   Tue Jul 12 11:29:38 2011 -0700

    debug/pe: fixes ImportedSymbols for Win64.
    
    R=golang-dev, alex.brainman
    CC=golang-dev
    https://golang.org/cl/4639086
---
 src/pkg/debug/pe/file.go | 37 ++++++++++++++++++++++++++-----------
 1 file changed, 26 insertions(+), 11 deletions(-)

diff --git a/src/pkg/debug/pe/file.go b/src/pkg/debug/pe/file.go
index 04991f781b..c934dd4477 100644
--- a/src/pkg/debug/pe/file.go
+++ b/src/pkg/debug/pe/file.go
@@ -245,6 +245,7 @@ func (f *File) DWARF() (*dwarf.Data, os.Error) {
 // satisfied by other libraries at dynamic load time.
 // It does not return weak symbols.
 func (f *File) ImportedSymbols() ([]string, os.Error) {
+	pe64 := f.Machine == IMAGE_FILE_MACHINE_AMD64
 	ds := f.Section(".idata")
 	if ds == nil {
 		// not dynamic, so no libraries
@@ -274,17 +275,31 @@ func (f *File) ImportedSymbols() ([]string, os.Error) {
 		// seek to OriginalFirstThunk
 		d = d[dt.OriginalFirstThunk-ds.VirtualAddress:]
 		for len(d) > 0 {
-			va := binary.LittleEndian.Uint32(d[0:4])
-			d = d[4:]
-			if va == 0 {
-				break
-			}
-			if va&0x80000000 > 0 { // is Ordinal
-				// TODO add dynimport ordinal support.
-				//ord := va&0x0000FFFF
-			} else {
-				fn, _ := getString(names, int(va-ds.VirtualAddress+2))
-				all = append(all, fn+":"+dt.dll)
+			if pe64 { // 64bit
+				va := binary.LittleEndian.Uint64(d[0:8])
+				d = d[8:]
+				if va == 0 {
+					break
+				}
+				if va&0x8000000000000000 > 0 { // is Ordinal
+					// TODO add dynimport ordinal support.
+				} else {
+					fn, _ := getString(names, int(uint32(va)-ds.VirtualAddress+2))
+					all = append(all, fn+":"+dt.dll)
+				}
+			} else { // 32bit
+				va := binary.LittleEndian.Uint32(d[0:4])
+				d = d[4:]
+				if va == 0 {
+					break
+				}
+				if va&0x80000000 > 0 { // is Ordinal
+					// TODO add dynimport ordinal support.
+					//ord := va&0x0000FFFF
+				} else {
+					fn, _ := getString(names, int(va-ds.VirtualAddress+2))
+					all = append(all, fn+":"+dt.dll)
+				}
 			}
 		}
 	}
