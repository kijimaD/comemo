commit 89265f98948718c0d4d3d4763decf02914188ae6
Author: Daniel Martí <mvdan@mvdan.cc>
Date:   Fri Jul 7 11:17:28 2023 +0200

    net: remove unused error result from newRawConn
    
    It's currently always nil, and the code gets generally less verbose.
    
    Change-Id: Id4f5f9ac6eac0218dda34b8bd5ef41c633cfaf2d
    Reviewed-on: https://go-review.googlesource.com/c/go/+/508396
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
    Run-TryBot: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Damien Neil <dneil@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
---
 src/net/iprawsock.go  |  2 +-
 src/net/rawconn.go    |  8 ++++----
 src/net/sock_posix.go | 17 ++++-------------
 src/net/tcpsock.go    |  4 ++--
 src/net/udpsock.go    |  2 +-
 src/net/unixsock.go   |  4 ++--
 6 files changed, 14 insertions(+), 23 deletions(-)

diff --git a/src/net/iprawsock.go b/src/net/iprawsock.go
index f18331a1fd..c3fd6deac5 100644
--- a/src/net/iprawsock.go
+++ b/src/net/iprawsock.go
@@ -106,7 +106,7 @@ func (c *IPConn) SyscallConn() (syscall.RawConn, error) {
 	if !c.ok() {
 		return nil, syscall.EINVAL
 	}
-	return newRawConn(c.fd)
+	return newRawConn(c.fd), nil
 }
 
 // ReadFromIP acts like ReadFrom but returns an IPAddr.
diff --git a/src/net/rawconn.go b/src/net/rawconn.go
index 974320c25f..e49b9fb81b 100644
--- a/src/net/rawconn.go
+++ b/src/net/rawconn.go
@@ -75,8 +75,8 @@ func (c *rawConn) PollFD() *poll.FD {
 	return &c.fd.pfd
 }
 
-func newRawConn(fd *netFD) (*rawConn, error) {
-	return &rawConn{fd: fd}, nil
+func newRawConn(fd *netFD) *rawConn {
+	return &rawConn{fd: fd}
 }
 
 type rawListener struct {
@@ -91,6 +91,6 @@ func (l *rawListener) Write(func(uintptr) bool) error {
 	return syscall.EINVAL
 }
 
-func newRawListener(fd *netFD) (*rawListener, error) {
-	return &rawListener{rawConn{fd: fd}}, nil
+func newRawListener(fd *netFD) *rawListener {
+	return &rawListener{rawConn{fd: fd}}
 }
diff --git a/src/net/sock_posix.go b/src/net/sock_posix.go
index b3e1806ba9..1fcb82a419 100644
--- a/src/net/sock_posix.go
+++ b/src/net/sock_posix.go
@@ -115,12 +115,8 @@ func (fd *netFD) addrFunc() func(syscall.Sockaddr) Addr {
 
 func (fd *netFD) dial(ctx context.Context, laddr, raddr sockaddr, ctrlCtxFn func(context.Context, string, string, syscall.RawConn) error) error {
 	var c *rawConn
-	var err error
 	if ctrlCtxFn != nil {
-		c, err = newRawConn(fd)
-		if err != nil {
-			return err
-		}
+		c = newRawConn(fd)
 		var ctrlAddr string
 		if raddr != nil {
 			ctrlAddr = raddr.String()
@@ -133,6 +129,7 @@ func (fd *netFD) dial(ctx context.Context, laddr, raddr sockaddr, ctrlCtxFn func
 	}
 
 	var lsa syscall.Sockaddr
+	var err error
 	if laddr != nil {
 		if lsa, err = laddr.sockaddr(fd.family); err != nil {
 			return err
@@ -185,10 +182,7 @@ func (fd *netFD) listenStream(ctx context.Context, laddr sockaddr, backlog int,
 	}
 
 	if ctrlCtxFn != nil {
-		c, err := newRawConn(fd)
-		if err != nil {
-			return err
-		}
+		c := newRawConn(fd)
 		if err := ctrlCtxFn(ctx, fd.ctrlNetwork(), laddr.String(), c); err != nil {
 			return err
 		}
@@ -239,10 +233,7 @@ func (fd *netFD) listenDatagram(ctx context.Context, laddr sockaddr, ctrlCtxFn f
 	}
 
 	if ctrlCtxFn != nil {
-		c, err := newRawConn(fd)
-		if err != nil {
-			return err
-		}
+		c := newRawConn(fd)
 		if err := ctrlCtxFn(ctx, fd.ctrlNetwork(), laddr.String(), c); err != nil {
 			return err
 		}
diff --git a/src/net/tcpsock.go b/src/net/tcpsock.go
index 358e48723b..ba03605627 100644
--- a/src/net/tcpsock.go
+++ b/src/net/tcpsock.go
@@ -119,7 +119,7 @@ func (c *TCPConn) SyscallConn() (syscall.RawConn, error) {
 	if !c.ok() {
 		return nil, syscall.EINVAL
 	}
-	return newRawConn(c.fd)
+	return newRawConn(c.fd), nil
 }
 
 // ReadFrom implements the io.ReaderFrom ReadFrom method.
@@ -290,7 +290,7 @@ func (l *TCPListener) SyscallConn() (syscall.RawConn, error) {
 	if !l.ok() {
 		return nil, syscall.EINVAL
 	}
-	return newRawListener(l.fd)
+	return newRawListener(l.fd), nil
 }
 
 // AcceptTCP accepts the next incoming call and returns the new
diff --git a/src/net/udpsock.go b/src/net/udpsock.go
index e30624dea5..4f8acb7fc8 100644
--- a/src/net/udpsock.go
+++ b/src/net/udpsock.go
@@ -129,7 +129,7 @@ func (c *UDPConn) SyscallConn() (syscall.RawConn, error) {
 	if !c.ok() {
 		return nil, syscall.EINVAL
 	}
-	return newRawConn(c.fd)
+	return newRawConn(c.fd), nil
 }
 
 // ReadFromUDP acts like ReadFrom but returns a UDPAddr.
diff --git a/src/net/unixsock.go b/src/net/unixsock.go
index 14fbac0932..9b767121e5 100644
--- a/src/net/unixsock.go
+++ b/src/net/unixsock.go
@@ -75,7 +75,7 @@ func (c *UnixConn) SyscallConn() (syscall.RawConn, error) {
 	if !c.ok() {
 		return nil, syscall.EINVAL
 	}
-	return newRawConn(c.fd)
+	return newRawConn(c.fd), nil
 }
 
 // CloseRead shuts down the reading side of the Unix domain connection.
@@ -235,7 +235,7 @@ func (l *UnixListener) SyscallConn() (syscall.RawConn, error) {
 	if !l.ok() {
 		return nil, syscall.EINVAL
 	}
-	return newRawListener(l.fd)
+	return newRawListener(l.fd), nil
 }
 
 // AcceptUnix accepts the next incoming call and returns the new
