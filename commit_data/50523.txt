commit c812b97ec67ae2d674b5bb4e2fd29c7ab7fa08dc
Author: Robert Findley <rfindley@google.com>
Date:   Fri Oct 29 18:08:08 2021 -0400

    go/types: comp literals to accept type sets with single underlying types
    
    This is a clean port of CL 357915 to go/types.
    
    Change-Id: Idf5850a8bdcf3596c561c97bcd60539945139743
    Reviewed-on: https://go-review.googlesource.com/c/go/+/359877
    Trust: Robert Findley <rfindley@google.com>
    Run-TryBot: Robert Findley <rfindley@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Robert Griesemer <gri@golang.org>
---
 src/go/types/expr.go                         |  2 +-
 src/go/types/testdata/check/compliterals.go2 | 22 ++++++++++++++++++++++
 2 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/src/go/types/expr.go b/src/go/types/expr.go
index 3a09dfd85f..8b26e64971 100644
--- a/src/go/types/expr.go
+++ b/src/go/types/expr.go
@@ -1223,7 +1223,7 @@ func (check *Checker) exprInternal(x *operand, e ast.Expr, hint Type) exprKind {
 			goto Error
 		}
 
-		switch utyp := optype(base).(type) {
+		switch utyp := singleUnder(base).(type) {
 		case *Struct:
 			if len(e.Elts) == 0 {
 				break
diff --git a/src/go/types/testdata/check/compliterals.go2 b/src/go/types/testdata/check/compliterals.go2
new file mode 100644
index 0000000000..60eac97a3f
--- /dev/null
+++ b/src/go/types/testdata/check/compliterals.go2
@@ -0,0 +1,22 @@
+// Copyright 2012 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Composite literals with parameterized types
+
+package comp_literals
+
+type myStruct struct {
+	f int
+}
+
+type slice[E any] []E
+
+func struct_literals[S struct{f int}|myStruct]() {
+	_ = S{}
+	_ = S{0}
+	_ = S{f: 0}
+
+        _ = slice[int]{1, 2, 3}
+        _ = slice[S]{{}, {0}, {f:0}}
+}
