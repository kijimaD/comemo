commit f463b20789c89f0d22e56663a34e57a942f945cf
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Mon Nov 29 15:07:04 2021 -0500

    runtime: keep //go:cgo_unsafe_args arguments alive to prevent GC
    
    When syscall's DLL.FindProc calls into syscall_getprocaddress with a
    byte slice pointer, we need to keep those bytes alive. Otherwise the GC
    will collect the allocation, and we wind up calling `GetProcAddress` on
    garbage, which showed up as various flakes in the builders. It turns out
    that this problem extends to many uses of //go:cgo_unsafe_args
    throughout, on all platforms. So this patch fixes the issue by keeping
    non-integer pointer arguments alive through their invocation in
    //go:cgo_unsafe_args functions.
    
    Fixes #49731.
    
    Change-Id: I93e4fbc2e8e210cb3fc53149708758bb33f2f9c7
    Reviewed-on: https://go-review.googlesource.com/c/go/+/367654
    Trust: Jason A. Donenfeld <Jason@zx2c4.com>
    Run-TryBot: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Patrik Nyblom <pnyb@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>

 src/runtime/sys_darwin.go       | 94 +++++++++++++++++++++++++++++++++--------
 src/runtime/sys_darwin_arm64.go |  4 +-
 src/runtime/sys_openbsd.go      | 22 +++++++---
 src/runtime/sys_openbsd1.go     |  5 ++-
 src/runtime/sys_openbsd2.go     | 36 +++++++++++++---
 src/runtime/syscall_solaris.go  |  2 +
 src/runtime/syscall_windows.go  |  4 ++
 7 files changed, 138 insertions(+), 29 deletions(-)
