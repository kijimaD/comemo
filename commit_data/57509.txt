commit 02b548e5c877379fa7a16c9ad653f2dadce7668f
Author: Jes Cok <xigua67damn@gmail.com>
Date:   Mon Aug 14 11:16:48 2023 +0000

    cmd/go/internal/cache: use == to test for io.EOF
    
    The documentation of io.EOF: Read must return EOF itself, not an error
    wrapping EOF, because callers will test for EOF using ==.
    
    encoding/json package provides an example "ExampleDecoder" which uses
    "err == io.EOF" as well, so I think it's more idiomatic to use == to test for io.EOF.
    
    Change-Id: I8a9f06d655ca63b3ec3e7dbbdfc519a2686980e1
    GitHub-Last-Rev: 665929e2a20bff231bcb5bad1384998379b41165
    GitHub-Pull-Request: golang/go#62012
    Reviewed-on: https://go-review.googlesource.com/c/go/+/519156
    Auto-Submit: Bryan Mills <bcmills@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Run-TryBot: Ian Lance Taylor <iant@google.com>
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Bryan Mills <bcmills@google.com>
---
 src/cmd/go/internal/cache/prog.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/cmd/go/internal/cache/prog.go b/src/cmd/go/internal/cache/prog.go
index 30f69b34c7..8d826f0b99 100644
--- a/src/cmd/go/internal/cache/prog.go
+++ b/src/cmd/go/internal/cache/prog.go
@@ -229,7 +229,7 @@ func (c *ProgCache) readLoop(readLoopDone chan<- struct{}) {
 			if c.closing.Load() {
 				return // quietly
 			}
-			if errors.Is(err, io.EOF) {
+			if err == io.EOF {
 				c.mu.Lock()
 				inFlight := len(c.inFlight)
 				c.mu.Unlock()
