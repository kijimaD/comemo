commit 3fd5c357a3a763f70f3ed684caed878e732e6ebe
Author: Michael Pratt <mpratt@google.com>
Date:   Thu Nov 16 14:58:37 2023 -0500

    cmd/compile: don't devirtualize calls to runtime.memhash_varlen
    
    runtime.memhash_varlen is defined as a normal function, but it is
    actually a closure. All references are generated by
    cmd/compile/internal/reflectdata.genhash, which creates a closure
    containing the size of the type, which memhash_varlen accesses with
    runtime.getclosureptr.
    
    Since this doesn't look like a normal closure, ir.Func.OClosure is not
    set, thus PGO function value devirtualization is willing to devirtualize
    it, generating a call that completely ignores the closure context. This
    causes memhash_varlen to either crash or generate incorrect results.
    
    Skip this function, which is the only caller of getclosureptr.
    Unfortunately there isn't a good way to detect these ineligible
    functions more generally.
    
    Fixes #64209.
    
    Change-Id: Ibf509406667c6d4e5d431f10e5b1d1f926ecd7dc
    Reviewed-on: https://go-review.googlesource.com/c/go/+/543195
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>

 src/cmd/compile/internal/devirtualize/pgo.go | 9 +++++++++
 src/runtime/stubs.go                         | 5 +++++
 2 files changed, 14 insertions(+)
