commit 7c203b8bc1e4958a7e17d0149f7a86f112d123d6
Author: Mikio Hara <mikioh.mikioh@gmail.com>
Date:   Wed Aug 31 17:59:35 2011 -0400

    unsafe: update doc
    
    changeset: 8812:3fb3e88d5aa8
    gc: unsafe.Alignof, unsafe.Offsetof, unsafe.Sizeof now return uintptr
    
    R=golang-dev, rsc
    CC=golang-dev
    https://golang.org/cl/4951051
---
 src/pkg/unsafe/unsafe.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/pkg/unsafe/unsafe.go b/src/pkg/unsafe/unsafe.go
index a1257066ef..c49f54d34c 100644
--- a/src/pkg/unsafe/unsafe.go
+++ b/src/pkg/unsafe/unsafe.go
@@ -24,17 +24,17 @@ type Pointer *ArbitraryType
 // Sizeof returns the size in bytes occupied by the value v.  The size is that of the
 // "top level" of the value only.  For instance, if v is a slice, it returns the size of
 // the slice descriptor, not the size of the memory referenced by the slice.
-func Sizeof(v ArbitraryType) int
+func Sizeof(v ArbitraryType) uintptr
 
 // Offsetof returns the offset within the struct of the field represented by v,
 // which must be of the form struct_value.field.  In other words, it returns the
 // number of bytes between the start of the struct and the start of the field.
-func Offsetof(v ArbitraryType) int
+func Offsetof(v ArbitraryType) uintptr
 
 // Alignof returns the alignment of the value v.  It is the maximum value m such
 // that the address of a variable with the type of v will always always be zero mod m.
 // If v is of the form obj.f, it returns the alignment of field f within struct object obj.
-func Alignof(v ArbitraryType) int
+func Alignof(v ArbitraryType) uintptr
 
 // Typeof returns the type of an interface value, a runtime.Type.
 func Typeof(i interface{}) (typ interface{})
