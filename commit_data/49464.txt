commit 8fff20ffebadfea2c5c3dd58f7007246f3408495
Author: Joel Sing <joel@sing.id.au>
Date:   Tue Aug 17 19:09:33 2021 +1000

    cmd/compile: absorb NEG into branch when possible on riscv64
    
    We can end up with this situation due to our equality tests being based on
    'SEQZ (SUB x y)' - if x is a zero valued constant, 'SUB x y' can be converted
    to 'NEG x'. When used with a branch the SEQZ can be absorbed, leading to
    'BNEZ (NEG x)' where the NEG is redundant.
    
    Removes around 1700 instructions from the go binary on riscv64.
    
    Change-Id: I947a080d8bf7d2d6378ab114172e2342ce2c51db
    Reviewed-on: https://go-review.googlesource.com/c/go/+/342850
    Trust: Joel Sing <joel@sing.id.au>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    Run-TryBot: Cherry Mui <cherryyz@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>

 src/cmd/compile/internal/ssa/gen/RISCV64.rules |  4 ++++
 src/cmd/compile/internal/ssa/rewriteRISCV64.go | 24 ++++++++++++++++++++++++
 2 files changed, 28 insertions(+)
