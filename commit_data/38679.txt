commit c92e73b70253f5d88c473a7ad6c5b8d61b2debb7
Author: Milan Knezevic <milan.knezevic@mips.com>
Date:   Fri Nov 9 18:30:46 2018 +0100

    cmd/compile/internal/gc: OMUL should be evaluated when using soft-float
    
    When using soft-float, OMUL might be rewritten to function call
    so we should ensure it was evaluated first.
    
    Fixes #28688
    
    Change-Id: I30b87501782fff62d35151f394a1c22b0d490c6c
    Reviewed-on: https://go-review.googlesource.com/c/148837
    Run-TryBot: Cherry Zhang <cherryyz@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Cherry Zhang <cherryyz@google.com>
---
 src/cmd/compile/internal/gc/subr.go |  2 +-
 test/fixedbugs/issue28688.go        | 31 +++++++++++++++++++++++++++++++
 2 files changed, 32 insertions(+), 1 deletion(-)

diff --git a/src/cmd/compile/internal/gc/subr.go b/src/cmd/compile/internal/gc/subr.go
index 53bfcba3ff..127e5fdc77 100644
--- a/src/cmd/compile/internal/gc/subr.go
+++ b/src/cmd/compile/internal/gc/subr.go
@@ -1006,7 +1006,7 @@ func calcHasCall(n *Node) bool {
 
 	// When using soft-float, these ops might be rewritten to function calls
 	// so we ensure they are evaluated first.
-	case OADD, OSUB, OMINUS:
+	case OADD, OSUB, OMINUS, OMUL:
 		if thearch.SoftFloat && (isFloat[n.Type.Etype] || isComplex[n.Type.Etype]) {
 			return true
 		}
diff --git a/test/fixedbugs/issue28688.go b/test/fixedbugs/issue28688.go
new file mode 100644
index 0000000000..0d2000e149
--- /dev/null
+++ b/test/fixedbugs/issue28688.go
@@ -0,0 +1,31 @@
+// run -gcflags=-d=softfloat
+
+// Copyright 2018 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package main
+
+import (
+	"fmt"
+)
+
+// When using soft-float, OMUL might be rewritten to function
+// call so we should ensure it was evaluated first. Stack frame
+// setup for "test" function call should happen after call to runtime.fmul32
+
+var x int32 = 1
+
+func main() {
+	var y float32 = 1.0
+	test(x, y*y)
+}
+
+//go:noinline
+func test(id int32, a float32) {
+
+	if id != x {
+		fmt.Printf("got: %d, want: %d\n", id, x)
+		panic("FAIL")
+	}
+}
