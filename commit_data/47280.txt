commit d4825819fe58e8531c7fcdf4ce27cec63824db25
Author: Jay Conrod <jayconrod@google.com>
Date:   Fri Feb 26 12:57:44 2021 -0500

    [dev.fuzz] internal/fuzz: fix two bugs affecting windows
    
    * Appending to the worker environment slice should reallocate it. On
      Windows, we pass handles through the environment, and concurrent
      workers were writing to the same memory, resulting in
      "The handle is invalid" errors.
    * Instead of passing a handle to the temporary file, we pass its path
      to each worker instead. The worker is responsible for opening and
      closing the handle. Previously, all inheritable handles were
      inherited by all workers, even though only one was used. This
      prevented temporary files from being deleted after a worker stopped,
      because other workers would still have open handles to it.
    
    Change-Id: If8b8bcfa5b03fbcadd10ef923b036bb0ee5dc3f5
    Reviewed-on: https://go-review.googlesource.com/c/go/+/297034
    Trust: Jay Conrod <jayconrod@google.com>
    Trust: Katie Hockman <katie@golang.org>
    Reviewed-by: Katie Hockman <katie@golang.org>

 src/internal/fuzz/fuzz.go        |  2 +-
 src/internal/fuzz/sys_windows.go | 43 +++++++++++++++++++---------------------
 src/internal/fuzz/worker.go      |  2 +-
 3 files changed, 22 insertions(+), 25 deletions(-)
