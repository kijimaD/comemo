commit 8e0584c327e429bd010edb28fb9fea6f68a4cccc
Author: Jay Conrod <jayconrod@google.com>
Date:   Fri Jan 15 14:43:25 2021 -0500

    [dev.fuzz] internal/fuzz: handle SIGINT races gracefully
    
    A worker process may be terminated by SIGINT if it doesn't install the
    signal handler before SIGINT is delivered. That's likely when TestMain
    or the fuzz target setup take a long time. The coordinator now ignores
    these errors.
    
    Also, when testdeps.TestDeps.CoordinateFuzzing and RunFuzzWorker
    return, they will send a value on the chan passed to signal.Notify
    instead of closing it. This should have been obvious in hindsight, but
    the signal handler could still send a value on that channel after
    those functions return but before the process exits.
    
    Change-Id: Iea2589115f1f9bb7415bb5e7911defee423e642e
    Reviewed-on: https://go-review.googlesource.com/c/go/+/284292
    Trust: Jay Conrod <jayconrod@google.com>
    Reviewed-by: Katie Hockman <katie@golang.org>

 src/internal/fuzz/sys_posix.go         | 11 +++++++++++
 src/internal/fuzz/sys_unimplemented.go |  4 ++++
 src/internal/fuzz/sys_windows.go       |  5 +++++
 src/internal/fuzz/worker.go            | 25 +++++++++++++++++++------
 src/testing/internal/testdeps/deps.go  |  4 ++--
 5 files changed, 41 insertions(+), 8 deletions(-)
