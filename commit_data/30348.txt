commit 84803f3da1b3921a6eacec435d97d5b9e40fe947
Author: Ian Lance Taylor <iant@golang.org>
Date:   Tue Nov 1 10:24:06 2016 -0700

    runtime: treat SIGSTOP on Solaris as we do on other systems
    
    This makes no practical difference, as SIGSTOP can not be caught, but
    may as well be consistent.
    
    Change-Id: I3efbbf092388bb3f6dccc94cf703c5d94d35f6a1
    Reviewed-on: https://go-review.googlesource.com/32533
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/runtime/signal_solaris.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/runtime/signal_solaris.go b/src/runtime/signal_solaris.go
index a86f7bf6b4..c931c222d6 100644
--- a/src/runtime/signal_solaris.go
+++ b/src/runtime/signal_solaris.go
@@ -33,7 +33,7 @@ var sigtable = [...]sigTabT{
 	/* 20 */ {_SigNotify, "SIGWINCH: window size change"},
 	/* 21 */ {_SigNotify, "SIGURG: urgent socket condition"},
 	/* 22 */ {_SigNotify, "SIGPOLL: pollable event occurred"},
-	/* 23 */ {_SigNotify + _SigDefault, "SIGSTOP: stop (cannot be caught or ignored)"},
+	/* 23 */ {0, "SIGSTOP: stop (cannot be caught or ignored)"},
 	/* 24 */ {_SigNotify + _SigDefault, "SIGTSTP: user stop requested from tty"},
 	/* 25 */ {_SigNotify + _SigDefault, "SIGCONT: stopped process has been continued"},
 	/* 26 */ {_SigNotify + _SigDefault, "SIGTTIN: background tty read attempted"},
