commit bd65404eef75fb7e37e50cb70721fe707f346792
Author: Rob Pike <r@golang.org>
Date:   Thu Aug 1 07:12:32 2013 +1000

    spec: clarify a couple of issues about channels
    
    1. They are FIFOs.
    2. They are safe for concurrent access.
    
    Fixes #5911.
    
    R=golang-dev, dvyukov, adg
    CC=golang-dev
    https://golang.org/cl/11549043
---
 doc/go_spec.html | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index 3f6ea8668c..f582231c50 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -4126,6 +4126,20 @@ A send on a closed channel proceeds by causing a <a href="#Run_time_panics">run-
 A send on a <code>nil</code> channel blocks forever.
 </p>
 
+<p>
+Channels act as first-in-first-out queues.
+For example, if a single goroutine sends on a channel values
+that are received by a single goroutine, the values are received in the order sent.
+</p>
+
+<p>
+A single channel may be used for send and receive
+operations and calls to the built-in functions
+<a href="#Length_and_capacity"><code>cap</code></a> and
+<a href="#Length_and_capacity"><code>len</code></a>
+by any number of goroutines without further synchronization.
+</p>
+
 <pre>
 ch &lt;- 3
 </pre>
