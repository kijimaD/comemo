commit 3f6a517db6f5e63844c4bd7b8e1871314df8b10d
Author: Russ Cox <rsc@golang.org>
Date:   Wed Feb 8 00:22:38 2012 -0500

    cmd/dist: respect $CC, as quietgcc.bash used to
    
    R=golang-dev, r, iant
    CC=golang-dev
    https://golang.org/cl/5641051
---
 src/cmd/dist/build.c | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

diff --git a/src/cmd/dist/build.c b/src/cmd/dist/build.c
index d5cf17dcd3..951f1fd694 100644
--- a/src/cmd/dist/build.c
+++ b/src/cmd/dist/build.c
@@ -336,8 +336,7 @@ setup(void)
  */
 
 // gccargs is the gcc command line to use for compiling a single C file.
-static char *gccargs[] = {
-	"gcc",
+static char *proto_gccargs[] = {
 	"-Wall",
 	"-Wno-sign-compare",
 	"-Wno-missing-braces",
@@ -352,6 +351,8 @@ static char *gccargs[] = {
 	"-c",
 };
 
+static Vec gccargs;
+
 // deptab lists changes to the default dependencies for a given prefix.
 // deps ending in /* read the whole directory; deps beginning with - 
 // exclude files with that prefix.
@@ -513,6 +514,16 @@ install(char *dir)
 	vinit(&lib);
 	vinit(&extra);
 	
+	// set up gcc command line on first run.
+	if(gccargs.len == 0) {
+		xgetenv(&b, "CC");
+		if(b.len == 0)
+			bprintf(&b, "gcc");
+		splitfields(&gccargs, bstr(&b));
+		for(i=0; i<nelem(proto_gccargs); i++)
+			vadd(&gccargs, proto_gccargs[i]);
+	}
+	
 	// path = full path to dir.
 	bpathf(&path, "%s/src/%s", goroot, dir);
 	name = lastelem(dir);
@@ -732,7 +743,7 @@ install(char *dir)
 		vreset(&compile);
 		if(!isgo) {
 			// C library or tool.
-			vcopy(&compile, gccargs, nelem(gccargs));
+			vcopy(&compile, gccargs.p, gccargs.len);
 			if(streq(gohostarch, "amd64"))
 				vadd(&compile, "-m64");
 			else if(streq(gohostarch, "386"))
