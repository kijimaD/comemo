commit 88d3db0a5b5196ed45c96014d5a2d32e4e41e34e
Author: Russ Cox <rsc@golang.org>
Date:   Wed Jan 6 12:45:23 2016 -0500

    runtime: stop traceback at foreign function
    
    This can only happen when profiling and there is foreign code
    at the top of the g0 stack but we're not in cgo.
    That in turn only happens with the race detector.
    
    Fixes #13568.
    
    Change-Id: I23775132c9c1a3a3aaae191b318539f368adf25e
    Reviewed-on: https://go-review.googlesource.com/18322
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
    Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
---
 src/runtime/traceback.go | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/runtime/traceback.go b/src/runtime/traceback.go
index 7771426ef9..0e96a28945 100644
--- a/src/runtime/traceback.go
+++ b/src/runtime/traceback.go
@@ -241,6 +241,11 @@ func gentraceback(pc0, sp0, lr0 uintptr, gp *g, skip int, pcbuf *uintptr, max in
 		//	stk is the stack containing sp.
 		//	The caller's program counter is lr, unless lr is zero, in which case it is *(uintptr*)sp.
 		f = frame.fn
+		if f.pcsp == 0 {
+			// No frame information, must be external function, like race support.
+			// See golang.org/issue/13568.
+			break
+		}
 
 		// Found an actual function.
 		// Derive frame pointer and link register.
