commit 85c22bc3a5e9ce03cd0ca668285755ce430456e0
Author: Austin Clements <austin@google.com>
Date:   Fri Sep 9 09:34:26 2016 -0400

    runtime: mark tiny blocks at GC start
    
    The hybrid barrier requires allocate-black, but there's one case where
    we don't currently allocate black: the tiny allocator. If we allocate
    a *new* tiny alloc block during GC, it will be allocated black, but if
    we allocated the current block before GC, it won't be black, and the
    further allocations from it won't mark it, which means we may free a
    reachable tiny block during sweeping.
    
    Fix this by passing over all mcaches at the beginning of mark, while
    the world is still stopped, and greying their tiny blocks.
    
    Updates #17503.
    
    Change-Id: I04d4df7cc2f553f8f7b1e4cb0b52e2946588111a
    Reviewed-on: https://go-review.googlesource.com/31456
    Reviewed-by: Rick Hudson <rlh@golang.org>

 src/runtime/mgc.go     |  7 +++++++
 src/runtime/mgcmark.go | 21 +++++++++++++++++++++
 2 files changed, 28 insertions(+)
