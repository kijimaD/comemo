commit 40f0359d52e04ed124a8f81e1ef8ac86957dd983
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Wed Jun 3 11:03:22 2020 -0700

    runtime: avoid a bit of unneeded work when MemProfileRate==1
    
    Change-Id: I1dc355bcaeb0e5fb06a7fddc4cf5db596d22e0b3
    Reviewed-on: https://go-review.googlesource.com/c/go/+/236148
    Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Trust: Emmanuel Odeke <emmanuel@orijtech.com>
    Reviewed-by: Austin Clements <austin@google.com>
---
 src/runtime/malloc.go | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/src/runtime/malloc.go b/src/runtime/malloc.go
index 551acd0796..f20ded5bf7 100644
--- a/src/runtime/malloc.go
+++ b/src/runtime/malloc.go
@@ -1221,6 +1221,13 @@ func profilealloc(mp *m, x unsafe.Pointer, size uintptr) {
 // distribution (exp(MemProfileRate)), so the best return value is a random
 // number taken from an exponential distribution whose mean is MemProfileRate.
 func nextSample() uintptr {
+	if MemProfileRate == 1 {
+		// Callers assign our return value to
+		// mcache.next_sample, but next_sample is not used
+		// when the rate is 1. So avoid the math below and
+		// just return something.
+		return 0
+	}
 	if GOOS == "plan9" {
 		// Plan 9 doesn't support floating point in note handler.
 		if g := getg(); g == g.m.gsignal {
