commit 39f7561e1b38e46d24b62e7dcc772ba87f8a802b
Author: Bryan C. Mills <bcmills@google.com>
Date:   Mon Jun 10 15:35:21 2019 -0400

    cmd/go/internal/load: remove unused hasSubdir function
    
    No references to this function remain; remove it to avoid confusion
    and reduce build overhead.
    
    The last reference was removed in CL 167748.
    
    Change-Id: I9d023c5d8904800edd3898fed79aa9f824dfb46a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/181548
    Reviewed-by: Emmanuel Odeke <emm.odeke@gmail.com>
---
 src/cmd/go/internal/load/path.go | 24 ------------------------
 1 file changed, 24 deletions(-)

diff --git a/src/cmd/go/internal/load/path.go b/src/cmd/go/internal/load/path.go
index 0211b284a4..584cdff891 100644
--- a/src/cmd/go/internal/load/path.go
+++ b/src/cmd/go/internal/load/path.go
@@ -6,32 +6,8 @@ package load
 
 import (
 	"path/filepath"
-	"strings"
 )
 
-// hasSubdir reports whether dir is a subdirectory of
-// (possibly multiple levels below) root.
-// If so, it sets rel to the path fragment that must be
-// appended to root to reach dir.
-func hasSubdir(root, dir string) (rel string, ok bool) {
-	if p, err := filepath.EvalSymlinks(root); err == nil {
-		root = p
-	}
-	if p, err := filepath.EvalSymlinks(dir); err == nil {
-		dir = p
-	}
-	const sep = string(filepath.Separator)
-	root = filepath.Clean(root)
-	if !strings.HasSuffix(root, sep) {
-		root += sep
-	}
-	dir = filepath.Clean(dir)
-	if !strings.HasPrefix(dir, root) {
-		return "", false
-	}
-	return filepath.ToSlash(dir[len(root):]), true
-}
-
 // expandPath returns the symlink-expanded form of path.
 func expandPath(p string) string {
 	x, err := filepath.EvalSymlinks(p)
