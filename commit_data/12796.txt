commit efb134f8bf8fb22de6e5f0e8ad4e62d8a3671680
Author: Rob Pike <r@golang.org>
Date:   Fri Mar 30 13:07:10 2012 +1100

    cmd/go: update docs about tags for get command
    "go1" dominates. Delete the text about weekly and release.
    We can revisit this once the situation changes.
    
    R=golang-dev, rsc
    CC=golang-dev
    https://golang.org/cl/5969043
---
 src/cmd/go/doc.go | 14 +++++---------
 src/cmd/go/get.go | 14 +++++---------
 2 files changed, 10 insertions(+), 18 deletions(-)

diff --git a/src/cmd/go/doc.go b/src/cmd/go/doc.go
index 4bfd5236d8..32ede39649 100644
--- a/src/cmd/go/doc.go
+++ b/src/cmd/go/doc.go
@@ -227,15 +227,11 @@ The -u flag instructs get to use the network to update the named packages
 and their dependencies.  By default, get uses the network to check out
 missing packages but does not use it to look for updates to existing packages.
 
-When checking out or updating a package, get looks for a branch or
-tag that matches the locally installed version of Go. If the local
-version "is release.rNN", it searches for "go.rNN". (For an
-installation using Go version "weekly.YYYY-MM-DD", it searches for a
-package version labeled "go.YYYY-MM-DD".)  If the desired version
-cannot be found but others exist with labels in the correct format,
-get retrieves the most recent version before the desired label.
-Finally, if all else fails it retrieves the most recent version of
-the package.
+When checking out or updating a package, get looks for a branch or tag
+that matches the locally installed version of Go. The most important
+rule is that if the local installation is running version "go1", get
+searches for a branch or tag named "go1". If no such version exists it
+retrieves the most recent version of the package.
 
 For more about specifying packages, see 'go help packages'.
 
diff --git a/src/cmd/go/get.go b/src/cmd/go/get.go
index f70b6761de..97a6d8dc74 100644
--- a/src/cmd/go/get.go
+++ b/src/cmd/go/get.go
@@ -37,15 +37,11 @@ The -u flag instructs get to use the network to update the named packages
 and their dependencies.  By default, get uses the network to check out
 missing packages but does not use it to look for updates to existing packages.
 
-When checking out or updating a package, get looks for a branch or
-tag that matches the locally installed version of Go. If the local
-version "is release.rNN", it searches for "go.rNN". (For an
-installation using Go version "weekly.YYYY-MM-DD", it searches for a
-package version labeled "go.YYYY-MM-DD".)  If the desired version
-cannot be found but others exist with labels in the correct format,
-get retrieves the most recent version before the desired label.
-Finally, if all else fails it retrieves the most recent version of
-the package.
+When checking out or updating a package, get looks for a branch or tag
+that matches the locally installed version of Go. The most important
+rule is that if the local installation is running version "go1", get
+searches for a branch or tag named "go1". If no such version exists it
+retrieves the most recent version of the package.
 
 For more about specifying packages, see 'go help packages'.
 
