commit 50c7783f599d3af0e65f1c301c7ff05f6876def7
Author: Seth Vargo <sethvargo@gmail.com>
Date:   Thu Jan 19 13:19:22 2017 -0500

    text/template: remove duplicate logic in conditional
    
    It looks like this conditional may have been refactored at some point,
    but the logic was still very confusing. The outer conditional checks if
    the function is variadic, so there's no need to verify that in the
    result. Additionally, since the function isn't variadic, there is no
    reason to permit the function call if the number of input arguments is
    less than the function signature requires.
    
    Change-Id: Ia957cf83d1c900c08dd66384efcb74f0c368422e
    Reviewed-on: https://go-review.googlesource.com/35491
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/text/template/exec.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/text/template/exec.go b/src/text/template/exec.go
index ea964dc2bc..7d92bd9d36 100644
--- a/src/text/template/exec.go
+++ b/src/text/template/exec.go
@@ -628,7 +628,7 @@ func (s *state) evalCall(dot, fun reflect.Value, node parse.Node, name string, a
 		if numIn < numFixed {
 			s.errorf("wrong number of args for %s: want at least %d got %d", name, typ.NumIn()-1, len(args))
 		}
-	} else if numIn < typ.NumIn()-1 || !typ.IsVariadic() && numIn != typ.NumIn() {
+	} else if numIn != typ.NumIn() {
 		s.errorf("wrong number of args for %s: want %d got %d", name, typ.NumIn(), len(args))
 	}
 	if !goodFunc(typ) {
