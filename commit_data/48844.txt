commit e57da8e53cadd2f456c6a9457beabd1b4659fc1f
Author: Cuong Manh Le <cuong.manhle.vn@gmail.com>
Date:   Sun Jun 20 22:17:19 2021 +0700

    [dev.typeparams] cmd/compile: explain why reader.funcExt need to set n.Defn
    
    Change-Id: I1a7d669879af57a1c1f48ce63ff0d214b694e680
    Reviewed-on: https://go-review.googlesource.com/c/go/+/329572
    Trust: Cuong Manh Le <cuong.manhle.vn@gmail.com>
    Run-TryBot: Cuong Manh Le <cuong.manhle.vn@gmail.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
---
 src/cmd/compile/internal/noder/reader.go | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/cmd/compile/internal/noder/reader.go b/src/cmd/compile/internal/noder/reader.go
index ad3cc25fd0..4fc9e7a777 100644
--- a/src/cmd/compile/internal/noder/reader.go
+++ b/src/cmd/compile/internal/noder/reader.go
@@ -741,8 +741,13 @@ func (r *reader) funcExt(name *ir.Name) {
 		fn.SetPos(name.Pos())
 	}
 
-	// TODO(mdempsky): Remember why I wrote this code. I think it has to
-	// do with how ir.VisitFuncsBottomUp works?
+	// Normally, we only compile local functions, which saves redundant compilation work.
+	// n.Defn is not nil for local functions, and is nil for imported function. But for
+	// generic functions, we might have an instantiation that no other package has seen before.
+	// So we need to be conservative and compile it again.
+	//
+	// That's why name.Defn is set here, so ir.VisitFuncsBottomUp can analyze function.
+	// TODO(mdempsky,cuonglm): find a cleaner way to handle this.
 	if name.Sym().Pkg == types.LocalPkg || r.hasTypeParams() {
 		name.Defn = fn
 	}
