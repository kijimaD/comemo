commit ded94b7222eb9ffc7c3a46d4420c12f531f63304
Author: Rob Pike <r@golang.org>
Date:   Wed Sep 26 20:46:49 2012 +1000

    reflect.DeepEqual: rewrite clarification about nil and empty slice.
    The previous version was created by an idiot. This time, Rog Peppe
    wrote the text. Thanks, Rog.
    (== doesn't work on slices in general, so it makes no sense to
    talk about in the context of DeepEqual.)
    
    R=golang-dev, dsymonds
    CC=golang-dev
    https://golang.org/cl/6566054
---
 src/pkg/reflect/deepequal.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/pkg/reflect/deepequal.go b/src/pkg/reflect/deepequal.go
index 8ca20750a9..cd364dd9fd 100644
--- a/src/pkg/reflect/deepequal.go
+++ b/src/pkg/reflect/deepequal.go
@@ -125,7 +125,7 @@ func deepValueEqual(v1, v2 Value, visited map[uintptr]*visit, depth int) (b bool
 // DeepEqual tests for deep equality. It uses normal == equality where possible
 // but will scan members of arrays, slices, maps, and fields of structs. It correctly
 // handles recursive types. Functions are equal only if they are both nil.
-// Note: unlike regular ==, DeepEqual distinguishes an empty slice from a nil slice.
+// An empty slice is not equal to a nil slice.
 func DeepEqual(a1, a2 interface{}) bool {
 	if a1 == nil || a2 == nil {
 		return a1 == a2
