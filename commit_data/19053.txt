commit a2a351478bb223891ebe8c1ae09c6ad09648f138
Author: Mikio Hara <mikioh.mikioh@gmail.com>
Date:   Tue Apr 8 06:14:49 2014 +0900

    net: move error messages related to OpError into net.go
    
    Also makes ErrWriteToConnected more appropriate; it's used
    not only UDPConn operations but UnixConn operations.
    
    Update #4856
    
    LGTM=iant
    R=golang-codereviews, iant
    CC=golang-codereviews
    https://golang.org/cl/84800044
---
 src/pkg/net/net.go     | 15 ++++++++++-----
 src/pkg/net/udpsock.go |  4 ----
 2 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/src/pkg/net/net.go b/src/pkg/net/net.go
index 2e6db55514..ca56af54fc 100644
--- a/src/pkg/net/net.go
+++ b/src/pkg/net/net.go
@@ -275,7 +275,16 @@ type Listener interface {
 	Addr() Addr
 }
 
-var errMissingAddress = errors.New("missing address")
+// Various errors contained in OpError.
+var (
+	// For connection setup and write operations.
+	errMissingAddress = errors.New("missing address")
+
+	// For both read and write operations.
+	errTimeout          error = &timeoutError{}
+	errClosing                = errors.New("use of closed network connection")
+	ErrWriteToConnected       = errors.New("use of WriteTo with pre-connected connection")
+)
 
 // OpError is the error type usually returned by functions in the net
 // package. It describes the operation, network type, and address of
@@ -337,10 +346,6 @@ func (e *timeoutError) Error() string   { return "i/o timeout" }
 func (e *timeoutError) Timeout() bool   { return true }
 func (e *timeoutError) Temporary() bool { return true }
 
-var errTimeout error = &timeoutError{}
-
-var errClosing = errors.New("use of closed network connection")
-
 type AddrError struct {
 	Err  string
 	Addr string
diff --git a/src/pkg/net/udpsock.go b/src/pkg/net/udpsock.go
index 0dd0dbd711..4c99ae4af6 100644
--- a/src/pkg/net/udpsock.go
+++ b/src/pkg/net/udpsock.go
@@ -4,10 +4,6 @@
 
 package net
 
-import "errors"
-
-var ErrWriteToConnected = errors.New("use of WriteTo with pre-connected UDP")
-
 // UDPAddr represents the address of a UDP end point.
 type UDPAddr struct {
 	IP   IP
