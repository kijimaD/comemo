commit 1cdabf0c8b1297a1b82fda975f9313f69b77b262
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Wed May 11 12:44:06 2022 -0700

    runtime: avoid staticinit dependency with sigsetAllExiting
    
    Currently, package runtime runs `osinit` before dynamic initialization
    of package-scope variables; but on GOOS=linux, `osinit` involves
    mutating `sigsetAllExiting`.
    
    This currently works because cmd/compile and gccgo have
    non-spec-conforming optimizations that statically initialize
    `sigsetAllExiting`, but disabling that optimization causes
    `sigsetAllExiting` to be dynamically initialized instead. This in turn
    causes the mutations in `osinit` to get lost.
    
    This CL moves the initialization of `sigsetAllExiting` from `osinit`
    into its initialization expression, and then removes the special case
    for continuing to perform the static-initialization optimization for
    package runtime.
    
    Updates #51913.
    
    Change-Id: I3be31454277c103372c9701d227dc774b2311dad
    Reviewed-on: https://go-review.googlesource.com/c/go/+/405549
    Auto-Submit: Matthew Dempsky <mdempsky@google.com>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>
    Reviewed-by: Heschi Kreinick <heschi@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>

 src/runtime/os_linux.go    | 18 ------------------
 src/runtime/signal_unix.go | 32 ++++++++++++++++++++++++++++----
 2 files changed, 28 insertions(+), 22 deletions(-)
