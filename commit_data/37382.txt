commit 48c79734ffc69c7137d5944eb6403b47075cfb77
Author: Cherry Zhang <cherryyz@google.com>
Date:   Fri Jul 20 14:25:31 2018 -0400

    test: add test for gccgo bug #26495
    
    Gccgo produced incorrect order of evaluation for expressions
    involving &&, || subexpressions. The fix is CL 125299.
    
    Updates #26495.
    
    Change-Id: I18d873281709f3160b3e09f0b2e46f5c120e1cab
    Reviewed-on: https://go-review.googlesource.com/125301
    Run-TryBot: Cherry Zhang <cherryyz@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 test/fixedbugs/issue26495.go | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/test/fixedbugs/issue26495.go b/test/fixedbugs/issue26495.go
new file mode 100644
index 0000000000..11ea360173
--- /dev/null
+++ b/test/fixedbugs/issue26495.go
@@ -0,0 +1,36 @@
+// run
+
+// Copyright 2018 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Issue 26495: gccgo produces incorrect order of evaluation
+// for expressions involving &&, || subexpressions.
+
+package main
+
+var i int
+
+func checkorder(order int) {
+	if i != order {
+		panic("FAIL: wrong evaluation order")
+	}
+	i++
+}
+
+func A() bool              { checkorder(1); return true }
+func B() bool              { checkorder(2); return true }
+func C() bool              { checkorder(5); return false }
+func D() bool              { panic("FAIL: D should not be called") }
+func E() int               { checkorder(3); return 0 }
+func F() int               { checkorder(0); return 0 }
+func G(bool) int           { checkorder(9); return 0 }
+func H(int, bool, int) int { checkorder(7); return 0 }
+func I(int) bool           { checkorder(8); return true }
+func J() int               { checkorder(4); return 0 }
+func K() int               { checkorder(6); return 0 }
+func L() int               { checkorder(10); return 0 }
+
+func main() {
+	_ = F() + G(A() && B() && I(E()+H(J(), C() && D(), K()))) + L()
+}
