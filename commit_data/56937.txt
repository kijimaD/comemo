commit 990113f3a0285f3ea2fdb590f61e835bf41ba1dc
Author: Ian Lance Taylor <iant@golang.org>
Date:   Thu Jun 1 09:00:46 2023 -0700

    doc/go1.21: reformat flag init change note
    
    It reads better as a single paragraph. Also added links.
    
    Change-Id: Id6ba54111b63fbd536423272f674e0eb64b087a7
    Reviewed-on: https://go-review.googlesource.com/c/go/+/499956
    TryBot-Bypass: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Keith Randall <khr@google.com>
    Reviewed-by: Keith Randall <khr@golang.org>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
---
 doc/go1.21.html | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

diff --git a/doc/go1.21.html b/doc/go1.21.html
index 14ce575df1..6961581776 100644
--- a/doc/go1.21.html
+++ b/doc/go1.21.html
@@ -568,9 +568,19 @@ Do not send CLs removing the interior tags from such phrases.
     </p>
 
     <p><!-- CL 480215 -->
-      A flag definition (via <code>Bool</code>, <code>BoolVar</code>, <code>Int</code>, <code>IntVar</code>, etc.) will panic if <code>Set</code> has already been called on a flag with the same name.
-      <p>
-      This change is intended to detect cases where <a href="#language">changes in initialization order</a> cause flag operations to occur in a different order than expected. In many cases the fix to this problem is to introduce a explicit package dependence to correctly order the definition before any <code>Set</code> operations.
+      A flag definition
+      (via <a href="/pkg/flag/#Bool"><code>Bool</code></a>,
+      <a href="/pkg/flag/#BoolVar"><code>BoolVar</code></a>,
+      <a href="/pkg/flag/#Int"><code>Int</code></a>,
+      <a href="/pkg/flag/#IntVar"><code>IntVar</code></a>, etc.)
+      will panic if <a href="/pkg/flag/#Set"><code>Set</code></a> has
+      already been called on a flag with the same name. This change is
+      intended to detect cases where <a href="#language">changes in
+      initialization order</a> cause flag operations to occur in a
+      different order than expected. In many cases the fix to this
+      problem is to introduce a explicit package dependence to
+      correctly order the definition before any
+      <a href="/pkg/flag/#Set"><code>Set</code></a> operations.
     </p>
   </dd>
 </dl><!-- flag -->
