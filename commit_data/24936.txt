commit 90e26f52c6d2012d293ebfe8d272f03462213045
Author: Michael Hudson-Doyle <michael.hudson@canonical.com>
Date:   Tue Nov 17 20:00:20 2015 +1300

    runtime, syscall: use int $0x80 to invoke syscalls on android/386
    
    golang.org/cl/16796 broke android/386 by assuming behaviour specific to glibc's
    dynamic linker. Copy bionic by using int $0x80 to invoke syscalls on
    android/386 as the old alternative (CALL *runtime_vdso(SB)) cannot be compiled
    without text relocations, which we want to get rid of on android.
    
    Also remove "CALL *runtime_vdso(SB)" variant from the syscall package.
    
    Change-Id: I6c01849f8dcbd073d000ddc8f13948a836b8b261
    Reviewed-on: https://go-review.googlesource.com/16996
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: David Crawshaw <crawshaw@golang.org>
    Reviewed-by: Hyang-Ah Hana Kim <hyangah@gmail.com>

 src/runtime/sys_linux_386.s | 93 ++++++++++++++++++++++++++-------------------
 src/syscall/asm_linux_386.s | 27 +++++++++----
 2 files changed, 73 insertions(+), 47 deletions(-)
