commit da64b60c7eea880ccdeda2dfdf1b9af9a4a6fcc7
Author: changwang ma <machangwang.cn@gmail.com>
Date:   Fri Oct 25 23:46:35 2024 +0800

    runtime: fix typo in comment
    
    Change-Id: I85f518e36c18f4f0eda8b167750b43cd8c48ecff
    Reviewed-on: https://go-review.googlesource.com/c/go/+/622675
    Auto-Submit: Dmitri Shuralyov <dmitshur@golang.org>
    Reviewed-by: Austin Clements <austin@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Dmitri Shuralyov <dmitshur@google.com>
---
 src/runtime/mheap.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/runtime/mheap.go b/src/runtime/mheap.go
index 7e6c284423..775e9dee8d 100644
--- a/src/runtime/mheap.go
+++ b/src/runtime/mheap.go
@@ -431,12 +431,12 @@ type mspan struct {
 	// indicating a free object. freeindex is then adjusted so that subsequent scans begin
 	// just past the newly discovered free object.
 	//
-	// If freeindex == nelem, this span has no free objects.
+	// If freeindex == nelems, this span has no free objects.
 	//
 	// allocBits is a bitmap of objects in this span.
 	// If n >= freeindex and allocBits[n/8] & (1<<(n%8)) is 0
 	// then object n is free;
-	// otherwise, object n is allocated. Bits starting at nelem are
+	// otherwise, object n is allocated. Bits starting at nelems are
 	// undefined and should never be referenced.
 	//
 	// Object n starts at address n*elemsize + (start << pageShift).
