commit cd28ca3a4e130c88dd8f2d198050620b11d22ce4
Author: Michael Anthony Knyszek <mknyszek@google.com>
Date:   Tue May 4 16:00:08 2021 +0000

    runtime: abort when receiving a signal on a non-Go thread on Windows
    
    Currently if a signal lands on a non-Go thread that's handled by the Go
    handler, Go will emit a message. However, unlike everywhere else in the
    runtime, Go will not abort the process after, and the signal handler
    will try to continue executing.
    
    This leads to cascading failures and possibly even memory corruption.
    
    For #45638.
    
    Change-Id: I546f4e82f339d555bed295528d819ac883b92bc6
    Reviewed-on: https://go-review.googlesource.com/c/go/+/316809
    Trust: Michael Knyszek <mknyszek@google.com>
    Run-TryBot: Michael Knyszek <mknyszek@google.com>
    Reviewed-by: Cherry Zhang <cherryyz@google.com>

 src/runtime/sys_windows_386.s   | 4 +++-
 src/runtime/sys_windows_amd64.s | 2 ++
 src/runtime/sys_windows_arm.s   | 4 ++--
 src/runtime/sys_windows_arm64.s | 4 +++-
 4 files changed, 10 insertions(+), 4 deletions(-)
