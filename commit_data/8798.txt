commit 028f74f8273204ac47170c471bf8ed0b85cdacba
Author: Anthony Martin <ality@pbrane.org>
Date:   Mon Jun 20 14:49:29 2011 -0400

    5g, 6g, 8g: fix comments in method call generation
    
    R=golang-dev
    CC=golang-dev
    https://golang.org/cl/4652042
---
 src/cmd/5g/ggen.c | 6 +++---
 src/cmd/6g/ggen.c | 6 +++---
 src/cmd/8g/ggen.c | 6 +++---
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/cmd/5g/ggen.c b/src/cmd/5g/ggen.c
index b19698cbd7..d5b00b34d5 100644
--- a/src/cmd/5g/ggen.c
+++ b/src/cmd/5g/ggen.c
@@ -173,13 +173,13 @@ cgen_callinter(Node *n, Node *res, int proc)
 	nodindreg(&nodsp, types[tptr], REGSP);
 	nodsp.xoffset = 4;
 	nodo.xoffset += widthptr;
-	cgen(&nodo, &nodsp);	// 4(SP) = 8(REG) -- i.s
+	cgen(&nodo, &nodsp);	// 4(SP) = 4(REG) -- i.data
 
 	nodo.xoffset -= widthptr;
-	cgen(&nodo, &nodr);	// REG = 0(REG) -- i.m
+	cgen(&nodo, &nodr);	// REG = 0(REG) -- i.tab
 
 	nodo.xoffset = n->left->xoffset + 3*widthptr + 8;
-	cgen(&nodo, &nodr);	// REG = 32+offset(REG) -- i.m->fun[f]
+	cgen(&nodo, &nodr);	// REG = 20+offset(REG) -- i.tab->fun[f]
 
 	// BOTCH nodr.type = fntype;
 	nodr.type = n->left->type;
diff --git a/src/cmd/6g/ggen.c b/src/cmd/6g/ggen.c
index 7922b2145f..9e7fbab0d6 100644
--- a/src/cmd/6g/ggen.c
+++ b/src/cmd/6g/ggen.c
@@ -128,13 +128,13 @@ cgen_callinter(Node *n, Node *res, int proc)
 
 	nodindreg(&nodsp, types[tptr], D_SP);
 	nodo.xoffset += widthptr;
-	cgen(&nodo, &nodsp);	// 0(SP) = 8(REG) -- i.s
+	cgen(&nodo, &nodsp);	// 0(SP) = 8(REG) -- i.data
 
 	nodo.xoffset -= widthptr;
-	cgen(&nodo, &nodr);	// REG = 0(REG) -- i.m
+	cgen(&nodo, &nodr);	// REG = 0(REG) -- i.tab
 
 	nodo.xoffset = n->left->xoffset + 3*widthptr + 8;
-	cgen(&nodo, &nodr);	// REG = 32+offset(REG) -- i.m->fun[f]
+	cgen(&nodo, &nodr);	// REG = 32+offset(REG) -- i.tab->fun[f]
 
 	// BOTCH nodr.type = fntype;
 	nodr.type = n->left->type;
diff --git a/src/cmd/8g/ggen.c b/src/cmd/8g/ggen.c
index 89a5e42697..6db0474c99 100644
--- a/src/cmd/8g/ggen.c
+++ b/src/cmd/8g/ggen.c
@@ -167,15 +167,15 @@ cgen_callinter(Node *n, Node *res, int proc)
 
 	nodindreg(&nodsp, types[tptr], D_SP);
 	nodo.xoffset += widthptr;
-	cgen(&nodo, &nodsp);	// 0(SP) = 8(REG) -- i.s
+	cgen(&nodo, &nodsp);	// 0(SP) = 4(REG) -- i.data
 
 	nodo.xoffset -= widthptr;
-	cgen(&nodo, &nodr);	// REG = 0(REG) -- i.m
+	cgen(&nodo, &nodr);	// REG = 0(REG) -- i.tab
 
 	if(n->left->xoffset == BADWIDTH)
 		fatal("cgen_callinter: badwidth");
 	nodo.xoffset = n->left->xoffset + 3*widthptr + 8;
-	cgen(&nodo, &nodr);	// REG = 32+offset(REG) -- i.m->fun[f]
+	cgen(&nodo, &nodr);	// REG = 20+offset(REG) -- i.tab->fun[f]
 
 	// BOTCH nodr.type = fntype;
 	nodr.type = n->left->type;
