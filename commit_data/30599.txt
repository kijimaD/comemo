commit 1b66b38e25af567aa30a7b22581c05285be3564a
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Tue Nov 15 20:16:15 2016 -0500

    api, doc: update go1.8.txt and next.txt
    
    Both automated updates with a few tweaks.
    
    Change-Id: I24579a8dcc32a84a4fff5c2212681ef30dda61d1
    Reviewed-on: https://go-review.googlesource.com/33297
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 api/next.txt  | 82 +++++++++++++++++++++++++++++++++++++++++++++++++++--------
 doc/go1.8.txt | 40 +++++++++++++++++++++++++++--
 2 files changed, 110 insertions(+), 12 deletions(-)

diff --git a/api/next.txt b/api/next.txt
index 13277fcae4..449e408579 100644
--- a/api/next.txt
+++ b/api/next.txt
@@ -2,6 +2,26 @@ pkg compress/gzip, const HuffmanOnly = -2
 pkg compress/gzip, const HuffmanOnly ideal-int
 pkg compress/zlib, const HuffmanOnly = -2
 pkg compress/zlib, const HuffmanOnly ideal-int
+pkg crypto/tls, const ECDSAWithP256AndSHA256 = 1027
+pkg crypto/tls, const ECDSAWithP256AndSHA256 SignatureScheme
+pkg crypto/tls, const ECDSAWithP384AndSHA384 = 1283
+pkg crypto/tls, const ECDSAWithP384AndSHA384 SignatureScheme
+pkg crypto/tls, const ECDSAWithP521AndSHA512 = 1539
+pkg crypto/tls, const ECDSAWithP521AndSHA512 SignatureScheme
+pkg crypto/tls, const PKCS1WithSHA1 = 513
+pkg crypto/tls, const PKCS1WithSHA1 SignatureScheme
+pkg crypto/tls, const PKCS1WithSHA256 = 1025
+pkg crypto/tls, const PKCS1WithSHA256 SignatureScheme
+pkg crypto/tls, const PKCS1WithSHA384 = 1281
+pkg crypto/tls, const PKCS1WithSHA384 SignatureScheme
+pkg crypto/tls, const PKCS1WithSHA512 = 1537
+pkg crypto/tls, const PKCS1WithSHA512 SignatureScheme
+pkg crypto/tls, const PSSWithSHA256 = 2052
+pkg crypto/tls, const PSSWithSHA256 SignatureScheme
+pkg crypto/tls, const PSSWithSHA384 = 2053
+pkg crypto/tls, const PSSWithSHA384 SignatureScheme
+pkg crypto/tls, const PSSWithSHA512 = 2054
+pkg crypto/tls, const PSSWithSHA512 SignatureScheme
 pkg crypto/tls, const TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 49187
 pkg crypto/tls, const TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 uint16
 pkg crypto/tls, const TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305 = 52393
@@ -15,13 +35,19 @@ pkg crypto/tls, const TLS_RSA_WITH_AES_128_CBC_SHA256 uint16
 pkg crypto/tls, const X25519 = 29
 pkg crypto/tls, const X25519 CurveID
 pkg crypto/tls, method (*Config) Clone() *Config
+pkg crypto/tls, method (*Conn) CloseWrite() error
+pkg crypto/tls, type CertificateRequestInfo struct
+pkg crypto/tls, type CertificateRequestInfo struct, AcceptableCAs [][]uint8
+pkg crypto/tls, type CertificateRequestInfo struct, SignatureSchemes []SignatureScheme
 pkg crypto/tls, type ClientHelloInfo struct, Conn net.Conn
-pkg crypto/tls, type ClientHelloInfo struct, SignatureSchemes []uint16
+pkg crypto/tls, type ClientHelloInfo struct, SignatureSchemes []SignatureScheme
 pkg crypto/tls, type ClientHelloInfo struct, SupportedProtos []string
 pkg crypto/tls, type ClientHelloInfo struct, SupportedVersions []uint16
+pkg crypto/tls, type Config struct, GetClientCertificate func(*CertificateRequestInfo) (*Certificate, error)
 pkg crypto/tls, type Config struct, GetConfigForClient func(*ClientHelloInfo) (*Config, error)
 pkg crypto/tls, type Config struct, KeyLogWriter io.Writer
 pkg crypto/tls, type Config struct, VerifyPeerCertificate func([][]uint8, [][]*x509.Certificate) error
+pkg crypto/tls, type SignatureScheme uint16
 pkg crypto/x509, const NameMismatch = 5
 pkg crypto/x509, const NameMismatch InvalidReason
 pkg crypto/x509, const SHA256WithRSAPSS = 13
@@ -30,7 +56,26 @@ pkg crypto/x509, const SHA384WithRSAPSS = 14
 pkg crypto/x509, const SHA384WithRSAPSS SignatureAlgorithm
 pkg crypto/x509, const SHA512WithRSAPSS = 15
 pkg crypto/x509, const SHA512WithRSAPSS SignatureAlgorithm
+pkg crypto/x509, type UnknownAuthorityError struct, Cert *Certificate
+pkg database/sql, const LevelDefault = 0
+pkg database/sql, const LevelDefault IsolationLevel
+pkg database/sql, const LevelLinearizable = 7
+pkg database/sql, const LevelLinearizable IsolationLevel
+pkg database/sql, const LevelReadCommitted = 2
+pkg database/sql, const LevelReadCommitted IsolationLevel
+pkg database/sql, const LevelReadUncommitted = 1
+pkg database/sql, const LevelReadUncommitted IsolationLevel
+pkg database/sql, const LevelRepeatableRead = 4
+pkg database/sql, const LevelRepeatableRead IsolationLevel
+pkg database/sql, const LevelSerializable = 6
+pkg database/sql, const LevelSerializable IsolationLevel
+pkg database/sql, const LevelSnapshot = 5
+pkg database/sql, const LevelSnapshot IsolationLevel
+pkg database/sql, const LevelWriteCommitted = 3
+pkg database/sql, const LevelWriteCommitted IsolationLevel
+pkg database/sql, func IsolationContext(context.Context, IsolationLevel) context.Context
 pkg database/sql, func Param(string, interface{}) NamedParam
+pkg database/sql, func ReadOnlyContext(context.Context) context.Context
 pkg database/sql, method (*ColumnType) DatabaseTypeName() string
 pkg database/sql, method (*ColumnType) DecimalSize() (int64, int64, bool)
 pkg database/sql, method (*ColumnType) Length() (int64, bool)
@@ -54,19 +99,25 @@ pkg database/sql, method (*Tx) QueryContext(context.Context, string, ...interfac
 pkg database/sql, method (*Tx) QueryRowContext(context.Context, string, ...interface{}) *Row
 pkg database/sql, method (*Tx) StmtContext(context.Context, *Stmt) *Stmt
 pkg database/sql, type ColumnType struct
+pkg database/sql, type IsolationLevel int
 pkg database/sql, type NamedParam struct
 pkg database/sql, type NamedParam struct, Name string
 pkg database/sql, type NamedParam struct, Value interface{}
+pkg database/sql/driver, func IsolationFromContext(context.Context) (IsolationLevel, bool)
+pkg database/sql/driver, func ReadOnlyFromContext(context.Context) bool
 pkg database/sql/driver, type ConnBeginContext interface { BeginContext }
 pkg database/sql/driver, type ConnBeginContext interface, BeginContext(context.Context) (Tx, error)
 pkg database/sql/driver, type ConnPrepareContext interface { PrepareContext }
 pkg database/sql/driver, type ConnPrepareContext interface, PrepareContext(context.Context, string) (Stmt, error)
 pkg database/sql/driver, type ExecerContext interface { ExecContext }
 pkg database/sql/driver, type ExecerContext interface, ExecContext(context.Context, string, []NamedValue) (Result, error)
+pkg database/sql/driver, type IsolationLevel int
 pkg database/sql/driver, type NamedValue struct
 pkg database/sql/driver, type NamedValue struct, Name string
 pkg database/sql/driver, type NamedValue struct, Ordinal int
 pkg database/sql/driver, type NamedValue struct, Value Value
+pkg database/sql/driver, type Pinger interface { Ping }
+pkg database/sql/driver, type Pinger interface, Ping(context.Context) error
 pkg database/sql/driver, type QueryerContext interface { QueryContext }
 pkg database/sql/driver, type QueryerContext interface, QueryContext(context.Context, string, []NamedValue) (Rows, error)
 pkg database/sql/driver, type RowsColumnTypeDatabaseTypeName interface { Close, ColumnTypeDatabaseTypeName, Columns, Next }
@@ -116,6 +167,7 @@ pkg debug/pe, type Reloc struct, VirtualAddress uint32
 pkg debug/pe, type Section struct, Relocs []Reloc
 pkg debug/pe, type StringTable []uint8
 pkg encoding/base64, method (Encoding) Strict() *Encoding
+pkg encoding/json, method (RawMessage) MarshalJSON() ([]uint8, error)
 pkg encoding/json, type UnmarshalTypeError struct, Field string
 pkg encoding/json, type UnmarshalTypeError struct, Struct string
 pkg expvar, func Handler() http.Handler
@@ -123,17 +175,8 @@ pkg expvar, method (*Float) Value() float64
 pkg expvar, method (*Int) Value() int64
 pkg expvar, method (*String) Value() string
 pkg expvar, method (Func) Value() interface{}
-pkg go/ast, method (*AliasSpec) End() token.Pos
-pkg go/ast, method (*AliasSpec) Pos() token.Pos
-pkg go/ast, type AliasSpec struct
-pkg go/ast, type AliasSpec struct, Comment *CommentGroup
-pkg go/ast, type AliasSpec struct, Doc *CommentGroup
-pkg go/ast, type AliasSpec struct, Name *Ident
-pkg go/ast, type AliasSpec struct, Orig Expr
 pkg go/build, type NoGoError struct, Ignored bool
 pkg go/doc, func IsPredeclared(string) bool
-pkg go/token, const ALIAS = 87
-pkg go/token, const ALIAS Token
 pkg go/types, func Default(Type) Type
 pkg go/types, func IdenticalIgnoreTags(Type, Type) bool
 pkg math/big, method (*Float) Scan(fmt.ScanState, int32) error
@@ -151,20 +194,31 @@ pkg net, method (*Resolver) LookupNS(context.Context, string) ([]*NS, error)
 pkg net, method (*Resolver) LookupPort(context.Context, string, string) (int, error)
 pkg net, method (*Resolver) LookupSRV(context.Context, string, string, string) (string, []*SRV, error)
 pkg net, method (*Resolver) LookupTXT(context.Context, string) ([]string, error)
+pkg net, method (*UnixListener) SetUnlinkOnClose(bool)
 pkg net, type Buffers [][]uint8
 pkg net, type Dialer struct, Resolver *Resolver
 pkg net, type Resolver struct
 pkg net, type Resolver struct, PreferGo bool
 pkg net, var DefaultResolver *Resolver
+pkg net/http, const TrailerPrefix = "Trailer:"
+pkg net/http, const TrailerPrefix ideal-string
+pkg net/http, method (*Server) Close() error
+pkg net/http, method (*Server) Shutdown(context.Context) error
 pkg net/http, type PushOptions struct
 pkg net/http, type PushOptions struct, Header Header
 pkg net/http, type PushOptions struct, Method string
 pkg net/http, type Pusher interface { Push }
 pkg net/http, type Pusher interface, Push(string, *PushOptions) error
 pkg net/http, type Request struct, GetBody func() (io.ReadCloser, error)
+pkg net/http, type Server struct, IdleTimeout time.Duration
+pkg net/http, type Server struct, ReadHeaderTimeout time.Duration
+pkg net/http, type Transport struct, ProxyConnectHeader Header
+pkg net/http, var ErrAbortHandler error
+pkg net/http, var ErrServerClosed error
 pkg net/http, var NoBody noBody
 pkg net/http/httptrace, type ClientTrace struct, TLSHandshakeDone func(tls.ConnectionState, error)
 pkg net/http/httptrace, type ClientTrace struct, TLSHandshakeStart func()
+pkg net/http/httputil, type ReverseProxy struct, ModifyResponse func(*http.Response) error
 pkg net/mail, func ParseDate(string) (time.Time, error)
 pkg net/url, func PathEscape(string) string
 pkg net/url, func PathUnescape(string) (string, error)
@@ -172,12 +226,15 @@ pkg net/url, method (*URL) Hostname() string
 pkg net/url, method (*URL) MarshalBinary() ([]uint8, error)
 pkg net/url, method (*URL) Port() string
 pkg net/url, method (*URL) UnmarshalBinary([]uint8) error
+pkg os, func Executable() (string, error)
 pkg os, var ErrClosed error
 pkg plugin, func Open(string) (*Plugin, error)
 pkg plugin, method (*Plugin) Lookup(string) (Symbol, error)
 pkg plugin, type Plugin struct
 pkg plugin, type Symbol interface {}
 pkg reflect, func Swapper(interface{}) func(int, int)
+pkg runtime, func MutexProfile([]BlockProfileRecord) (int, bool)
+pkg runtime, func SetMutexProfileFraction(int) int
 pkg sort, func Slice(interface{}, func(int, int) bool)
 pkg sort, func SliceIsSorted(interface{}, func(int, int) bool) bool
 pkg sort, func SliceStable(interface{}, func(int, int) bool)
@@ -187,7 +244,12 @@ pkg syscall (windows-386), const ERROR_DIR_NOT_EMPTY = 145
 pkg syscall (windows-386), const ERROR_DIR_NOT_EMPTY Errno
 pkg syscall (windows-amd64), const ERROR_DIR_NOT_EMPTY = 145
 pkg syscall (windows-amd64), const ERROR_DIR_NOT_EMPTY Errno
+pkg testing, func CoverMode() string
+pkg testing, func MainStart(testDeps, []InternalTest, []InternalBenchmark, []InternalExample) *M
+pkg testing, method (*B) Context() context.Context
 pkg testing, method (*B) Name() string
+pkg testing, method (*T) Context() context.Context
 pkg testing, method (*T) Name() string
+pkg testing, type TB interface, Context() context.Context
 pkg testing, type TB interface, Name() string
 pkg time, func Until(Time) Duration
diff --git a/doc/go1.8.txt b/doc/go1.8.txt
index ce2d55ea90..95a1db7eaf 100644
--- a/doc/go1.8.txt
+++ b/doc/go1.8.txt
@@ -5,6 +5,7 @@ Many ppc64, s390x, arm, arm64 optimizations
 New frontend
 Improvements to binary size, runtime speed, compile speed.
 Hybrid barrier. <100us GC pauses.
+cmd/compile: args no longer live until end of function - use runtime.KeepAlive instead (CL 28310)
 
 Language:
 
@@ -36,7 +37,9 @@ archive/tar: reapply Header.Size to regFileReader after merging (CL 28418)
 archive/tar: validate sparse headers in parsePAX (CL 31439)
 archive/zip: handle mtime in NTFS/UNIX/ExtendedTS extra fields (CL 18274)
 archive/zip: only use Extended Timestamp on non-zero MS-DOS timestamps (CL 30811)
+cmd/cgo: add #line directives to avoid printing bogus references to Go source files (CL 32613)
 cmd/cgo: add -srcdir option (CL 32354)
+cmd/cgo: don't ignore qualifiers, don't cast to void* (CL 33097)
 cmd/cgo: fix line info in _cgo_gotypes.go (CL 29713)
 cmd/cgo: throw if C.malloc returns nil (CL 31768)
 cmd/compile, runtime, etc: get rid of constant FP registers (CL 28095)
@@ -48,7 +51,7 @@ cmd/compile: add SSA backend for s390x and enable by default (CL 28978)
 cmd/compile: add compiler phase timing (CL 24462)
 cmd/compile: add go:notinheap type pragma (CL 30939)
 cmd/compile: add inline explainer (CL 22782)
-cmd/compile: args no longer live until end of function - use runtime.KeepAlive instead (CL 28310)
+cmd/compile: do more type conversion inline (CL 32313)
 cmd/compile: enable flag-specified dump of specific phase+function (CL 23044)
 cmd/compile: fail gracefully on export format skew (CL 27814)
 cmd/compile: import/export of alias declarations (CL 32090)
@@ -58,6 +61,7 @@ cmd/compile: remove -A flag (CL 31497)
 cmd/compile: remove old lexer and parser (CL 32020)
 cmd/compile: remove support for textual export format (CL 27171)
 cmd/cover: Fix compiler directives handling (CL 30161)
+cmd/cover: change covered block for switch/select case to exclude expression (CL 32612)
 cmd/cover: handle gotos (CL 30977)
 cmd/dist, go/build: make CGO_ENABLED during make.bash sticky (CL 31141)
 cmd/dist: enable plugin test on darwin/amd64 (CL 29396)
@@ -77,6 +81,8 @@ cmd/go: make bug subcommand open the browser (CL 29210)
 cmd/go: make go test -i -o x.test actually write x.test (CL 31352)
 cmd/go: print more env variables in "go env" (CL 31330)
 cmd/go: referee another vendor vs symlink fight (CL 31665)
+cmd/go: use cgo -srcdir when using SWIG (CL 32485)
+cmd/gofmt: don't eat source if -w fails (CL 33018)
 cmd/internal/obj, cmd/link: darwin dynlink support (CL 29393)
 cmd/internal/objfile: add ppc64/ppc64le disassembler support (CL 9682)
 cmd/link, cmd/go: delay linking of mingwex and mingw32 until very end (CL 26670)
@@ -85,6 +91,7 @@ cmd/link: add trampolines for too far calls in ppc64x (CL 30850)
 cmd/link: allow internal PIE linking (CL 28543)
 cmd/link: fix -X importpath.name=value when import path needs escaping (CL 31970)
 cmd/link: fix -buildmode=pie / -linkshared combination (CL 28996)
+cmd/link: for -buildmode=exe pass -no-pie to external linker (CL 33106)
 cmd/link: insert trampolines for too-far jumps on ARM (CL 29397)
 cmd/link: non-executable stack support for Solaris (CL 24142)
 cmd/link: plugin support on darwin/amd64 (CL 29394)
@@ -93,6 +100,8 @@ cmd/link: remove the -shared flag (CL 28852)
 cmd/link: split large elf text sections on ppc64x (CL 27790)
 cmd/link: trampoline support for external linking on ARM (CL 31143)
 cmd/objdump: implement objdump of .o files (CL 24818)
+cmd/pprof: add options to skip tls verification (CL 33157)
+cmd/pprof: don't print binary outputs in interactive mode (CL 31123)
 cmd/pprof: instruction-level granularity in callgrind output (CL 23781)
 cmd/trace: add option to output pprof files (CL 23324)
 cmd/trace: fix a runnable goroutine count bug (CL 25552)
@@ -102,6 +111,7 @@ cmd/vet: allow ^& uintptr arithmetic (CL 27156)
 cmd/vet: allow any printf verb with any interface (CL 27127)
 cmd/vet: check for copying of array of locks (CL 24340)
 cmd/vet: check for duplicate json, xml struct field tags (CL 16704)
+cmd/vet: detect defer resp.Body.Close() before error check (CL 32911)
 cmd/vet: diagnose non-space-separated struct tag like `json:"x",xml:"y"` (CL 32031)
 cmd/vet: improve asmdecl parameter handling (CL 27150)
 cmd/vet: properly handle indexed arguments in printf (CL 24391)
@@ -137,6 +147,7 @@ crypto/x509: Fix bug in UnknownAuthorityError.Error (CL 27992)
 crypto/x509: allow a leaf certificate to be specified directly as root (CL 27393)
 crypto/x509: check that the issuer name matches the issuer's subject name (CL 23571)
 crypto/x509: don't accept a root that already appears in a chain. (CL 32121)
+crypto/x509: expose UnknownAuthorityError.Cert (CL 32644)
 crypto/x509: fix name constraints handling (CL 30155)
 crypto/x509: implement SystemCertPool on Windows (CL 30578)
 crypto/x509: parse all names in an RDN (CL 30810)
@@ -146,6 +157,7 @@ crypto/x509: require a NULL parameters for RSA public keys (CL 27312)
 crypto/x509: return error for missing SerialNumber (CL 27238)
 crypto/x509: support PSS signatures (CL 24743)
 crypto/x509: support RHEL 7 cert bundle (CL 30375)
+crypto/{cipher,tls,internal/cryptohw}: prioritise AES-GCM when hardware support is present. (CL 32871)
 database/sql: accept nil pointers to Valuers implemented on value receivers (CL 31259)
 database/sql: add Pinger interface to driver Conn (CL 32136)
 database/sql: add context helper methods and transaction types (CL 31258)
@@ -157,9 +169,11 @@ database/sql: support returning query database types (CL 29961)
 debug/elf: add sparc64 relocations (CL 30870)
 debug/pe: revert CL 22720 (CL 27212)
 doc: document minimum OS X version as 10.8 (CL 28870)
+encoding/asn1: return error for unexported fields in Marshal, Unmarshal (CL 31540)
 encoding/base64: add Encoding.Strict (CL 24964)
 encoding/binary: add bool support (CL 28514)
 encoding/json: add struct and field name to UnmarshalTypeError message (CL 18692)
+encoding/json: encode nil Marshaler as "null" (CL 31932)
 encoding/json: fix decoding of null into Unmarshaler, TextUnmarshaler (CL 30944)
 encoding/json: marshal the RawMessage value type the same as its pointer type (CL 21811)
 encoding/json: use standard ES6 formatting for numbers during marshal (CL 30371)
@@ -173,9 +187,11 @@ fmt: document and adjust Scanf space handling to eliminate a few paradoxes (CL 3
 go/ast, go/parser: parse alias declarations (CL 30211)
 go/build: allow % in ${SRCDIR} expansion for Jenkins (CL 31611)
 go/build: do not record go:binary-only-package if build tags not satisfied (CL 31577)
+go/build: implement default GOPATH (CL 32019)
 go/doc: add IsPredeclared function (CL 29870)
 go/doc: allow ToHTML to properly handle URLs containing semicolons (CL 25385)
 go/internal/gcimporter: fail gracefully on export format skew (CL 27816)
+go/printer: don't drop required semi/linebreak after /*-comment (CL 33016)
 go/token: fix race in FileSet.PositionFor. (CL 25345)
 go/types: expose Default function, which converts untyped T to T (CL 30715)
 go/types: handle imported aliases (CL 32534)
@@ -189,6 +205,7 @@ image/png: improve compression by skipping filter for paletted images (CL 29872)
 internal/trace: fix analysis of EvGoWaiting/EvGoInSyscall events (CL 25572)
 io: fix infinite loop bug in MultiReader (CL 27397)
 io: make MultiReader nil exhausted Readers for earlier GC (CL 28533)
+lib/time: update tzdata to 2016i (CL 33029)
 math/big: Rat.SetString to report error if input is not consumed entirely (CL 30472)
 math/big: add (*Int).Sqrt (CL 30706)
 math/big: implement Float.Scan, type assert fmt interfaces to enforce docs (CL 30723)
@@ -210,6 +227,7 @@ net/http/httputil: make ReverseProxy send nil Body requests when possible (CL 28
 net/http/httputil: remove custom hop-by-hop headers from response in ReverseProxy (CL 28810)
 net/http/httputil: remove proxied headers mentioned in connection-tokens (CL 27970)
 net/http/internal: don't block unnecessarily in ChunkedReader (CL 31329)
+net/http: add ErrAbortHandler, make Server quiet if used as panic value (CL 33099)
 net/http: add NoBody, don't return nil from NewRequest on zero bodies (CL 31726)
 net/http: add Request.GetBody func for 307/308 redirects (CL 31733)
 net/http: add Server.Close & Server.Shutdown for forced & graceful shutdown (CL 32329)
@@ -224,6 +242,7 @@ net/http: make DefaultTransport's Dialer enable DualStack ("Happy Eyeballs") (CL
 net/http: make NewRequest set empty Body nil, don't peek Read Body in Transport (CL 31445)
 net/http: make Redirect escape non-ASCII in Location header (CL 31732)
 net/http: make Server Handler's Request.Context be done on conn errors (CL 31173)
+net/http: make Server log on bad requests from clients (CL 27950)
 net/http: make Transport reject URLs with bogus ports with non-digits (CL 32482)
 net/http: make Transport retry non-idempotent requests if no bytes written (CL 27117)
 net/http: make Transport support international domain names (CL 29072)
@@ -231,10 +250,13 @@ net/http: omit Content-Length in Response.Write for 1xx or 204 status (CL 28351)
 net/http: returned typed error on Transport proxy dial (CL 30750)
 net/http: send Content-Range if no byte range overlaps (CL 24212)
 net/http: skip test needing good DNS in short mode, except on builders (CL 28782)
+net/http: support If-Match in ServeContent (CL 32014)
 net/http: support multiple identical Content-Length headers (CL 31252)
+net/http: update bundled http2 for ErrAbortHandler support, document it more (CL 33103)
 net/http: update bundled http2, add h2 Transport.IdleConnTimeout tests (CL 30078)
 net/mail: allow empty quoted string name in address again (CL 32176)
 net/mail: expose ParseDate, for use parsing Resent-Date headers (CL 31581)
+net/smtp: make Client.Auth trim final space if Auth.Start toServer is empty (CL 33143)
 net/url: add PathEscape, PathUnescape (CL 31322)
 net/url: add URL.Hostname and URL.Port accessors (CL 28933)
 net/url: handle escaped paths in ResolveReference (CL 28343)
@@ -245,8 +267,12 @@ net: add (*UnixListener).SetUnlinkOnClose (CL 32099)
 net: add Buffers type, do writev on unix (CL 29951)
 net: add Resolver type, Dialer.Resolver, and DefaultResolver (CL 29440)
 net: always wake up the readers on close on Plan 9 (CL 31390)
+net: apply tcp4/tcp6 restrictions to literals in ResolveTCPAddr (CL 32100)
 net: break up >1GB reads and writes on stream connections (CL 31584)
+net: bring domain name length checks into RFC compliance (CL 31722)
 net: close the connection gracefully on Plan 9 (CL 31271)
+net: fix Dial(":80") on Windows (CL 32101)
+net: implement Buffers on windows (CL 32371)
 net: implement network interface API for Plan 9 (CL 29963)
 net: implement network interface API for Solaris (CL 29892)
 net: make LookupPort and lookupProtocol work on nacl (CL 28951)
@@ -267,6 +293,7 @@ os: make Windows readConsole handle input and output correctly (CL 29493)
 os: prevent infinite symlink loop of Stat on Windows (CL 27580)
 os: reject Rename("old", "new") where new is a directory (CL 31358)
 os: use GetConsoleCP() instead of GetACP() (CL 27575)
+os: use extended-length paths on Windows when possible (CL 32451)
 path/filepath: don't return SkipDir at top (CL 24780)
 path/filepath: fix Abs on Windows (CL 32292)
 path/filepath: fix match of \\?\c:\* on Windows (CL 31460)
@@ -280,6 +307,7 @@ reflect: fix DeepEqual for some cyclic corner cases (CL 31588)
 reflect: ignore struct tags when converting structs (CL 30191)
 runtime, cmd/trace: annotate different mark worker types (CL 30702)
 runtime, runtime/cgo: revert CL 18814; don't drop signal stack in new thread on dragonfly (CL 29971)
+runtime/pprof: output CPU profiles in pprof protobuf format (CL 33071)
 runtime/pprof: write profiles in protobuf format. (CL 32257)
 runtime/race: don't crash on invalid PCs (CL 29714)
 runtime/race: update race runtime (CL 32160)
@@ -292,6 +320,7 @@ runtime: fix check for vacuous page boundary rounding (CL 27230)
 runtime: fix map iterator concurrent map check (CL 24749)
 runtime: fix newextram PC passed to race detector (CL 29712)
 runtime: implement unconditional hybrid barrier (CL 31765)
+runtime: include pre-panic/throw logs in core dumps (CL 32013)
 runtime: limit the number of map overflow buckets (CL 25049)
 runtime: pass windows float syscall args via XMM (CL 32173)
 runtime: print sigcode on signal crash (CL 32183)
@@ -310,6 +339,7 @@ strconv: strip \r in raw strings passed to Unquote (CL 31210)
 strings, bytes: panic if Repeat overflows or if given a negative count (CL 29954)
 sync: enable Pool when using race detector (CL 31589)
 sync: throw, not panic, for unlock of unlocked mutex (CL 31359)
+syscall: Clearenv now unsets env vars on Windows (CL 33168)
 syscall: add bounds checking and error returns to ParseNetlinkMessage (CL 26990)
 syscall: fix Send{msg,msgN}, Recvmsg and control message handling on solaris (CL 30171)
 syscall: make Getpagesize return system-reported page size (CL 25051)
@@ -319,7 +349,10 @@ syscall: unify NsecToTime{spec,val}, fix for times < 1970 (CL 30826)
 syscall: validate ParseDirent inputs (CL 23780)
 testing/quick, text/tabwriter: freeze packages (CL 31910)
 testing: add Name method to *T and *B (CL 29970)
+testing: add T.Context method (CL 31724)
 testing: add a method testing.CoverMode (CL 32483)
+testing: introduce testing/internal/testdeps for holding testmain dependencies (CL 32455)
+testing: mark tests and benchmarks failed if a race occurs during execution (CL 32615)
 testing: respect benchtime on very fast benchmarks (CL 26664)
 text/template: add support for reflect.Value args, results in funcs (CL 31462)
 time: add Until helper function (CL 20118)
@@ -342,6 +375,7 @@ cmd/compile, cmd/link: more efficient typelink generation (CL 31772)
 cmd/compile, cmd/link: stop generating unused go.string.hdr symbols. (CL 31030)
 cmd/compile,runtime: redo how map assignments work (CL 30815)
 cmd/compile/internal/obj/x86: eliminate some function prologues (CL 24814)
+cmd/compile/internal/ssa: generate bswap on AMD64 (CL 32222)
 cmd/compile: accept literals in samesafeexpr (CL 26666)
 cmd/compile: add more non-returning runtime calls (CL 28965)
 cmd/compile: add size hint to map literal allocations (CL 23558)
@@ -382,6 +416,7 @@ cmd/compile: use 2-result divide op (CL 25004)
 cmd/compile: use masks instead of branches for slicing (CL 32022)
 cmd/compile: when inlining ==, don’t take the address of the values (CL 22277)
 container/heap: remove one unnecessary comparison in Fix (CL 24273)
+crypto/elliptic: add s390x assembly implementation of NIST P-256 Curve (CL 31231)
 crypto/sha256: improve performance for sha256.block on ppc64le (CL 32318)
 crypto/sha512: improve performance for sha512.block on ppc64le (CL 32320)
 crypto/{aes,cipher}: add optimized implementation of AES-GCM for s390x (CL 30361)
@@ -394,13 +429,14 @@ hash/crc32: improve the AMD64 implementation using SSE4.2 (CL 27931)
 hash/crc32: improve the processing of the last bytes in the SSE4.2 code for AMD64 (CL 24470)
 image/color: improve speed of RGBA methods (CL 31773)
 image/draw: optimize drawFillOver as drawFillSrc for opaque fills (CL 28790)
+math/big: 10%-20% faster float->decimal conversion (CL 31250, CL 31275)
 math/big: avoid allocation in float.{Add, Sub} when there's no aliasing (CL 23568)
 math/big: make division faster (CL 30613)
-math/big: 10%-20% faster float->decimal conversion (CL 31250, CL 31275)
 math/big: use array instead of slice for deBruijn lookups (CL 26663)
 math/big: uses SIMD for some math big functions on s390x (CL 32211)
 math: speed up Gamma(+Inf) (CL 31370)
 math: speed up bessel functions on AMD64 (CL 28086)
+math: use SIMD to accelerate some scalar math functions on s390x (CL 32352)
 reflect: avoid zeroing memory that will be overwritten (CL 28011)
 regexp: avoid alloc in QuoteMeta when not quoting (CL 31395)
 regexp: reduce mallocs in Regexp.Find* and Regexp.ReplaceAll* (CL 23030)
