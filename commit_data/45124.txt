commit 56284f9d29d17869cd70847693c51319408710b3
Author: Dmitri Shuralyov <dmitshur@golang.org>
Date:   Fri Sep 25 17:10:24 2020 -0400

    src/buildall.bash: remove mobile filter
    
    Mobile targets are not supported by misc-compile trybots, as tracked in
    golang.org/issue/25963, and need to be filtered out. The buildall.bash
    script was created in CL 9438, back when it was a single all-compile
    builder, and it was easier to filter out mobile targets in the script
    than to come up with a pattern that matches all non-mobile targets.
    
    As of CL 254740, all mobile targets (Android and iOS) have unique GOOS
    values. That makes it it easy to filter them out in x/build/dashboard.
    This was done in CL 258057. As a result, it's now viable to simplify
    this script and perform all misc-compile target selection in x/build,
    rather than having it spread it across two places.
    
    Also, as of CL 10750, the all-compile builder has turned into multiple
    misc-compile builders, so update the script description accordingly.
    
    Updates #41610.
    
    Change-Id: I1e33260ac18cf0a70bb68cd8e3db5587100c7e87
    Reviewed-on: https://go-review.googlesource.com/c/go/+/257962
    Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Alexander Rakoczy <alex@golang.org>
    Trust: Dmitri Shuralyov <dmitshur@golang.org>
---
 src/buildall.bash | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/buildall.bash b/src/buildall.bash
index dc67c0630f..19ea172c5b 100755
--- a/src/buildall.bash
+++ b/src/buildall.bash
@@ -3,10 +3,10 @@
 # Use of this source code is governed by a BSD-style
 # license that can be found in the LICENSE file.
 
-# Usage: buildall.sh [-e] [pattern]
+# Usage: buildall.bash [-e] [pattern]
 #
 # buildall.bash builds the standard library for all Go-supported
-# architectures. It is used by the "all-compile" trybot builder,
+# architectures. It is used by the "misc-compile" trybot builders,
 # as a smoke test to quickly flag portability issues.
 #
 # Options:
@@ -42,7 +42,7 @@ gettargets() {
 }
 
 selectedtargets() {
-	gettargets | egrep -v 'android-arm|darwin-arm64' | egrep "$pattern"
+	gettargets | egrep "$pattern"
 }
 
 # put linux first in the target list to get all the architectures up front.
