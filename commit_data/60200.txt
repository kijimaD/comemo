commit 5c7d7745387f240dbbd31940dce8be2b3000c53d
Author: Cherry Mui <cherryyz@google.com>
Date:   Fri May 24 13:19:35 2024 -0400

    cmd/link: propagate FromAssembly attribute when cloning symbols to external
    
    When a symbol is cloned to external (in order to edit it),
    propagate the FromAssembly attribute, so the linker knows it is
    (originally) an assembly symbol, and can treat it specially (e.g.
    for stack maps).
    
    This should fix the Linux/RISCV64 builder.
    
    Change-Id: Icc956bcc43b79f328983a60835b05fd50f22326a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/587926
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Than McIntosh <thanm@google.com>
---
 src/cmd/link/internal/loader/loader.go | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/cmd/link/internal/loader/loader.go b/src/cmd/link/internal/loader/loader.go
index 0a76c1fb0c..f448a3ee7c 100644
--- a/src/cmd/link/internal/loader/loader.go
+++ b/src/cmd/link/internal/loader/loader.go
@@ -763,6 +763,11 @@ func (l *Loader) IsFileLocal(i Sym) bool {
 // object file generated by the Go assembler.
 func (l *Loader) IsFromAssembly(i Sym) bool {
 	if l.IsExternal(i) {
+		pp := l.getPayload(i)
+		if pp.objidx != 0 {
+			r := l.objs[pp.objidx]
+			return r.FromAssembly()
+		}
 		return false
 	}
 	r, _ := l.toLocal(i)
