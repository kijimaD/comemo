commit 35483c8e2540a4ba731ded6b9f19b2f5244fe4fa
Author: Alex Brainman <alex.brainman@gmail.com>
Date:   Fri Oct 6 12:55:20 2017 +1100

    misc/cgo/testcshared: delete testp0.exe not testp0 file
    
    Otherwise we end up with testp?.exe files after the tests run.
    
    Updates #11058
    
    Change-Id: Ieccfc42da6192622bdab1f9a411ccd50bb59fd5b
    Reviewed-on: https://go-review.googlesource.com/68770
    Run-TryBot: Alex Brainman <alex.brainman@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 misc/cgo/testcshared/cshared_test.go | 25 +++++++++++++++----------
 1 file changed, 15 insertions(+), 10 deletions(-)

diff --git a/misc/cgo/testcshared/cshared_test.go b/misc/cgo/testcshared/cshared_test.go
index 0a2e06e702..142ccf083d 100644
--- a/misc/cgo/testcshared/cshared_test.go
+++ b/misc/cgo/testcshared/cshared_test.go
@@ -280,15 +280,16 @@ func TestExportedSymbols(t *testing.T) {
 	t.Parallel()
 
 	cmd := "testp0"
+	bin := cmdToRun(cmd)
 
 	createHeadersOnce(t)
 
 	runCC(t, "-I", installdir, "-o", cmd, "main0.c", libgoname)
 	adbPush(t, cmd)
 
-	defer os.Remove(cmd)
+	defer os.Remove(bin)
 
-	out := runExe(t, append(gopathEnv, "LD_LIBRARY_PATH=."), cmdToRun(cmd))
+	out := runExe(t, append(gopathEnv, "LD_LIBRARY_PATH=."), bin)
 	if strings.TrimSpace(out) != "PASS" {
 		t.Error(out)
 	}
@@ -304,15 +305,16 @@ func TestExportedSymbolsWithDynamicLoad(t *testing.T) {
 	}
 
 	cmd := "testp1"
+	bin := cmdToRun(cmd)
 
 	createHeadersOnce(t)
 
 	runCC(t, "-o", cmd, "main1.c", "-ldl")
 	adbPush(t, cmd)
 
-	defer os.Remove(cmd)
+	defer os.Remove(bin)
 
-	out := runExe(t, nil, cmdToRun(cmd), "./"+libgoname)
+	out := runExe(t, nil, bin, "./"+libgoname)
 	if strings.TrimSpace(out) != "PASS" {
 		t.Error(out)
 	}
@@ -328,6 +330,7 @@ func TestUnexportedSymbols(t *testing.T) {
 	}
 
 	cmd := "testp2"
+	bin := cmdToRun(cmd)
 	libname := "libgo2." + libSuffix
 
 	run(t,
@@ -348,9 +351,9 @@ func TestUnexportedSymbols(t *testing.T) {
 	adbPush(t, cmd)
 
 	defer os.Remove(libname)
-	defer os.Remove(cmd)
+	defer os.Remove(bin)
 
-	out := runExe(t, append(gopathEnv, "LD_LIBRARY_PATH=."), cmdToRun(cmd))
+	out := runExe(t, append(gopathEnv, "LD_LIBRARY_PATH=."), bin)
 
 	if strings.TrimSpace(out) != "PASS" {
 		t.Error(out)
@@ -370,15 +373,16 @@ func TestMainExportedOnAndroid(t *testing.T) {
 	}
 
 	cmd := "testp3"
+	bin := cmdToRun(cmd)
 
 	createHeadersOnce(t)
 
 	runCC(t, "-o", cmd, "main3.c", "-ldl")
 	adbPush(t, cmd)
 
-	defer os.Remove(cmd)
+	defer os.Remove(bin)
 
-	out := runExe(t, nil, cmdToRun(cmd), "./"+libgoname)
+	out := runExe(t, nil, bin, "./"+libgoname)
 	if strings.TrimSpace(out) != "PASS" {
 		t.Error(out)
 	}
@@ -397,11 +401,12 @@ func testSignalHandlers(t *testing.T, pkgname, cfile, cmd string) {
 	runCC(t, "-pthread", "-o", cmd, cfile, "-ldl")
 	adbPush(t, cmd)
 
+	bin := cmdToRun(cmd)
+
 	defer os.Remove(libname)
-	defer os.Remove(cmd)
+	defer os.Remove(bin)
 	defer os.Remove(pkgname + ".h")
 
-	bin := cmdToRun(cmd)
 	out := runExe(t, nil, bin, "./"+libname)
 	if strings.TrimSpace(out) != "PASS" {
 		t.Error(run(t, nil, bin, libname, "verbose"))
