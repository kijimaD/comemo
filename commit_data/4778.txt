commit c2cb0d70d5995fb10f2939c926a5100618af7c45
Author: Russ Cox <rsc@golang.org>
Date:   Wed Feb 3 20:46:37 2010 -0800

    arm: toss make-arm.bash
    
    R=kaib
    CC=golang-dev
    https://golang.org/cl/199094
---
 src/all-arm.bash  |  6 +++-
 src/make-arm.bash | 96 -------------------------------------------------------
 src/make.bash     |  4 +--
 3 files changed, 7 insertions(+), 99 deletions(-)

diff --git a/src/all-arm.bash b/src/all-arm.bash
index e089b9cf40..73db3fb85c 100755
--- a/src/all-arm.bash
+++ b/src/all-arm.bash
@@ -4,7 +4,11 @@
 # license that can be found in the LICENSE file.
 
 set -e
-bash make-arm.bash
+
+export GOOS=linux
+export GOARCH=arm
+
+bash make.bash
 
 # TODO(kaib): add in proper tests
 #bash run.bash
diff --git a/src/make-arm.bash b/src/make-arm.bash
deleted file mode 100755
index d85e3a9e31..0000000000
--- a/src/make-arm.bash
+++ /dev/null
@@ -1,96 +0,0 @@
-#!/usr/bin/env bash
-# Copyright 2009 The Go Authors. All rights reserved.
-# Use of this source code is governed by a BSD-style
-# license that can be found in the LICENSE file.
-
-set -e
-
-if test -z "$GOBIN"; then
-	if ! test -d "$HOME"/bin; then
-		echo '$GOBIN is not set and $HOME/bin is not a directory or does not exist.' 1>&2
-		echo 'mkdir $HOME/bin or set $GOBIN to a directory where binaries should' 1>&2
-		echo 'be installed.' 1>&2
-		exit 1
-	fi
-	GOBIN="$HOME/bin"
-elif ! test -d "$GOBIN"; then
-	echo '$GOBIN is not a directory or does not exist' 1>&2
-	echo 'create it or set $GOBIN differently' 1>&2
-	exit 1
-fi
-
-GOBIN="${GOBIN:-$HOME/bin}"
-export MAKEFLAGS=-j4
-
-if ! test -f "$GOROOT"/include/u.h
-then
-	echo '$GOROOT is not set correctly or not exported' 1>&2
-	exit 1
-fi
-
-case "$GOARCH" in
-arm)
-	;;
-*)
-	echo '$GOARCH is set to <'$GOARCH'>, must be arm' 1>&2
-	exit 1
-esac
-
-case "$GOOS" in
-linux)
-	;;
-*)
-	echo '$GOOS is set to <'$GOOS'>, must be linux' 1>&2
-	exit 1
-esac
-
-rm -f "$GOBIN"/quietgcc
-cp quietgcc.bash "$GOBIN"/quietgcc
-chmod +x "$GOBIN"/quietgcc
-
-rm -f "$GOBIN"/gomake
-MAKE=make
-if ! make --version 2>/dev/null | grep 'GNU Make' >/dev/null; then
-	MAKE=gmake
-fi
-(echo '#!/bin/sh'; echo 'exec '$MAKE' "$@"') >"$GOBIN"/gomake
-chmod +x "$GOBIN"/gomake
-
-(
-	cd "$GOROOT"/src/pkg;
-	bash deps.bash	# do this here so clean.bash will work in the pkg directory
-)
-bash "$GOROOT"/src/clean.bash
-
-
-# TODO(kaib): converge with normal build
-#for i in lib9 libbio libmach cmd pkg libcgo cmd/cgo cmd/ebnflint cmd/godoc cmd/gofmt
-for i in lib9 libbio libmach cmd pkg cmd/ebnflint cmd/godoc cmd/gofmt
-do
-	# The ( ) here are to preserve the current directory
-	# for the next round despite the cd $i below.
-	# set -e does not apply to ( ) so we must explicitly
-	# test the exit status.
-	(
-		echo; echo; echo %%%% making $i %%%%; echo
-		cd $i
-		case $i in
-		cmd)
-			bash make.bash
-			;;
-		pkg)
-			bash deps.bash
-			gomake install
-			;;
-		*)
-			make install
-		esac
-	)  || exit 1
-done
-
-case "`uname`" in
-Darwin)
-	echo;
-	echo %%% run sudo.bash to install debuggers
-	echo
-esac
diff --git a/src/make.bash b/src/make.bash
index 34a31063e6..6b18fd3a3b 100755
--- a/src/make.bash
+++ b/src/make.bash
@@ -83,8 +83,8 @@ bash "$GOROOT"/src/clean.bash
 
 for i in lib9 libbio libmach cmd pkg libcgo cmd/cgo cmd/ebnflint cmd/godoc cmd/gofmt cmd/goyacc cmd/hgpatch
 do
-	case "$i-$GOOS" in
-	libcgo-nacl | cmd/*-nacl)
+	case "$i-$GOOS-$GOARCH" in
+	libcgo-nacl-* | cmd/*-nacl-* | libcgo-linux-arm)
 		;;
 	*)
 		# The ( ) here are to preserve the current directory
