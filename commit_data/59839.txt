commit 3206a9b562fd0b5be15cac6534af0c4778b0c942
Author: The Backend Grip <thebackendgrip@gmail.com>
Date:   Mon Apr 29 22:28:11 2024 +0000

    http: fix some comments typo in server.go
    
    Change-Id: I826412175876a84ab978aba9418be28593484fba
    GitHub-Last-Rev: d35753c7e027ce4ca1fe63d96985de9e90bf813b
    GitHub-Pull-Request: golang/go#67112
    Reviewed-on: https://go-review.googlesource.com/c/go/+/582435
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Damien Neil <dneil@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
---
 src/net/http/server.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/net/http/server.go b/src/net/http/server.go
index 32b4130c22..cd0303b5b9 100644
--- a/src/net/http/server.go
+++ b/src/net/http/server.go
@@ -224,7 +224,7 @@ type CloseNotifier interface {
 	// that the channel receives a value.
 	//
 	// If the protocol is HTTP/1.1 and CloseNotify is called while
-	// processing an idempotent request (such a GET) while
+	// processing an idempotent request (such as GET) while
 	// HTTP/1.1 pipelining is in use, the arrival of a subsequent
 	// pipelined request may cause a value to be sent on the
 	// returned channel. In practice HTTP/1.1 pipelining is not
@@ -1102,9 +1102,9 @@ func (w *response) Header() Header {
 
 // maxPostHandlerReadBytes is the max number of Request.Body bytes not
 // consumed by a handler that the server will read from the client
-// in order to keep a connection alive. If there are more bytes than
-// this then the server to be paranoid instead sends a "Connection:
-// close" response.
+// in order to keep a connection alive. If there are more bytes
+// than this, the server, to be paranoid, instead sends a
+// "Connection close" response.
 //
 // This number is approximately what a typical machine's TCP buffer
 // size is anyway.  (if we have the bytes on the machine, we might as
