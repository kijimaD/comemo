commit 7f3313133ee3e40515aa99d3618b8e5eafed42d6
Author: Daniel Martí <mvdan@mvdan.cc>
Date:   Sun Oct 7 12:45:56 2018 +0100

    cmd/compile: don't panic on invalid map key declarations
    
    In golang.org/cl/75310, the compiler's typechecker was changed so that
    map key types were validated at a later stage, to make sure that all the
    necessary type information was present.
    
    This still worked for map type declarations, but caused a regression for
    top-level map variable declarations. These now caused a fatal panic
    instead of a typechecking error.
    
    The cause was that checkMapKeys was run too early, before all
    typechecking was done. In particular, top-level map variable
    declarations are typechecked as external declarations, much later than
    where checkMapKeys was run.
    
    Add a test case for both exported and unexported top-level map
    declarations, and add a second call to checkMapKeys at the actual end of
    typechecking. Simply moving the one call isn't a good solution either;
    the comments expand on that.
    
    Fixes #28058.
    
    Change-Id: Ia5febb01a1d877447cf66ba44fb49a7e0f4f18a5
    Reviewed-on: https://go-review.googlesource.com/c/140417
    Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Robert Griesemer <gri@golang.org>
---
 src/cmd/compile/internal/gc/main.go |  7 ++++++-
 test/fixedbugs/issue28058.go        | 13 +++++++++++++
 2 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/src/cmd/compile/internal/gc/main.go b/src/cmd/compile/internal/gc/main.go
index 02aec32685..9a226318b9 100644
--- a/src/cmd/compile/internal/gc/main.go
+++ b/src/cmd/compile/internal/gc/main.go
@@ -534,7 +534,9 @@ func Main(archInit func(*Arch)) {
 			fcount++
 		}
 	}
-	// With all types ckecked, it's now safe to verify map keys.
+	// With all types ckecked, it's now safe to verify map keys. One single
+	// check past phase 9 isn't sufficient, as we may exit with other errors
+	// before then, thus skipping map key errors.
 	checkMapKeys()
 	timings.AddEvent(fcount, "funcs")
 
@@ -678,6 +680,9 @@ func Main(archInit func(*Arch)) {
 			externdcl[i] = typecheck(externdcl[i], Erv)
 		}
 	}
+	// Check the map keys again, since we typechecked the external
+	// declarations.
+	checkMapKeys()
 
 	if nerrors+nsavederrors != 0 {
 		errorexit()
diff --git a/test/fixedbugs/issue28058.go b/test/fixedbugs/issue28058.go
new file mode 100644
index 0000000000..d8206e7357
--- /dev/null
+++ b/test/fixedbugs/issue28058.go
@@ -0,0 +1,13 @@
+// errorcheck
+
+// Copyright 2018 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Issue 14988: declaring a map with an invalid key type should not cause a
+//              fatal panic.
+
+package main
+
+var x map[func()]int // ERROR "invalid map key type"
+var X map[func()]int // ERROR "invalid map key type"
