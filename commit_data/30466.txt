commit 9d139ac3fa1f4c0c468042bdc6248a30044fb1bb
Author: Ian Lance Taylor <iant@golang.org>
Date:   Sun Nov 6 10:35:58 2016 -0800

    unsafe: remove incorrect type conversion in docs
    
    Fixes #17818.
    
    Change-Id: Id7242b0bdd5e1db254b44ae29900fc4f3362c743
    Reviewed-on: https://go-review.googlesource.com/32828
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/unsafe/unsafe.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/unsafe/unsafe.go b/src/unsafe/unsafe.go
index 0b59ff204b..859ca4fa3b 100644
--- a/src/unsafe/unsafe.go
+++ b/src/unsafe/unsafe.go
@@ -155,7 +155,7 @@ type ArbitraryType int
 //	var s string
 //	hdr := (*reflect.StringHeader)(unsafe.Pointer(&s)) // case 1
 //	hdr.Data = uintptr(unsafe.Pointer(p))              // case 6 (this case)
-//	hdr.Len = uintptr(n)
+//	hdr.Len = n
 //
 // In this usage hdr.Data is really an alternate way to refer to the underlying
 // pointer in the slice header, not a uintptr variable itself.
@@ -168,7 +168,7 @@ type ArbitraryType int
 //	// INVALID: a directly-declared header will not hold Data as a reference.
 //	var hdr reflect.StringHeader
 //	hdr.Data = uintptr(unsafe.Pointer(p))
-//	hdr.Len = uintptr(n)
+//	hdr.Len = n
 //	s := *(*string)(unsafe.Pointer(&hdr)) // p possibly already lost
 //
 type Pointer *ArbitraryType
