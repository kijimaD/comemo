commit 9ab6af9837f924869cd2213ce028b3f4d49c487c
Author: Josh Bleecher Snyder <josharian@gmail.com>
Date:   Fri Sep 17 13:45:12 2021 -0700

    runtime, cmd/link: fix comment typos
    
    Change-Id: I33a10417939bfcfec117d6ad49c42312731ac30f
    Reviewed-on: https://go-review.googlesource.com/c/go/+/350733
    Trust: Josh Bleecher Snyder <josharian@gmail.com>
    Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
---
 src/cmd/link/internal/ld/pcln.go | 4 ++--
 src/runtime/symtab.go            | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/cmd/link/internal/ld/pcln.go b/src/cmd/link/internal/ld/pcln.go
index 70e3e1284b..5294da5724 100644
--- a/src/cmd/link/internal/ld/pcln.go
+++ b/src/cmd/link/internal/ld/pcln.go
@@ -51,7 +51,7 @@ type pclntab struct {
 }
 
 // addGeneratedSym adds a generator symbol to pclntab, returning the new Sym.
-// It is the caller's responsibility to save they symbol in state.
+// It is the caller's responsibility to save the symbol in state.
 func (state *pclntab) addGeneratedSym(ctxt *Link, name string, size int64, f generatorFunc) loader.Sym {
 	size = Rnd(size, int64(ctxt.Arch.PtrSize))
 	state.size += size
@@ -521,7 +521,7 @@ type pclnSetUint func(*loader.SymbolBuilder, *sys.Arch, int64, uint64) int64
 //
 // Because of timing in the linker, generating this table takes two passes.
 // The first pass is executed early in the link, and it creates any needed
-// relocations to layout the data. The pieces that need relocations are:
+// relocations to lay out the data. The pieces that need relocations are:
 //   1) the PC->func table.
 //   2) The entry points in the func objects.
 //   3) The funcdata.
diff --git a/src/runtime/symtab.go b/src/runtime/symtab.go
index d08aa0b320..aa9dd7b40c 100644
--- a/src/runtime/symtab.go
+++ b/src/runtime/symtab.go
@@ -374,11 +374,11 @@ type pcHeader struct {
 	minLC          uint8   // min instruction size
 	ptrSize        uint8   // size of a ptr in bytes
 	nfunc          int     // number of functions in the module
-	nfiles         uint    // number of entries in the file tab.
+	nfiles         uint    // number of entries in the file tab
 	funcnameOffset uintptr // offset to the funcnametab variable from pcHeader
 	cuOffset       uintptr // offset to the cutab variable from pcHeader
 	filetabOffset  uintptr // offset to the filetab variable from pcHeader
-	pctabOffset    uintptr // offset to the pctab varible from pcHeader
+	pctabOffset    uintptr // offset to the pctab variable from pcHeader
 	pclnOffset     uintptr // offset to the pclntab variable from pcHeader
 }
 
