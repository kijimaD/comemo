commit 5bf428ef80a1c3d07a586dd2b60590565b9c6dd4
Author: Dave Cheney <dave@cheney.net>
Date:   Thu Mar 5 17:19:54 2015 +1100

    cmd/internal/gc: make Node.Hasbreak a bool
    
    Node.Hasbreak was treated like a bool, so declare it as bool.
    
    Change-Id: Ied238356dce4da896834bd1412cc21ea56d35e1d
    Reviewed-on: https://go-review.googlesource.com/6807
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/cmd/internal/gc/syntax.go    | 2 +-
 src/cmd/internal/gc/typecheck.go | 8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/cmd/internal/gc/syntax.go b/src/cmd/internal/gc/syntax.go
index f209afd41f..6303502af0 100644
--- a/src/cmd/internal/gc/syntax.go
+++ b/src/cmd/internal/gc/syntax.go
@@ -55,7 +55,7 @@ type Node struct {
 	Wrapper        uint8 // is method wrapper (for func)
 	Reslice        uint8 // this is a reslice x = x[0:y] or x = append(x, ...)
 	Likely         int8  // likeliness of if statement
-	Hasbreak       uint8 // has break statement
+	Hasbreak       bool  // has break statement
 	Needzero       bool  // if it contains pointers, needs to be zeroed on function entry
 	Needctxt       bool  // function uses context register (has closure variables)
 	Esc            uint  // EscXXX
diff --git a/src/cmd/internal/gc/typecheck.go b/src/cmd/internal/gc/typecheck.go
index 5ae418ca2e..764b333980 100644
--- a/src/cmd/internal/gc/typecheck.go
+++ b/src/cmd/internal/gc/typecheck.go
@@ -3954,12 +3954,12 @@ func markbreak(n *Node, implicit *Node) {
 	case OBREAK:
 		if n.Left == nil {
 			if implicit != nil {
-				implicit.Hasbreak = 1
+				implicit.Hasbreak = true
 			}
 		} else {
 			lab := n.Left.Sym.Label
 			if lab != nil {
-				lab.Def.Hasbreak = 1
+				lab.Def.Hasbreak = true
 			}
 		}
 
@@ -4053,7 +4053,7 @@ func isterminating(l *NodeList, top int) bool {
 		if n.Ntest != nil {
 			return false
 		}
-		if n.Hasbreak != 0 {
+		if n.Hasbreak {
 			return false
 		}
 		return true
@@ -4064,7 +4064,7 @@ func isterminating(l *NodeList, top int) bool {
 	case OSWITCH,
 		OTYPESW,
 		OSELECT:
-		if n.Hasbreak != 0 {
+		if n.Hasbreak {
 			return false
 		}
 		def := 0
