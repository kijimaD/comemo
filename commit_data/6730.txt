commit 11ace8e9750edb8376c431a5a94b6c7de40344c6
Author: Wei Guangjing <vcc.163@gmail.com>
Date:   Fri Nov 5 23:08:18 2010 -0400

    net: fix windows build
    
    R=rsc
    CC=golang-dev
    https://golang.org/cl/2932041
---
 src/pkg/net/dnsname_test.go   | 4 ++++
 src/pkg/net/resolv_windows.go | 9 +++++++--
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/pkg/net/dnsname_test.go b/src/pkg/net/dnsname_test.go
index 67acc8744f..fd65dcb172 100644
--- a/src/pkg/net/dnsname_test.go
+++ b/src/pkg/net/dnsname_test.go
@@ -6,6 +6,7 @@ package net
 
 import (
 	"testing"
+	"runtime"
 )
 
 type testCase struct {
@@ -54,6 +55,9 @@ func getTestCases(ch chan<- *testCase) {
 }
 
 func TestDNSNames(t *testing.T) {
+	if runtime.GOOS == "windows" {
+		return
+	}
 	ch := make(chan *testCase)
 	go getTestCases(ch)
 	for tc := range ch {
diff --git a/src/pkg/net/resolv_windows.go b/src/pkg/net/resolv_windows.go
index f6c9085012..d5292b8be2 100644
--- a/src/pkg/net/resolv_windows.go
+++ b/src/pkg/net/resolv_windows.go
@@ -43,9 +43,10 @@ type SRV struct {
 	Weight   uint16
 }
 
-func LookupSRV(name string) (cname string, addrs []*SRV, err os.Error) {
+func LookupSRV(service, proto, name string) (cname string, addrs []*SRV, err os.Error) {
 	var r *syscall.DNSRecord
-	e := syscall.DnsQuery(name, syscall.DNS_TYPE_SRV, 0, nil, &r, nil)
+	target := "_" + service + "._" + proto + "." + name
+	e := syscall.DnsQuery(target, syscall.DNS_TYPE_SRV, 0, nil, &r, nil)
 	if int(e) != 0 {
 		return "", nil, os.NewSyscallError("LookupSRV", int(e))
 	}
@@ -76,3 +77,7 @@ func LookupPort(network, service string) (port int, err os.Error) {
 	}
 	return int(syscall.Ntohs(s.Port)), nil
 }
+
+func isDomainName(s string) bool {
+	panic("unimplemented")
+}
