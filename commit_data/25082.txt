commit 143f3fd0ee71e6b015029b6792bc873b1013a8d4
Author: Andrew Gerrand <adg@golang.org>
Date:   Tue Sep 1 17:51:39 2015 +1000

    encoding/json: spell "marshaling" and "unmarshaling" consistently
    
    Fixes #12431
    
    Change-Id: I67c42bf2cd9285f471387248fd9c22a16b158349
    Reviewed-on: https://go-review.googlesource.com/14150
    Reviewed-by: Dmitri Shuralyov <shurcool@gmail.com>
    Reviewed-by: Rob Pike <r@golang.org>
---
 src/encoding/json/decode.go      | 2 +-
 src/encoding/json/decode_test.go | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/encoding/json/decode.go b/src/encoding/json/decode.go
index 0f5bb4d574..e7e8d0b997 100644
--- a/src/encoding/json/decode.go
+++ b/src/encoding/json/decode.go
@@ -57,7 +57,7 @@ import (
 //
 // If a JSON value is not appropriate for a given target type,
 // or if a JSON number overflows the target type, Unmarshal
-// skips that field and completes the unmarshalling as best it can.
+// skips that field and completes the unmarshaling as best it can.
 // If no more serious errors are encountered, Unmarshal returns
 // an UnmarshalTypeError describing the earliest such error.
 //
diff --git a/src/encoding/json/decode_test.go b/src/encoding/json/decode_test.go
index 8c3b92b823..e9e00e5fca 100644
--- a/src/encoding/json/decode_test.go
+++ b/src/encoding/json/decode_test.go
@@ -1206,12 +1206,12 @@ func TestStringKind(t *testing.T) {
 
 	data, err := Marshal(m1)
 	if err != nil {
-		t.Errorf("Unexpected error marshalling: %v", err)
+		t.Errorf("Unexpected error marshaling: %v", err)
 	}
 
 	err = Unmarshal(data, &m2)
 	if err != nil {
-		t.Errorf("Unexpected error unmarshalling: %v", err)
+		t.Errorf("Unexpected error unmarshaling: %v", err)
 	}
 
 	if !reflect.DeepEqual(m1, m2) {
