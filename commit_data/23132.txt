commit bb6320535d6bcef1a5d44cb7429877166c4d5298
Author: Austin Clements <austin@google.com>
Date:   Fri Mar 27 17:01:53 2015 -0400

    runtime: replace STW for enabling write barriers with ragged barrier
    
    Currently, we use a full stop-the-world around enabling write
    barriers. This is to ensure that all Gs have enabled write barriers
    before any blackening occurs (either in gcBgMarkWorker() or in
    gcAssistAlloc()).
    
    However, there's no need to bring the whole world to a synchronous
    stop to ensure this. This change replaces the STW with a ragged
    barrier that ensures each P has individually observed that write
    barriers should be enabled before GC performs any blackening.
    
    Change-Id: If2f129a6a55bd8bdd4308067af2b739f3fb41955
    Reviewed-on: https://go-review.googlesource.com/8207
    Reviewed-by: Russ Cox <rsc@golang.org>
    Reviewed-by: Rick Hudson <rlh@golang.org>

 src/runtime/malloc.go   |  2 +-
 src/runtime/mgc.go      | 42 +++++++++++++++++++++++++-----------------
 src/runtime/mgcmark.go  |  2 +-
 src/runtime/proc1.go    |  9 +++++----
 src/runtime/runtime2.go |  5 +++++
 5 files changed, 37 insertions(+), 23 deletions(-)
