commit 991652dcf02a1f9766f24dc2409b1417547866f1
Author: Russ Cox <rsc@golang.org>
Date:   Tue Aug 22 22:50:27 2017 -0400

    [dev.boringcrypto] cmd/link: work around DWARF symbol bug
    
    The DWARF code is mishandling the case when the host object files
    define multiple (distinct) symbols with the same name. They are mapped
    to the same DWARF debug symbol, which then appears on the dwarfp
    list multiple times, which then breaks the code that processes the list.
    Detect duplicates and skip them, because that's trivial, instead of fixing
    the underlying problem.
    
    See #21566.
    
    Change-Id: Ib5a34c891d7c15f4c7bb6239d8f31a1ec767b8bc
    Reviewed-on: https://go-review.googlesource.com/57943
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/cmd/link/internal/ld/data.go | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/cmd/link/internal/ld/data.go b/src/cmd/link/internal/ld/data.go
index 452332367c..3c92e26300 100644
--- a/src/cmd/link/internal/ld/data.go
+++ b/src/cmd/link/internal/ld/data.go
@@ -1868,6 +1868,11 @@ func (ctxt *Link) dodata() {
 		datsize = Rnd(datsize, int64(sect.Align))
 		sect.Vaddr = uint64(datsize)
 		for _, s := range dwarfp[i:] {
+			// Syms can (incorrectly) appear twice on the list. Ignore repeats.
+			// See golang.org/issue/21566.
+			if s.Type == SRODATA {
+				continue
+			}
 			if s.Type != SDWARFINFO {
 				break
 			}
