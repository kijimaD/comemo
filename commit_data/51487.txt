commit f9763a648bbe4468118b95e147bc5e81268d0341
Author: Katie Hockman <katie@golang.org>
Date:   Fri Feb 4 17:02:49 2022 -0500

    internal/fuzz: change meaning of "total" in output
    
    Fixes #51023
    
    Change-Id: I7dd9f7c696e15ba9c6c887d4c4e0f4d281a82b17
    Reviewed-on: https://go-review.googlesource.com/c/go/+/383414
    Trust: Katie Hockman <katie@golang.org>
    Reviewed-by: Roland Shoemaker <roland@golang.org>
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Run-TryBot: Bryan Mills <bcmills@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
---
 src/internal/fuzz/fuzz.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/internal/fuzz/fuzz.go b/src/internal/fuzz/fuzz.go
index 0014cde04f..3ccf74745f 100644
--- a/src/internal/fuzz/fuzz.go
+++ b/src/internal/fuzz/fuzz.go
@@ -597,7 +597,7 @@ type coordinator struct {
 
 	// interestingCount is the number of unique interesting values which have
 	// been found this execution.
-	interestingCount int64
+	interestingCount int
 
 	// warmupInputCount is the count of all entries in the corpus which will
 	// need to be received from workers to run once during warmup, but not fuzz.
@@ -731,8 +731,8 @@ func (c *coordinator) logStats() {
 	} else {
 		rate := float64(c.count-c.countLastLog) / now.Sub(c.timeLastLog).Seconds()
 		if coverageEnabled {
-			interestingTotalCount := int64(c.warmupInputCount-len(c.opts.Seed)) + c.interestingCount
-			fmt.Fprintf(c.opts.Log, "fuzz: elapsed: %s, execs: %d (%.0f/sec), new interesting: %d (total: %d)\n", c.elapsed(), c.count, rate, c.interestingCount, interestingTotalCount)
+			total := c.warmupInputCount + c.interestingCount
+			fmt.Fprintf(c.opts.Log, "fuzz: elapsed: %s, execs: %d (%.0f/sec), new interesting: %d (total: %d)\n", c.elapsed(), c.count, rate, c.interestingCount, total)
 		} else {
 			fmt.Fprintf(c.opts.Log, "fuzz: elapsed: %s, execs: %d (%.0f/sec)\n", c.elapsed(), c.count, rate)
 		}
