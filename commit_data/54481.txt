commit 7e72d384d66f48a78289edc6a7d1dc6ab878f990
Author: Wayne Zuo <wdvxdr@golangcn.org>
Date:   Mon Oct 17 17:38:50 2022 +0800

    internal/abi, internal/buildcfg: always enable register ABI on riscv64
    
    In Go 1.19, we develop register ABI for riscv64, enabled by default as a
    GOEXPERIMENT. We can turn it on all the time in Go 1.20.
    
    Change-Id: Ie8e2ac8b8bd3ebddb0dc6d58a5599547fb440e03
    Reviewed-on: https://go-review.googlesource.com/c/go/+/443555
    Run-TryBot: Wayne Zuo <wdvxdr@golangcn.org>
    Reviewed-by: Bryan Mills <bcmills@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
---
 src/internal/abi/abi_generic.go | 2 +-
 src/internal/abi/abi_riscv64.go | 2 --
 src/internal/buildcfg/exp.go    | 4 +---
 3 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/src/internal/abi/abi_generic.go b/src/internal/abi/abi_generic.go
index d5803e70d2..76ef2e2898 100644
--- a/src/internal/abi/abi_generic.go
+++ b/src/internal/abi/abi_generic.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build !goexperiment.regabiargs && !amd64 && !arm64 && !ppc64 && !ppc64le
+//go:build !goexperiment.regabiargs && !amd64 && !arm64 && !ppc64 && !ppc64le && !riscv64
 
 package abi
 
diff --git a/src/internal/abi/abi_riscv64.go b/src/internal/abi/abi_riscv64.go
index 1656820577..2bcd9d6db2 100644
--- a/src/internal/abi/abi_riscv64.go
+++ b/src/internal/abi/abi_riscv64.go
@@ -2,8 +2,6 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build goexperiment.regabiargs
-
 package abi
 
 const (
diff --git a/src/internal/buildcfg/exp.go b/src/internal/buildcfg/exp.go
index 8531aac908..71f8f5648d 100644
--- a/src/internal/buildcfg/exp.go
+++ b/src/internal/buildcfg/exp.go
@@ -62,11 +62,9 @@ func ParseGOEXPERIMENT(goos, goarch, goexp string) (*ExperimentFlags, error) {
 	// always on.
 	var regabiSupported, regabiAlwaysOn bool
 	switch goarch {
-	case "amd64", "arm64", "ppc64le", "ppc64":
+	case "amd64", "arm64", "ppc64le", "ppc64", "riscv64":
 		regabiAlwaysOn = true
 		regabiSupported = true
-	case "riscv64":
-		regabiSupported = true
 	}
 
 	baseline := goexperiment.Flags{
