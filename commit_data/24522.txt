commit a678a5c7a59de585a09d7bde2505b8234cc4422e
Author: Keith Randall <khr@golang.org>
Date:   Mon Aug 3 12:33:03 2015 -0700

    [dev.ssa] cmd/compile/internal/ssa: Fix scheduler
    
    The DFS scheduler doesn't do the right thing.  If a Value x is used by
    more than one other Value, then x is put into the DFS queue when
    its first user (call it y) is visited.  It is not removed and reinserted
    when the second user of x (call it z) is visited, so the dependency
    between x and z is not respected.  There is no easy way to fix this with
    the DFS queue because we'd have to rip values out of the middle of the
    DFS queue.
    
    The new scheduler works from the end of the block backwards, scheduling
    instructions which have had all of their uses already scheduled.
    A simple priority scheme breaks ties between multiple instructions that
    are ready to schedule simultaneously.
    
    Keep track of whether we've scheduled or not, and make print() use
    the scheduled order if we have.
    
    Fix some shift tests that this change tickles.  Add unsigned right shift tests.
    
    Change-Id: I44164c10bb92ae8ab8f76d7a5180cbafab826ea1
    Reviewed-on: https://go-review.googlesource.com/13069
    Reviewed-by: Todd Neal <todd@tneal.org>

 src/cmd/compile/internal/gc/testdata/arith_ssa.go |  28 +++-
 src/cmd/compile/internal/ssa/func.go              |   2 +
 src/cmd/compile/internal/ssa/print.go             |  12 +-
 src/cmd/compile/internal/ssa/schedule.go          | 176 +++++++++++-----------
 4 files changed, 122 insertions(+), 96 deletions(-)
