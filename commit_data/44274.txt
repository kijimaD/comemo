commit 7795523910227cb6df3c91ebdb317037fc9ceb86
Author: Cherry Zhang <cherryyz@google.com>
Date:   Mon Jun 1 18:53:58 2020 -0400

    [dev.link] cmd/compile: use hash of export data as fingerprint
    
    Currently, the compiler generates a fingerprint for each package,
    which is used by the linker for index consistency check.
    
    When building plugin or shared object, currently the linker also
    generates a hash, by hashing the export data. At run time, when
    a package is referenced by multiple DSOs, this hash is compared
    to ensure consistency.
    
    It would be good if we can unify this two hashes. This way, the
    linker doesn't need to read the export data (which is intended
    for the compiler only, and is not always available for the
    linker). The export data hash is sufficient for both purposes.
    It is consistent with the current hash geneated by the linker.
    And the export data includes indices for exported symbols, so its
    hash can be used to catch index mismatches.
    
    Updates #33820.
    
    Change-Id: I2bc0d74930746f54c683a10dfd695d50ea3f5a38
    Reviewed-on: https://go-review.googlesource.com/c/go/+/236118
    Run-TryBot: Cherry Zhang <cherryyz@google.com>
    Reviewed-by: Jeremy Faller <jeremy@golang.org>
    Reviewed-by: Than McIntosh <thanm@google.com>

 src/cmd/compile/internal/gc/iexport.go | 10 +++++++---
 src/cmd/internal/obj/sym.go            | 10 ----------
 2 files changed, 7 insertions(+), 13 deletions(-)
