commit 106b9d391518fe382162559e1520a8af72564130
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Apr 14 19:44:55 2016 -0700

    cmd/internal/obj, cmd/link: random style cleanups
    
    Identified during review of golang.org/cl/22103.
    
    Change-Id: I86bab4cc17204df1e45deefdb0d0f9a8f6e17073
    Reviewed-on: https://go-review.googlesource.com/22106
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/cmd/internal/obj/pcln.go      | 13 ++++++-------
 src/cmd/link/internal/ld/macho.go | 23 +++--------------------
 2 files changed, 9 insertions(+), 27 deletions(-)

diff --git a/src/cmd/internal/obj/pcln.go b/src/cmd/internal/obj/pcln.go
index a086be9f66..b1536eb224 100644
--- a/src/cmd/internal/obj/pcln.go
+++ b/src/cmd/internal/obj/pcln.go
@@ -158,19 +158,18 @@ func pctofileline(ctxt *Link, sym *LSym, oldval int32, p *Prog, phase int32, arg
 		return int32(pcln.Lastindex)
 	}
 
-	var i int32
-	for i = 0; i < int32(len(pcln.File)); i++ {
-		file := pcln.File[i]
+	for i, file := range pcln.File {
 		if file == f {
 			pcln.Lastfile = f
-			pcln.Lastindex = int(i)
-			return i
+			pcln.Lastindex = i
+			return int32(i)
 		}
 	}
+	i := len(pcln.File)
 	pcln.File = append(pcln.File, f)
 	pcln.Lastfile = f
-	pcln.Lastindex = int(i)
-	return i
+	pcln.Lastindex = i
+	return int32(i)
 }
 
 // pctospadj computes the sp adjustment in effect.
diff --git a/src/cmd/link/internal/ld/macho.go b/src/cmd/link/internal/ld/macho.go
index 46cce4c331..e7d9fb5fe4 100644
--- a/src/cmd/link/internal/ld/macho.go
+++ b/src/cmd/link/internal/ld/macho.go
@@ -682,15 +682,11 @@ func machosymorder() {
 }
 
 func machosymtab() {
-	var s *LSym
-	var o *LSym
-	var p string
-
 	symtab := Linklookup(Ctxt, ".machosymtab", 0)
 	symstr := Linklookup(Ctxt, ".machosymstr", 0)
 
 	for i := 0; i < nsortsym; i++ {
-		s = sortsym[i]
+		s := sortsym[i]
 		Adduint32(Ctxt, symtab, uint32(symstr.Size))
 
 		// Only add _ to C symbols. Go symbols have dot in the name.
@@ -699,20 +695,7 @@ func machosymtab() {
 		}
 
 		// replace "·" as ".", because DTrace cannot handle it.
-		if !strings.Contains(s.Extname, "·") {
-			Addstring(symstr, s.Extname)
-		} else {
-			for p = s.Extname; p != ""; p = p[1:] {
-				if p[0] == 0xc2 && (p[1:])[0] == 0xb7 {
-					Adduint8(Ctxt, symstr, '.')
-					p = p[1:]
-				} else {
-					Adduint8(Ctxt, symstr, p[0])
-				}
-			}
-
-			Adduint8(Ctxt, symstr, '\x00')
-		}
+		Addstring(symstr, strings.Replace(s.Extname, "·", ".", -1))
 
 		if s.Type == obj.SDYNIMPORT || s.Type == obj.SHOSTOBJ {
 			Adduint8(Ctxt, symtab, 0x01)                // type N_EXT, external symbol
@@ -725,7 +708,7 @@ func machosymtab() {
 			} else {
 				Adduint8(Ctxt, symtab, 0x0e)
 			}
-			o = s
+			o := s
 			for o.Outer != nil {
 				o = o.Outer
 			}
