commit 8871c930bead174b942ce934677054f8958d0631
Author: Austin Clements <austin@google.com>
Date:   Mon Apr 2 16:08:09 2018 -0400

    cmd/compile: don't lower OpConvert
    
    Currently, each architecture lowers OpConvert to an arch-specific
    OpXXXconvert. This is silly because OpConvert means the same thing on
    all architectures and is logically a no-op that exists only to keep
    track of conversions to and from unsafe.Pointer. Furthermore, lowering
    it makes it harder to recognize in other analyses, particularly
    liveness analysis.
    
    This CL eliminates the lowering of OpConvert, leaving it as the
    generic op until code generation time.
    
    The main complexity here is that we still need to register-allocate
    OpConvert operations. Currently, each arch's lowered OpConvert
    specifies all GP registers in its register mask. Ideally, OpConvert
    wouldn't affect value homing at all, and we could just copy the home
    of OpConvert's source, but this can potentially home an OpConvert in a
    LocalSlot, which neither regalloc nor stackalloc expect. Rather than
    try to disentangle this assumption from regalloc and stackalloc, we
    continue to register-allocate OpConvert, but teach regalloc that
    OpConvert can be allocated to any allocatable GP register.
    
    For #24543.
    
    Change-Id: I795a6aee5fd94d4444a7bafac3838a400c9f7bb6
    Reviewed-on: https://go-review.googlesource.com/108496
    Run-TryBot: Austin Clements <austin@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: David Chase <drchase@google.com>

 src/cmd/compile/internal/amd64/ssa.go          |   4 -
 src/cmd/compile/internal/arm/ssa.go            |   2 +-
 src/cmd/compile/internal/arm64/ssa.go          |   2 +-
 src/cmd/compile/internal/gc/ssa.go             |   5 +
 src/cmd/compile/internal/mips/ssa.go           |   2 +-
 src/cmd/compile/internal/mips64/ssa.go         |   2 +-
 src/cmd/compile/internal/ppc64/ssa.go          |   2 +-
 src/cmd/compile/internal/s390x/ssa.go          |   2 +-
 src/cmd/compile/internal/ssa/gen/386.rules     |   1 -
 src/cmd/compile/internal/ssa/gen/386Ops.go     |   7 --
 src/cmd/compile/internal/ssa/gen/AMD64.rules   |   2 -
 src/cmd/compile/internal/ssa/gen/AMD64Ops.go   |   8 --
 src/cmd/compile/internal/ssa/gen/ARM.rules     |   1 -
 src/cmd/compile/internal/ssa/gen/ARM64.rules   |   1 -
 src/cmd/compile/internal/ssa/gen/ARM64Ops.go   |   7 --
 src/cmd/compile/internal/ssa/gen/ARMOps.go     |   7 --
 src/cmd/compile/internal/ssa/gen/MIPS.rules    |   1 -
 src/cmd/compile/internal/ssa/gen/MIPS64.rules  |   1 -
 src/cmd/compile/internal/ssa/gen/MIPS64Ops.go  |   7 --
 src/cmd/compile/internal/ssa/gen/MIPSOps.go    |   7 --
 src/cmd/compile/internal/ssa/gen/PPC64.rules   |   1 -
 src/cmd/compile/internal/ssa/gen/PPC64Ops.go   |   3 -
 src/cmd/compile/internal/ssa/gen/S390X.rules   |   1 -
 src/cmd/compile/internal/ssa/gen/S390XOps.go   |   7 --
 src/cmd/compile/internal/ssa/gen/genericOps.go |   5 +-
 src/cmd/compile/internal/ssa/gen/main.go       |   6 +-
 src/cmd/compile/internal/ssa/lower.go          |   2 +-
 src/cmd/compile/internal/ssa/opGen.go          | 140 +------------------------
 src/cmd/compile/internal/ssa/regalloc.go       |  24 ++++-
 src/cmd/compile/internal/ssa/rewrite386.go     |  18 ----
 src/cmd/compile/internal/ssa/rewriteAMD64.go   |  43 --------
 src/cmd/compile/internal/ssa/rewriteARM.go     |  16 ---
 src/cmd/compile/internal/ssa/rewriteARM64.go   |  16 ---
 src/cmd/compile/internal/ssa/rewriteMIPS.go    |  16 ---
 src/cmd/compile/internal/ssa/rewriteMIPS64.go  |  16 ---
 src/cmd/compile/internal/ssa/rewritePPC64.go   |  18 ----
 src/cmd/compile/internal/ssa/rewriteS390X.go   |  18 ----
 src/cmd/compile/internal/x86/ssa.go            |   4 -
 38 files changed, 44 insertions(+), 381 deletions(-)
