commit c15b7b2a54a8899fac8277cef532676c9f8fb592
Author: Daniel Martí <mvdan@mvdan.cc>
Date:   Sat Mar 10 16:50:16 2018 +0000

    cmd: re-generate all stringer files
    
    The tool has gotten better over time, so re-generating the files brings
    some advantages like fewer objects, dropping the use of fmt, and
    dropping unnecessary bounds checks.
    
    While at it, add the missing go:generate line for obj.AddrType.
    
    Change-Id: I120c9795ee8faddf5961ff0384b9dcaf58d831ff
    Reviewed-on: https://go-review.googlesource.com/100015
    Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/cmd/compile/fmt_test.go                    |  1 -
 src/cmd/compile/internal/gc/class_string.go    |  4 ++--
 src/cmd/compile/internal/gc/op_string.go       |  4 ++--
 src/cmd/compile/internal/types/etype_string.go |  4 ++--
 src/cmd/internal/obj/addrtype_string.go        | 25 +++++++------------------
 src/cmd/internal/obj/link.go                   |  2 ++
 src/cmd/internal/objabi/reloctype_string.go    |  4 ++--
 src/cmd/internal/objabi/symkind_string.go      |  4 ++--
 src/cmd/link/internal/sym/symkind_string.go    |  6 +++---
 9 files changed, 22 insertions(+), 32 deletions(-)

diff --git a/src/cmd/compile/fmt_test.go b/src/cmd/compile/fmt_test.go
index 578a0bfb20..c73c19af67 100644
--- a/src/cmd/compile/fmt_test.go
+++ b/src/cmd/compile/fmt_test.go
@@ -626,7 +626,6 @@ var knownFormats = map[string]string{
 	"cmd/compile/internal/gc.Nodes %.v":               "",
 	"cmd/compile/internal/gc.Nodes %v":                "",
 	"cmd/compile/internal/gc.Op %#v":                  "",
-	"cmd/compile/internal/gc.Op %d":                   "",
 	"cmd/compile/internal/gc.Op %v":                   "",
 	"cmd/compile/internal/gc.Val %#v":                 "",
 	"cmd/compile/internal/gc.Val %T":                  "",
diff --git a/src/cmd/compile/internal/gc/class_string.go b/src/cmd/compile/internal/gc/class_string.go
index 2722f434e5..8980777333 100644
--- a/src/cmd/compile/internal/gc/class_string.go
+++ b/src/cmd/compile/internal/gc/class_string.go
@@ -2,7 +2,7 @@
 
 package gc
 
-import "fmt"
+import "strconv"
 
 const _Class_name = "PxxxPEXTERNPAUTOPAUTOHEAPPPARAMPPARAMOUTPFUNCPDISCARD"
 
@@ -10,7 +10,7 @@ var _Class_index = [...]uint8{0, 4, 11, 16, 25, 31, 40, 45, 53}
 
 func (i Class) String() string {
 	if i >= Class(len(_Class_index)-1) {
-		return fmt.Sprintf("Class(%d)", i)
+		return "Class(" + strconv.FormatInt(int64(i), 10) + ")"
 	}
 	return _Class_name[_Class_index[i]:_Class_index[i+1]]
 }
diff --git a/src/cmd/compile/internal/gc/op_string.go b/src/cmd/compile/internal/gc/op_string.go
index 2d4772780e..857234e45d 100644
--- a/src/cmd/compile/internal/gc/op_string.go
+++ b/src/cmd/compile/internal/gc/op_string.go
@@ -2,7 +2,7 @@
 
 package gc
 
-import "fmt"
+import "strconv"
 
 const _Op_name = "XXXNAMENONAMETYPEPACKLITERALADDSUBORXORADDSTRADDRANDANDAPPENDARRAYBYTESTRARRAYBYTESTRTMPARRAYRUNESTRSTRARRAYBYTESTRARRAYBYTETMPSTRARRAYRUNEASAS2AS2FUNCAS2RECVAS2MAPRAS2DOTTYPEASOPCALLCALLFUNCCALLMETHCALLINTERCALLPARTCAPCLOSECLOSURECMPIFACECMPSTRCOMPLITMAPLITSTRUCTLITARRAYLITSLICELITPTRLITCONVCONVIFACECONVNOPCOPYDCLDCLFUNCDCLFIELDDCLCONSTDCLTYPEDELETEDOTDOTPTRDOTMETHDOTINTERXDOTDOTTYPEDOTTYPE2EQNELTLEGEGTINDINDEXINDEXMAPKEYSTRUCTKEYLENMAKEMAKECHANMAKEMAPMAKESLICEMULDIVMODLSHRSHANDANDNOTNEWNOTCOMPLUSMINUSORORPANICPRINTPRINTNPARENSENDSLICESLICEARRSLICESTRSLICE3SLICE3ARRRECOVERRECVRUNESTRSELRECVSELRECV2IOTAREALIMAGCOMPLEXALIGNOFOFFSETOFSIZEOFBLOCKBREAKCASEXCASECONTINUEDEFEREMPTYFALLFORFORUNTILGOTOIFLABELPROCRANGERETURNSELECTSWITCHTYPESWTCHANTMAPTSTRUCTTINTERTFUNCTARRAYDDDDDDARGINLCALLEFACEITABIDATASPTRCLOSUREVARCFUNCCHECKNILVARKILLVARLIVEINDREGSPRETJMPGETGEND"
 
@@ -10,7 +10,7 @@ var _Op_index = [...]uint16{0, 3, 7, 13, 17, 21, 28, 31, 34, 36, 39, 45, 49, 55,
 
 func (i Op) String() string {
 	if i >= Op(len(_Op_index)-1) {
-		return fmt.Sprintf("Op(%d)", i)
+		return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
 	}
 	return _Op_name[_Op_index[i]:_Op_index[i+1]]
 }
diff --git a/src/cmd/compile/internal/types/etype_string.go b/src/cmd/compile/internal/types/etype_string.go
index acb10119f4..503a30d0b4 100644
--- a/src/cmd/compile/internal/types/etype_string.go
+++ b/src/cmd/compile/internal/types/etype_string.go
@@ -2,7 +2,7 @@
 
 package types
 
-import "fmt"
+import "strconv"
 
 const _EType_name = "xxxINT8UINT8INT16UINT16INT32UINT32INT64UINT64INTUINTUINTPTRCOMPLEX64COMPLEX128FLOAT32FLOAT64BOOLPTR32PTR64FUNCSLICEARRAYSTRUCTCHANMAPINTERFORWANYSTRINGUNSAFEPTRIDEALNILBLANKFUNCARGSCHANARGSDDDFIELDSSATUPLENTYPE"
 
@@ -10,7 +10,7 @@ var _EType_index = [...]uint8{0, 3, 7, 12, 17, 23, 28, 34, 39, 45, 48, 52, 59, 6
 
 func (i EType) String() string {
 	if i >= EType(len(_EType_index)-1) {
-		return fmt.Sprintf("EType(%d)", i)
+		return "EType(" + strconv.FormatInt(int64(i), 10) + ")"
 	}
 	return _EType_name[_EType_index[i]:_EType_index[i+1]]
 }
diff --git a/src/cmd/internal/obj/addrtype_string.go b/src/cmd/internal/obj/addrtype_string.go
index 48d498dcd9..71f0dd97a8 100644
--- a/src/cmd/internal/obj/addrtype_string.go
+++ b/src/cmd/internal/obj/addrtype_string.go
@@ -1,27 +1,16 @@
-// Code generated by "stringer -type AddrType cmd/internal/obj"; DO NOT EDIT
+// Code generated by "stringer -type AddrType"; DO NOT EDIT.
 
 package obj
 
-import "fmt"
+import "strconv"
 
-const (
-	_AddrType_name_0 = "TYPE_NONE"
-	_AddrType_name_1 = "TYPE_BRANCHTYPE_TEXTSIZETYPE_MEMTYPE_CONSTTYPE_FCONSTTYPE_SCONSTTYPE_REGTYPE_ADDRTYPE_SHIFTTYPE_REGREGTYPE_REGREG2TYPE_INDIRTYPE_REGLIST"
-)
+const _AddrType_name = "TYPE_NONETYPE_BRANCHTYPE_TEXTSIZETYPE_MEMTYPE_CONSTTYPE_FCONSTTYPE_SCONSTTYPE_REGTYPE_ADDRTYPE_SHIFTTYPE_REGREGTYPE_REGREG2TYPE_INDIRTYPE_REGLIST"
 
-var (
-	_AddrType_index_0 = [...]uint8{0, 9}
-	_AddrType_index_1 = [...]uint8{0, 11, 24, 32, 42, 53, 64, 72, 81, 91, 102, 114, 124, 136}
-)
+var _AddrType_index = [...]uint8{0, 9, 20, 33, 41, 51, 62, 73, 81, 90, 100, 111, 123, 133, 145}
 
 func (i AddrType) String() string {
-	switch {
-	case i == 0:
-		return _AddrType_name_0
-	case 6 <= i && i <= 18:
-		i -= 6
-		return _AddrType_name_1[_AddrType_index_1[i]:_AddrType_index_1[i+1]]
-	default:
-		return fmt.Sprintf("AddrType(%d)", i)
+	if i >= AddrType(len(_AddrType_index)-1) {
+		return "AddrType(" + strconv.FormatInt(int64(i), 10) + ")"
 	}
+	return _AddrType_name[_AddrType_index[i]:_AddrType_index[i+1]]
 }
diff --git a/src/cmd/internal/obj/link.go b/src/cmd/internal/obj/link.go
index 27c74f6a77..a3a9c9ffe8 100644
--- a/src/cmd/internal/obj/link.go
+++ b/src/cmd/internal/obj/link.go
@@ -213,6 +213,8 @@ const (
 	NAME_DELETED_AUTO
 )
 
+//go:generate stringer -type AddrType
+
 type AddrType uint8
 
 const (
diff --git a/src/cmd/internal/objabi/reloctype_string.go b/src/cmd/internal/objabi/reloctype_string.go
index a6efe9cad0..b3dbaa39eb 100644
--- a/src/cmd/internal/objabi/reloctype_string.go
+++ b/src/cmd/internal/objabi/reloctype_string.go
@@ -2,7 +2,7 @@
 
 package objabi
 
-import "fmt"
+import "strconv"
 
 const _RelocType_name = "R_ADDRR_ADDRPOWERR_ADDRARM64R_ADDRMIPSR_ADDROFFR_WEAKADDROFFR_SIZER_CALLR_CALLARMR_CALLARM64R_CALLINDR_CALLPOWERR_CALLMIPSR_CONSTR_PCRELR_TLS_LER_TLS_IER_GOTOFFR_PLT0R_PLT1R_PLT2R_USEFIELDR_USETYPER_METHODOFFR_POWER_TOCR_GOTPCRELR_JMPMIPSR_DWARFSECREFR_DWARFFILEREFR_ARM64_TLS_LER_ARM64_TLS_IER_ARM64_GOTPCRELR_POWER_TLS_LER_POWER_TLS_IER_POWER_TLSR_ADDRPOWER_DSR_ADDRPOWER_GOTR_ADDRPOWER_PCRELR_ADDRPOWER_TOCRELR_ADDRPOWER_TOCREL_DSR_PCRELDBLR_ADDRMIPSUR_ADDRMIPSTLSR_ADDRCUOFF"
 
@@ -11,7 +11,7 @@ var _RelocType_index = [...]uint16{0, 6, 17, 28, 38, 47, 60, 66, 72, 81, 92, 101
 func (i RelocType) String() string {
 	i -= 1
 	if i < 0 || i >= RelocType(len(_RelocType_index)-1) {
-		return fmt.Sprintf("RelocType(%d)", i+1)
+		return "RelocType(" + strconv.FormatInt(int64(i+1), 10) + ")"
 	}
 	return _RelocType_name[_RelocType_index[i]:_RelocType_index[i+1]]
 }
diff --git a/src/cmd/internal/objabi/symkind_string.go b/src/cmd/internal/objabi/symkind_string.go
index 3064c8ee05..8862cd2393 100644
--- a/src/cmd/internal/objabi/symkind_string.go
+++ b/src/cmd/internal/objabi/symkind_string.go
@@ -2,7 +2,7 @@
 
 package objabi
 
-import "fmt"
+import "strconv"
 
 const _SymKind_name = "SxxxSTEXTSRODATASNOPTRDATASDATASBSSSNOPTRBSSSTLSBSSSDWARFINFOSDWARFRANGESDWARFLOC"
 
@@ -10,7 +10,7 @@ var _SymKind_index = [...]uint8{0, 4, 9, 16, 26, 31, 35, 44, 51, 61, 72, 81}
 
 func (i SymKind) String() string {
 	if i >= SymKind(len(_SymKind_index)-1) {
-		return fmt.Sprintf("SymKind(%d)", i)
+		return "SymKind(" + strconv.FormatInt(int64(i), 10) + ")"
 	}
 	return _SymKind_name[_SymKind_index[i]:_SymKind_index[i+1]]
 }
diff --git a/src/cmd/link/internal/sym/symkind_string.go b/src/cmd/link/internal/sym/symkind_string.go
index 716eabd850..5f5bd1c168 100644
--- a/src/cmd/link/internal/sym/symkind_string.go
+++ b/src/cmd/link/internal/sym/symkind_string.go
@@ -2,15 +2,15 @@
 
 package sym
 
-import "fmt"
+import "strconv"
 
 const _SymKind_name = "SxxxSTEXTSELFRXSECTSTYPESSTRINGSGOSTRINGSGOFUNCSGCBITSSRODATASFUNCTABSELFROSECTSMACHOPLTSTYPERELROSSTRINGRELROSGOSTRINGRELROSGOFUNCRELROSGCBITSRELROSRODATARELROSFUNCTABRELROSTYPELINKSITABLINKSSYMTABSPCLNTABSELFSECTSMACHOSMACHOGOTSWINDOWSSELFGOTSNOPTRDATASINITARRSDATASBSSSNOPTRBSSSTLSBSSSXREFSMACHOSYMSTRSMACHOSYMTABSMACHOINDIRECTPLTSMACHOINDIRECTGOTSFILEPATHSCONSTSDYNIMPORTSHOSTOBJSDWARFSECTSDWARFINFOSDWARFRANGESDWARFLOC"
 
 var _SymKind_index = [...]uint16{0, 4, 9, 19, 24, 31, 40, 47, 54, 61, 69, 79, 88, 98, 110, 124, 136, 148, 160, 173, 182, 191, 198, 206, 214, 220, 229, 237, 244, 254, 262, 267, 271, 280, 287, 292, 304, 316, 333, 350, 359, 365, 375, 383, 393, 403, 414, 423}
 
 func (i SymKind) String() string {
-	if i < 0 || i >= SymKind(len(_SymKind_index)-1) {
-		return fmt.Sprintf("SymKind(%d)", i)
+	if i >= SymKind(len(_SymKind_index)-1) {
+		return "SymKind(" + strconv.FormatInt(int64(i), 10) + ")"
 	}
 	return _SymKind_name[_SymKind_index[i]:_SymKind_index[i+1]]
 }
