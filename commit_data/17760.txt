commit e121de2f016df84f635c6bfb8b32e3b781e9f51f
Author: Robert Griesemer <gri@golang.org>
Date:   Mon Oct 7 10:43:28 2013 -0700

    spec: unsafe.Pointers are pointers
    
    But they cannot be dereferenced.
    See also issue 6116.
    
    Fixes #6358.
    
    R=r, rsc, iant, ken
    CC=golang-dev
    https://golang.org/cl/14374046
---
 doc/go_spec.html | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index 3d1189973d..4ed5f4d175 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -1,6 +1,6 @@
 <!--{
 	"Title": "The Go Programming Language Specification",
-	"Subtitle": "Version of Oct 3, 2013",
+	"Subtitle": "Version of Oct 7, 2013",
 	"Path": "/ref/spec"
 }-->
 
@@ -5954,6 +5954,8 @@ func Sizeof(variable ArbitraryType) uintptr
 <p>
 Any pointer or value of <a href="#Types">underlying type</a> <code>uintptr</code> can be converted to
 a <code>Pointer</code> type and vice versa.
+A <code>Pointer</code> is a <a href="#Pointer_types">pointer type</a> but a <code>Pointer</code>
+value may not be <a href="#Address_operators">dereferenced</a>.
 </p>
 
 <pre>
@@ -5962,6 +5964,8 @@ bits = *(*uint64)(unsafe.Pointer(&amp;f))
 
 type ptr unsafe.Pointer
 bits = *(*uint64)(ptr(&amp;f))
+
+var p ptr = nil
 </pre>
 
 <p>
