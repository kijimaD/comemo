commit 6d5ea923a2e3006c032d6b959e63f76d43ac2c74
Author: cui fliter <imcusg@gmail.com>
Date:   Mon Jul 31 21:40:45 2023 +0800

    cmd: fix mismatched symbols
    
    Change-Id: I8852c0a29dffec9635d61b7670cfed78ebed07f5
    Reviewed-on: https://go-review.googlesource.com/c/go/+/514315
    Run-TryBot: shuang cui <imcusg@gmail.com>
    Auto-Submit: Dmitri Shuralyov <dmitshur@google.com>
    Reviewed-by: David Chase <drchase@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Dmitri Shuralyov <dmitshur@google.com>
---
 src/cmd/cgo/gcc.go                            | 2 +-
 src/cmd/compile/internal/base/base.go         | 2 +-
 src/cmd/compile/internal/ssa/_gen/PPC64Ops.go | 2 +-
 src/cmd/compile/internal/ssa/numberlines.go   | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/cmd/cgo/gcc.go b/src/cmd/cgo/gcc.go
index 7ae6fbcc48..78a44d33a2 100644
--- a/src/cmd/cgo/gcc.go
+++ b/src/cmd/cgo/gcc.go
@@ -581,7 +581,7 @@ func (p *Package) loadDWARF(f *File, conv *typeConv, names []*Name) {
 			// As of https://reviews.llvm.org/D123534, clang
 			// now emits DW_TAG_variable DIEs that have
 			// no name (so as to be able to describe the
-			// type and source locations of constant strings
+			// type and source locations of constant strings)
 			// like the second arg in the call below:
 			//
 			//     myfunction(42, "foo")
diff --git a/src/cmd/compile/internal/base/base.go b/src/cmd/compile/internal/base/base.go
index 0c374f1661..dd73e50c66 100644
--- a/src/cmd/compile/internal/base/base.go
+++ b/src/cmd/compile/internal/base/base.go
@@ -107,7 +107,7 @@ func AdjustStartingHeap(requestedHeapGoal uint64) {
 	//    interface. Instead, live is estimated by knowing the adjusted value of
 	//    GOGC and the new heap goal following a GC (this requires knowing that
 	//    at least one GC has occurred):
-	//		  estLive = 100 * newGoal / (100 + currentGogc)]
+	//		  estLive = 100 * newGoal / (100 + currentGogc)
 	//    this new value of GOGC
 	//		  newGogc = 100*requestedHeapGoal/estLive - 100
 	//    will result in the desired goal. The logging code checks that the
diff --git a/src/cmd/compile/internal/ssa/_gen/PPC64Ops.go b/src/cmd/compile/internal/ssa/_gen/PPC64Ops.go
index af555416a8..d002a43331 100644
--- a/src/cmd/compile/internal/ssa/_gen/PPC64Ops.go
+++ b/src/cmd/compile/internal/ssa/_gen/PPC64Ops.go
@@ -470,7 +470,7 @@ func init() {
 		//	MOVD	$16,R31
 		//	loop:
 		//	STXVD2X VS32,(R0)(R3)
-		//	STXVD2X	VS32,(R31),R3)
+		//	STXVD2X	VS32,(R31)(R3)
 		//	ADD	R3,32
 		//	BC	loop
 
diff --git a/src/cmd/compile/internal/ssa/numberlines.go b/src/cmd/compile/internal/ssa/numberlines.go
index 4cbc4919f4..b4eca324d5 100644
--- a/src/cmd/compile/internal/ssa/numberlines.go
+++ b/src/cmd/compile/internal/ssa/numberlines.go
@@ -32,7 +32,7 @@ func nextGoodStatementIndex(v *Value, i int, b *Block) int {
 	// If the value is the last one in the block, too bad, it will have to do
 	// (this assumes that the value ordering vaguely corresponds to the source
 	// program execution order, which tends to be true directly after ssa is
-	// first built.
+	// first built).
 	if i >= len(b.Values)-1 {
 		return i
 	}
