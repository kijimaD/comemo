commit 048b8cecc6e74b50205e803ca387ffaa7e9f37fe
Author: Joe Tsai <joetsai@digital-static.net>
Date:   Tue Jan 31 12:54:45 2017 -0800

    reflect: adjust documentation on Value
    
    Make the documentation more explicit that it is not safe to directly
    compare Value. Get straight to the point on how to do it correctly.
    
    Updates #18871
    
    Change-Id: I2aa3253f779636b2f72a1aae8c9bb45d3c32c902
    Reviewed-on: https://go-review.googlesource.com/36018
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/reflect/value.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/reflect/value.go b/src/reflect/value.go
index 1abfbe6f65..abd8489fb8 100644
--- a/src/reflect/value.go
+++ b/src/reflect/value.go
@@ -30,9 +30,9 @@ const ptrSize = 4 << (^uintptr(0) >> 63) // unsafe.Sizeof(uintptr(0)) but an ide
 // the underlying Go value can be used concurrently for the equivalent
 // direct operations.
 //
-// Using == on two Values does not compare the underlying values
-// they represent, but rather the contents of the Value structs.
 // To compare two Values, compare the results of the Interface method.
+// Using == on two Values does not compare the underlying values
+// they represent.
 type Value struct {
 	// typ holds the type of the value represented by a Value.
 	typ *rtype
