commit 4605dfaf76cd5a3cc4edceeeefa7b10406192af1
Author: guoguangwu <guoguangwug@gmail.com>
Date:   Fri Mar 15 08:12:33 2024 +0000

    cmd/compile: fix typo in comment
    
    Change-Id: Iec9ed110c4d5a417bd9de0434147665fd3633899
    GitHub-Last-Rev: d2154f9ea12bc1fbb8f7c4feae2060e2534fa5d2
    GitHub-Pull-Request: golang/go#66332
    Reviewed-on: https://go-review.googlesource.com/c/go/+/571876
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    Reviewed-by: Keith Randall <khr@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Keith Randall <khr@golang.org>
    Auto-Submit: Keith Randall <khr@golang.org>
---
 src/cmd/compile/internal/inline/inl.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/cmd/compile/internal/inline/inl.go b/src/cmd/compile/internal/inline/inl.go
index 8d2de22473..dd300bbd51 100644
--- a/src/cmd/compile/internal/inline/inl.go
+++ b/src/cmd/compile/internal/inline/inl.go
@@ -1018,7 +1018,7 @@ func mkinlcall(callerfn *ir.Func, n *ir.CallExpr, fn *ir.Func, bigCaller bool) *
 		// Decls).
 		//
 		// However, non-trivial closures in Decls are ignored, and are
-		// insteaded enqueued when walk of the calling function
+		// instead enqueued when walk of the calling function
 		// discovers them.
 		//
 		// This presents a problem for direct calls to closures.
