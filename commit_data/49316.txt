commit 677dfe5ad677d7072ffd69963c407a8945e94ec5
Author: zikaeroh <zikaeroh@gmail.com>
Date:   Tue Aug 3 13:41:49 2021 -0700

    [dev.typeparams] cmd/compile: don't print out node pointer in ir.Dump
    
    This has been a part of the node dumping since the very beginning, but
    this makes diffing -W output pretty annoying. -d=dumpptrs already prints
    these out if needed.
    
    Change-Id: I9524a7f7b44ec780ae42a8a2a9588f11ab3950f9
    Reviewed-on: https://go-review.googlesource.com/c/go/+/340253
    Reviewed-by: Dan Scales <danscales@google.com>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    Trust: Dan Scales <danscales@google.com>
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
---
 src/cmd/compile/internal/ir/fmt.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/cmd/compile/internal/ir/fmt.go b/src/cmd/compile/internal/ir/fmt.go
index 3c5a928590..d19fe453ef 100644
--- a/src/cmd/compile/internal/ir/fmt.go
+++ b/src/cmd/compile/internal/ir/fmt.go
@@ -1006,7 +1006,7 @@ func (l Nodes) Format(s fmt.State, verb rune) {
 
 // Dump prints the message s followed by a debug dump of n.
 func Dump(s string, n Node) {
-	fmt.Printf("%s [%p]%+v\n", s, n, n)
+	fmt.Printf("%s%+v\n", s, n)
 }
 
 // DumpList prints the message s followed by a debug dump of each node in the list.
