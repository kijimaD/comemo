commit 1f95f0d353b4d6d27eecbaa43a5976045b802877
Author: Robert Griesemer <gri@golang.org>
Date:   Thu Aug 27 16:44:17 2009 -0700

    tweaks
    
    R=r
    DELTA=2  (0 added, 0 deleted, 2 changed)
    OCL=33994
    CL=33994
---
 doc/go_spec.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index 92776959c9..e10dd5f0cd 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -3283,7 +3283,7 @@ case x == 4: f3();
 
 <p>
 A type switch compares types rather than values. It is otherwise similar
-to an expression switch. It is marked by a special switch expression which
+to an expression switch. It is marked by a special switch expression that
 has the form of a <a href="#Type_assertions">type assertion</a>
 using the reserved word <code>type</code> rather than an actual type.
 Cases then match literal types against the dynamic type of the expression
@@ -3310,7 +3310,7 @@ in the TypeSwitchGuard.
 The type in a case may be <code>nil</code>
 (ยง<a href="#Predeclared_identifiers">Predeclared identifiers</a>);
 that case is used when the expression in the TypeSwitchGuard
-is a nil interface value.
+is a <code>nil</code> interface value.
 </p>
 
 <p>
@@ -3366,7 +3366,7 @@ if v == nil {
 <p>	
 The type switch guard may be preceded by a simple statement, which
 executes before the guard is evaluated.
-</p> 
+</p>
 
 <p>
 The "fallthrough" statement is not permitted in a type switch.
