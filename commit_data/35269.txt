commit 00587e898802bbceb5e86453245f232488ad2356
Author: Kevin Burke <kev@inburke.com>
Date:   Thu Jan 25 11:26:54 2018 -0800

    doc: fix spelling mistake
    
    Change-Id: I7bf1a93d3377acccdd3a34c5dcef7863310496e0
    Reviewed-on: https://go-review.googlesource.com/89955
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 doc/go1.10.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/doc/go1.10.html b/doc/go1.10.html
index 9ea7325891..d24b0b7017 100644
--- a/doc/go1.10.html
+++ b/doc/go1.10.html
@@ -277,9 +277,9 @@ Go structs and Go arrays are not supported in the type signatures of cgo-exporte
 <p>
 Cgo now supports direct access to Go string values from C.
 Functions in the C preamble may use the type <code>_GoString_</code>
-to accept a Go string as an argument. 
+to accept a Go string as an argument.
 C code may call <code>_GoStringLen</code> and <code>_GoStringPtr</code>
-for direct access to the contents of the string. 
+for direct access to the contents of the string.
 A value of type <code>_GoString_</code>
 may be passed in a call to an exported Go function that takes an argument of Go type <code>string</code>.
 </p>
@@ -816,7 +816,7 @@ formats the X.509 distinguished name in the standard RFC 2253 format.
 <p>
 Drivers that currently hold on to the destination buffer provdied by
 <a href="/pkg/database/sql/driver/#Rows.Next"><code>driver.Rows.Next</code></a> should ensure they no longer
-write to a buffer assignedd to the destination array outside of that call.
+write to a buffer assigned to the destination array outside of that call.
 Drivers must be careful that underlying buffers are not modified when closing
 <a href="/pkg/database/sql/driver/#Rows"><code>driver.Rows</code></a>.
 </p>
