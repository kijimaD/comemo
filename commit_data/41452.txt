commit 33ab6ccba066d94f8b8f9f502fddf04df90ea8cd
Author: David Chase <drchase@google.com>
Date:   Tue Oct 1 11:05:59 2019 -0400

    cmd/compile: don't attach statement marks to OpPhi
    
    OpPhi nodes tend to disappear or get rearranged,
    and cause statement marks to vanish.
    
    Change-Id: I2f5a222903b7fcd0d1a72e8f6d7e156036b23f30
    Reviewed-on: https://go-review.googlesource.com/c/go/+/198481
    Run-TryBot: David Chase <drchase@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Jeremy Faller <jeremy@golang.org>
---
 src/cmd/compile/internal/ssa/numberlines.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/cmd/compile/internal/ssa/numberlines.go b/src/cmd/compile/internal/ssa/numberlines.go
index 3e6afd72ff..68195e9b65 100644
--- a/src/cmd/compile/internal/ssa/numberlines.go
+++ b/src/cmd/compile/internal/ssa/numberlines.go
@@ -15,7 +15,7 @@ func isPoorStatementOp(op Op) bool {
 	switch op {
 	// Note that Nilcheck often vanishes, but when it doesn't, you'd love to start the statement there
 	// so that a debugger-user sees the stop before the panic, and can examine the value.
-	case OpAddr, OpLocalAddr, OpOffPtr, OpStructSelect,
+	case OpAddr, OpLocalAddr, OpOffPtr, OpStructSelect, OpPhi,
 		OpIMake, OpStringMake, OpSliceMake, OpStructMake0, OpStructMake1, OpStructMake2, OpStructMake3, OpStructMake4,
 		OpConstBool, OpConst8, OpConst16, OpConst32, OpConst64, OpConst32F, OpConst64F:
 		return true
