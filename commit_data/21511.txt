commit 86fdcbedbcb868f7f2e8274d2b50f0ea34043c47
Author: Rob Pike <r@golang.org>
Date:   Mon Jan 12 14:30:10 2015 +1100

    log: add global Output function
    
    It was just an oversight that this one method of Logger was not
    made available for the standard (std) Logger.
    
    Fixes #9183
    
    Change-Id: I2f251becdb0bae459212d09ea0e5e88774d16dea
    Reviewed-on: https://go-review.googlesource.com/2686
    Reviewed-by: Andrew Gerrand <adg@golang.org>
---
 src/log/log.go | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/src/log/log.go b/src/log/log.go
index 5ff2bc21e3..0ef05d8f94 100644
--- a/src/log/log.go
+++ b/src/log/log.go
@@ -322,3 +322,14 @@ func Panicln(v ...interface{}) {
 	std.Output(2, s)
 	panic(s)
 }
+
+// Output writes the output for a logging event.  The string s contains
+// the text to print after the prefix specified by the flags of the
+// Logger.  A newline is appended if the last character of s is not
+// already a newline.  Calldepth is the count of the number of
+// frames to skip when computing the file name and line number
+// if Llongfile or Lshortfile is set; a value of 1 will print the details
+// for the caller of Output.
+func Output(calldepth int, s string) error {
+	return std.Output(calldepth+1, s) // +1 for this frame.
+}
