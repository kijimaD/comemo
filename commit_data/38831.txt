commit 438b9544a079576c539cdc040cbf337966a0b25d
Author: Austin Clements <austin@google.com>
Date:   Mon Nov 26 14:41:23 2018 -0500

    runtime: check more work flushing races
    
    This adds several new checks to help debug #27993. It adds a mechanism
    for freezing write barriers and gcWork puts during the mark completion
    algorithm. This way, if we do detect mark completion, we can catch any
    puts that happened during the completion algorithm. Based on build
    dashboard failures, this seems to be the window of time when these are
    happening.
    
    This also double-checks that all work buffers are empty immediately
    upon entering mark termination (much earlier than the current check).
    This is unlikely to trigger based on the current failures, but is a
    good safety net.
    
    Change-Id: I03f56c48c4322069e28c50fbc3c15b2fee2130c2
    Reviewed-on: https://go-review.googlesource.com/c/151797
    Run-TryBot: Austin Clements <austin@google.com>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>

 src/runtime/mgc.go     | 64 +++++++++++++++++++++++++++++++++++++++++++++++++-
 src/runtime/mgcwork.go | 34 +++++++++++++++------------
 src/runtime/mwbbuf.go  |  2 +-
 3 files changed, 83 insertions(+), 17 deletions(-)
