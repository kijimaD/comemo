commit b810a74da3c4de519433208163ea257ab33b2d24
Author: Cherry Mui <cherryyz@google.com>
Date:   Fri Mar 18 18:23:44 2022 -0400

    internal/abi, internal/buildcfg: always enable register ABI on PPC64
    
    In last cycle we developed register ABI for ARM64, enabled by
    default as a GOEXPERIMENT. This cycle we turn it on all the time.
    Later CLs will clean up fallback code.
    
    Change-Id: Idac4dcff634791cbc3d30988052ecd742b55ab8b
    Reviewed-on: https://go-review.googlesource.com/c/go/+/394214
    Trust: Cherry Mui <cherryyz@google.com>
    Run-TryBot: Cherry Mui <cherryyz@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>
---
 src/internal/abi/abi_generic.go | 2 +-
 src/internal/abi/abi_ppc64x.go  | 2 +-
 src/internal/buildcfg/exp.go    | 4 +---
 3 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/src/internal/abi/abi_generic.go b/src/internal/abi/abi_generic.go
index bc8483b4f9..d5803e70d2 100644
--- a/src/internal/abi/abi_generic.go
+++ b/src/internal/abi/abi_generic.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build !goexperiment.regabiargs && !amd64 && !arm64
+//go:build !goexperiment.regabiargs && !amd64 && !arm64 && !ppc64 && !ppc64le
 
 package abi
 
diff --git a/src/internal/abi/abi_ppc64x.go b/src/internal/abi/abi_ppc64x.go
index d51fb49bea..73416d74d6 100644
--- a/src/internal/abi/abi_ppc64x.go
+++ b/src/internal/abi/abi_ppc64x.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build goexperiment.regabiargs && (ppc64 || ppc64le)
+//go:build ppc64 || ppc64le
 
 package abi
 
diff --git a/src/internal/buildcfg/exp.go b/src/internal/buildcfg/exp.go
index b2bf9b2c83..6b770558fd 100644
--- a/src/internal/buildcfg/exp.go
+++ b/src/internal/buildcfg/exp.go
@@ -62,10 +62,8 @@ func ParseGOEXPERIMENT(goos, goarch, goexp string) (*ExperimentFlags, error) {
 	// always on.
 	var regabiSupported, regabiAlwaysOn bool
 	switch goarch {
-	case "amd64", "arm64":
+	case "amd64", "arm64", "ppc64le", "ppc64":
 		regabiAlwaysOn = true
-		fallthrough
-	case "ppc64le", "ppc64":
 		regabiSupported = true
 	}
 
