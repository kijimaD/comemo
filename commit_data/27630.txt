commit 5103fbfdb29278533c666163a9d56f85408224d9
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Wed Apr 6 02:51:55 2016 +0000

    runtime: merge os_linux.go into os1_linux.go
    
    Change-Id: I791c47014fe69e8529c7b2f0b9a554e47902d46c
    Reviewed-on: https://go-review.googlesource.com/21566
    Reviewed-by: Minux Ma <minux@golang.org>
---
 src/runtime/os1_linux.go | 29 +++++++++++++++++++++++++++++
 src/runtime/os_linux.go  | 36 ------------------------------------
 2 files changed, 29 insertions(+), 36 deletions(-)

diff --git a/src/runtime/os1_linux.go b/src/runtime/os1_linux.go
index 726dd649fe..7d8cc7e5c4 100644
--- a/src/runtime/os1_linux.go
+++ b/src/runtime/os1_linux.go
@@ -9,6 +9,11 @@ import (
 	"unsafe"
 )
 
+type mOS struct{}
+
+//go:noescape
+func futex(addr unsafe.Pointer, op int32, val uint32, ts, addr2 unsafe.Pointer, val3 uint32) int32
+
 // Linux futex.
 //
 //	futexsleep(uint32 *addr, uint32 val)
@@ -127,6 +132,9 @@ const (
 		_CLONE_THREAD /* revisit - okay for now */
 )
 
+//go:noescape
+func clone(flags int32, stk, mm, gg, fn unsafe.Pointer) int32
+
 // May run with m.p==nil, so write barriers are not allowed.
 //go:nowritebarrier
 func newosproc(mp *m, stk unsafe.Pointer) {
@@ -307,6 +315,27 @@ func sigreturn()
 func sigtramp()
 func cgoSigtramp()
 
+//go:noescape
+func rt_sigaction(sig uintptr, new, old *sigactiont, size uintptr) int32
+
+//go:noescape
+func sigaltstack(new, old *sigaltstackt)
+
+//go:noescape
+func setitimer(mode int32, new, old *itimerval)
+
+//go:noescape
+func rtsigprocmask(sig uint32, new, old *sigset, size int32)
+
+//go:noescape
+func getrlimit(kind int32, limit unsafe.Pointer) int32
+func raise(sig int32)
+func raiseproc(sig int32)
+
+//go:noescape
+func sched_getaffinity(pid, len uintptr, buf *uintptr) int32
+func osyield()
+
 //go:nosplit
 //go:nowritebarrierrec
 func setsig(i int32, fn uintptr, restart bool) {
diff --git a/src/runtime/os_linux.go b/src/runtime/os_linux.go
deleted file mode 100644
index dd69743e10..0000000000
--- a/src/runtime/os_linux.go
+++ /dev/null
@@ -1,36 +0,0 @@
-// Copyright 2014 The Go Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style
-// license that can be found in the LICENSE file.
-
-package runtime
-
-import "unsafe"
-
-type mOS struct{}
-
-//go:noescape
-func futex(addr unsafe.Pointer, op int32, val uint32, ts, addr2 unsafe.Pointer, val3 uint32) int32
-
-//go:noescape
-func clone(flags int32, stk, mm, gg, fn unsafe.Pointer) int32
-
-//go:noescape
-func rt_sigaction(sig uintptr, new, old *sigactiont, size uintptr) int32
-
-//go:noescape
-func sigaltstack(new, old *sigaltstackt)
-
-//go:noescape
-func setitimer(mode int32, new, old *itimerval)
-
-//go:noescape
-func rtsigprocmask(sig uint32, new, old *sigset, size int32)
-
-//go:noescape
-func getrlimit(kind int32, limit unsafe.Pointer) int32
-func raise(sig int32)
-func raiseproc(sig int32)
-
-//go:noescape
-func sched_getaffinity(pid, len uintptr, buf *uintptr) int32
-func osyield()
