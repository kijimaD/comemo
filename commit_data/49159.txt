commit e6d956e1c521b948257dd20056436d133df176f6
Author: Dan Scales <danscales@google.com>
Date:   Fri Jul 23 14:38:04 2021 -0700

    [dev.typeparams] cmd/compile: add CONVIFACE nodes for return values during noder2
    
    Even if we can otherwise transform a return statement because of type
    params, add CONVIFACE nodes where appropriate.
    
    Change-Id: Ia2216d5f6805926075ba6802a4385eee1d63e37e
    Reviewed-on: https://go-review.googlesource.com/c/go/+/337049
    Trust: Dan Scales <danscales@google.com>
    Run-TryBot: Dan Scales <danscales@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/cmd/compile/internal/noder/stmt.go | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/cmd/compile/internal/noder/stmt.go b/src/cmd/compile/internal/noder/stmt.go
index b7085c4776..5af4a2da9c 100644
--- a/src/cmd/compile/internal/noder/stmt.go
+++ b/src/cmd/compile/internal/noder/stmt.go
@@ -128,6 +128,11 @@ func (g *irgen) stmt(stmt syntax.Stmt) ir.Node {
 			if e.Type().HasTParam() {
 				// Delay transforming the return statement if any of the
 				// return values have a type param.
+				if !ir.HasNamedResults(ir.CurFunc) {
+					// But add CONVIFACE nodes where needed if
+					// any of the return values have interface type.
+					typecheckaste(ir.ORETURN, nil, false, ir.CurFunc.Type().Results(), n.Results, true)
+				}
 				n.SetTypecheck(3)
 				return n
 			}
