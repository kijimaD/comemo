commit a800acaae140318896e319edc25845d643d8e273
Merge: dd40bbc57b 07569dac4e
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Mon Dec 28 00:39:13 2020 -0800

    [dev.typeparams] all: merge dev.regabi (07569da) into dev.typeparams
    
    Conflicts:
    
    - test/fixedbugs/issue27595.go
    - test/fixedbugs/issue30087.go
    - test/used.go
    
    Merge List:
    
    + 2020-12-28 07569dac4e [dev.regabi] all: merge master (1d78139) into dev.regabi
    + 2020-12-28 76136be027 [dev.regabi] cmd/compile: check for recursive import in ImportBody
    + 2020-12-28 fda7ec3a3f [dev.regabi] cmd/compile: remove Name.IsDDD, etc
    + 2020-12-28 098a6490b9 [dev.regabi] cmd/compile: remove Declare in makepartialcall
    + 2020-12-28 137f0d2e06 [dev.regabi] cmd/compile: remove unnecessary Name.Sym call
    + 2020-12-28 3383b5c74a [dev.regabi] cmd/compile: flatten dependency graph [generated]
    + 2020-12-28 f8afb8216a [dev.regabi] cmd/compile: rename CommStmt and CaseStmt [generated]
    + 2020-12-28 5f3bd59a0d [dev.regabi] cmd/compile: remove some unneeded code in package ir
    + 2020-12-28 3bdafb0d82 [dev.regabi] cmd/compile: remove CommStmt.List
    + 2020-12-28 2ecf52b841 [dev.regabi] cmd/compile: separate CommStmt from CaseStmt
    + 2020-12-28 ed9772e130 [dev.regabi] cmd/compile: add explicit file name in types generation
    + 2020-12-28 a59d26603f [dev.regabi] cmd/compile: use []*CaseStmt in {Select,Switch}Stmt
    + 2020-12-28 fbc4458c06 [dev.regabi] cmd/compile: simplify some tree traversal code
    + 2020-12-28 6c67677541 [dev.regabi] cmd/compile: simplify FuncName and PkgFuncName
    + 2020-12-28 676d794b81 [dev.regabi] cmd/compile: remove refersToCommonName
    + 2020-12-28 c98548e110 [dev.regabi] cmd/compile: merge ascompatee, ascompatee1, and reorder3
    + 2020-12-28 4c215c4fa9 [dev.regabi] cmd/compile: simplify and optimize reorder3
    + 2020-12-28 e6c973198d [dev.regabi] cmd/compile: stop mangling SelectorExpr.Sel for ODOTMETH
    + 2020-12-28 135ce1c485 [dev.regabi] cmd/compile: desugar OMETHEXPR into ONAME during walk
    + 2020-12-28 0f732f8c91 [dev.regabi] cmd/compile: minor walkExpr cleanups
    + 2020-12-28 0de8eafd98 [dev.regabi] cmd/compile: remove SelectorExpr.Offset field
    + 2020-12-28 a4f335f420 [dev.regabi] cmd/compile: always use a Field for ODOTPTR expressions
    + 2020-12-26 1d78139128 runtime/cgo: fix Android build with NDK 22
    + 2020-12-25 2018b68a65 net/mail: don't use MDT in test
    + 2020-12-25 e4f293d853 [dev.regabi] cmd/compile: fix OCALLMETH desugaring
    + 2020-12-25 1d9a1f67d5 [dev.regabi] cmd/compile: don't emit reflect data for method types
    + 2020-12-25 396b6c2e7c [dev.regabi] cmd/compile: cleanup assignment typechecking
    + 2020-12-25 e24d2f3d05 [dev.regabi] cmd/compile: remove typ from RangeStmt
    + 2020-12-25 2785c691c2 [dev.regabi] cmd/compile: cleanup devirtualization docs
    + 2020-12-25 4b1d0fe66f [dev.regabi] cmd/compile: new devirtualization pkg [generated]
    + 2020-12-24 082cc8b7d9 [dev.regabi] cmd/compile: change ir.IsAssignable -> ir.IsAddressable
    + 2020-12-24 27b248b307 [dev.regabi] cmd/compile: separate range stmt Vars to Key, Value nodes
    + 2020-12-23 40818038bf [dev.regabi] cmd/compile: change CaseStmt.Vars to Var
    + 2020-12-23 b116404444 runtime: shift timeHistogram buckets and allow negative durations
    + 2020-12-23 8db7e2fecd runtime: fix allocs-by-size and frees-by-size buckets
    + 2020-12-23 fb96f07e1a runtime: fix nStackRoots comment about stack roots
    + 2020-12-23 d1502b3c72 lib/time, time/tzdata: update tzdata to 2020e
    + 2020-12-23 30c99cbb7a cmd/go: add the Retract field to 'go help mod edit' definition of the GoMod struct
    + 2020-12-23 49d0b239cb doc: fix a typo in contribute.html
    + 2020-12-23 9eeed291bc [dev.regabi] cmd/compile: eliminate usage of ir.Node in liveness
    + 2020-12-23 d1d64e4cea [dev.regabi] cmd/compile: split SliceExpr.List into separate fields
    + 2020-12-23 98a73030b0 cmd/go: in 'go get', promote named implicit dependencies to explicit
    + 2020-12-23 d19018e8f1 [dev.regabi] cmd/compile: split SliceHeaderExpr.LenCap into separate fields
    + 2020-12-23 53f082b0ee [dev.regabi] cmd/compile: cleanup export code further
    + 2020-12-23 31267f82e1 [dev.regabi] cmd/compile: simplify function/interface/struct typechecking
    + 2020-12-23 addade2cce [dev.regabi] cmd/compile: prefer types constructors over typecheck
    + 2020-12-23 18ebfb49e9 [dev.regabi] cmd/compile: cleanup noder
    + 2020-12-23 87a592b356 [dev.regabi] cmd/compile: cleanup import/export code
    + 2020-12-23 5898025026 [dev.regabi] cmd/compile: update mkbuiltin.go to use new type constructors
    + 2020-12-23 63c96c2ee7 [dev.regabi] cmd/compile: update mkbuiltin.go and re-enable TestBuiltin
    + 2020-12-23 fd6ba1c8a2 os/signal: fix a deadlock with syscall.AllThreadsSyscall() use
    + 2020-12-23 b0b0d98283 runtime: linux iscgo support for not blocking nptl signals
    + 2020-12-22 223331fc0c cmd/go/internal/modload: add hint for missing implicit dependency
    
    Change-Id: Iecb8a7dfb401b6ab383e97101cd81bfc201683f6

 doc/contribute.html                                |     2 +-
 lib/time/update.bash                               |     4 +-
 lib/time/zoneinfo.zip                              |   Bin 422449 -> 424205 bytes
 .../compile/internal/devirtualize/devirtualize.go  |    85 +
 src/cmd/compile/internal/escape/escape.go          |    29 +-
 src/cmd/compile/internal/gc/main.go                |     3 +-
 src/cmd/compile/internal/inline/inl.go             |    91 +-
 src/cmd/compile/internal/ir/expr.go                |    80 +-
 src/cmd/compile/internal/ir/fmt.go                 |    37 +-
 src/cmd/compile/internal/ir/func.go                |    38 +-
 src/cmd/compile/internal/ir/mknode.go              |    18 +-
 src/cmd/compile/internal/ir/name.go                |     3 -
 src/cmd/compile/internal/ir/node_gen.go            |    70 +-
 src/cmd/compile/internal/ir/scc.go                 |    49 +-
 src/cmd/compile/internal/ir/stmt.go                |   121 +-
 src/cmd/compile/internal/ir/type.go                |    28 -
 src/cmd/compile/internal/ir/visit.go               |     3 +-
 src/cmd/compile/internal/liveness/plive.go         |   107 +-
 src/cmd/compile/internal/noder/noder.go            |   119 +-
 src/cmd/compile/internal/objw/prog.go              |    12 +-
 src/cmd/compile/internal/pkginit/initorder.go      |     6 +-
 src/cmd/compile/internal/reflectdata/alg.go        |    22 +-
 src/cmd/compile/internal/reflectdata/reflect.go    |    15 +-
 src/cmd/compile/internal/ssa/numberlines.go        |    10 -
 src/cmd/compile/internal/ssagen/ssa.go             |   119 +-
 src/cmd/compile/internal/staticinit/sched.go       |     2 +-
 src/cmd/compile/internal/typebits/typebits.go      |    87 +
 src/cmd/compile/internal/typecheck/builtin.go      |   189 +-
 src/cmd/compile/internal/typecheck/builtin_test.go |     1 -
 src/cmd/compile/internal/typecheck/const.go        |     2 +-
 src/cmd/compile/internal/typecheck/dcl.go          |   126 +-
 src/cmd/compile/internal/typecheck/expr.go         |    50 +-
 src/cmd/compile/internal/typecheck/func.go         |    55 +-
 src/cmd/compile/internal/typecheck/iexport.go      |    82 +-
 src/cmd/compile/internal/typecheck/iimport.go      |   142 +-
 src/cmd/compile/internal/typecheck/mkbuiltin.go    |    14 +-
 src/cmd/compile/internal/typecheck/stmt.go         |   369 +-
 src/cmd/compile/internal/typecheck/type.go         |    72 +-
 src/cmd/compile/internal/typecheck/typecheck.go    |    37 +-
 src/cmd/compile/internal/types/alg.go              |     2 +-
 src/cmd/compile/internal/types/algkind_string.go   |     2 +-
 src/cmd/compile/internal/types/fmt.go              |    14 +-
 src/cmd/compile/internal/types/goversion.go        |     2 -
 .../types/{etype_string.go => kind_string.go}      |    12 +-
 src/cmd/compile/internal/types/type.go             |     4 +-
 src/cmd/compile/internal/walk/assign.go            |   390 +-
 src/cmd/compile/internal/walk/builtin.go           |    17 +-
 src/cmd/compile/internal/walk/compare.go           |    12 +-
 src/cmd/compile/internal/walk/complit.go           |     5 +-
 src/cmd/compile/internal/walk/convert.go           |     4 +-
 src/cmd/compile/internal/walk/expr.go              |   119 +-
 src/cmd/compile/internal/walk/order.go             |    29 +-
 src/cmd/compile/internal/walk/range.go             |    30 +-
 src/cmd/compile/internal/walk/select.go            |    24 +-
 src/cmd/compile/internal/walk/switch.go            |    48 +-
 src/cmd/compile/internal/walk/walk.go              |    30 +-
 src/cmd/go/alldocs.go                              |     1 +
 src/cmd/go/internal/modcmd/edit.go                 |     1 +
 src/cmd/go/internal/modload/buildlist.go           |    11 +
 src/cmd/go/internal/modload/init.go                |     6 +-
 src/cmd/go/internal/modload/load.go                |    11 +-
 src/cmd/go/internal/modload/query.go               |    10 +-
 src/cmd/go/internal/str/str.go                     |    14 +
 .../testdata/script/mod_get_promote_implicit.txt   |    88 +
 src/net/mail/message_test.go                       |     8 +-
 src/os/signal/signal_linux_test.go                 |    42 +
 src/runtime/cgo/gcc_linux_386.c                    |     2 +-
 src/runtime/cgo/gcc_linux_amd64.c                  |     2 +-
 src/runtime/cgo/gcc_linux_arm.c                    |     2 +-
 src/runtime/cgo/gcc_linux_arm64.c                  |     2 +-
 src/runtime/export_test.go                         |     4 +-
 src/runtime/histogram.go                           |    30 +-
 src/runtime/histogram_test.go                      |    22 +-
 src/runtime/metrics.go                             |    17 +-
 src/runtime/metrics_test.go                        |     6 +
 src/runtime/mgcmark.go                             |     3 +-
 src/runtime/os_js.go                               |     2 +-
 src/runtime/os_linux.go                            |    18 +
 src/runtime/os_plan9.go                            |     2 +-
 src/runtime/os_windows.go                          |     2 +-
 src/runtime/proc.go                                |     9 +-
 src/runtime/signal_unix.go                         |    19 +-
 src/runtime/sigqueue.go                            |    34 +-
 src/runtime/sigqueue_plan9.go                      |     7 +
 src/syscall/syscall_linux_test.go                  |    13 +
 src/time/tzdata/zipdata.go                         | 13714 ++++++++++---------
 test/fixedbugs/issue27595.go                       |     2 +-
 test/fixedbugs/issue30087.go                       |     6 +-
 test/fixedbugs/issue31053.dir/main.go              |     6 +-
 test/used.go                                       |     1 +
 90 files changed, 8495 insertions(+), 8665 deletions(-)

diff --cc test/fixedbugs/issue27595.go
index 8277145769,b9328a6813..2fc0eb2a58
--- a/test/fixedbugs/issue27595.go
+++ b/test/fixedbugs/issue27595.go
@@@ -6,9 -6,9 +6,9 @@@
  
  package main
  
 -var a = twoResults()       // ERROR "assignment mismatch: 1 variable but twoResults returns 2 values"
 -var b, c, d = twoResults() // ERROR "assignment mismatch: 3 variables but twoResults returns 2 values"
 -var e, f = oneResult()     // ERROR "assignment mismatch: 2 variables but oneResult returns 1 value"
 +var a = twoResults()       // ERROR "assignment mismatch: 1 variable but twoResults returns 2 values|2\-valued"
 +var b, c, d = twoResults() // ERROR "assignment mismatch: 3 variables but twoResults returns 2 values|cannot initialize"
- var e, f = oneResult()     // ERROR "assignment mismatch: 2 variables but oneResult returns 1 values|cannot initialize"
++var e, f = oneResult()     // ERROR "assignment mismatch: 2 variables but oneResult returns 1 value|cannot initialize"
  
  func twoResults() (int, int) {
  	return 1, 2
diff --cc test/fixedbugs/issue30087.go
index e2aec63a52,a8f6202329..3e4b0324a3
--- a/test/fixedbugs/issue30087.go
+++ b/test/fixedbugs/issue30087.go
@@@ -7,9 -7,8 +7,9 @@@
  package main
  
  func main() {
- 	var a, b = 1    // ERROR "assignment mismatch: 2 variables but 1 values|wrong number of initializations|cannot initialize"
- 	_ = 1, 2        // ERROR "assignment mismatch: 1 variables but 2 values|number of variables does not match|cannot assign"
- 	c, d := 1       // ERROR "assignment mismatch: 2 variables but 1 values|wrong number of initializations|cannot initialize"
 -	var a, b = 1    // ERROR "assignment mismatch: 2 variables but 1 value|wrong number of initializations"
 -	_ = 1, 2        // ERROR "assignment mismatch: 1 variable but 2 values|number of variables does not match"
 -	c, d := 1       // ERROR "assignment mismatch: 2 variables but 1 value|wrong number of initializations"
 -	e, f := 1, 2, 3 // ERROR "assignment mismatch: 2 variables but 3 values|wrong number of initializations"
++	var a, b = 1    // ERROR "assignment mismatch: 2 variables but 1 value|wrong number of initializations|cannot initialize"
++	_ = 1, 2        // ERROR "assignment mismatch: 1 variable but 2 values|number of variables does not match|cannot assign"
++	c, d := 1       // ERROR "assignment mismatch: 2 variables but 1 value|wrong number of initializations|cannot initialize"
 +	e, f := 1, 2, 3 // ERROR "assignment mismatch: 2 variables but 3 values|wrong number of initializations|cannot initialize"
 +	_, _, _, _ = c, d, e, f
  }
diff --cc test/used.go
index a3f0e1270b,76f3fc91cc..5bdc5a7318
--- a/test/used.go
+++ b/test/used.go
@@@ -59,26 -59,27 +59,27 @@@ func _() 
  	f0()                   // ok
  	f1()                   // ok
  	f2()                   // ok
 -	_ = f0()               // ERROR "f0\(\) used as value"
 +	_ = f0()               // ERROR "f0\(\) .*used as value"
  	_ = f1()               // ok
  	_, _ = f2()            // ok
 -	_ = f2()               // ERROR "assignment mismatch: 1 variable but f2 returns 2 values"
 -	_ = f1(), 0            // ERROR "assignment mismatch: 1 variable but 2 values"
 -	T.M0                   // ERROR "T.M0 evaluated but not used"
 -	t.M0                   // ERROR "t.M0 evaluated but not used"
 -	cap                    // ERROR "use of builtin cap not in function call"
 -	cap(slice)             // ERROR "cap\(slice\) evaluated but not used"
 +	_ = f2()               // ERROR "assignment mismatch: 1 variable but f2 returns 2 values|cannot assign"
++	_ = f1(), 0            // ERROR "assignment mismatch: 1 variable but 2 values|cannot assign"
 +	T.M0                   // ERROR "T.M0 .* not used"
 +	t.M0                   // ERROR "t.M0 .* not used"
 +	cap                    // ERROR "use of builtin cap not in function call|must be called"
 +	cap(slice)             // ERROR "cap\(slice\) .* not used"
  	close(c)               // ok
 -	_ = close(c)           // ERROR "close\(c\) used as value"
 -	func() {}              // ERROR "func literal evaluated but not used"
 +	_ = close(c)           // ERROR "close\(c\) .*used as value"
 +	func() {}              // ERROR "func literal .* not used|is not used"
  	X{}                    // ERROR "undefined: X"
 -	map[string]int{}       // ERROR "map\[string\]int{} evaluated but not used"
 -	struct{}{}             // ERROR "struct ?{}{} evaluated but not used"
 -	[1]int{}               // ERROR "\[1\]int{} evaluated but not used"
 -	[]int{}                // ERROR "\[\]int{} evaluated but not used"
 -	&struct{}{}            // ERROR "&struct ?{}{} evaluated but not used"
 -	float32(x)             // ERROR "float32\(x\) evaluated but not used"
 -	I(t)                   // ERROR "I\(t\) evaluated but not used"
 -	int(x)                 // ERROR "int\(x\) evaluated but not used"
 +	map[string]int{}       // ERROR "map\[string\]int{} .* not used"
 +	struct{}{}             // ERROR "struct ?{}{} .* not used"
 +	[1]int{}               // ERROR "\[1\]int{} .* not used"
 +	[]int{}                // ERROR "\[\]int{} .* not used"
 +	&struct{}{}            // ERROR "&struct ?{}{} .* not used"
 +	float32(x)             // ERROR "float32\(x\) .* not used"
 +	I(t)                   // ERROR "I\(t\) .* not used"
 +	int(x)                 // ERROR "int\(x\) .* not used"
  	copy(slice, slice)     // ok
  	_ = copy(slice, slice) // ok
  	delete(m, 1)           // ok
