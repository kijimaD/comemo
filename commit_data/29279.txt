commit a4bdd645550608fdb39bfea0bb83eb39b95c6c0b
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Tue Sep 6 17:02:19 2016 +0000

    syscall: use MNT_NOWAIT in TestGetfsstat
    
    Fixes test failure when VMWare's shared folder filesystem is present.
    
    MNT_NOWAIT is what the mount(8) command does.
    
    Fixes #16937
    
    Change-Id: Id436185f544b7069db46c8716d6a0bf580b31da0
    Reviewed-on: https://go-review.googlesource.com/28550
    Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
---
 src/syscall/syscall_bsd_test.go | 19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

diff --git a/src/syscall/syscall_bsd_test.go b/src/syscall/syscall_bsd_test.go
index aaabafaeca..f2bc3f5147 100644
--- a/src/syscall/syscall_bsd_test.go
+++ b/src/syscall/syscall_bsd_test.go
@@ -13,29 +13,32 @@ import (
 )
 
 const MNT_WAIT = 1
+const MNT_NOWAIT = 2
 
 func TestGetfsstat(t *testing.T) {
-	n, err := syscall.Getfsstat(nil, MNT_WAIT)
-	t.Logf("Getfsstat(nil, MNT_WAIT) = (%v, %v)", n, err)
+	const flags = MNT_NOWAIT // see Issue 16937
+	n, err := syscall.Getfsstat(nil, flags)
+	t.Logf("Getfsstat(nil, %d) = (%v, %v)", flags, n, err)
 	if err != nil {
 		t.Fatal(err)
 	}
 
 	data := make([]syscall.Statfs_t, n)
-	n, err = syscall.Getfsstat(data, MNT_WAIT)
-	t.Logf("Getfsstat([]syscall.Statfs_t, MNT_WAIT) = (%v, %v)", n, err)
+	n2, err := syscall.Getfsstat(data, flags)
+	t.Logf("Getfsstat([]syscall.Statfs_t, %d) = (%v, %v)", flags, n2, err)
 	if err != nil {
 		t.Fatal(err)
 	}
-
-	empty := syscall.Statfs_t{}
+	if n != n2 {
+		t.Errorf("Getfsstat(nil) = %d, but subsequent Getfsstat(slice) = %d", n, n2)
+	}
 	for i, stat := range data {
-		if stat == empty {
+		if stat == (syscall.Statfs_t{}) {
 			t.Errorf("index %v is an empty Statfs_t struct", i)
 		}
 	}
 	if t.Failed() {
-		for i, stat := range data {
+		for i, stat := range data[:n2] {
 			t.Logf("data[%v] = %+v", i, stat)
 		}
 		mount, err := exec.Command("mount").CombinedOutput()
