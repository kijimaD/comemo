commit 11ff4b21f253f1c8a5a63608b0108a1438378c20
Author: Daniel Mart√≠ <mvdan@mvdan.cc>
Date:   Thu Oct 27 19:47:47 2016 +0100

    testing: don't warn if -bench was passed
    
    In a previous change, cmd/go was taught to show a "no tests ran" warning
    if test did nothing. But it missed a case - if no tests nor examples ran
    but any benchmarks were meant to be run, it would still produce the
    warning. This meant that running only benchmarks, which is common, would
    be confusing:
    
             $ go test -run='^$' -bench=.
            testing: warning: no tests to run
            BenchmarkFoo-4            300000              5056 ns/op
            [...]
    
    I believe this was because of a copy-paste error in the tests. This was
    being tested, but on the wrong file which does contain a test that was
    being run. Fix the path and fix the now failing test by never showing
    the warning if -bench was given a non-empty string.
    
    The rationale is that if -bench was given but there was no output, it's
    obvious that nothing happened as benchmarks always produce output even
    without -v. So showing a warning in those cases is redundant.
    
    To make future typos less likely, make sure that no tests are being run
    in the cases where we only want to run benchmarks.
    
    Fixes #17603.
    
    Change-Id: I4c626caf39f72260c6a9761c06446663f465f947
    Reviewed-on: https://go-review.googlesource.com/32157
    Reviewed-by: Marcel van Lohuizen <mpvl@golang.org>
    Run-TryBot: Marcel van Lohuizen <mpvl@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>

 src/cmd/go/go_test.go  | 11 ++++++-----
 src/testing/testing.go |  2 +-
 2 files changed, 7 insertions(+), 6 deletions(-)
