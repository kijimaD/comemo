commit 1023d63f7f0ee31f5810e3e5598227c85442a1e2
Author: Ian Lance Taylor <iant@golang.org>
Date:   Wed Jan 27 09:23:48 2016 -0800

    unsafe: clarify wording in recent Alignof changes
    
    Change-Id: I595379d2f02b0a43735f0375758e4997ce3b64a7
    Reviewed-on: https://go-review.googlesource.com/18986
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
---
 src/unsafe/unsafe.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/unsafe/unsafe.go b/src/unsafe/unsafe.go
index 3c8cd34ae2..33b3114219 100644
--- a/src/unsafe/unsafe.go
+++ b/src/unsafe/unsafe.go
@@ -187,8 +187,8 @@ func Offsetof(x ArbitraryType) uintptr
 // of a hypothetical variable v as if v was declared via var v = x.
 // It is the largest value m such that the address of v is always zero mod m.
 // It is the same as the value returned by reflect.TypeOf(x).Align().
-// As a special case, if s has a struct type and f is a field within that
-// struct, then Alignof(s.f) will return the required alignment of a field
-// of that type within a struct.  This case is the same as the value returned
-// by reflect.TypeOf(s.f).FieldAlign().
+// As a special case, if a variable s is of struct type and f is a field
+// within that struct, then Alignof(s.f) will return the required alignment
+// of a field of that type within a struct.  This case is the same as the
+// value returned by reflect.TypeOf(s.f).FieldAlign().
 func Alignof(x ArbitraryType) uintptr
