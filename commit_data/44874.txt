commit b22af9b407dc29d1a733976484904ad0ab168466
Author: Cherry Zhang <cherryyz@google.com>
Date:   Thu Sep 10 22:41:29 2020 -0400

    cmd/link: record only the first occurance in Reachparent graph
    
    In the deadcode pass, a type symbol may be marked twice, one
    without UsedInIface, one with. For the second time, don't
    update the Reachparent graph, so it only records the path of
    the first time the symbol is reached. This ensures the
    Reachparent graph is acyclic.
    
    TODO: add a test. (This only affects GOEXPERIMENT=fieldtrack)
    
    Change-Id: I68e8a1a69c3830bc8aee5df946151dc22dcb2b29
    Reviewed-on: https://go-review.googlesource.com/c/go/+/254297
    Run-TryBot: Cherry Zhang <cherryyz@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Than McIntosh <thanm@google.com>
---
 src/cmd/link/internal/ld/deadcode.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/cmd/link/internal/ld/deadcode.go b/src/cmd/link/internal/ld/deadcode.go
index 0269429723..35545f950e 100644
--- a/src/cmd/link/internal/ld/deadcode.go
+++ b/src/cmd/link/internal/ld/deadcode.go
@@ -209,7 +209,7 @@ func (d *deadcodePass) mark(symIdx, parent loader.Sym) {
 	if symIdx != 0 && !d.ldr.AttrReachable(symIdx) {
 		d.wq.push(symIdx)
 		d.ldr.SetAttrReachable(symIdx, true)
-		if objabi.Fieldtrack_enabled != 0 {
+		if objabi.Fieldtrack_enabled != 0 && d.ldr.Reachparent[symIdx] == 0 {
 			d.ldr.Reachparent[symIdx] = parent
 		}
 		if *flagDumpDep {
