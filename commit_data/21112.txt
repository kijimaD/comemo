commit 580cba42f4394a4ce477a8fc4984f77e2be6d613
Author: Russ Cox <rsc@golang.org>
Date:   Fri Nov 14 14:50:00 2014 -0500

    [dev.cc] runtime: change set_sec to take int64
    
    Fixes build.
    Tested that all these systems can make.bash.
    
    TBR=austin
    CC=golang-codereviews
    https://golang.org/cl/177770043
---
 src/runtime/defs_dragonfly_amd64.go | 4 ++--
 src/runtime/defs_freebsd_386.go     | 4 ++--
 src/runtime/defs_freebsd_amd64.go   | 4 ++--
 src/runtime/defs_freebsd_arm.go     | 4 ++--
 src/runtime/defs_linux_386.go       | 4 ++--
 src/runtime/defs_linux_amd64.go     | 4 ++--
 src/runtime/defs_linux_arm.go       | 4 ++--
 src/runtime/defs_openbsd_386.go     | 4 ++--
 src/runtime/defs_openbsd_amd64.go   | 4 ++--
 src/runtime/os1_freebsd.go          | 2 +-
 src/runtime/os1_linux.go            | 4 ++--
 src/runtime/os1_openbsd.go          | 2 +-
 12 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/src/runtime/defs_dragonfly_amd64.go b/src/runtime/defs_dragonfly_amd64.go
index 7e95977054..3ac10b0904 100644
--- a/src/runtime/defs_dragonfly_amd64.go
+++ b/src/runtime/defs_dragonfly_amd64.go
@@ -180,8 +180,8 @@ type timespec struct {
 	tv_nsec int64
 }
 
-func (ts *timespec) set_sec(x int32) {
-	ts.tv_sec = int64(x)
+func (ts *timespec) set_sec(x int64) {
+	ts.tv_sec = x
 }
 
 type timeval struct {
diff --git a/src/runtime/defs_freebsd_386.go b/src/runtime/defs_freebsd_386.go
index 2cb3a8fdb3..6938c18736 100644
--- a/src/runtime/defs_freebsd_386.go
+++ b/src/runtime/defs_freebsd_386.go
@@ -185,8 +185,8 @@ type timespec struct {
 	tv_nsec int32
 }
 
-func (ts *timespec) set_sec(x int32) {
-	ts.tv_sec = x
+func (ts *timespec) set_sec(x int64) {
+	ts.tv_sec = int32(x)
 }
 
 type timeval struct {
diff --git a/src/runtime/defs_freebsd_amd64.go b/src/runtime/defs_freebsd_amd64.go
index a2646fb24d..de98e7a3c1 100644
--- a/src/runtime/defs_freebsd_amd64.go
+++ b/src/runtime/defs_freebsd_amd64.go
@@ -196,8 +196,8 @@ type timespec struct {
 	tv_nsec int64
 }
 
-func (ts *timespec) set_sec(x int32) {
-	ts.tv_sec = int64(x)
+func (ts *timespec) set_sec(x int64) {
+	ts.tv_sec = x
 }
 
 type timeval struct {
diff --git a/src/runtime/defs_freebsd_arm.go b/src/runtime/defs_freebsd_arm.go
index e86ce45b4c..744330f4b3 100644
--- a/src/runtime/defs_freebsd_arm.go
+++ b/src/runtime/defs_freebsd_arm.go
@@ -157,8 +157,8 @@ type timespec struct {
 	pad_cgo_0 [4]byte
 }
 
-func (ts *timespec) set_sec(x int32) {
-	ts.tv_sec = int64(x)
+func (ts *timespec) set_sec(x int64) {
+	ts.tv_sec = x
 }
 
 type timeval struct {
diff --git a/src/runtime/defs_linux_386.go b/src/runtime/defs_linux_386.go
index a468f60d9e..ddf592c91b 100644
--- a/src/runtime/defs_linux_386.go
+++ b/src/runtime/defs_linux_386.go
@@ -130,8 +130,8 @@ type timespec struct {
 	tv_nsec int32
 }
 
-func (ts *timespec) set_sec(x int32) {
-	ts.tv_sec = x
+func (ts *timespec) set_sec(x int64) {
+	ts.tv_sec = int32(x)
 }
 
 func (ts *timespec) set_nsec(x int32) {
diff --git a/src/runtime/defs_linux_amd64.go b/src/runtime/defs_linux_amd64.go
index 7a1caea74e..7f8f5816c6 100644
--- a/src/runtime/defs_linux_amd64.go
+++ b/src/runtime/defs_linux_amd64.go
@@ -92,8 +92,8 @@ type timespec struct {
 	tv_nsec int64
 }
 
-func (ts *timespec) set_sec(x int32) {
-	ts.tv_sec = int64(x)
+func (ts *timespec) set_sec(x int64) {
+	ts.tv_sec = x
 }
 
 func (ts *timespec) set_nsec(x int32) {
diff --git a/src/runtime/defs_linux_arm.go b/src/runtime/defs_linux_arm.go
index 7f8300293a..a874b15941 100644
--- a/src/runtime/defs_linux_arm.go
+++ b/src/runtime/defs_linux_arm.go
@@ -84,8 +84,8 @@ type timespec struct {
 	tv_nsec int32
 }
 
-func (ts *timespec) set_sec(x int32) {
-	ts.tv_sec = x
+func (ts *timespec) set_sec(x int64) {
+	ts.tv_sec = int32(x)
 }
 
 func (ts *timespec) set_nsec(x int32) {
diff --git a/src/runtime/defs_openbsd_386.go b/src/runtime/defs_openbsd_386.go
index d7cdbd2273..4b60158115 100644
--- a/src/runtime/defs_openbsd_386.go
+++ b/src/runtime/defs_openbsd_386.go
@@ -138,8 +138,8 @@ type timespec struct {
 	tv_nsec int32
 }
 
-func (ts *timespec) set_sec(x int32) {
-	ts.tv_sec = int64(x)
+func (ts *timespec) set_sec(x int64) {
+	ts.tv_sec = x
 }
 
 func (ts *timespec) set_nsec(x int32) {
diff --git a/src/runtime/defs_openbsd_amd64.go b/src/runtime/defs_openbsd_amd64.go
index 122f46cf33..3c27c9144f 100644
--- a/src/runtime/defs_openbsd_amd64.go
+++ b/src/runtime/defs_openbsd_amd64.go
@@ -149,8 +149,8 @@ type timespec struct {
 	tv_nsec int64
 }
 
-func (ts *timespec) set_sec(x int32) {
-	ts.tv_sec = int64(x)
+func (ts *timespec) set_sec(x int64) {
+	ts.tv_sec = x
 }
 
 func (ts *timespec) set_nsec(x int32) {
diff --git a/src/runtime/os1_freebsd.go b/src/runtime/os1_freebsd.go
index dd22b61d6b..2cacfbae61 100644
--- a/src/runtime/os1_freebsd.go
+++ b/src/runtime/os1_freebsd.go
@@ -42,7 +42,7 @@ func futexsleep1(addr *uint32, val uint32, ns int64) {
 	if ns >= 0 {
 		var ts timespec
 		ts.tv_nsec = 0
-		ts.set_sec(timediv(ns, 1000000000, (*int32)(unsafe.Pointer(&ts.tv_nsec))))
+		ts.set_sec(int64(timediv(ns, 1000000000, (*int32)(unsafe.Pointer(&ts.tv_nsec)))))
 		tsp = &ts
 	}
 	ret := sys_umtx_op(addr, _UMTX_OP_WAIT_UINT_PRIVATE, val, nil, tsp)
diff --git a/src/runtime/os1_linux.go b/src/runtime/os1_linux.go
index 0d24c5edc9..67fa6391e1 100644
--- a/src/runtime/os1_linux.go
+++ b/src/runtime/os1_linux.go
@@ -48,11 +48,11 @@ func futexsleep(addr *uint32, val uint32, ns int64) {
 	// is not, even timediv is too heavy, and we really need to use just an
 	// ordinary machine instruction.
 	if ptrSize == 8 {
-		ts.set_sec(int32(ns / 1000000000))
+		ts.set_sec(ns / 1000000000)
 		ts.set_nsec(int32(ns % 1000000000))
 	} else {
 		ts.tv_nsec = 0
-		ts.set_sec(timediv(ns, 1000000000, (*int32)(unsafe.Pointer(&ts.tv_nsec))))
+		ts.set_sec(int64(timediv(ns, 1000000000, (*int32)(unsafe.Pointer(&ts.tv_nsec)))))
 	}
 	futex(unsafe.Pointer(addr), _FUTEX_WAIT, val, unsafe.Pointer(&ts), nil, 0)
 }
diff --git a/src/runtime/os1_openbsd.go b/src/runtime/os1_openbsd.go
index 5c6ea74121..d5ffe10a81 100644
--- a/src/runtime/os1_openbsd.go
+++ b/src/runtime/os1_openbsd.go
@@ -56,7 +56,7 @@ func semasleep(ns int64) int32 {
 		var ts timespec
 		var nsec int32
 		ns += nanotime()
-		ts.set_sec(timediv(ns, 1000000000, &nsec))
+		ts.set_sec(int64(timediv(ns, 1000000000, &nsec)))
 		ts.set_nsec(nsec)
 		tsp = &ts
 	}
