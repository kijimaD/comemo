commit e5b13401c6b19f58a8439f1019a80fe540c0c687
Author: Minaev Mike <minaev.mike@gmail.com>
Date:   Fri Jan 26 09:17:46 2018 +0000

    crypto/tls: fix deadlock when Read and Close called concurrently
    
    The existing implementation of TLS connection has a deadlock. It occurs
    when client connects to TLS server and doesn't send data for
    handshake, so server calls Close on this connection. This is because
    server reads data under locked mutex, while Close method tries to
    lock the same mutex.
    
    Fixes #23518
    
    Change-Id: I4fb0a2a770f3d911036bfd9a7da7cc41c1b27e19
    Reviewed-on: https://go-review.googlesource.com/90155
    Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Filippo Valsorda <filippo@golang.org>

 src/crypto/tls/conn.go                  | 37 +++++++++++++++++----------------
 src/crypto/tls/handshake_client.go      |  3 ++-
 src/crypto/tls/handshake_client_test.go | 19 +++++++++++++++++
 src/crypto/tls/handshake_server.go      |  3 ++-
 src/crypto/tls/handshake_server_test.go | 18 ++++++++++++++++
 5 files changed, 60 insertions(+), 20 deletions(-)
