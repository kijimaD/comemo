commit 1837419f302da9b36055bf12b6a7f92c420cb32b
Author: Dmitriy Vyukov <dvyukov@google.com>
Date:   Wed Aug 13 01:03:32 2014 +0400

    runtime: remove FlagNoProfile
    Turns out to be unused as well.
    
    LGTM=bradfitz
    R=golang-codereviews, bradfitz
    CC=golang-codereviews, khr
    https://golang.org/cl/127170044
---
 src/pkg/runtime/malloc.go | 19 ++++++++-----------
 src/pkg/runtime/malloc.h  |  3 +--
 2 files changed, 9 insertions(+), 13 deletions(-)

diff --git a/src/pkg/runtime/malloc.go b/src/pkg/runtime/malloc.go
index 73dc9f20d6..71c0a4ecd7 100644
--- a/src/pkg/runtime/malloc.go
+++ b/src/pkg/runtime/malloc.go
@@ -11,9 +11,8 @@ import (
 const (
 	debugMalloc = false
 
-	flagNoScan      = 1 << 0 // GC doesn't have to scan object
-	flagNoProfiling = 1 << 1 // must not profile
-	flagNoZero      = 1 << 2 // don't zero memory
+	flagNoScan = 1 << 0 // GC doesn't have to scan object
+	flagNoZero = 1 << 1 // don't zero memory
 
 	kindArray      = 17
 	kindFunc       = 19
@@ -300,14 +299,12 @@ marked:
 	if debug.allocfreetrace != 0 {
 		tracealloc(x, size, typ)
 	}
-	if flags&flagNoProfiling == 0 {
-		rate := MemProfileRate
-		if rate > 0 {
-			if size < uintptr(rate) && int32(size) < c.next_sample {
-				c.next_sample -= int32(size)
-			} else {
-				profilealloc(mp, x, size)
-			}
+
+	if rate := MemProfileRate; rate > 0 {
+		if size < uintptr(rate) && int32(size) < c.next_sample {
+			c.next_sample -= int32(size)
+		} else {
+			profilealloc(mp, x, size)
 		}
 	}
 
diff --git a/src/pkg/runtime/malloc.h b/src/pkg/runtime/malloc.h
index 556d6d4c03..4612dddb16 100644
--- a/src/pkg/runtime/malloc.h
+++ b/src/pkg/runtime/malloc.h
@@ -534,8 +534,7 @@ enum
 {
 	// flags to malloc
 	FlagNoScan	= 1<<0,	// GC doesn't have to scan object
-	FlagNoProfiling	= 1<<1,	// must not profile
-	FlagNoZero	= 1<<2, // don't zero memory
+	FlagNoZero	= 1<<1, // don't zero memory
 };
 
 void	runtimeÂ·MProf_Malloc(void*, uintptr);
