commit 81cd9ff7dbf46a57710fd72330f2d60e3db959d0
Author: pgxiaolianzi <gnnu_d13@163.com>
Date:   Mon Feb 27 06:51:55 2023 +0000

    all: fix typos
    
    Change-Id: Ica8d5e5799a4de532764ae86cdb623508d3a8e18
    GitHub-Last-Rev: 3e97cca9de3885f2fe0d7deb776e59cc1c73146d
    GitHub-Pull-Request: golang/go#58689
    Reviewed-on: https://go-review.googlesource.com/c/go/+/471021
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Dmitri Shuralyov <dmitshur@google.com>
    Run-TryBot: Ian Lance Taylor <iant@google.com>
---
 src/cmd/compile/internal/ssa/prove.go | 2 +-
 src/cmd/internal/obj/arm64/asm7.go    | 2 +-
 src/net/http/transport_test.go        | 2 +-
 src/os/exec/exec_test.go              | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/cmd/compile/internal/ssa/prove.go b/src/cmd/compile/internal/ssa/prove.go
index 26a349997e..550eb90bed 100644
--- a/src/cmd/compile/internal/ssa/prove.go
+++ b/src/cmd/compile/internal/ssa/prove.go
@@ -908,7 +908,7 @@ func prove(f *Func) {
 				}
 				// One might be tempted to create a v >= ft.zero relation for
 				// all OpPhi's composed of only provably-positive values
-				// but that bloats up the facts table for a very neglible gain.
+				// but that bloats up the facts table for a very negligible gain.
 				// In Go itself, very few functions get improved (< 5) at a cost of 5-7% total increase
 				// of compile time.
 			}
diff --git a/src/cmd/internal/obj/arm64/asm7.go b/src/cmd/internal/obj/arm64/asm7.go
index 7dc8729728..c8fb742557 100644
--- a/src/cmd/internal/obj/arm64/asm7.go
+++ b/src/cmd/internal/obj/arm64/asm7.go
@@ -1267,7 +1267,7 @@ func (c *ctxt7) flushpool(p *obj.Prog) {
 		q := c.newprog()
 		if p.Link == nil {
 			// If p is the last instruction of the function, insert an UNDEF instruction in case the
-			// exection fall through to the pool.
+			// execution fall through to the pool.
 			q.As = obj.AUNDEF
 		} else {
 			// Else insert a branch to the next instruction of p.
diff --git a/src/net/http/transport_test.go b/src/net/http/transport_test.go
index cb5af755db..cae98767c7 100644
--- a/src/net/http/transport_test.go
+++ b/src/net/http/transport_test.go
@@ -4969,7 +4969,7 @@ func testTLSHandshakeTrace(t *testing.T, mode testMode) {
 		t.Fatal("Expected TLSHandshakeStart to be called, but wasn't")
 	}
 	if !done {
-		t.Fatal("Expected TLSHandshakeDone to be called, but wasnt't")
+		t.Fatal("Expected TLSHandshakeDone to be called, but wasn't")
 	}
 }
 
diff --git a/src/os/exec/exec_test.go b/src/os/exec/exec_test.go
index c2f643a645..9f9cb598d8 100644
--- a/src/os/exec/exec_test.go
+++ b/src/os/exec/exec_test.go
@@ -1039,7 +1039,7 @@ func TestDedupEnvEcho(t *testing.T) {
 
 func TestEnvNULCharacter(t *testing.T) {
 	if runtime.GOOS == "plan9" {
-		t.Skip("plan9 explicitly allows NUL in the enviroment")
+		t.Skip("plan9 explicitly allows NUL in the environment")
 	}
 	cmd := helperCommand(t, "echoenv", "FOO", "BAR")
 	cmd.Env = append(cmd.Environ(), "FOO=foo\x00BAR=bar")
