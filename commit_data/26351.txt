commit f2f2434d47c711dcbe7d3abdee4293ae0f4c0739
Author: Richard Miller <miller.research@gmail.com>
Date:   Thu Mar 17 10:20:54 2016 +0000

    syscall: avoid failure in plan9 StartProcess from fd close race
    
    Between the enumeration of fdsToClose in the parent and the
    closing of fds in the child, it's possible for a file to be
    closed in another thread. If that file descriptor is reused
    when opening the child-parent status pipe, it will be closed
    prematurely in the child and the forkExec gets out of sync.
    This has been observed to cause failures in builder tests
    when the link step of a build is started before the compile
    step has run, with "file does not exist" messages as the
    visible symptom.
    
    The simple workaround is to check against closing the pipe.
    A more comprehensive solution would be to rewrite the fd
    closing code to avoid races, along the lines of the long
    ago proposed https://golang.org/cl/57890043 - but meanwhile
    this correction will prevent some builder failures.
    
    Change-Id: I4ef5eaea70c21d00f4df0e0847a1c5b2966de7da
    Reviewed-on: https://go-review.googlesource.com/20800
    Run-TryBot: David du Colombier <0intro@gmail.com>
    Reviewed-by: David du Colombier <0intro@gmail.com>

 src/syscall/exec_plan9.go | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)
