commit 6ed847431709c673adbb783d3bbc3d75e4df590c
Author: erifan01 <eric.fang@arm.com>
Date:   Wed May 17 12:01:07 2023 +0800

    cmd/asm: remove unsupported opcodes MOVNP and STLP for arm64
    
    ARM64 doesn't have MOVNP/MOVNPW and STLP/STLPW instructions, which are
    currently useless instructions as well. This CL deletes them. At the
    same time this CL sorts the opcodes by name, which looks cleaner.
    
    Change-Id: I25cfb636b23356ba0a50cba527a8c85b3f7e2ee4
    Reviewed-on: https://go-review.googlesource.com/c/go/+/495695
    Reviewed-by: Heschi Kreinick <heschi@google.com>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    Run-TryBot: Eric Fang <eric.fang@arm.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
---
 src/cmd/internal/obj/arm64/a.out.go  | 446 +++++++++++++++++------------------
 src/cmd/internal/obj/arm64/anames.go | 446 +++++++++++++++++------------------
 src/cmd/internal/obj/arm64/asm7.go   |  18 --
 3 files changed, 442 insertions(+), 468 deletions(-)

diff --git a/src/cmd/internal/obj/arm64/a.out.go b/src/cmd/internal/obj/arm64/a.out.go
index 3bfc6759d8..15cbd0371e 100644
--- a/src/cmd/internal/obj/arm64/a.out.go
+++ b/src/cmd/internal/obj/arm64/a.out.go
@@ -495,6 +495,10 @@ const (
 	AADDW
 	AADR
 	AADRP
+	AAESD
+	AAESE
+	AAESIMC
+	AAESMC
 	AAND
 	AANDS
 	AANDSW
@@ -502,17 +506,47 @@ const (
 	AASR
 	AASRW
 	AAT
+	ABCC
+	ABCS
+	ABEQ
 	ABFI
 	ABFIW
 	ABFM
 	ABFMW
 	ABFXIL
 	ABFXILW
+	ABGE
+	ABGT
+	ABHI
+	ABHS
 	ABIC
 	ABICS
 	ABICSW
 	ABICW
+	ABLE
+	ABLO
+	ABLS
+	ABLT
+	ABMI
+	ABNE
+	ABPL
 	ABRK
+	ABVC
+	ABVS
+	ACASAD
+	ACASALB
+	ACASALD
+	ACASALH
+	ACASALW
+	ACASAW
+	ACASB
+	ACASD
+	ACASH
+	ACASLD
+	ACASLW
+	ACASPD
+	ACASPW
+	ACASW
 	ACBNZ
 	ACBNZW
 	ACBZ
@@ -563,6 +597,7 @@ const (
 	ADMB
 	ADRPS
 	ADSB
+	ADWORD
 	AEON
 	AEONW
 	AEOR
@@ -570,6 +605,85 @@ const (
 	AERET
 	AEXTR
 	AEXTRW
+	AFABSD
+	AFABSS
+	AFADDD
+	AFADDS
+	AFCCMPD
+	AFCCMPED
+	AFCCMPES
+	AFCCMPS
+	AFCMPD
+	AFCMPED
+	AFCMPES
+	AFCMPS
+	AFCSELD
+	AFCSELS
+	AFCVTDH
+	AFCVTDS
+	AFCVTHD
+	AFCVTHS
+	AFCVTSD
+	AFCVTSH
+	AFCVTZSD
+	AFCVTZSDW
+	AFCVTZSS
+	AFCVTZSSW
+	AFCVTZUD
+	AFCVTZUDW
+	AFCVTZUS
+	AFCVTZUSW
+	AFDIVD
+	AFDIVS
+	AFLDPD
+	AFLDPQ
+	AFLDPS
+	AFMADDD
+	AFMADDS
+	AFMAXD
+	AFMAXNMD
+	AFMAXNMS
+	AFMAXS
+	AFMIND
+	AFMINNMD
+	AFMINNMS
+	AFMINS
+	AFMOVD
+	AFMOVQ
+	AFMOVS
+	AFMSUBD
+	AFMSUBS
+	AFMULD
+	AFMULS
+	AFNEGD
+	AFNEGS
+	AFNMADDD
+	AFNMADDS
+	AFNMSUBD
+	AFNMSUBS
+	AFNMULD
+	AFNMULS
+	AFRINTAD
+	AFRINTAS
+	AFRINTID
+	AFRINTIS
+	AFRINTMD
+	AFRINTMS
+	AFRINTND
+	AFRINTNS
+	AFRINTPD
+	AFRINTPS
+	AFRINTXD
+	AFRINTXS
+	AFRINTZD
+	AFRINTZS
+	AFSQRTD
+	AFSQRTS
+	AFSTPD
+	AFSTPQ
+	AFSTPS
+	AFSUBD
+	AFSUBS
 	AHINT
 	AHLT
 	AHVC
@@ -578,19 +692,19 @@ const (
 	ALDADDAB
 	ALDADDAD
 	ALDADDAH
-	ALDADDAW
 	ALDADDALB
 	ALDADDALD
 	ALDADDALH
 	ALDADDALW
+	ALDADDAW
 	ALDADDB
 	ALDADDD
 	ALDADDH
-	ALDADDW
 	ALDADDLB
 	ALDADDLD
 	ALDADDLH
 	ALDADDLW
+	ALDADDW
 	ALDAR
 	ALDARB
 	ALDARH
@@ -604,60 +718,60 @@ const (
 	ALDCLRAB
 	ALDCLRAD
 	ALDCLRAH
-	ALDCLRAW
 	ALDCLRALB
 	ALDCLRALD
 	ALDCLRALH
 	ALDCLRALW
+	ALDCLRAW
 	ALDCLRB
 	ALDCLRD
 	ALDCLRH
-	ALDCLRW
 	ALDCLRLB
 	ALDCLRLD
 	ALDCLRLH
 	ALDCLRLW
+	ALDCLRW
 	ALDEORAB
 	ALDEORAD
 	ALDEORAH
-	ALDEORAW
 	ALDEORALB
 	ALDEORALD
 	ALDEORALH
 	ALDEORALW
+	ALDEORAW
 	ALDEORB
 	ALDEORD
 	ALDEORH
-	ALDEORW
 	ALDEORLB
 	ALDEORLD
 	ALDEORLH
 	ALDEORLW
+	ALDEORW
 	ALDORAB
 	ALDORAD
 	ALDORAH
-	ALDORAW
 	ALDORALB
 	ALDORALD
 	ALDORALH
 	ALDORALW
+	ALDORAW
 	ALDORB
 	ALDORD
 	ALDORH
-	ALDORW
 	ALDORLB
 	ALDORLD
 	ALDORLH
 	ALDORLW
+	ALDORW
 	ALDP
-	ALDPW
 	ALDPSW
+	ALDPW
+	ALDXP
+	ALDXPW
 	ALDXR
 	ALDXRB
 	ALDXRH
 	ALDXRW
-	ALDXP
-	ALDXPW
 	ALSL
 	ALSLW
 	ALSR
@@ -666,10 +780,23 @@ const (
 	AMADDW
 	AMNEG
 	AMNEGW
+	AMOVB
+	AMOVBU
+	AMOVD
+	AMOVH
+	AMOVHU
 	AMOVK
 	AMOVKW
 	AMOVN
 	AMOVNW
+	AMOVP
+	AMOVPD
+	AMOVPQ
+	AMOVPS
+	AMOVPSW
+	AMOVPW
+	AMOVW
+	AMOVWU
 	AMOVZ
 	AMOVZW
 	AMRS
@@ -716,24 +843,34 @@ const (
 	ASBFMW
 	ASBFX
 	ASBFXW
+	ASCVTFD
+	ASCVTFS
+	ASCVTFWD
+	ASCVTFWS
 	ASDIV
 	ASDIVW
 	ASEV
 	ASEVL
+	ASHA1C
+	ASHA1H
+	ASHA1M
+	ASHA1P
+	ASHA1SU0
+	ASHA1SU1
+	ASHA256H
+	ASHA256H2
+	ASHA256SU0
+	ASHA256SU1
+	ASHA512H
+	ASHA512H2
+	ASHA512SU0
+	ASHA512SU1
 	ASMADDL
 	ASMC
 	ASMNEGL
 	ASMSUBL
 	ASMULH
 	ASMULL
-	ASTXR
-	ASTXRB
-	ASTXRH
-	ASTXP
-	ASTXPW
-	ASTXRW
-	ASTLP
-	ASTLPW
 	ASTLR
 	ASTLRB
 	ASTLRH
@@ -746,11 +883,33 @@ const (
 	ASTLXRW
 	ASTP
 	ASTPW
+	ASTXP
+	ASTXPW
+	ASTXR
+	ASTXRB
+	ASTXRH
+	ASTXRW
 	ASUB
 	ASUBS
 	ASUBSW
 	ASUBW
 	ASVC
+	ASWPAB
+	ASWPAD
+	ASWPAH
+	ASWPALB
+	ASWPALD
+	ASWPALH
+	ASWPALW
+	ASWPAW
+	ASWPB
+	ASWPD
+	ASWPH
+	ASWPLB
+	ASWPLD
+	ASWPLH
+	ASWPLW
+	ASWPW
 	ASXTB
 	ASXTBW
 	ASXTH
@@ -769,6 +928,10 @@ const (
 	AUBFMW
 	AUBFX
 	AUBFXW
+	AUCVTFD
+	AUCVTFS
+	AUCVTFWD
+	AUCVTFWS
 	AUDIV
 	AUDIVW
 	AUMADDL
@@ -779,247 +942,80 @@ const (
 	AUREM
 	AUREMW
 	AUXTB
-	AUXTH
-	AUXTW
 	AUXTBW
+	AUXTH
 	AUXTHW
-	AWFE
-	AWFI
-	AYIELD
-	AMOVB
-	AMOVBU
-	AMOVH
-	AMOVHU
-	AMOVW
-	AMOVWU
-	AMOVD
-	AMOVNP
-	AMOVNPW
-	AMOVP
-	AMOVPD
-	AMOVPQ
-	AMOVPS
-	AMOVPSW
-	AMOVPW
-	ASWPAD
-	ASWPAW
-	ASWPAH
-	ASWPAB
-	ASWPALD
-	ASWPALW
-	ASWPALH
-	ASWPALB
-	ASWPD
-	ASWPW
-	ASWPH
-	ASWPB
-	ASWPLD
-	ASWPLW
-	ASWPLH
-	ASWPLB
-	ACASD
-	ACASW
-	ACASH
-	ACASB
-	ACASAD
-	ACASAW
-	ACASLD
-	ACASLW
-	ACASALD
-	ACASALW
-	ACASALH
-	ACASALB
-	ACASPD
-	ACASPW
-	ABEQ
-	ABNE
-	ABCS
-	ABHS
-	ABCC
-	ABLO
-	ABMI
-	ABPL
-	ABVS
-	ABVC
-	ABHI
-	ABLS
-	ABGE
-	ABLT
-	ABGT
-	ABLE
-	AFABSD
-	AFABSS
-	AFADDD
-	AFADDS
-	AFCCMPD
-	AFCCMPED
-	AFCCMPS
-	AFCCMPES
-	AFCMPD
-	AFCMPED
-	AFCMPES
-	AFCMPS
-	AFCVTSD
-	AFCVTDS
-	AFCVTZSD
-	AFCVTZSDW
-	AFCVTZSS
-	AFCVTZSSW
-	AFCVTZUD
-	AFCVTZUDW
-	AFCVTZUS
-	AFCVTZUSW
-	AFDIVD
-	AFDIVS
-	AFLDPD
-	AFLDPQ
-	AFLDPS
-	AFMOVQ
-	AFMOVD
-	AFMOVS
-	AVMOVQ
-	AVMOVD
-	AVMOVS
-	AFMULD
-	AFMULS
-	AFNEGD
-	AFNEGS
-	AFSQRTD
-	AFSQRTS
-	AFSTPD
-	AFSTPQ
-	AFSTPS
-	AFSUBD
-	AFSUBS
-	ASCVTFD
-	ASCVTFS
-	ASCVTFWD
-	ASCVTFWS
-	AUCVTFD
-	AUCVTFS
-	AUCVTFWD
-	AUCVTFWS
-	AWORD
-	ADWORD
-	AFCSELS
-	AFCSELD
-	AFMAXS
-	AFMINS
-	AFMAXD
-	AFMIND
-	AFMAXNMS
-	AFMAXNMD
-	AFNMULS
-	AFNMULD
-	AFRINTNS
-	AFRINTND
-	AFRINTPS
-	AFRINTPD
-	AFRINTMS
-	AFRINTMD
-	AFRINTZS
-	AFRINTZD
-	AFRINTAS
-	AFRINTAD
-	AFRINTXS
-	AFRINTXD
-	AFRINTIS
-	AFRINTID
-	AFMADDS
-	AFMADDD
-	AFMSUBS
-	AFMSUBD
-	AFNMADDS
-	AFNMADDD
-	AFNMSUBS
-	AFNMSUBD
-	AFMINNMS
-	AFMINNMD
-	AFCVTDH
-	AFCVTHS
-	AFCVTHD
-	AFCVTSH
-	AAESD
-	AAESE
-	AAESIMC
-	AAESMC
-	ASHA1C
-	ASHA1H
-	ASHA1M
-	ASHA1P
-	ASHA1SU0
-	ASHA1SU1
-	ASHA256H
-	ASHA256H2
-	ASHA256SU0
-	ASHA256SU1
-	ASHA512H
-	ASHA512H2
-	ASHA512SU0
-	ASHA512SU1
+	AUXTW
 	AVADD
 	AVADDP
+	AVADDV
 	AVAND
-	AVBIF
 	AVBCAX
+	AVBIF
+	AVBIT
+	AVBSL
 	AVCMEQ
+	AVCMTST
 	AVCNT
+	AVDUP
 	AVEOR
 	AVEOR3
-	AVMOV
+	AVEXT
+	AVFMLA
+	AVFMLS
 	AVLD1
-	AVLD2
-	AVLD3
-	AVLD4
 	AVLD1R
+	AVLD2
 	AVLD2R
+	AVLD3
 	AVLD3R
+	AVLD4
 	AVLD4R
+	AVMOV
+	AVMOVD
+	AVMOVI
+	AVMOVQ
+	AVMOVS
 	AVORR
+	AVPMULL
+	AVPMULL2
+	AVRAX1
+	AVRBIT
 	AVREV16
 	AVREV32
 	AVREV64
+	AVSHL
+	AVSLI
+	AVSRI
 	AVST1
 	AVST2
 	AVST3
 	AVST4
-	AVDUP
-	AVADDV
-	AVMOVI
-	AVUADDLV
 	AVSUB
-	AVFMLA
-	AVFMLS
-	AVPMULL
-	AVPMULL2
-	AVEXT
-	AVRBIT
-	AVRAX1
+	AVTBL
+	AVTBX
+	AVTRN1
+	AVTRN2
+	AVUADDLV
+	AVUADDW
+	AVUADDW2
 	AVUMAX
 	AVUMIN
-	AVUSHR
 	AVUSHLL
 	AVUSHLL2
+	AVUSHR
+	AVUSRA
 	AVUXTL
 	AVUXTL2
 	AVUZP1
 	AVUZP2
-	AVSHL
-	AVSRI
-	AVSLI
-	AVBSL
-	AVBIT
-	AVTBL
-	AVTBX
 	AVXAR
 	AVZIP1
 	AVZIP2
-	AVCMTST
-	AVUADDW2
-	AVUADDW
-	AVUSRA
-	AVTRN1
-	AVTRN2
+	AWFE
+	AWFI
+	AWORD
+	AYIELD
 	ALAST
 	AB  = obj.AJMP
 	ABL = obj.ACALL
diff --git a/src/cmd/internal/obj/arm64/anames.go b/src/cmd/internal/obj/arm64/anames.go
index 03222f9c37..bac8b40e77 100644
--- a/src/cmd/internal/obj/arm64/anames.go
+++ b/src/cmd/internal/obj/arm64/anames.go
@@ -15,6 +15,10 @@ var Anames = []string{
 	"ADDW",
 	"ADR",
 	"ADRP",
+	"AESD",
+	"AESE",
+	"AESIMC",
+	"AESMC",
 	"AND",
 	"ANDS",
 	"ANDSW",
@@ -22,17 +26,47 @@ var Anames = []string{
 	"ASR",
 	"ASRW",
 	"AT",
+	"BCC",
+	"BCS",
+	"BEQ",
 	"BFI",
 	"BFIW",
 	"BFM",
 	"BFMW",
 	"BFXIL",
 	"BFXILW",
+	"BGE",
+	"BGT",
+	"BHI",
+	"BHS",
 	"BIC",
 	"BICS",
 	"BICSW",
 	"BICW",
+	"BLE",
+	"BLO",
+	"BLS",
+	"BLT",
+	"BMI",
+	"BNE",
+	"BPL",
 	"BRK",
+	"BVC",
+	"BVS",
+	"CASAD",
+	"CASALB",
+	"CASALD",
+	"CASALH",
+	"CASALW",
+	"CASAW",
+	"CASB",
+	"CASD",
+	"CASH",
+	"CASLD",
+	"CASLW",
+	"CASPD",
+	"CASPW",
+	"CASW",
 	"CBNZ",
 	"CBNZW",
 	"CBZ",
@@ -83,6 +117,7 @@ var Anames = []string{
 	"DMB",
 	"DRPS",
 	"DSB",
+	"DWORD",
 	"EON",
 	"EONW",
 	"EOR",
@@ -90,6 +125,85 @@ var Anames = []string{
 	"ERET",
 	"EXTR",
 	"EXTRW",
+	"FABSD",
+	"FABSS",
+	"FADDD",
+	"FADDS",
+	"FCCMPD",
+	"FCCMPED",
+	"FCCMPES",
+	"FCCMPS",
+	"FCMPD",
+	"FCMPED",
+	"FCMPES",
+	"FCMPS",
+	"FCSELD",
+	"FCSELS",
+	"FCVTDH",
+	"FCVTDS",
+	"FCVTHD",
+	"FCVTHS",
+	"FCVTSD",
+	"FCVTSH",
+	"FCVTZSD",
+	"FCVTZSDW",
+	"FCVTZSS",
+	"FCVTZSSW",
+	"FCVTZUD",
+	"FCVTZUDW",
+	"FCVTZUS",
+	"FCVTZUSW",
+	"FDIVD",
+	"FDIVS",
+	"FLDPD",
+	"FLDPQ",
+	"FLDPS",
+	"FMADDD",
+	"FMADDS",
+	"FMAXD",
+	"FMAXNMD",
+	"FMAXNMS",
+	"FMAXS",
+	"FMIND",
+	"FMINNMD",
+	"FMINNMS",
+	"FMINS",
+	"FMOVD",
+	"FMOVQ",
+	"FMOVS",
+	"FMSUBD",
+	"FMSUBS",
+	"FMULD",
+	"FMULS",
+	"FNEGD",
+	"FNEGS",
+	"FNMADDD",
+	"FNMADDS",
+	"FNMSUBD",
+	"FNMSUBS",
+	"FNMULD",
+	"FNMULS",
+	"FRINTAD",
+	"FRINTAS",
+	"FRINTID",
+	"FRINTIS",
+	"FRINTMD",
+	"FRINTMS",
+	"FRINTND",
+	"FRINTNS",
+	"FRINTPD",
+	"FRINTPS",
+	"FRINTXD",
+	"FRINTXS",
+	"FRINTZD",
+	"FRINTZS",
+	"FSQRTD",
+	"FSQRTS",
+	"FSTPD",
+	"FSTPQ",
+	"FSTPS",
+	"FSUBD",
+	"FSUBS",
 	"HINT",
 	"HLT",
 	"HVC",
@@ -98,19 +212,19 @@ var Anames = []string{
 	"LDADDAB",
 	"LDADDAD",
 	"LDADDAH",
-	"LDADDAW",
 	"LDADDALB",
 	"LDADDALD",
 	"LDADDALH",
 	"LDADDALW",
+	"LDADDAW",
 	"LDADDB",
 	"LDADDD",
 	"LDADDH",
-	"LDADDW",
 	"LDADDLB",
 	"LDADDLD",
 	"LDADDLH",
 	"LDADDLW",
+	"LDADDW",
 	"LDAR",
 	"LDARB",
 	"LDARH",
@@ -124,60 +238,60 @@ var Anames = []string{
 	"LDCLRAB",
 	"LDCLRAD",
 	"LDCLRAH",
-	"LDCLRAW",
 	"LDCLRALB",
 	"LDCLRALD",
 	"LDCLRALH",
 	"LDCLRALW",
+	"LDCLRAW",
 	"LDCLRB",
 	"LDCLRD",
 	"LDCLRH",
-	"LDCLRW",
 	"LDCLRLB",
 	"LDCLRLD",
 	"LDCLRLH",
 	"LDCLRLW",
+	"LDCLRW",
 	"LDEORAB",
 	"LDEORAD",
 	"LDEORAH",
-	"LDEORAW",
 	"LDEORALB",
 	"LDEORALD",
 	"LDEORALH",
 	"LDEORALW",
+	"LDEORAW",
 	"LDEORB",
 	"LDEORD",
 	"LDEORH",
-	"LDEORW",
 	"LDEORLB",
 	"LDEORLD",
 	"LDEORLH",
 	"LDEORLW",
+	"LDEORW",
 	"LDORAB",
 	"LDORAD",
 	"LDORAH",
-	"LDORAW",
 	"LDORALB",
 	"LDORALD",
 	"LDORALH",
 	"LDORALW",
+	"LDORAW",
 	"LDORB",
 	"LDORD",
 	"LDORH",
-	"LDORW",
 	"LDORLB",
 	"LDORLD",
 	"LDORLH",
 	"LDORLW",
+	"LDORW",
 	"LDP",
-	"LDPW",
 	"LDPSW",
+	"LDPW",
+	"LDXP",
+	"LDXPW",
 	"LDXR",
 	"LDXRB",
 	"LDXRH",
 	"LDXRW",
-	"LDXP",
-	"LDXPW",
 	"LSL",
 	"LSLW",
 	"LSR",
@@ -186,10 +300,23 @@ var Anames = []string{
 	"MADDW",
 	"MNEG",
 	"MNEGW",
+	"MOVB",
+	"MOVBU",
+	"MOVD",
+	"MOVH",
+	"MOVHU",
 	"MOVK",
 	"MOVKW",
 	"MOVN",
 	"MOVNW",
+	"MOVP",
+	"MOVPD",
+	"MOVPQ",
+	"MOVPS",
+	"MOVPSW",
+	"MOVPW",
+	"MOVW",
+	"MOVWU",
 	"MOVZ",
 	"MOVZW",
 	"MRS",
@@ -236,24 +363,34 @@ var Anames = []string{
 	"SBFMW",
 	"SBFX",
 	"SBFXW",
+	"SCVTFD",
+	"SCVTFS",
+	"SCVTFWD",
+	"SCVTFWS",
 	"SDIV",
 	"SDIVW",
 	"SEV",
 	"SEVL",
+	"SHA1C",
+	"SHA1H",
+	"SHA1M",
+	"SHA1P",
+	"SHA1SU0",
+	"SHA1SU1",
+	"SHA256H",
+	"SHA256H2",
+	"SHA256SU0",
+	"SHA256SU1",
+	"SHA512H",
+	"SHA512H2",
+	"SHA512SU0",
+	"SHA512SU1",
 	"SMADDL",
 	"SMC",
 	"SMNEGL",
 	"SMSUBL",
 	"SMULH",
 	"SMULL",
-	"STXR",
-	"STXRB",
-	"STXRH",
-	"STXP",
-	"STXPW",
-	"STXRW",
-	"STLP",
-	"STLPW",
 	"STLR",
 	"STLRB",
 	"STLRH",
@@ -266,11 +403,33 @@ var Anames = []string{
 	"STLXRW",
 	"STP",
 	"STPW",
+	"STXP",
+	"STXPW",
+	"STXR",
+	"STXRB",
+	"STXRH",
+	"STXRW",
 	"SUB",
 	"SUBS",
 	"SUBSW",
 	"SUBW",
 	"SVC",
+	"SWPAB",
+	"SWPAD",
+	"SWPAH",
+	"SWPALB",
+	"SWPALD",
+	"SWPALH",
+	"SWPALW",
+	"SWPAW",
+	"SWPB",
+	"SWPD",
+	"SWPH",
+	"SWPLB",
+	"SWPLD",
+	"SWPLH",
+	"SWPLW",
+	"SWPW",
 	"SXTB",
 	"SXTBW",
 	"SXTH",
@@ -289,6 +448,10 @@ var Anames = []string{
 	"UBFMW",
 	"UBFX",
 	"UBFXW",
+	"UCVTFD",
+	"UCVTFS",
+	"UCVTFWD",
+	"UCVTFWS",
 	"UDIV",
 	"UDIVW",
 	"UMADDL",
@@ -299,246 +462,79 @@ var Anames = []string{
 	"UREM",
 	"UREMW",
 	"UXTB",
-	"UXTH",
-	"UXTW",
 	"UXTBW",
+	"UXTH",
 	"UXTHW",
-	"WFE",
-	"WFI",
-	"YIELD",
-	"MOVB",
-	"MOVBU",
-	"MOVH",
-	"MOVHU",
-	"MOVW",
-	"MOVWU",
-	"MOVD",
-	"MOVNP",
-	"MOVNPW",
-	"MOVP",
-	"MOVPD",
-	"MOVPQ",
-	"MOVPS",
-	"MOVPSW",
-	"MOVPW",
-	"SWPAD",
-	"SWPAW",
-	"SWPAH",
-	"SWPAB",
-	"SWPALD",
-	"SWPALW",
-	"SWPALH",
-	"SWPALB",
-	"SWPD",
-	"SWPW",
-	"SWPH",
-	"SWPB",
-	"SWPLD",
-	"SWPLW",
-	"SWPLH",
-	"SWPLB",
-	"CASD",
-	"CASW",
-	"CASH",
-	"CASB",
-	"CASAD",
-	"CASAW",
-	"CASLD",
-	"CASLW",
-	"CASALD",
-	"CASALW",
-	"CASALH",
-	"CASALB",
-	"CASPD",
-	"CASPW",
-	"BEQ",
-	"BNE",
-	"BCS",
-	"BHS",
-	"BCC",
-	"BLO",
-	"BMI",
-	"BPL",
-	"BVS",
-	"BVC",
-	"BHI",
-	"BLS",
-	"BGE",
-	"BLT",
-	"BGT",
-	"BLE",
-	"FABSD",
-	"FABSS",
-	"FADDD",
-	"FADDS",
-	"FCCMPD",
-	"FCCMPED",
-	"FCCMPS",
-	"FCCMPES",
-	"FCMPD",
-	"FCMPED",
-	"FCMPES",
-	"FCMPS",
-	"FCVTSD",
-	"FCVTDS",
-	"FCVTZSD",
-	"FCVTZSDW",
-	"FCVTZSS",
-	"FCVTZSSW",
-	"FCVTZUD",
-	"FCVTZUDW",
-	"FCVTZUS",
-	"FCVTZUSW",
-	"FDIVD",
-	"FDIVS",
-	"FLDPD",
-	"FLDPQ",
-	"FLDPS",
-	"FMOVQ",
-	"FMOVD",
-	"FMOVS",
-	"VMOVQ",
-	"VMOVD",
-	"VMOVS",
-	"FMULD",
-	"FMULS",
-	"FNEGD",
-	"FNEGS",
-	"FSQRTD",
-	"FSQRTS",
-	"FSTPD",
-	"FSTPQ",
-	"FSTPS",
-	"FSUBD",
-	"FSUBS",
-	"SCVTFD",
-	"SCVTFS",
-	"SCVTFWD",
-	"SCVTFWS",
-	"UCVTFD",
-	"UCVTFS",
-	"UCVTFWD",
-	"UCVTFWS",
-	"WORD",
-	"DWORD",
-	"FCSELS",
-	"FCSELD",
-	"FMAXS",
-	"FMINS",
-	"FMAXD",
-	"FMIND",
-	"FMAXNMS",
-	"FMAXNMD",
-	"FNMULS",
-	"FNMULD",
-	"FRINTNS",
-	"FRINTND",
-	"FRINTPS",
-	"FRINTPD",
-	"FRINTMS",
-	"FRINTMD",
-	"FRINTZS",
-	"FRINTZD",
-	"FRINTAS",
-	"FRINTAD",
-	"FRINTXS",
-	"FRINTXD",
-	"FRINTIS",
-	"FRINTID",
-	"FMADDS",
-	"FMADDD",
-	"FMSUBS",
-	"FMSUBD",
-	"FNMADDS",
-	"FNMADDD",
-	"FNMSUBS",
-	"FNMSUBD",
-	"FMINNMS",
-	"FMINNMD",
-	"FCVTDH",
-	"FCVTHS",
-	"FCVTHD",
-	"FCVTSH",
-	"AESD",
-	"AESE",
-	"AESIMC",
-	"AESMC",
-	"SHA1C",
-	"SHA1H",
-	"SHA1M",
-	"SHA1P",
-	"SHA1SU0",
-	"SHA1SU1",
-	"SHA256H",
-	"SHA256H2",
-	"SHA256SU0",
-	"SHA256SU1",
-	"SHA512H",
-	"SHA512H2",
-	"SHA512SU0",
-	"SHA512SU1",
+	"UXTW",
 	"VADD",
 	"VADDP",
+	"VADDV",
 	"VAND",
-	"VBIF",
 	"VBCAX",
+	"VBIF",
+	"VBIT",
+	"VBSL",
 	"VCMEQ",
+	"VCMTST",
 	"VCNT",
+	"VDUP",
 	"VEOR",
 	"VEOR3",
-	"VMOV",
+	"VEXT",
+	"VFMLA",
+	"VFMLS",
 	"VLD1",
-	"VLD2",
-	"VLD3",
-	"VLD4",
 	"VLD1R",
+	"VLD2",
 	"VLD2R",
+	"VLD3",
 	"VLD3R",
+	"VLD4",
 	"VLD4R",
+	"VMOV",
+	"VMOVD",
+	"VMOVI",
+	"VMOVQ",
+	"VMOVS",
 	"VORR",
+	"VPMULL",
+	"VPMULL2",
+	"VRAX1",
+	"VRBIT",
 	"VREV16",
 	"VREV32",
 	"VREV64",
+	"VSHL",
+	"VSLI",
+	"VSRI",
 	"VST1",
 	"VST2",
 	"VST3",
 	"VST4",
-	"VDUP",
-	"VADDV",
-	"VMOVI",
-	"VUADDLV",
 	"VSUB",
-	"VFMLA",
-	"VFMLS",
-	"VPMULL",
-	"VPMULL2",
-	"VEXT",
-	"VRBIT",
-	"VRAX1",
+	"VTBL",
+	"VTBX",
+	"VTRN1",
+	"VTRN2",
+	"VUADDLV",
+	"VUADDW",
+	"VUADDW2",
 	"VUMAX",
 	"VUMIN",
-	"VUSHR",
 	"VUSHLL",
 	"VUSHLL2",
+	"VUSHR",
+	"VUSRA",
 	"VUXTL",
 	"VUXTL2",
 	"VUZP1",
 	"VUZP2",
-	"VSHL",
-	"VSRI",
-	"VSLI",
-	"VBSL",
-	"VBIT",
-	"VTBL",
-	"VTBX",
 	"VXAR",
 	"VZIP1",
 	"VZIP2",
-	"VCMTST",
-	"VUADDW2",
-	"VUADDW",
-	"VUSRA",
-	"VTRN1",
-	"VTRN2",
+	"WFE",
+	"WFI",
+	"WORD",
+	"YIELD",
 	"LAST",
 }
diff --git a/src/cmd/internal/obj/arm64/asm7.go b/src/cmd/internal/obj/arm64/asm7.go
index 1a10c48bd8..76361577d4 100644
--- a/src/cmd/internal/obj/arm64/asm7.go
+++ b/src/cmd/internal/obj/arm64/asm7.go
@@ -6858,12 +6858,6 @@ func (c *ctxt7) opload(p *obj.Prog, a obj.As) uint32 {
 
 	case ALDXPW:
 		return LDSTX(2, 0, 1, 1, 0)
-
-	case AMOVNP:
-		return S64 | 0<<30 | 5<<27 | 0<<26 | 0<<23 | 1<<22
-
-	case AMOVNPW:
-		return S32 | 0<<30 | 5<<27 | 0<<26 | 0<<23 | 1<<22
 	}
 
 	c.ctxt.Diag("bad opload %v\n%v", a, p)
@@ -6881,12 +6875,6 @@ func (c *ctxt7) opstore(p *obj.Prog, a obj.As) uint32 {
 	case ASTLRH:
 		return LDSTX(1, 1, 0, 0, 1) | 0x1F<<10
 
-	case ASTLP:
-		return LDSTX(3, 0, 0, 1, 1)
-
-	case ASTLPW:
-		return LDSTX(2, 0, 0, 1, 1)
-
 	case ASTLRW:
 		return LDSTX(2, 1, 0, 0, 1) | 0x1F<<10
 
@@ -6925,12 +6913,6 @@ func (c *ctxt7) opstore(p *obj.Prog, a obj.As) uint32 {
 
 	case ASTXRW:
 		return LDSTX(2, 0, 0, 0, 0) | 0x1F<<10
-
-	case AMOVNP:
-		return S64 | 0<<30 | 5<<27 | 0<<26 | 0<<23 | 1<<22
-
-	case AMOVNPW:
-		return S32 | 0<<30 | 5<<27 | 0<<26 | 0<<23 | 1<<22
 	}
 
 	c.ctxt.Diag("bad opstore %v\n%v", a, p)
