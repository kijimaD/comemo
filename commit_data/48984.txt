commit a18726a648df48917e0ed1404cf6cdbc81acd495
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Jul 1 15:23:41 2021 -0700

    [dev.typeparams] cmd/compile: incremental typecheck during unified IR
    
    This CL changes unified IR to incrementally typecheck the IR as it's
    constructed. This is significant, because it means reader can now use
    typecheck.Expr to typecheck sub-expressions when it's needed. This
    should be helpful for construction and insertion of dictionaries.
    
    This CL does introduce two quirks outside of unified IR itself,
    which simplify preserving binary output:
    
    1. Top-level declarations are sorted after they're constructed, to
    avoid worrying about the order that closures are added.
    
    2. Zero-padding autotmp_N variable names. Interleaving typechecking
    means autotmp variables are sometimes named differently (since their
    naming depends on the number of variables declared so far), and this
    ensures that code that sorts variables by names doesn't suddenly sort
    autotmp_8/autotmp_9 differently than it would have sorted
    autotmp_9/autotmp_10.
    
    While at it, this CL also updated reader to use ir.WithFunc instead of
    manually setting and restoring ir.CurFunc. There's now only one
    remaining direct use of ir.CurFunc.
    
    Change-Id: I6233b4c059596e471c53166f94750917d710462f
    Reviewed-on: https://go-review.googlesource.com/c/go/+/332469
    Trust: Matthew Dempsky <mdempsky@google.com>
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Cuong Manh Le <cuong.manhle.vn@gmail.com>

 src/cmd/compile/internal/gc/main.go            |  15 ++++
 src/cmd/compile/internal/noder/reader.go       | 100 ++++++++++++++++---------
 src/cmd/compile/internal/noder/unified.go      |  17 -----
 src/cmd/compile/internal/noder/unified_test.go |   2 +-
 src/cmd/compile/internal/typecheck/dcl.go      |  11 ++-
 5 files changed, 92 insertions(+), 53 deletions(-)
