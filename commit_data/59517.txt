commit 7d4d71e52f0714c7990705f0fc56f9104761514e
Author: Damien Neil <dneil@google.com>
Date:   Tue Apr 18 14:53:02 2023 -0700

    net/http: improve error reporting in TestCancelRequestWhenSharingConnection
    
    Ensure that errors are reported if an HTTP request unexpectedly fails.
    
    For #56587
    
    Change-Id: I1adfb4fedc24d4177caf54e34c5033267e32caa6
    Reviewed-on: https://go-review.googlesource.com/c/go/+/486075
    Reviewed-by: Bryan Mills <bcmills@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Auto-Submit: Damien Neil <dneil@google.com>
    Reviewed-by: Emmanuel Odeke <emmanuel@orijtech.com>
---
 src/net/http/transport_test.go | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/src/net/http/transport_test.go b/src/net/http/transport_test.go
index 204133f130..744bbf1ad1 100644
--- a/src/net/http/transport_test.go
+++ b/src/net/http/transport_test.go
@@ -6844,23 +6844,25 @@ func testCancelRequestWhenSharingConnection(t *testing.T, mode testMode) {
 		})
 		req, _ := NewRequestWithContext(ctx, "GET", ts.URL, nil)
 		res, err := client.Do(req)
-		reqerrc <- err
-		if err == nil {
+		if err != nil {
+			reqerrc <- err
+		} else {
 			res.Body.Close()
 		}
 	}()
 
 	// Wait for the first request to receive a response and return the
 	// connection to the idle pool.
-	r1c := <-reqc
-	close(r1c)
+	select {
+	case err := <-reqerrc:
+		t.Fatalf("request 1: got err %v, want nil", err)
+	case r1c := <-reqc:
+		close(r1c)
+	}
 	var idlec chan struct{}
 	select {
 	case err := <-reqerrc:
-		if err != nil {
-			t.Fatalf("request 1: got err %v, want nil", err)
-		}
-		idlec = <-putidlec
+		t.Fatalf("request 1: got err %v, want nil", err)
 	case idlec = <-putidlec:
 	}
 
