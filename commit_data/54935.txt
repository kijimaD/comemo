commit 3128aeec87af4bf63f3df5971127f96685fb4363
Author: Paul E. Murphy <murp@ibm.com>
Date:   Thu Oct 12 09:25:30 2023 -0500

    cmd/internal/obj/ppc64: remove C_UCON optab matching class
    
    This optab matching rule was used to match signed 16 bit values shifted
    left by 16 bits. Unsigned 16 bit values greater than 0x7FFF<<16 were
    classified as C_U32CON which led to larger than necessary codegen.
    
    Instead, rewrite logical/arithmetic operations in the preprocessor pass
    to use the 16 bit shifted immediate operation (e.g ADDIS vs ADD). This
    simplifies the optab matching rules, while also minimizing codegen size
    for large unsigned values.
    
    Note, ADDIS sign-extends the constant argument, all others do not.
    
    For matching opcodes, this means:
            MOVD $is<<16,Rx becomes ADDIS $is,Rx or ORIS $is,Rx
            MOVW $is<<16,Rx becomes ADDIS $is,Rx
            ADD $is<<16,[Rx,]Ry becomes ADDIS $is[Rx,]Ry
            OR $is<<16,[Rx,]Ry becomes ORIS $is[Rx,]Ry
            XOR $is<<16,[Rx,]Ry becomes XORIS $is[Rx,]Ry
    
    Change-Id: I1a988d9f52517a04bb8dc2e41d7caf3d5fff867c
    Reviewed-on: https://go-review.googlesource.com/c/go/+/536735
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Run-TryBot: Paul Murphy <murp@ibm.com>
    Reviewed-by: Heschi Kreinick <heschi@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    Reviewed-by: Lynn Boger <laboger@linux.vnet.ibm.com>

 src/cmd/asm/internal/asm/testdata/ppc64.s | 19 ++++++---
 src/cmd/internal/obj/ppc64/a.out.go       |  8 +---
 src/cmd/internal/obj/ppc64/anames9.go     |  1 -
 src/cmd/internal/obj/ppc64/asm9.go        | 71 +++----------------------------
 src/cmd/internal/obj/ppc64/asm_test.go    |  2 -
 src/cmd/internal/obj/ppc64/obj9.go        | 62 +++++++++++++++++++++++++--
 test/codegen/mathbits.go                  |  4 +-
 7 files changed, 84 insertions(+), 83 deletions(-)
