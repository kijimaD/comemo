commit 33f7637d6a6370a580401cef9a80b18af3cb6680
Author: Rob Pike <r@golang.org>
Date:   Sun Jun 8 19:33:54 2008 -0700

    fix float lit to return 1, print error
    
    SVN=121627
---
 test/float_lit.go | 92 +++++++++++++++++++++++++++----------------------------
 test/golden.out   |  1 +
 2 files changed, 47 insertions(+), 46 deletions(-)

diff --git a/test/float_lit.go b/test/float_lit.go
index d07b20e11d..c45de9b4c1 100644
--- a/test/float_lit.go
+++ b/test/float_lit.go
@@ -29,65 +29,65 @@ close(a, b double) bool
 	return false;
 }
 
-func main() {
+func main() int {
 
-	if !close(0., 0.) { panic "0. is ", 0., " should be ", 0., "\n"; }
-	if !close(+10., +10.) { panic "+10. is ", +10., " should be ", +10., "\n"; }
-	if !close(-210., -210.) { panic "-210. is ", -210., " should be ", -210., "\n"; }
+	if !close(0., 0.) { print "0. is ", 0., " should be ", 0., "\n"; return 1; }
+	if !close(+10., +10.) { print "+10. is ", +10., " should be ", +10., "\n"; return 1; }
+	if !close(-210., -210.) { print "-210. is ", -210., " should be ", -210., "\n"; return 1; }
 
-	if !close(.0, .0) { panic ".0 is ", .0, " should be ", .0, "\n"; }
-	if !close(+.01, +.01) { panic "+.01 is ", +.01, " should be ", +.01, "\n"; }
-	if !close(-.012, -.012) { panic "-.012 is ", -.012, " should be ", -.012, "\n"; }
+	if !close(.0, .0) { print ".0 is ", .0, " should be ", .0, "\n"; return 1; }
+	if !close(+.01, +.01) { print "+.01 is ", +.01, " should be ", +.01, "\n"; return 1; }
+	if !close(-.012, -.012) { print "-.012 is ", -.012, " should be ", -.012, "\n"; return 1; }
 
-	if !close(0.0, 0.0) { panic "0.0 is ", 0.0, " should be ", 0.0, "\n"; }
-	if !close(+10.01, +10.01) { panic "+10.01 is ", +10.01, " should be ", +10.01, "\n"; }
-	if !close(-210.012, -210.012) { panic "-210.012 is ", -210.012, " should be ", -210.012, "\n"; }
+	if !close(0.0, 0.0) { print "0.0 is ", 0.0, " should be ", 0.0, "\n"; return 1; }
+	if !close(+10.01, +10.01) { print "+10.01 is ", +10.01, " should be ", +10.01, "\n"; return 1; }
+	if !close(-210.012, -210.012) { print "-210.012 is ", -210.012, " should be ", -210.012, "\n"; return 1; }
 
-	if !close(0E+1, 0E+1) { panic "0E+1 is ", 0E+1, " should be ", 0E+1, "\n"; }
-	if !close(+10e2, +10e2) { panic "+10e2 is ", +10e2, " should be ", +10e2, "\n"; }
-	if !close(-210e3, -210e3) { panic "-210e3 is ", -210e3, " should be ", -210e3, "\n"; }
+	if !close(0E+1, 0E+1) { print "0E+1 is ", 0E+1, " should be ", 0E+1, "\n"; return 1; }
+	if !close(+10e2, +10e2) { print "+10e2 is ", +10e2, " should be ", +10e2, "\n"; return 1; }
+	if !close(-210e3, -210e3) { print "-210e3 is ", -210e3, " should be ", -210e3, "\n"; return 1; }
 
-	if !close(0E-1, 0E-1) { panic "0E-1 is ", 0E-1, " should be ", 0E-1, "\n"; }
-	if !close(+0e23, +0e23) { panic "+0e23 is ", +0e23, " should be ", +0e23, "\n"; }
-	if !close(-0e345, -0e345) { panic "-0e345 is ", -0e345, " should be ", -0e345, "\n"; }
+	if !close(0E-1, 0E-1) { print "0E-1 is ", 0E-1, " should be ", 0E-1, "\n"; return 1; }
+	if !close(+0e23, +0e23) { print "+0e23 is ", +0e23, " should be ", +0e23, "\n"; return 1; }
+	if !close(-0e345, -0e345) { print "-0e345 is ", -0e345, " should be ", -0e345, "\n"; return 1; }
 
-	if !close(0E1, 0E1) { panic "0E1 is ", 0E1, " should be ", 0E1, "\n"; }
-	if !close(+10e23, +10e23) { panic "+10e23 is ", +10e23, " should be ", +10e23, "\n"; }
-//	if !close(-210e345, -210e345) { panic "-210e345 is ", -210e345, " should be ", -210e345, "\n"; }
+	if !close(0E1, 0E1) { print "0E1 is ", 0E1, " should be ", 0E1, "\n"; return 1; }
+	if !close(+10e23, +10e23) { print "+10e23 is ", +10e23, " should be ", +10e23, "\n"; return 1; }
+//	if !close(-210e345, -210e345) { print "-210e345 is ", -210e345, " should be ", -210e345, "\n"; return 1; }
 
-	if !close(0.E1, 0.E1) { panic "0.E1 is ", 0.E1, " should be ", 0.E1, "\n"; }
-	if !close(+10.e+2, +10.e+2) { panic "+10.e+2 is ", +10.e+2, " should be ", +10.e+2, "\n"; }
-	if !close(-210.e-3, -210.e-3) { panic "-210.e-3 is ", -210.e-3, " should be ", -210.e-3, "\n"; }
+	if !close(0.E1, 0.E1) { print "0.E1 is ", 0.E1, " should be ", 0.E1, "\n"; return 1; }
+	if !close(+10.e+2, +10.e+2) { print "+10.e+2 is ", +10.e+2, " should be ", +10.e+2, "\n"; return 1; }
+	if !close(-210.e-3, -210.e-3) { print "-210.e-3 is ", -210.e-3, " should be ", -210.e-3, "\n"; return 1; }
 
-	if !close(.0E1, .0E1) { panic ".0E1 is ", .0E1, " should be ", .0E1, "\n"; }
-	if !close(+.01e2, +.01e2) { panic "+.01e2 is ", +.01e2, " should be ", +.01e2, "\n"; }
-	if !close(-.012e3, -.012e3) { panic "-.012e3 is ", -.012e3, " should be ", -.012e3, "\n"; }
+	if !close(.0E1, .0E1) { print ".0E1 is ", .0E1, " should be ", .0E1, "\n"; return 1; }
+	if !close(+.01e2, +.01e2) { print "+.01e2 is ", +.01e2, " should be ", +.01e2, "\n"; return 1; }
+	if !close(-.012e3, -.012e3) { print "-.012e3 is ", -.012e3, " should be ", -.012e3, "\n"; return 1; }
 
-	if !close(0.0E1, 0.0E1) { panic "0.0E1 is ", 0.0E1, " should be ", 0.0E1, "\n"; }
-	if !close(+10.01e2, +10.01e2) { panic "+10.01e2 is ", +10.01e2, " should be ", +10.01e2, "\n"; }
-	if !close(-210.012e3, -210.012e3) { panic "-210.012e3 is ", -210.012e3, " should be ", -210.012e3, "\n"; }
+	if !close(0.0E1, 0.0E1) { print "0.0E1 is ", 0.0E1, " should be ", 0.0E1, "\n"; return 1; }
+	if !close(+10.01e2, +10.01e2) { print "+10.01e2 is ", +10.01e2, " should be ", +10.01e2, "\n"; return 1; }
+	if !close(-210.012e3, -210.012e3) { print "-210.012e3 is ", -210.012e3, " should be ", -210.012e3, "\n"; return 1; }
 
-	if !close(0.E+12, 0.E+12) { panic "0.E+12 is ", 0.E+12, " should be ", 0.E+12, "\n"; }
-	if !close(+10.e23, +10.e23) { panic "+10.e23 is ", +10.e23, " should be ", +10.e23, "\n"; }
-	if !close(-210.e34, -210.e34) { panic "-210.e34 is ", -210.e34, " should be ", -210.e34, "\n"; }
+	if !close(0.E+12, 0.E+12) { print "0.E+12 is ", 0.E+12, " should be ", 0.E+12, "\n"; return 1; }
+	if !close(+10.e23, +10.e23) { print "+10.e23 is ", +10.e23, " should be ", +10.e23, "\n"; return 1; }
+	if !close(-210.e34, -210.e34) { print "-210.e34 is ", -210.e34, " should be ", -210.e34, "\n"; return 1; }
 
-	if !close(.0E-12, .0E-12) { panic ".0E-12 is ", .0E-12, " should be ", .0E-12, "\n"; }
-	if !close(+.01e23, +.01e23) { panic "+.01e23 is ", +.01e23, " should be ", +.01e23, "\n"; }
-	if !close(-.012e34, -.012e34) { panic "-.012e34 is ", -.012e34, " should be ", -.012e34, "\n"; }
+	if !close(.0E-12, .0E-12) { print ".0E-12 is ", .0E-12, " should be ", .0E-12, "\n"; return 1; }
+	if !close(+.01e23, +.01e23) { print "+.01e23 is ", +.01e23, " should be ", +.01e23, "\n"; return 1; }
+	if !close(-.012e34, -.012e34) { print "-.012e34 is ", -.012e34, " should be ", -.012e34, "\n"; return 1; }
 
-	if !close(0.0E12, 0.0E12) { panic "0.0E12 is ", 0.0E12, " should be ", 0.0E12, "\n"; }
-	if !close(+10.01e23, +10.01e23) { panic "+10.01e23 is ", +10.01e23, " should be ", +10.01e23, "\n"; }
-	if !close(-210.012e34, -210.012e34) { panic "-210.012e34 is ", -210.012e34, " should be ", -210.012e34, "\n"; }
+	if !close(0.0E12, 0.0E12) { print "0.0E12 is ", 0.0E12, " should be ", 0.0E12, "\n"; return 1; }
+	if !close(+10.01e23, +10.01e23) { print "+10.01e23 is ", +10.01e23, " should be ", +10.01e23, "\n"; return 1; }
+	if !close(-210.012e34, -210.012e34) { print "-210.012e34 is ", -210.012e34, " should be ", -210.012e34, "\n"; return 1; }
 
-	if !close(0.E123, 0.E123) { panic "0.E123 is ", 0.E123, " should be ", 0.E123, "\n"; }
-	if !close(+10.e+234, +10.e+234) { panic "+10.e+234 is ", +10.e+234, " should be ", +10.e+234, "\n"; }
-//	if !close(-210.e-345, -210.e-345) { panic "-210.e-345 is ", -210.e-345, " should be ", -210.e-345, "\n"; }
+	if !close(0.E123, 0.E123) { print "0.E123 is ", 0.E123, " should be ", 0.E123, "\n"; return 1; }
+	if !close(+10.e+234, +10.e+234) { print "+10.e+234 is ", +10.e+234, " should be ", +10.e+234, "\n"; return 1; }
+//	if !close(-210.e-345, -210.e-345) { print "-210.e-345 is ", -210.e-345, " should be ", -210.e-345, "\n"; return 1; }
 
-	if !close(.0E123, .0E123) { panic ".0E123 is ", .0E123, " should be ", .0E123, "\n"; }
-//	if !close(+.01e234, +.01e234) { panic "+.01e234 is ", +.01e234, " should be ", +.01e234, "\n"; }
-//	if !close(-.012e345, -.012e345) { panic "-.012e345 is ", -.012e345, " should be ", -.012e345, "\n"; }
+	if !close(.0E123, .0E123) { print ".0E123 is ", .0E123, " should be ", .0E123, "\n"; return 1; }
+//	if !close(+.01e234, +.01e234) { print "+.01e234 is ", +.01e234, " should be ", +.01e234, "\n"; return 1; }
+//	if !close(-.012e345, -.012e345) { print "-.012e345 is ", -.012e345, " should be ", -.012e345, "\n"; return 1; }
 
-	if !close(0.0E123, 0.0E123) { panic "0.0E123 is ", 0.0E123, " should be ", 0.0E123, "\n"; }
-//	if !close(+10.01e234, +10.01e234) { panic "+10.01e234 is ", +10.01e234, " should be ", +10.01e234, "\n"; }
-//	if !close(-210.012e345, -210.012e345) { panic "-210.012e345 is ", -210.012e345, " should be ", -210.012e345, "\n"; }
+	if !close(0.0E123, 0.0E123) { print "0.0E123 is ", 0.0E123, " should be ", 0.0E123, "\n"; return 1; }
+//	if !close(+10.01e234, +10.01e234) { print "+10.01e234 is ", +10.01e234, " should be ", +10.01e234, "\n"; return 1; }
+//	if !close(-210.012e345, -210.012e345) { print "-210.012e345 is ", -210.012e345, " should be ", -210.012e345, "\n"; return 1; }
 }
diff --git a/test/golden.out b/test/golden.out
index 099725b9d8..68be563f43 100644
--- a/test/golden.out
+++ b/test/golden.out
@@ -2,6 +2,7 @@
 =========== ./char_lit.go
 
 =========== ./float_lit.go
++10. is printfloat should be printfloat
 BUG: known to fail incorrectly
 
 =========== ./for.go
