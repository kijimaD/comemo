commit 225ef76c250fc9ab9794fd723952209e2ff440aa
Author: Cherry Zhang <cherryyz@google.com>
Date:   Wed Jun 1 06:41:08 2016 -0400

    [dev.ssa] cmd/compile: fix scheduling of tuple ops
    
    We want tuple-reading ops immediately follow tuple-generating op, so
    that tuple values will not be spilled/copied.
    
    The mechanism introduced in the previous CL cannot really avoid tuples
    interleaving. In this CL we always emit tuple and their selectors together.
    Maybe remove the tuple scores if it does not help on performance (todo).
    
    Also let tighten not move tuple-reading ops across blocks.
    
    In the previous CL a special case of regenerating flags with tuple-reading
    pseudo-op is added, but it did not cover end-of-block case. This is fixed
    in this CL and the condition is generalized.
    
    Progress on SSA backend for ARM. Still not complete.
    
    Updates #15365.
    
    Change-Id: I8980b34e7a64eb98153540e9e19a3782e20406ff
    Reviewed-on: https://go-review.googlesource.com/23792
    Reviewed-by: David Chase <drchase@google.com>

 src/cmd/compile/internal/ssa/flagalloc.go | 29 ++++++++++++++++++-----------
 src/cmd/compile/internal/ssa/schedule.go  | 27 ++++++++++++++++++++++++++-
 src/cmd/compile/internal/ssa/tighten.go   |  5 ++++-
 3 files changed, 48 insertions(+), 13 deletions(-)
