commit 4216203bcf8b46ee874d4f5a637891c34ae9d7ca
Author: Russ Cox <rsc@golang.org>
Date:   Wed Oct 2 21:39:45 2013 -0400

    runtime: remove syscall.NewCallbackCDecl on Windows
    
    It is not possible to use (there is no declaration in package syscall),
    and no one seems to care.
    
    Alex Brainman may bring this back properly for Go 1.3.
    
    Fixes #6338.
    
    R=golang-dev, r, alex.brainman
    CC=golang-dev
    https://golang.org/cl/14287043
---
 src/pkg/runtime/syscall_windows.goc | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/pkg/runtime/syscall_windows.goc b/src/pkg/runtime/syscall_windows.goc
index 781ec908d0..173d3ed6a9 100644
--- a/src/pkg/runtime/syscall_windows.goc
+++ b/src/pkg/runtime/syscall_windows.goc
@@ -40,9 +40,14 @@ func NewCallback(fn Eface) (code uintptr) {
 	code = (uintptr)runtime·compilecallback(fn, true);
 }
 
+/*
+ * If this is needed, uncomment here and add a declaration in package syscall
+ * next to the NewCallback declaration.
+ *
 func NewCallbackCDecl(fn Eface) (code uintptr) {
 	code = (uintptr)runtime·compilecallback(fn, false);
 }
+ */
 
 func Syscall(fn uintptr, nargs uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err uintptr) {
 	WinCall c;
