commit 722f7d280b8c6829fbacd049c339b9c0edf75f12
Author: Andrew Gerrand <adg@golang.org>
Date:   Thu Dec 18 11:42:25 2014 +1100

    doc: use 'git-codereview' in contributor docs
    
    Change-Id: I63d5c81fdaf9aca2fc3da3defcc6e9c4094c690b
    Reviewed-on: https://go-review.googlesource.com/1742
    Reviewed-by: Andrew Gerrand <adg@golang.org>
---
 doc/contribute.html | 47 ++++++++++++++++++++++++-----------------------
 1 file changed, 24 insertions(+), 23 deletions(-)

diff --git a/doc/contribute.html b/doc/contribute.html
index ba550d5281..6a20816345 100644
--- a/doc/contribute.html
+++ b/doc/contribute.html
@@ -77,7 +77,7 @@ Changes to Go must be reviewed before they are submitted,
 no matter who makes the change.
 (In exceptional cases, such as fixing a build, the review can
 follow shortly after submitting.)
-A custom git command called <code>git-review</code>,
+A custom git command called <code>git-codereview</code>,
 discussed below, helps manage the code review process through a Google-hosted
 <a href="https://go-review.googlesource.com/">instance</a> of the code review
 system called <a href="https://code.google.com/p/gerrit/">Gerrit</a>.
@@ -132,44 +132,44 @@ and log in using the same Google Account you used above.
 That is all that is required.
 </p>
 
-<h3>Install the git-review command</h3>
+<h3>Install the git-codereview command</h3>
 
 <p>
-Now install the <code>git-review</code> command by running,
+Now install the <code>git-codereview</code> command by running,
 </p>
 
 <pre>
-go get -u golang.org/x/review/git-review
+go get -u golang.org/x/review/git-codereview
 </pre>
 
 <p>
-Make sure <code>git-review</code> is installed in your shell path, so that the
+Make sure <code>git-codereview</code> is installed in your shell path, so that the
 <code>git</code> command can find it. Check that
 </p>
 
 <pre>
 $ git review help
 </pre>
- 
+
 <p>
 prints help text, not an error.
 </p>
 
 <p>
-Note to Git aficionados: The <code>git-review</code> command is not required to
+Note to Git aficionados: The <code>git-codereview</code> command is not required to
 upload and manage Gerrit code reviews. For those who prefer plain Git, the text
-below gives the Git equivalent of each git-review command. If you do use plain
-Git, note that you still need the commit hooks that the git-review command
+below gives the Git equivalent of each git-codereview command. If you do use plain
+Git, note that you still need the commit hooks that the git-codereview command
 configures; those hooks add a Gerrit <code>Change-Id</code> line to the commit
 message and check that all Go source files have been formatted with gofmt. Even
 if you intend to use plain Git for daily work, install the hooks in a new Git
-checkout by running <code>git-review</code> <code>hooks</code>).
+checkout by running <code>git-codereview</code> <code>hooks</code>).
 </p>
 
 <h3>Set up git aliases</h3>
 
 <p>
-The <code>git-review</code> command can be run directly from the shell
+The <code>git-codereview</code> command can be run directly from the shell
 by typing, for instance,
 </p>
 
@@ -178,7 +178,7 @@ $ git review sync
 </pre>
 
 <p>
-but it is more convenient to set up aliases for <code>git-review</code>'s own
+but it is more convenient to set up aliases for <code>git-codereview</code>'s own
 subcommands, so that the above becomes,
 </p>
 
@@ -186,8 +186,8 @@ subcommands, so that the above becomes,
 $ git sync
 </pre>
 
-</p>
-The <code>git-review</code> subcommands have been chosen to be distinct from
+<p>
+The <code>git-codereview</code> subcommands have been chosen to be distinct from
 Git's own, so it's safe to do so.
 </p>
 
@@ -200,16 +200,17 @@ To install them, copy this text into your Git configuration file
 
 <pre>
 [alias]
-	change = review change
-	gofmt = review gofmt
-	mail = review mail
-	pending = review pending
-	sync = review sync
+	change = codereview change
+	gofmt = codereview gofmt
+	mail = codereview mail
+	pending = codereview pending
+	submit = codereview submit
+	sync = codereview sync
 </pre>
 
-<h3>Understanding the git-review command</h3>
+<h3>Understanding the git-codereview command</h3>
 
-<p>After installing the <code>git-review</code> command, you can run</p>
+<p>After installing the <code>git-codereview</code> command, you can run</p>
 
 <pre>
 $ git review help
@@ -217,7 +218,7 @@ $ git review help
 
 <p>
 to learn more about its commands.
-You can also read the <a href="https://godoc.org/golang.org/x/review/git-review">command documentation</a>.
+You can also read the <a href="https://godoc.org/golang.org/x/review/git-codereview">command documentation</a>.
 </p>
 
 <h3>Switch to the master branch</h3>
@@ -367,7 +368,7 @@ Do not edit or delete it.
 <p>
 (In Git terms, <code>git</code> <code>change</code> with no branch name
 runs <code>git</code> <code>commit</code> <code>--amend</code>.)
-</p> 
+</p>
 
 <h3>Mail the change for review</h3>
 
