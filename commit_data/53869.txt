commit 812fd2fe70112209557c4f6392ab8eaee6f68dda
Author: zhangyunhao <zhangyunhao@bytedance.com>
Date:   Tue Sep 6 18:39:52 2022 +0800

    cmd/compile: gofmt comments
    
    Change-Id: I79634efbd8d0189afdfe22e147d63c889e8047ba
    Reviewed-on: https://go-review.googlesource.com/c/go/+/427964
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    Run-TryBot: Wayne Zuo <wdvxdr@golangcn.org>
    Reviewed-by: Wayne Zuo <wdvxdr@golangcn.org>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Auto-Submit: Matthew Dempsky <mdempsky@google.com>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>
---
 src/cmd/compile/internal/walk/builtin.go | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/cmd/compile/internal/walk/builtin.go b/src/cmd/compile/internal/walk/builtin.go
index 0acac9631b..7d55494737 100644
--- a/src/cmd/compile/internal/walk/builtin.go
+++ b/src/cmd/compile/internal/walk/builtin.go
@@ -26,20 +26,20 @@ import (
 //
 // For race detector, expand append(src, a [, b]* ) to
 //
-//	  init {
-//	    s := src
-//	    const argc = len(args) - 1
-//	    newLen := s.len + argc
-//	    if uint(newLen) <= uint(s.cap) {
-//	      s = s[:newLen]
-//	    } else {
-//	      s = growslice(s.ptr, newLen, s.cap, argc, elemType)
-//	    }
-//	    s[s.len - argc] = a
-//	    s[s.len - argc + 1] = b
-//	    ...
+//	init {
+//	  s := src
+//	  const argc = len(args) - 1
+//	  newLen := s.len + argc
+//	  if uint(newLen) <= uint(s.cap) {
+//	    s = s[:newLen]
+//	  } else {
+//	    s = growslice(s.ptr, newLen, s.cap, argc, elemType)
 //	  }
-//	  s
+//	  s[s.len - argc] = a
+//	  s[s.len - argc + 1] = b
+//	  ...
+//	}
+//	s
 func walkAppend(n *ir.CallExpr, init *ir.Nodes, dst ir.Node) ir.Node {
 	if !ir.SameSafeExpr(dst, n.Args[0]) {
 		n.Args[0] = safeExpr(n.Args[0], init)
