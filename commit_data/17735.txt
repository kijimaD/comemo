commit 45b830ed319ee1d82ff9d41c35d6145ab7ecbb82
Author: Yasuhiro Matsumoto <mattn.jp@gmail.com>
Date:   Thu Oct 3 13:32:07 2013 +1000

    misc/vim: Autocompletion for :Godoc command
    
    R=golang-dev, dsymonds
    CC=golang-dev
    https://golang.org/cl/14259043
---
 misc/vim/autoload/go/complete.vim | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

diff --git a/misc/vim/autoload/go/complete.vim b/misc/vim/autoload/go/complete.vim
index 5b8406b771..ea6e0104b9 100644
--- a/misc/vim/autoload/go/complete.vim
+++ b/misc/vim/autoload/go/complete.vim
@@ -28,13 +28,31 @@ if len(s:goarch) == 0
   endif
 endif
 
+function! go#complete#PackageMembers(package, member)
+  silent! let content = system('godoc ' . a:package)
+  if v:shell_error || !len(content)
+    return []
+  endif
+  let lines = filter(split(content, "\n"),"v:val !~ '^\\s\\+$'")
+  try
+    let mx1 = '^\s\+\(\S+\)\s\+=\s\+.*'
+    let mx2 = '^\%(const\|var\|type\|func\) \([A-Z][^ (]\+\).*'
+    let candidates =
+    \   map(filter(copy(lines), 'v:val =~ mx1'), 'substitute(v:val, mx1, "\\1", "")')
+    \ + map(filter(copy(lines), 'v:val =~ mx2'), 'substitute(v:val, mx2, "\\1", "")')
+    return filter(candidates, '!stridx(v:val, a:member)')
+  catch
+    return []
+  endtry
+endfunction
+
 function! go#complete#Package(ArgLead, CmdLine, CursorPos)
   let dirs = []
 
   let words = split(a:CmdLine, '\s\+', 1)
   if len(words) > 2
-    " TODO Complete package members
-    return []
+    " Complete package members
+    return go#complete#PackageMembers(words[1], words[2])
   endif
 
   if executable('go')
