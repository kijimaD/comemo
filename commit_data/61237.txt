commit a464ffda3e44c87de946cc29f719794a30e9b3f4
Author: David Chase <drchase@google.com>
Date:   Wed Aug 28 10:34:54 2024 -0400

    cmd/compile: tweak inlining to favor PPARAM call sites
    
    If a function f being considered for inlining calls
    one of its parameters, reduce the normal cost of that
    call (57) to 17 to increase the chance that f will
    be inlined and (with luck) that parameter will be
    revealed as a constant function (which unblocks
    escape analysis) or perhaps even be inlined.
    
    The least-change value for that was still effective for
    iter_test benchmarks was 32; however tests showed no
    particular harm even when reduced as low as 7, and there
    have been reports of other performance problems with
    rangefunc overheads and so I picked a middling number
    in hopes of warding off such reports.
    
    Updates #69015
    
    Change-Id: I2a525c1beffb9f88daa14caa8a622864b023675c
    Reviewed-on: https://go-review.googlesource.com/c/go/+/609095
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Keith Randall <khr@google.com>
    Reviewed-by: Tim King <taking@google.com>
    Reviewed-by: Keith Randall <khr@golang.org>

 src/cmd/compile/internal/inline/inl.go                         | 10 +++++++++-
 .../internal/inline/inlheur/testdata/props/acrosscall.go       | 10 +++++-----
 .../compile/internal/inline/inlheur/testdata/props/calls.go    | 10 +++++-----
 3 files changed, 19 insertions(+), 11 deletions(-)
