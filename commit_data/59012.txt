commit 3b0d39c5da3f2ad290048f13cb204a1e81ed4faf
Author: Jes Cok <xigua67damn@gmail.com>
Date:   Thu Feb 1 16:28:07 2024 +0000

    sync: update doc for Map.Clear
    
    Change-Id: I9bcc5c82321cbc93f1c7aafd1dadf4f6b862ccbd
    GitHub-Last-Rev: 818b95528f6beb6178b385953b49fbfbaeb31a82
    GitHub-Pull-Request: golang/go#65429
    Reviewed-on: https://go-review.googlesource.com/c/go/+/560396
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Auto-Submit: Bryan Mills <bcmills@google.com>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
---
 src/sync/map.go | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/sync/map.go b/src/sync/map.go
index 1f26cdd8bb..ec5ed29ae5 100644
--- a/src/sync/map.go
+++ b/src/sync/map.go
@@ -155,7 +155,7 @@ func (m *Map) Store(key, value any) {
 	_, _ = m.Swap(key, value)
 }
 
-// Clear deletes all the keys.
+// Clear deletes all the entries, resulting in an empty Map.
 func (m *Map) Clear() {
 	read := m.loadReadOnly()
 	if len(read.m) == 0 && !read.amended {
@@ -172,7 +172,8 @@ func (m *Map) Clear() {
 	}
 
 	clear(m.dirty)
-	m.misses = 0 // Don't immediately promote the newly-cleared dirty map on the next operation
+	// Don't immediately promote the newly-cleared dirty map on the next operation.
+	m.misses = 0
 }
 
 // tryCompareAndSwap compare the entry with the given old value and swaps
