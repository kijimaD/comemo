commit a08adda12c2af7f597dad9d280282c7e70d4a2dc
Author: Ian Lance Taylor <iant@golang.org>
Date:   Wed Mar 3 08:04:40 2021 -0800

    os/signal: remove comments about SA_RESTART
    
    It's no longer necessary for non-Go signal handlers to use SA_RESTART.
    
    For #20400
    Fixes #44761
    
    Change-Id: Ie3c7fecc631a4a2822331754296ea09b308e1391
    Reviewed-on: https://go-review.googlesource.com/c/go/+/298269
    Trust: Ian Lance Taylor <iant@golang.org>
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Bryan C. Mills <bcmills@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
---
 src/os/signal/doc.go | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/src/os/signal/doc.go b/src/os/signal/doc.go
index 2229d36954..a210795849 100644
--- a/src/os/signal/doc.go
+++ b/src/os/signal/doc.go
@@ -129,9 +129,7 @@ If the non-Go code installs any signal handlers, it must use the
 SA_ONSTACK flag with sigaction. Failing to do so is likely to cause
 the program to crash if the signal is received. Go programs routinely
 run with a limited stack, and therefore set up an alternate signal
-stack. Also, the Go standard library expects that any signal handlers
-will use the SA_RESTART flag. Failing to do so may cause some library
-calls to return "interrupted system call" errors.
+stack.
 
 If the non-Go code installs a signal handler for any of the
 synchronous signals (SIGBUS, SIGFPE, SIGSEGV), then it should record
