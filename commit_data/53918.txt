commit cdc6aeb6730d9bf5ec8bdf1fa155834e6db11e95
Author: cui fliter <imcusg@gmail.com>
Date:   Sun Sep 4 14:55:00 2022 +0000

    internal: convert calls to atomic type
    
    For #53821
    
    Change-Id: Iee8ccea714726bbb6a4b384887bb107c29b823a9
    GitHub-Last-Rev: 119aad36245800115ea85b9748e61d7c75f20344
    GitHub-Pull-Request: golang/go#54862
    Reviewed-on: https://go-review.googlesource.com/c/go/+/428335
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Run-TryBot: Bryan Mills <bcmills@google.com>
    Auto-Submit: Bryan Mills <bcmills@google.com>
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Reviewed-by: Keith Randall <khr@google.com>
---
 src/internal/singleflight/singleflight_test.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/internal/singleflight/singleflight_test.go b/src/internal/singleflight/singleflight_test.go
index c2310375f7..99713c9e14 100644
--- a/src/internal/singleflight/singleflight_test.go
+++ b/src/internal/singleflight/singleflight_test.go
@@ -44,9 +44,9 @@ func TestDoDupSuppress(t *testing.T) {
 	var g Group
 	var wg1, wg2 sync.WaitGroup
 	c := make(chan string, 1)
-	var calls int32
+	var calls atomic.Int32
 	fn := func() (any, error) {
-		if atomic.AddInt32(&calls, 1) == 1 {
+		if calls.Add(1) == 1 {
 			// First invocation.
 			wg1.Done()
 		}
@@ -81,7 +81,7 @@ func TestDoDupSuppress(t *testing.T) {
 	// least reached the line before the Do.
 	c <- "bar"
 	wg2.Wait()
-	if got := atomic.LoadInt32(&calls); got <= 0 || got >= n {
+	if got := calls.Load(); got <= 0 || got >= n {
 		t.Errorf("number of calls = %d; want over 0 and less than %d", got, n)
 	}
 }
