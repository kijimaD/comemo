commit ca7c12d4c9eb4a19ca5103ec5763537cccbcc13b
Author: Ian Lance Taylor <iant@golang.org>
Date:   Thu Feb 7 16:55:17 2019 -0800

    sync/atomic: add 32-bit MIPS to the 64-bit alignment requirement
    
    runtime/internal/atomic/atomic_mipsx.go enforces 64-bit alignment.
    
    Change-Id: Ifdc36e1c0322827711425054d10f1c52425a13fa
    Reviewed-on: https://go-review.googlesource.com/c/161697
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
---
 src/sync/atomic/doc.go | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/sync/atomic/doc.go b/src/sync/atomic/doc.go
index 7c007d7a15..108b76b804 100644
--- a/src/sync/atomic/doc.go
+++ b/src/sync/atomic/doc.go
@@ -47,7 +47,8 @@ import (
 //
 // On non-Linux ARM, the 64-bit functions use instructions unavailable before the ARMv6k core.
 //
-// On both ARM and x86-32, it is the caller's responsibility to arrange for 64-bit
+// On ARM, x86-32, and 32-bit MIPS,
+// it is the caller's responsibility to arrange for 64-bit
 // alignment of 64-bit words accessed atomically. The first word in a
 // variable or in an allocated struct, array, or slice can be relied upon to be
 // 64-bit aligned.
