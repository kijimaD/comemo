commit 605ee5a3ef1c95e216e64d7caeb21b24ed62737d
Author: Rob Pike <r@golang.org>
Date:   Fri Jan 16 13:55:55 2009 -0800

    s/split/Split/ to get compiling again
    
    R=rsc
    OCL=22967
    CL=22967
---
 src/lib/strconv/fp_test.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/lib/strconv/fp_test.go b/src/lib/strconv/fp_test.go
index d5d5f7fcd4..f0cfad0bb9 100644
--- a/src/lib/strconv/fp_test.go
+++ b/src/lib/strconv/fp_test.go
@@ -27,7 +27,7 @@ func pow2(i int) float64 {
 // Wrapper around strconv.Atof64.  Handles dddddp+ddd (binary exponent)
 // itself, passes the rest on to strconv.Atof64.
 func myatof64(s string) (f float64, ok bool) {
-	a := strings.split(s, "p");
+	a := strings.Split(s, "p");
 	if len(a) == 2 {
 		n, err := strconv.Atoi64(a[0]);
 		if err != nil {
@@ -71,7 +71,7 @@ func myatof64(s string) (f float64, ok bool) {
 // Wrapper around strconv.Atof32.  Handles dddddp+ddd (binary exponent)
 // itself, passes the rest on to strconv.Atof32.
 func myatof32(s string) (f float32, ok bool) {
-	a := strings.split(s, "p");
+	a := strings.Split(s, "p");
 	if len(a) == 2 {
 		n, err := strconv.Atoi(a[0]);
 		if err != nil {
@@ -116,7 +116,7 @@ export func TestFp(t *testing.T) {
 		if len(line) == 0 || line[0] == '#' {
 			continue
 		}
-		a := strings.split(line, " ");
+		a := strings.Split(line, " ");
 		if len(a) != 4 {
 			t.Error("testfp.txt:", lineno, ": wrong field count\n");
 			continue;
