commit 688a6ff71da455d001c57d03395de87a69fb967a
Author: Robert Griesemer <gri@golang.org>
Date:   Wed Nov 4 16:49:28 2009 -0800

    gofmt-ify bytes
    
    R=r
    http://go/go-review/1016044
---
 src/pkg/bytes/buffer.go | 2 +-
 src/pkg/bytes/bytes.go  | 5 +++--
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/pkg/bytes/buffer.go b/src/pkg/bytes/buffer.go
index 6e5887cb0b..875086525e 100644
--- a/src/pkg/bytes/buffer.go
+++ b/src/pkg/bytes/buffer.go
@@ -46,7 +46,7 @@ func (b *Buffer) Bytes() []byte {
 func (b *Buffer) String() string {
 	if b == nil {
 		// Special case, useful in debugging.
-		return "<nil>"
+		return "<nil>";
 	}
 	return string(b.buf[b.off : len(b.buf)]);
 }
diff --git a/src/pkg/bytes/bytes.go b/src/pkg/bytes/bytes.go
index cb543991c9..05d87fcb6a 100644
--- a/src/pkg/bytes/bytes.go
+++ b/src/pkg/bytes/bytes.go
@@ -142,7 +142,7 @@ func genSplit(s, sep []byte, sepSave, n int) [][]byte {
 	na := 0;
 	for i := 0; i+len(sep) <= len(s) && na+1 < n; i++ {
 		if s[i] == c && (len(sep) == 1 || Equal(s[i : i+len(sep)], sep)) {
-			a[na] = s[start:i+sepSave];
+			a[na] = s[start : i+sepSave];
 			na++;
 			start = i+len(sep);
 			i += len(sep)-1;
@@ -278,7 +278,8 @@ func TrimSpace(s []byte) []byte {
 		rune := int(s[end-1]);
 		if rune >= utf8.RuneSelf {
 			// Back up carefully looking for beginning of rune. Mustn't pass start.
-			for wid = 2; start <= end-wid && !utf8.RuneStart(s[end-wid]); wid++ {}
+			for wid = 2; start <= end-wid && !utf8.RuneStart(s[end-wid]); wid++ {
+			}
 			if start > end-wid {	// invalid UTF-8 sequence; stop processing
 				return s[start:end];
 			}
