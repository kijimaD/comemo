commit 417955d151359629ca11be968e3056e6636b828e
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu May 27 02:47:04 2021 -0700

    [dev.typeparams] cmd/compile/internal/inline: refactor mkinlcall
    
    This CL refactors mkinlcall by extracting the core InlinedCallExpr
    construction code into a new "oldInline" function, and adds a new
    "NewInline" hook point that can be overriden with a new inliner
    implementation that only needs to worry about the details of
    constructing the InlinedCallExpr.
    
    It also moves the delayretvars optimization check into CanInline, so
    it's performed just once per inlinable function rather than once for
    each inlined call.
    
    Finally, it skips printing the function body about to be inlined (and
    updates the couple of regress tests that expected this output). We
    already report the inline body as it was saved, and this diagnostic is
    only applicable to the current inliner, which clones existing function
    body instances. In the unified IR inliner, we'll directly construct
    inline bodies from the serialized representation.
    
    Change-Id: Ibdbe617da83c07665dcbda402cc8d4d4431dde2f
    Reviewed-on: https://go-review.googlesource.com/c/go/+/323290
    Trust: Matthew Dempsky <mdempsky@google.com>
    Trust: Dan Scales <danscales@google.com>
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Dan Scales <danscales@google.com>

 src/cmd/compile/internal/inline/inl.go        | 187 ++++++++++++++------------
 src/cmd/compile/internal/ir/func.go           |   5 +
 src/cmd/compile/internal/typecheck/iexport.go |   1 +
 src/cmd/compile/internal/typecheck/iimport.go |   3 +-
 test/fixedbugs/issue24651a.go                 |   2 +-
 test/fixedbugs/issue24651b.go                 |   4 +-
 test/inline_big.go                            |   2 +-
 7 files changed, 113 insertions(+), 91 deletions(-)
