commit a98589711da5e9d935e8d690cfca92892e86d557
Author: Roland Shoemaker <roland@golang.org>
Date:   Wed Jun 9 11:31:27 2021 -0700

    crypto/tls: test key type when casting
    
    When casting the certificate public key in generateClientKeyExchange,
    check the type is appropriate. This prevents a panic when a server
    agrees to a RSA based key exchange, but then sends an ECDSA (or
    other) certificate.
    
    Fixes #47143
    Fixes CVE-2021-34558
    
    Thanks to Imre Rad for reporting this issue.
    
    Change-Id: Iabccacca6052769a605cccefa1216a9f7b7f6aea
    Reviewed-on: https://team-review.git.corp.google.com/c/golang/go-private/+/1116723
    Reviewed-by: Filippo Valsorda <valsorda@google.com>
    Reviewed-by: Katie Hockman <katiehockman@google.com>
    Reviewed-on: https://go-review.googlesource.com/c/go/+/334031
    Trust: Filippo Valsorda <filippo@golang.org>
    Run-TryBot: Filippo Valsorda <filippo@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>
---
 src/crypto/tls/key_agreement.go | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/crypto/tls/key_agreement.go b/src/crypto/tls/key_agreement.go
index 8cfbd734f1..c28a64f3a8 100644
--- a/src/crypto/tls/key_agreement.go
+++ b/src/crypto/tls/key_agreement.go
@@ -86,7 +86,11 @@ func (ka rsaKeyAgreement) generateClientKeyExchange(config *Config, clientHello
 		return nil, nil, err
 	}
 
-	encrypted, err := rsa.EncryptPKCS1v15(config.rand(), cert.PublicKey.(*rsa.PublicKey), preMasterSecret)
+	rsaKey, ok := cert.PublicKey.(*rsa.PublicKey)
+	if !ok {
+		return nil, nil, errors.New("tls: server certificate contains incorrect key type for selected ciphersuite")
+	}
+	encrypted, err := rsa.EncryptPKCS1v15(config.rand(), rsaKey, preMasterSecret)
 	if err != nil {
 		return nil, nil, err
 	}
