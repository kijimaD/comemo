commit 250ec1665a8d142a4b4f7e634991aeac50bb14f8
Author: Ken Thompson <ken@golang.org>
Date:   Mon Nov 3 13:27:16 2008 -0800

    unsigned divide by fn()
    
    R=r
    OCL=18351
    CL=18351
---
 src/cmd/6g/gen.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/cmd/6g/gen.c b/src/cmd/6g/gen.c
index add8ba3988..633c325ddf 100644
--- a/src/cmd/6g/gen.c
+++ b/src/cmd/6g/gen.c
@@ -907,7 +907,7 @@ void
 dodiv(int op, Node *nl, Node *nr, Node *res, Node *ax, Node *dx)
 {
 	int a;
-	Node n3;
+	Node n3, n4;
 	Type *t;
 
 	t = nl->type;
@@ -919,25 +919,25 @@ dodiv(int op, Node *nl, Node *nr, Node *res, Node *ax, Node *dx)
 	}
 	a = optoas(op, t);
 
-	if(!issigned[t->etype]) {
-		nodconst(&n3, t, 0);
-		gmove(&n3, dx);
-	}
-
 	regalloc(&n3, nr->type, N);
 	if(nl->ullman >= nr->ullman) {
 		cgen(nl, ax);
-		if(issigned[t->etype])
+		if(!issigned[t->etype]) {
+			nodconst(&n4, t, 0);
+			gmove(&n4, dx);
+		} else
 			gins(optoas(OFOR, t), N, N);
 		cgen(nr, &n3);
-		gins(a, &n3, N);
 	} else {
 		cgen(nr, &n3);
 		cgen(nl, ax);
-		if(issigned[t->etype])
+		if(!issigned[t->etype]) {
+			nodconst(&n4, t, 0);
+			gmove(&n4, dx);
+		} else
 			gins(optoas(OFOR, t), N, N);
-		gins(a, &n3, N);
 	}
+	gins(a, &n3, N);
 	regfree(&n3);
 
 	if(op == ODIV)
