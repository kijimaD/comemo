commit 3dea7c3f690cb35858b122605d1f029df8062293
Author: Cuong Manh Le <cuong.manhle.vn@gmail.com>
Date:   Tue Oct 31 18:34:42 2023 +0700

    hash/maphash: weaken avalanche test a bit more
    
    CL 495415 weaken avalanche, making allowed range from 43% to 57%. Since
    then, we only see a failure with 58% on linux-386-longtest builder, so
    let give the test a bit more wiggle room: 40% to 59%.
    
    Fixes #60170
    
    Change-Id: I9528ebc8601975b733c3d9fd464ce41429654273
    Reviewed-on: https://go-review.googlesource.com/c/go/+/538655
    Reviewed-by: Keith Randall <khr@golang.org>
    Reviewed-by: Bryan Mills <bcmills@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Keith Randall <khr@google.com>
    Auto-Submit: Cuong Manh Le <cuong.manhle.vn@gmail.com>
---
 src/hash/maphash/smhasher_test.go | 2 +-
 src/runtime/hash_test.go          | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/hash/maphash/smhasher_test.go b/src/hash/maphash/smhasher_test.go
index a6e8a21e57..085036bd7b 100644
--- a/src/hash/maphash/smhasher_test.go
+++ b/src/hash/maphash/smhasher_test.go
@@ -381,7 +381,7 @@ func avalancheTest1(t *testing.T, k key) {
 	// find c such that Prob(mean-c*stddev < x < mean+c*stddev)^N > .9999
 	for c = 0.0; math.Pow(math.Erf(c/math.Sqrt(2)), float64(N)) < .9999; c += .1 {
 	}
-	c *= 8.0 // allowed slack - we don't need to be perfectly random
+	c *= 11.0 // allowed slack: 40% to 60% - we don't need to be perfectly random
 	mean := .5 * REP
 	stddev := .5 * math.Sqrt(REP)
 	low := int(mean - c*stddev)
diff --git a/src/runtime/hash_test.go b/src/runtime/hash_test.go
index 6562829825..c1d4bfa080 100644
--- a/src/runtime/hash_test.go
+++ b/src/runtime/hash_test.go
@@ -513,7 +513,7 @@ func avalancheTest1(t *testing.T, k Key) {
 	// find c such that Prob(mean-c*stddev < x < mean+c*stddev)^N > .9999
 	for c = 0.0; math.Pow(math.Erf(c/math.Sqrt(2)), float64(N)) < .9999; c += .1 {
 	}
-	c *= 8.0 // allowed slack - we don't need to be perfectly random
+	c *= 11.0 // allowed slack: 40% to 60% - we don't need to be perfectly random
 	mean := .5 * REP
 	stddev := .5 * math.Sqrt(REP)
 	low := int(mean - c*stddev)
