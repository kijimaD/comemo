commit 67f181bfd84dfd5942fe9a29d8a20c9ce5eb2fea
Author: Diogo Pinela <diogoid7400@gmail.com>
Date:   Thu Jun 27 22:19:15 2019 +0100

    doc: fix spec links in Go 1.13 release notes
    
    When reading tip.golang.org/doc/go1.13.html, the spec links in
    the "Changes to the language" section should point to the updated
    spec, not the old one.
    
    Change-Id: I6b13ca0b4c722ed52b84a12a680bece876a4e478
    Reviewed-on: https://go-review.googlesource.com/c/go/+/184118
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 doc/go1.13.html | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/doc/go1.13.html b/doc/go1.13.html
index 63ba880250..547fdd9933 100644
--- a/doc/go1.13.html
+++ b/doc/go1.13.html
@@ -41,13 +41,13 @@ Do not send CLs removing the interior tags from such phrases.
   Go 1.13 supports a more uniform and modernized set of number literal prefixes.
   <ul>
     <li>
-      <a href="https://golang.org/ref/spec#Integer_literals">Binary integer literals</a>:
+      <a href="/ref/spec#Integer_literals">Binary integer literals</a>:
       The prefix <code>0b</code> or <code>0B</code> indicates a binary integer literal
       such as <code>0b1011</code>.
     </li>
 
     <li>
-      <a href="https://golang.org/ref/spec#Integer_literals">Octal integer literals</a>:
+      <a href="/ref/spec#Integer_literals">Octal integer literals</a>:
       The prefix <code>0o</code> or <code>0O</code> indicates an octal integer literal
       such as <code>0o660</code>.
       The existing octal notation indicated by a leading <code>0</code> followed by
@@ -55,7 +55,7 @@ Do not send CLs removing the interior tags from such phrases.
     </li>
 
     <li>
-      <a href="https://golang.org/ref/spec#Floating-point_literals">Hexadecimal floating point literals</a>:
+      <a href="/ref/spec#Floating-point_literals">Hexadecimal floating point literals</a>:
       The prefix <code>0x</code> or <code>0X</code> may now be used to express the mantissa of a
       floating-point number in hexadecimal format such as <code>0x1.0p-1021</code>.
       A hexadecimal floating-point number must always have an exponent, written as the letter
@@ -64,7 +64,7 @@ Do not send CLs removing the interior tags from such phrases.
     </li>
 
     <li>
-      <a href="https://golang.org/ref/spec#Imaginary_literals">Imaginary literals</a>:
+      <a href="/ref/spec#Imaginary_literals">Imaginary literals</a>:
       The imaginary suffix <code>i</code> may now be used with any (binary, decimal, hexadecimal)
       integer or floating-point literal.
     </li>
@@ -80,7 +80,7 @@ Do not send CLs removing the interior tags from such phrases.
 
 <p>
   Per the <a href="https://github.com/golang/proposal/blob/master/design/19113-signed-shift-counts.md">signed shift counts proposal</a>
-  Go 1.13 removes the restriction that a <a href="https://golang.org/ref/spec#Operators">shift count</a>
+  Go 1.13 removes the restriction that a <a href="/ref/spec#Operators">shift count</a>
   must be unsigned. This change eliminates the need for many artificial <code>uint</code> conversions,
   solely introduced to satisfy this (now removed) restriction of the <code>&lt;&lt;</code> and <code>&gt;&gt;</code> operators.
 </p>
