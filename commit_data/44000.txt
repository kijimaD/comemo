commit 30f8074e3510da8c39f879cfdbde600eb876a79e
Author: Mark Ryan <mark.d.ryan@intel.com>
Date:   Mon Oct 28 19:12:56 2019 +0100

    cmd/internal/obj/x86: prevent jumps crossing 32 byte boundaries
    
    This commit adds a new option to the x86 assembler.  If the
    GOAMD64 environment variable is set to alignedjumps (the
    default) and we're doing a 64 bit build, the assembler will
    make sure that neither stand alone nor macro-fused jumps will
    end on or cross 32 byte boundaries.  To achieve this, functions
    are aligned on 32 byte boundaries, rather than 16 bytes, and
    jump instructions are padded to ensure that they do not
    cross or end on 32 byte boundaries.  Jumps are padded
    by adding a NOP instruction of the appropriate length before
    the jump.
    
    The commit is likely to result in larger binary sizes when
    GOAMD64=alignedjumps.  On the binaries tested so far, an
    increase of between 1.4% and 1.5% has been observed.
    
    Updates #35881
    
    Co-authored-by: David Chase <drchase@google.com>
    
    Change-Id: Ief0722300bc3f987098e4fd92b22b14ad6281d91
    Reviewed-on: https://go-review.googlesource.com/c/go/+/219357
    Reviewed-by: Cherry Zhang <cherryyz@google.com>
    Run-TryBot: Cherry Zhang <cherryyz@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>

 src/cmd/asm/internal/asm/endtoend_test.go |   7 +-
 src/cmd/dist/build.go                     |  11 ++
 src/cmd/dist/buildruntime.go              |   2 +
 src/cmd/go/alldocs.go                     |   3 +
 src/cmd/go/internal/cfg/cfg.go            |   3 +
 src/cmd/go/internal/help/helpdoc.go       |   3 +
 src/cmd/internal/obj/x86/asm6.go          | 219 +++++++++++++++++++++++++++++-
 src/cmd/internal/objabi/util.go           |  10 ++
 src/cmd/link/internal/amd64/obj.go        |   7 +-
 src/internal/cfg/cfg.go                   |   1 +
 10 files changed, 263 insertions(+), 3 deletions(-)
