commit 71d9505998fe224ebb7380616392f71f7ebf26bf
Author: Nevkontakte <aleks@nevkontakte.com>
Date:   Mon Apr 21 13:13:04 2025 +0000

    crypto/tls: skip part of the test based on GOOS instead of GOARCH
    
    This allows to skip the last part of the test under GopherJS as well as
    WebAssembly, since GopherJS shares GOOS=js with wasm.
    
    Change-Id: I41adad788043c1863b23eb2a6da9bc9aa2833092
    GitHub-Last-Rev: d8d42a3b7ccb2bee6479306b6ac1a319443702ec
    GitHub-Pull-Request: golang/go#51827
    Reviewed-on: https://go-review.googlesource.com/c/go/+/394114
    Reviewed-by: Michael Pratt <mpratt@google.com>
    Auto-Submit: Sean Liao <sean@liao.dev>
    Reviewed-by: Junyang Shao <shaojunyang@google.com>
    Reviewed-by: Sean Liao <sean@liao.dev>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
---
 src/crypto/tls/handshake_client_test.go | 4 ++--
 src/crypto/tls/handshake_server_test.go | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/crypto/tls/handshake_client_test.go b/src/crypto/tls/handshake_client_test.go
index 5e636e9109..6118711a0e 100644
--- a/src/crypto/tls/handshake_client_test.go
+++ b/src/crypto/tls/handshake_client_test.go
@@ -2655,8 +2655,8 @@ func TestClientHandshakeContextCancellation(t *testing.T) {
 	if err != context.Canceled {
 		t.Errorf("Unexpected client handshake error: %v", err)
 	}
-	if runtime.GOARCH == "wasm" {
-		t.Skip("conn.Close does not error as expected when called multiple times on WASM")
+	if runtime.GOOS == "js" || runtime.GOOS == "wasip1" {
+		t.Skip("conn.Close does not error as expected when called multiple times on GOOS=js or GOOS=wasip1")
 	}
 	err = cli.Close()
 	if err == nil {
diff --git a/src/crypto/tls/handshake_server_test.go b/src/crypto/tls/handshake_server_test.go
index 9a2a378dce..c72974ef95 100644
--- a/src/crypto/tls/handshake_server_test.go
+++ b/src/crypto/tls/handshake_server_test.go
@@ -2044,8 +2044,8 @@ func TestServerHandshakeContextCancellation(t *testing.T) {
 	if err != context.Canceled {
 		t.Errorf("Unexpected server handshake error: %v", err)
 	}
-	if runtime.GOARCH == "wasm" {
-		t.Skip("conn.Close does not error as expected when called multiple times on WASM")
+	if runtime.GOOS == "js" || runtime.GOOS == "wasip1" {
+		t.Skip("conn.Close does not error as expected when called multiple times on GOOS=js or GOOS=wasip1")
 	}
 	err = conn.Close()
 	if err == nil {
