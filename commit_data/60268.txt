commit 0b72631a8229bcb86913f4855e217ddedbfbbb46
Author: Cherry Mui <cherryyz@google.com>
Date:   Fri May 24 15:00:56 2024 -0400

    cmd/compile: generate args_stackmap for ABI0 assembly func regardless of linkname
    
    Currently, the compiler generates the argument stack map based on
    the function signature for bodyless function declarations, if it
    is not linknamed. The assumption is that linknamed function is
    provided by (Go code in) another package, so its args stack map
    will be generated when compiling that package.
    
    Now we have linknames added to declarations of assembly functions,
    to signal that this function is accessed externally. Examples
    include runtime.morestack_noctxt, math/big.addVV. In the current
    implementation the compiler does not generate its args stack map.
    That causes the assembly function's args stack map missing.
    Instead, change it to generate the stack map if it is a
    declaration of an ABI0 function, which can only be defined in
    assembly and passed to the compiler through the -symabis flag. The
    stack map generation currently only works with ABI0 layout anyway,
    so we don't need to handle ABIInternal assembly functions.
    
    Change-Id: Ic9da3b4854c604e64ed01584da3865994f5b95b8
    Reviewed-on: https://go-review.googlesource.com/c/go/+/587928
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Than McIntosh <thanm@google.com>

 src/cmd/compile/internal/gc/compile.go     |  7 ++++++-
 src/cmd/compile/internal/liveness/plive.go |  2 +-
 test/linknameasm.dir/a_amd64.s             |  7 +++++++
 test/linknameasm.dir/x.go                  | 26 ++++++++++++++++++++++++++
 test/linknameasm.go                        |  9 +++++++++
 5 files changed, 49 insertions(+), 2 deletions(-)
