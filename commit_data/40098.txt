commit ff3ae455d9f0965fcd0857c855b3ac4ea866920e
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Tue Apr 16 17:30:35 2019 -0700

    test: add regress test cases for self-assignment
    
    Cherry pointed out this case in review for CL 136496. That CL was
    slightly too aggressive, and I likely would have made the same mistake
    if I tried it myself.
    
    Updates #27772.
    
    Change-Id: I1fafabb9f8d9aba0494aa71333a4e17cf1bac5c8
    Reviewed-on: https://go-review.googlesource.com/c/go/+/172421
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Cherry Zhang <cherryyz@google.com>
---
 test/escape_selfassign.go | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/test/escape_selfassign.go b/test/escape_selfassign.go
new file mode 100644
index 0000000000..b4fa2084df
--- /dev/null
+++ b/test/escape_selfassign.go
@@ -0,0 +1,32 @@
+// errorcheck -0 -m -l
+
+// Copyright 2019 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Test escape analysis for self assignments.
+
+package escape
+
+type S struct {
+	i  int
+	pi *int
+}
+
+var sink S
+
+func f(p *S) { // ERROR "leaking param: p"
+	p.pi = &p.i
+	sink = *p
+}
+
+// BAD: "leaking param: p" is too conservative
+func g(p *S) { // ERROR "leaking param: p"
+	p.pi = &p.i
+}
+
+func h() {
+	var s S // ERROR "moved to heap: s"
+	g(&s)
+	sink = s
+}
