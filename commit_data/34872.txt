commit 48e207d518b2924fee598a8442230635d60649a9
Author: Keith Randall <keithr@alum.mit.edu>
Date:   Tue Nov 21 07:14:11 2017 -0800

    cmd/compile: fix mapassign_fast* routines for pointer keys
    
    The signature of the mapassign_fast* routines need to distinguish
    the pointerness of their key argument.  If the affected routines
    suspend part way through, the object pointed to by the key might
    get garbage collected because the key is typed as a uint{32,64}.
    
    This is not a problem for mapaccess or mapdelete because the key
    in those situations do not live beyond the call involved.  If the
    object referenced by the key is garbage collected prematurely, the
    code still works fine.  Even if that object is subsequently reallocated,
    it can't be written to the map in time to affect the lookup/delete.
    
    Fixes #22781
    
    Change-Id: I0bbbc5e9883d5ce702faf4e655348be1191ee439
    Reviewed-on: https://go-review.googlesource.com/79018
    Run-TryBot: Keith Randall <khr@golang.org>
    Reviewed-by: Austin Clements <austin@google.com>
    Reviewed-by: Martin MÃ¶hrmann <moehrmann@google.com>

 src/cmd/compile/internal/gc/builtin.go         |   2 +
 src/cmd/compile/internal/gc/builtin/runtime.go |   2 +
 src/cmd/compile/internal/gc/walk.go            |  31 +++--
 src/runtime/hashmap_fast.go                    | 184 +++++++++++++++++++++++--
 test/fixedbugs/issue22781.go                   |  29 ++++
 5 files changed, 227 insertions(+), 21 deletions(-)
