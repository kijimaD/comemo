commit fcf5b15cfe2694fe97bef09d8af6b2408000720f
Author: Robert Griesemer <gri@golang.org>
Date:   Wed Mar 12 14:57:03 2008 -0700

    - added more test cases
    
    SVN=112271
---
 tests/test0.go | 36 +++++++++++++++++++++++++++---------
 1 file changed, 27 insertions(+), 9 deletions(-)

diff --git a/tests/test0.go b/tests/test0.go
index ab58bc8572..9201c16685 100644
--- a/tests/test0.go
+++ b/tests/test0.go
@@ -14,6 +14,10 @@ const
 const (
   pi = /* the usual */ 3.14159265358979323;
   e = 2.718281828;
+  mask1 int = 1 << iota;
+  mask2 = 1 << iota;
+  mask3 = 1 << iota;
+  mask4 = 1 << iota;
 )
 
 type (
@@ -23,7 +27,15 @@ type (
   };
   Point2 Point
 )
-  
+
+func (p *Point) Initialize(x, y int) {
+  p.x, p.y = x, y
+}
+
+func (p *Point) Distance() int {
+  return p.x * p.x + p.y * p.y
+}
+
 var (
   x1 int;
   x2 int;
@@ -44,7 +56,9 @@ func swap(x, y int) (u, v int) {
 }
 
 func control_structs() {
-  i := 0;
+  var p Point = new(Point).Initialize(2, 3);
+  i := p.Distance();
+  var f float = 0.3;
   for {}
   for {};
   for j := 0; j < i; j++ {
@@ -52,12 +66,16 @@ func control_structs() {
     } else i = 0;
     var x float
   }
-  foo: switch {
-    case i < y:
-    case i < j:
-    case i == 0, i == 1, i == j:
-      i++; i++;
-    default:
-      break
+  foo:  // a label
+  switch {
+  case i < y:
+    fallthrough
+  case i < j:
+  case i == 0, i == 1, i == j:
+    i++; i++;
+    goto foo;
+  default:
+    i = -+-+i;
+    break
   }
 }
