commit db8d5b7608fc1ad30d39b1cbec1c9c0c2c1e089d
Author: Aram Hăvărneanu <aram@mgk.ro>
Date:   Tue Mar 17 13:50:40 2015 +0100

    net: try to fix setKeepAlivePeriod on Solaris
    
    Unfortunately Oracle Solaris does not have TCP_KEEPIDLE and
    TCP_KEEPINTVL. TCP_KEEPIDLE is equivalent to TCP_KEEPALIVE_THRESHOLD,
    but TCP_KEEPINTVL does not have a direct equivalent, so we don't set
    TCP_KEEPINTVL any more.
    
    Old Darwin versions also lack TCP_KEEPINTVL, but the code tries to set
    it anyway so that it works on newer versions. We can't do that because
    Oracle might assign the number illumos uses for TCP_KEEPINTVL to a
    constant with a different meaning.
    
    Unfortunately there's nothing we can do if we want to support both
    illumos and Oracle Solaris with the same GOOS.
    
    Updates #9614.
    
    Change-Id: Id39eb5147f7afa8e951f886c0bf529d00f0e1bd4
    Reviewed-on: https://go-review.googlesource.com/7690
    Reviewed-by: Minux Ma <minux@golang.org>
    Reviewed-by: Mikio Hara <mikioh.mikioh@gmail.com>
---
 src/net/tcpsockopt_solaris.go | 35 +++++++++++++++++++++++++++++++++++
 src/net/tcpsockopt_unix.go    |  2 +-
 2 files changed, 36 insertions(+), 1 deletion(-)

diff --git a/src/net/tcpsockopt_solaris.go b/src/net/tcpsockopt_solaris.go
new file mode 100644
index 0000000000..31f5df0526
--- /dev/null
+++ b/src/net/tcpsockopt_solaris.go
@@ -0,0 +1,35 @@
+// Copyright 2015 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package net
+
+import (
+	"os"
+	"syscall"
+	"time"
+)
+
+func setKeepAlivePeriod(fd *netFD, d time.Duration) error {
+	if err := fd.incref(); err != nil {
+		return err
+	}
+	defer fd.decref()
+	// The kernel expects milliseconds so round to next highest
+	// millisecond.
+	d += (time.Millisecond - time.Nanosecond)
+	msecs := int(d / time.Millisecond)
+
+	// Normally we'd do
+	//	syscall.SetsockoptInt(fd.sysfd, syscall.IPPROTO_TCP, syscall.TCP_KEEPINTVL, secs)
+	// here, but we can't because Solaris does not have TCP_KEEPINTVL.
+	// Solaris has TCP_KEEPALIVE_ABORT_THRESHOLD, but it's not the same
+	// thing, it refers to the total time until aborting (not between
+	// probes), and it uses an exponential backoff algorithm instead of
+	// waiting the same time between probes. We can't hope for the best
+	// and do it anyway, like on Darwin, because Solaris might eventually
+	// allocate a constant with a different meaning for the value of
+	// TCP_KEEPINTVL on illumos.
+
+	return os.NewSyscallError("setsockopt", syscall.SetsockoptInt(fd.sysfd, syscall.IPPROTO_TCP, syscall.TCP_KEEPALIVE_THRESHOLD, msecs))
+}
diff --git a/src/net/tcpsockopt_unix.go b/src/net/tcpsockopt_unix.go
index c9f604cad7..c8970d1b57 100644
--- a/src/net/tcpsockopt_unix.go
+++ b/src/net/tcpsockopt_unix.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-// +build freebsd linux netbsd solaris
+// +build freebsd linux netbsd
 
 package net
 
