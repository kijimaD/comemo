commit 36c789b1fd72af5ff6e756794597a3a85e069998
Author: Filippo Valsorda <filippo@golang.org>
Date:   Sat Sep 29 04:30:52 2018 -0400

    [dev.boringcrypto] misc/boring: add go1.10.4b4 and go1.11b4 releases
    
    Also, document the fact that we cut releases only from the versioned
    branches, and use the correct x/net branch.
    
    Had to build this passing -skip_tests to release because the buildlet
    was timing out (see below), but the builders on the dashboard are green.
    
    2018/09/28 19:14:50 linux-amd64: Start.
    2018/09/28 19:14:50 linux-amd64: Creating buildlet.
    2018/09/28 19:15:28 linux-amd64: Pushing source to buildlet.
    2018/09/28 19:15:37 linux-amd64: Writing VERSION file.
    2018/09/28 19:15:38 linux-amd64: Cleaning goroot (pre-build).
    2018/09/28 19:15:38 linux-amd64: Building.
    2018/09/28 19:46:20 Buildlet https://farmer.golang.org:443 failed three heartbeats; final error: timeout waiting for headers
    2018/09/28 19:46:20 linux-amd64: Error: Buildlet https://farmer.golang.org:443 failed heartbeat after 10.007631241s; marking dead; err=timeout waiting for headers
    
    Change-Id: I9d982df693075f96d44aa6f163533253c8ae2914
    Reviewed-on: https://go-review.googlesource.com/138555
    Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>
    Reviewed-by: Filippo Valsorda <filippo@golang.org>
---
 misc/boring/README.md     | 54 +++++++++++++++++++++--------------------------
 misc/boring/RELEASES      |  4 ++++
 misc/boring/build.release |  4 ++--
 3 files changed, 30 insertions(+), 32 deletions(-)

diff --git a/misc/boring/README.md b/misc/boring/README.md
index 405e36c9b5..bd8deff1cc 100644
--- a/misc/boring/README.md
+++ b/misc/boring/README.md
@@ -29,36 +29,30 @@ and publishes it on hub.docker.com in the goboring organization.
 
 ## Release process
 
-1. If the BoringCrypto bits have been updated, increment the number in `VERSION`,
-send that change out as a CL for review, get it committed, and run `git sync`.
-
-2. Run `build.release`, which will determine the base Go version and the BoringCrypto
-version, build a release, and upload it.
-
-3. Run `build.docker`, which will build and upload a Docker image from the latest release.
-
-4. Send out a CL with the updated `RELEASES` file and get it committed.
-
-## Release process for dev.boringcrypto.go1.8.
-
-In addition to the dev.boringcrypto branch, we have a dev.boringcrypto.go1.8 branch,
-which is BoringCrypto backported to the Go 1.8 release branch.
-To issue new BoringCrypto releases based on Go 1.8:
-
-1. Do a regular release on the (not Go 1.8) dev.boringcrypto branch.
-
-2. Change to the dev.boringcrypto.go1.8 branch and cherry-pick all
-BoringCrypto updates, including the update of the `VERSION` file.
-Mail them out and get them committed.
-
-3. **Back on the (not Go 1.8) dev.boringcrypto branch**,
-run `make.bash` and then `build.release <commit>`,
-where `<commit>` is the latest commit on the dev.boringcrypto.go1.8 branch.
-The script will build a release and upload it.
-
-4. Run `build.docker`.
-
-5. Send out a CL with the updated `RELEASES` file and get it committed.
+Development is done on the dev.boringcrypto branch, which tracks
+master. Releases are cut from dev.boringcrypto.go1.X branches,
+which are BoringCrypto backported to the Go 1.X release branches.
+To issue new BoringCrypto releases based on Go 1.X:
+
+1. If the BoringCrypto bits have been updated, increment the
+   number in `VERSION`, send that change out as a CL for review,
+   get it committed to dev.boringcrypto, and run `git sync`.
+
+2. Change to the dev.boringcrypto.go1.X branch and cherry-pick
+   all BoringCrypto updates, including the update of the
+   `VERSION` file. If desired, merge release-branch.go1.X into
+   dev.boringcrypto.go1.X. Mail them out and get them committed.
+
+3. **Back on the dev.boringcrypto branch**, run `git fetch`,
+   `make.bash` and then `build.release dev.boringcrypto.go1.X`.
+   The script will determine the base Go version and the
+   BoringCrypto version, build a release, and upload it.
+
+4. Run `build.docker`, which will build and upload a Docker image
+   from the latest release.
+
+5. Send out a CL with the updated `RELEASES` file and get it
+   committed to dev.boringcrypto.
 
 ## Building from Docker
 
diff --git a/misc/boring/RELEASES b/misc/boring/RELEASES
index b271985b8e..6601481145 100644
--- a/misc/boring/RELEASES
+++ b/misc/boring/RELEASES
@@ -15,3 +15,7 @@ go1.9.7b4 0bad1bef406e linux-amd64 https://go-boringcrypto.storage.googleapis.co
 go1.9.7b4 0bad1bef406e src https://go-boringcrypto.storage.googleapis.com/go1.9.7b4.src.tar.gz ad9fb6e22a27382c468467ecade4937f725b33818852f1c1da0d09b471e7486c
 go1.10.3b4 35ba5284935c linux-amd64 https://go-boringcrypto.storage.googleapis.com/go1.10.3b4.linux-amd64.tar.gz 6754729d78a375bd1debd980b1e3e7fd49198a980d0bbd8f39e89569aa001942
 go1.10.3b4 35ba5284935c src https://go-boringcrypto.storage.googleapis.com/go1.10.3b4.src.tar.gz f3e75c60a835c11b97e30429b63917ceb31f799b2ba7e2001d99db908fb8e28f
+go1.10.4b4 2e2a04a605b6 linux-amd64 https://go-boringcrypto.storage.googleapis.com/go1.10.4b4.linux-amd64.tar.gz 17c275ff448686fe1908ecbea5d11ad6f4f7caa288d1786b756439703b12b8b2
+go1.10.4b4 2e2a04a605b6 src https://go-boringcrypto.storage.googleapis.com/go1.10.4b4.src.tar.gz f9cc38e194edabebf338fb74c22f597dc847560618d5d7d4d6cdc28139efa772
+go1.11b4 685dc1638240 linux-amd64 https://go-boringcrypto.storage.googleapis.com/go1.11b4.linux-amd64.tar.gz d53417b2071af0104fbc15a957000bccdcb5bbc094df0401f67d51968f7f2e4e
+go1.11b4 685dc1638240 src https://go-boringcrypto.storage.googleapis.com/go1.11b4.src.tar.gz 39896f0decd6721e81324cb2bb19540706ca97152c6800a6c8ad15a4e4162184
diff --git a/misc/boring/build.release b/misc/boring/build.release
index b78bfe3ea4..66da86b088 100755
--- a/misc/boring/build.release
+++ b/misc/boring/build.release
@@ -72,8 +72,8 @@ sha() {
     fi
 }
 shortgo=$(echo "$base" | perl -pe 's/(go\d+\.\d+)(\.\d+|rc\d+)/$1/')
-$dir/release -target linux-amd64 -rev "$commit" -version "$version" -tools "release-branch.$shortgo"
-$dir/release -target src -rev "$commit" -version "$version" -tools "release-branch.$shortgo"
+$dir/release -target linux-amd64 -rev "$commit" -version "$version" -tools "release-branch.$shortgo" -net "release-branch.$shortgo"
+$dir/release -target src -rev "$commit" -version "$version" -tools "release-branch.$shortgo" -net "release-branch.$shortgo"
 output="$version.linux-amd64.tar.gz"
 ls -l "$output"
 sha256=$(sha "$output" | awk '{print $1}')
