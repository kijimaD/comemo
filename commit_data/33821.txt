commit 410b73728f2cddb5e7bce3acd623e8a254af60db
Author: Hiroshi Ioka <hirochachacha@gmail.com>
Date:   Sun Sep 10 09:01:30 2017 +0900

    cmd/link: remove windows-specific kludges from Adddynrel
    
    Adddynrel does nothing on windows. We can make code don't call Adddynrel
    on windows in the first place.
    
    Change-Id: I376cc36d44a5df18bda13be57e3916ca3062f181
    Reviewed-on: https://go-review.googlesource.com/62611
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Alex Brainman <alex.brainman@gmail.com>
---
 src/cmd/link/internal/amd64/asm.go | 20 +++++---------------
 src/cmd/link/internal/ld/data.go   |  6 ++++--
 src/cmd/link/internal/x86/asm.go   |  5 -----
 3 files changed, 9 insertions(+), 22 deletions(-)

diff --git a/src/cmd/link/internal/amd64/asm.go b/src/cmd/link/internal/amd64/asm.go
index 8454e47fa2..20ef5956a9 100644
--- a/src/cmd/link/internal/amd64/asm.go
+++ b/src/cmd/link/internal/amd64/asm.go
@@ -239,16 +239,11 @@ func adddynrel(ctxt *ld.Link, s *ld.Symbol, r *ld.Reloc) bool {
 			// nothing to do, the relocation will be laid out in reloc
 			return true
 		}
-		if ld.Headtype == objabi.Hwindows {
-			// nothing to do, the relocation will be laid out in pereloc1
-			return true
-		} else {
-			// for both ELF and Mach-O
-			addpltsym(ctxt, targ)
-			r.Sym = ctxt.Syms.Lookup(".plt", 0)
-			r.Add = int64(targ.Plt)
-			return true
-		}
+		// for both ELF and Mach-O
+		addpltsym(ctxt, targ)
+		r.Sym = ctxt.Syms.Lookup(".plt", 0)
+		r.Add = int64(targ.Plt)
+		return true
 
 	case objabi.R_ADDR:
 		if s.Type == ld.STEXT && ld.Iself {
@@ -359,11 +354,6 @@ func adddynrel(ctxt *ld.Link, s *ld.Symbol, r *ld.Reloc) bool {
 			r.Type = 256 // ignore during relocsym
 			return true
 		}
-
-		if ld.Headtype == objabi.Hwindows {
-			// nothing to do, the relocation will be laid out in pereloc1
-			return true
-		}
 	}
 
 	return false
diff --git a/src/cmd/link/internal/ld/data.go b/src/cmd/link/internal/ld/data.go
index 4b1d541368..45b8c0cd7d 100644
--- a/src/cmd/link/internal/ld/data.go
+++ b/src/cmd/link/internal/ld/data.go
@@ -803,8 +803,10 @@ func windynrelocsym(ctxt *Link, s *Symbol) {
 }
 
 func dynrelocsym(ctxt *Link, s *Symbol) {
-	if Headtype == objabi.Hwindows && Linkmode != LinkExternal {
-		windynrelocsym(ctxt, s)
+	if Headtype == objabi.Hwindows {
+		if Linkmode == LinkInternal {
+			windynrelocsym(ctxt, s)
+		}
 		return
 	}
 
diff --git a/src/cmd/link/internal/x86/asm.go b/src/cmd/link/internal/x86/asm.go
index 58f7f09d28..069ee4702e 100644
--- a/src/cmd/link/internal/x86/asm.go
+++ b/src/cmd/link/internal/x86/asm.go
@@ -335,11 +335,6 @@ func adddynrel(ctxt *ld.Link, s *ld.Symbol, r *ld.Reloc) bool {
 			r.Type = 256 // ignore during relocsym
 			return true
 		}
-
-		if ld.Headtype == objabi.Hwindows && s.Size == int64(ld.SysArch.PtrSize) {
-			// nothing to do, the relocation will be laid out in pereloc1
-			return true
-		}
 	}
 
 	return false
