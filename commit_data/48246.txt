commit ed5ebd32b3b8f66515522e8f09bc9dc023c0901c
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Mon Apr 26 09:14:12 2021 -0700

    os: update some docs to reference fs.ErrFoo instead of os.ErrFoo
    
    Change-Id: I8b771f407028406a6ec9a1f2500c806054961267
    Reviewed-on: https://go-review.googlesource.com/c/go/+/313569
    Trust: Brad Fitzpatrick <bradfitz@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/os/error.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/os/error.go b/src/os/error.go
index 704a6fb29e..fe8f2a8446 100644
--- a/src/os/error.go
+++ b/src/os/error.go
@@ -78,7 +78,7 @@ func NewSyscallError(syscall string, err error) error {
 // well as some syscall errors.
 //
 // This function predates errors.Is. It only supports errors returned by
-// the os package. New code should use errors.Is(err, os.ErrExist).
+// the os package. New code should use errors.Is(err, fs.ErrExist).
 func IsExist(err error) bool {
 	return underlyingErrorIs(err, ErrExist)
 }
@@ -88,7 +88,7 @@ func IsExist(err error) bool {
 // ErrNotExist as well as some syscall errors.
 //
 // This function predates errors.Is. It only supports errors returned by
-// the os package. New code should use errors.Is(err, os.ErrNotExist).
+// the os package. New code should use errors.Is(err, fs.ErrNotExist).
 func IsNotExist(err error) bool {
 	return underlyingErrorIs(err, ErrNotExist)
 }
@@ -98,7 +98,7 @@ func IsNotExist(err error) bool {
 // as some syscall errors.
 //
 // This function predates errors.Is. It only supports errors returned by
-// the os package. New code should use errors.Is(err, os.ErrPermission).
+// the os package. New code should use errors.Is(err, fs.ErrPermission).
 func IsPermission(err error) bool {
 	return underlyingErrorIs(err, ErrPermission)
 }
