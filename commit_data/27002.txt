commit 8969ab89b8b1c7b617b3418c5b122baa43bcd563
Author: Josh Bleecher Snyder <josharian@gmail.com>
Date:   Sun Mar 6 18:05:41 2016 -0800

    cmd/compile: add sizeof test for ssa types
    
    Fix some test output while we're here.
    
    Change-Id: I265cedc222e078eff120f268b92451e12b0400b2
    Reviewed-on: https://go-review.googlesource.com/20294
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/cmd/compile/internal/gc/sizeof_test.go  |  2 +-
 src/cmd/compile/internal/ssa/sizeof_test.go | 39 +++++++++++++++++++++++++++++
 src/cmd/internal/obj/sizeof_test.go         |  2 +-
 3 files changed, 41 insertions(+), 2 deletions(-)

diff --git a/src/cmd/compile/internal/gc/sizeof_test.go b/src/cmd/compile/internal/gc/sizeof_test.go
index a0ae7ccdb9..199b5ce3c6 100644
--- a/src/cmd/compile/internal/gc/sizeof_test.go
+++ b/src/cmd/compile/internal/gc/sizeof_test.go
@@ -37,7 +37,7 @@ func TestSizeof(t *testing.T) {
 		}
 		got := reflect.TypeOf(tt.val).Size()
 		if want != got {
-			t.Errorf("unsafe.Sizeof(%T): want %d, got %d", tt.val, want, got)
+			t.Errorf("unsafe.Sizeof(%T) = %d, want %d", tt.val, got, want)
 		}
 	}
 }
diff --git a/src/cmd/compile/internal/ssa/sizeof_test.go b/src/cmd/compile/internal/ssa/sizeof_test.go
new file mode 100644
index 0000000000..2232913f5d
--- /dev/null
+++ b/src/cmd/compile/internal/ssa/sizeof_test.go
@@ -0,0 +1,39 @@
+// Copyright 2016 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// +build !nacl
+
+package ssa
+
+import (
+	"reflect"
+	"testing"
+	"unsafe"
+)
+
+// Assert that the size of important structures do not change unexpectedly.
+
+func TestSizeof(t *testing.T) {
+	const _64bit = unsafe.Sizeof(uintptr(0)) == 8
+
+	var tests = []struct {
+		val    interface{} // type as a value
+		_32bit uintptr     // size on 32bit platforms
+		_64bit uintptr     // size on 64bit platforms
+	}{
+		{Value{}, 60, 104},
+		{Block{}, 124, 232},
+	}
+
+	for _, tt := range tests {
+		want := tt._32bit
+		if _64bit {
+			want = tt._64bit
+		}
+		got := reflect.TypeOf(tt.val).Size()
+		if want != got {
+			t.Errorf("unsafe.Sizeof(%T) = %d, want %d", tt.val, got, want)
+		}
+	}
+}
diff --git a/src/cmd/internal/obj/sizeof_test.go b/src/cmd/internal/obj/sizeof_test.go
index 70e62d0f9f..f97cac73f6 100644
--- a/src/cmd/internal/obj/sizeof_test.go
+++ b/src/cmd/internal/obj/sizeof_test.go
@@ -34,7 +34,7 @@ func TestSizeof(t *testing.T) {
 		}
 		got := reflect.TypeOf(tt.val).Size()
 		if want != got {
-			t.Errorf("unsafe.Sizeof(%T): want %d, got %d", tt.val, want, got)
+			t.Errorf("unsafe.Sizeof(%T) = %d, want %d", tt.val, got, want)
 		}
 	}
 }
