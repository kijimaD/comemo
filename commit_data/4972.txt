commit adf1e4c5fd6de0bede88def1c62ecf4a3ea53e6e
Author: Andrew Gerrand <adg@golang.org>
Date:   Wed Mar 3 08:53:22 2010 +1100

    http: corrected comment for Response.GetHeader.
    
    Fixes #622.
    
    R=rsc
    CC=golang-dev
    https://golang.org/cl/224084
---
 src/pkg/http/response.go | 13 ++++++-------
 1 file changed, 6 insertions(+), 7 deletions(-)

diff --git a/src/pkg/http/response.go b/src/pkg/http/response.go
index 2e7c532ff9..12751b43e7 100644
--- a/src/pkg/http/response.go
+++ b/src/pkg/http/response.go
@@ -17,9 +17,9 @@ import (
 )
 
 var respExcludeHeader = map[string]int{
-	"Content-Length":    0,
+	"Content-Length": 0,
 	"Transfer-Encoding": 0,
-	"Trailer":           0,
+	"Trailer": 0,
 }
 
 // Response represents the response from an HTTP request.
@@ -152,11 +152,10 @@ func (r *Response) AddHeader(key, value string) {
 	}
 }
 
-// GetHeader returns the value of the response header with the given
-// key, and true.  If there were multiple headers with this key, their
-// values are concatenated, with a comma delimiter.  If there were no
-// response headers with the given key, it returns the empty string and
-// false.  Keys are not case sensitive.
+// GetHeader returns the value of the response header with the given key.
+// If there were multiple headers with this key, their values are concatenated,
+// with a comma delimiter.  If there were no response headers with the given
+// key, GetHeader returns an empty string.  Keys are not case sensitive.
 func (r *Response) GetHeader(key string) (value string) {
 	value, _ = r.Header[CanonicalHeaderKey(key)]
 	return
