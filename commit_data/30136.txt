commit 2481481ff798636907376bfdf7e8c7558b8b930e
Author: Alexander Morozov <lk4d4math@gmail.com>
Date:   Tue Oct 25 14:37:54 2016 -0700

    runtime: fix comments in time.go
    
    Change-Id: I5c501f598f41241e6d7b21d98a126827a3c3ad9a
    Reviewed-on: https://go-review.googlesource.com/32018
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/runtime/time.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/runtime/time.go b/src/runtime/time.go
index 8df185dc8f..604ccded89 100644
--- a/src/runtime/time.go
+++ b/src/runtime/time.go
@@ -88,12 +88,12 @@ func addtimer(t *timer) {
 	unlock(&timers.lock)
 }
 
-// Add a timer to the heap and start or kick the timer proc.
-// If the new timer is earlier than any of the others.
+// Add a timer to the heap and start or kick timerproc if the new timer is
+// earlier than any of the others.
 // Timers are locked.
 func addtimerLocked(t *timer) {
 	// when must never be negative; otherwise timerproc will overflow
-	// during its delta calculation and never expire other runtimeÂ·timers.
+	// during its delta calculation and never expire other runtime timers.
 	if t.when < 0 {
 		t.when = 1<<63 - 1
 	}
@@ -150,7 +150,7 @@ func deltimer(t *timer) bool {
 
 // Timerproc runs the time-driven events.
 // It sleeps until the next event in the timers heap.
-// If addtimer inserts a new earlier event, addtimer1 wakes timerproc early.
+// If addtimer inserts a new earlier event, it wakes timerproc early.
 func timerproc() {
 	timers.gp = getg()
 	for {
