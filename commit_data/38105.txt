commit 119fafcaa5ace647961b59d304b275d93a3e6e97
Author: Weerasak Chongnguluam <singpor@gmail.com>
Date:   Fri Jul 21 01:53:55 2017 +0700

    context: avoid duplicate removeChild
    
    When deadline has already passed,
    current context is canceled before return cancel function.
    So is unnecessary to call cancel with remove from parent again
    in return cancel function.
    
    Change-Id: I37c687c57a29d9f139c7fb648ce7de69093ed623
    Reviewed-on: https://go-review.googlesource.com/c/50410
    Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/context/context.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/context/context.go b/src/context/context.go
index 85f8acf8fa..21a40d5947 100644
--- a/src/context/context.go
+++ b/src/context/context.go
@@ -393,7 +393,7 @@ func WithDeadline(parent Context, d time.Time) (Context, CancelFunc) {
 	dur := time.Until(d)
 	if dur <= 0 {
 		c.cancel(true, DeadlineExceeded) // deadline has already passed
-		return c, func() { c.cancel(true, Canceled) }
+		return c, func() { c.cancel(false, Canceled) }
 	}
 	c.mu.Lock()
 	defer c.mu.Unlock()
