commit ab422f2749bc21514cb22d444bae460f5fa22376
Author: Rhys Hiltner <rhys@justin.tv>
Date:   Tue Jun 21 12:28:48 2022 -0700

    runtime/trace: ignore fallback stacks in test
    
    When runtime.sigprof encounters a stack that gentraceback is unable to
    process, it synthesizes a call stack with a sentinel function (such as
    runtime._System) at the leaf.
    
    The test to confirm that runtime/trace and runtime/pprof have similar
    views of CPU profile samples has trouble with those stacks. The test
    confirms that the samples match by confirming that their symbolized
    forms match, and the symbolization procedure is very different for the
    two packages.
    
    Skip the samples that the CPU profiler's view symbolizes to include one
    of runtime.sigprof's sentinel functions at the leaf. (The test design
    expects the CPU profiler to under-report samples relative to the
    execution tracer.)
    
    Fixes #53378
    
    Change-Id: I60c27de4c69b454057d28a3b6e12d70369de4c4f
    Reviewed-on: https://go-review.googlesource.com/c/go/+/413457
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Run-TryBot: Rhys Hiltner <rhys@justin.tv>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Michael Pratt <mpratt@google.com>

 src/runtime/trace/trace_test.go | 18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)
