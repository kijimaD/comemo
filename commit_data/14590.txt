commit 4f3dd833e397cc16b3170b486a9239f369e03620
Author: Russ Cox <rsc@golang.org>
Date:   Mon Dec 10 01:42:10 2012 -0500

    net/http: fix text for ErrBodyReadAfterClose
    
    Can happen in both request and response.
    Also use it in one place that wasn't.
    
    Fixes #3997.
    
    R=golang-dev, bradfitz
    CC=golang-dev
    https://golang.org/cl/6903057
---
 src/pkg/net/http/server.go   | 2 +-
 src/pkg/net/http/transfer.go | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/pkg/net/http/server.go b/src/pkg/net/http/server.go
index 53879c770f..c4ddbec54f 100644
--- a/src/pkg/net/http/server.go
+++ b/src/pkg/net/http/server.go
@@ -302,7 +302,7 @@ type expectContinueReader struct {
 
 func (ecr *expectContinueReader) Read(p []byte) (n int, err error) {
 	if ecr.closed {
-		return 0, errors.New("http: Read after Close on request Body")
+		return 0, ErrBodyReadAfterClose
 	}
 	if !ecr.resp.wroteContinue && !ecr.resp.conn.hijacked() {
 		ecr.resp.wroteContinue = true
diff --git a/src/pkg/net/http/transfer.go b/src/pkg/net/http/transfer.go
index 757a0ec462..70ea15b8e4 100644
--- a/src/pkg/net/http/transfer.go
+++ b/src/pkg/net/http/transfer.go
@@ -534,11 +534,11 @@ type body struct {
 	res *response // response writer for server requests, else nil
 }
 
-// ErrBodyReadAfterClose is returned when reading a Request Body after
-// the body has been closed. This typically happens when the body is
+// ErrBodyReadAfterClose is returned when reading a Request or Response
+// Body after the body has been closed. This typically happens when the body is
 // read after an HTTP Handler calls WriteHeader or Write on its
 // ResponseWriter.
-var ErrBodyReadAfterClose = errors.New("http: invalid Read on closed request Body")
+var ErrBodyReadAfterClose = errors.New("http: invalid Read on closed Body")
 
 func (b *body) Read(p []byte) (n int, err error) {
 	if b.closed {
