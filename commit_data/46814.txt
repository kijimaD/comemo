commit 8c4ea3140e7c79d828fe7683a3dfe3474a9938fb
Author: Nigel Tao <nigeltao@golang.org>
Date:   Fri Oct 8 10:33:47 2021 +1100

    image/png: fix interlaced palette out-of-bounds
    
    PNG images can be paletted, where each pixel value (a uint8) indexes a
    slice of colors. In terms of wire format, the PLTE chunk explicitly
    contains the palette length. However, in practice, some arguably
    malformed images contain pixel values greater than or equal to the
    explicit PLTE length.
    
    Go's image/png decoder accomodates such images by lengthening the
    decoded image's palette if the implicit maximum is larger than the
    explicit maximum. This was already done, prior to this commit, by the
    "if len(paletted.Palette) <= int(idx)" lines in decoder.readImagePass.
    
    Separately, PNG images can also be interlaced, where the final image is
    the result of merging multiple partial images, also called passes. Prior
    to this commit, we applied the palette lengthening to the pass images
    but not the final image. This commit fixes that.
    
    Fixes #48612
    
    Change-Id: I77606538cc9a504fbd726071756ebcd10c9da73f
    Reviewed-on: https://go-review.googlesource.com/c/go/+/354709
    Trust: Nigel Tao <nigeltao@golang.org>
    Reviewed-by: Andrew Gerrand <adg@golang.org>

 src/image/png/reader.go | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)
