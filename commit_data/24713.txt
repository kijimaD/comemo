commit 05a3b1fce56a95e40512bae9f62656098f198834
Author: Austin Clements <austin@google.com>
Date:   Mon Aug 24 13:35:49 2015 -0400

    cmd/compile: fix uninitialized memory in compare of interface value
    
    A comparison of the form l == r where l is an interface and r is
    concrete performs a type assertion on l to convert it to r's type.
    However, the compiler fails to zero the temporary where the result of
    the type assertion is written, so if the type is a pointer type and a
    stack scan occurs while in the type assertion, it may see an invalid
    pointer on the stack.
    
    Fix this by zeroing the temporary. This is equivalent to the fix for
    type switches from c4092ac.
    
    Fixes #12253.
    
    Change-Id: Iaf205d456b856c056b317b4e888ce892f0c555b9
    Reviewed-on: https://go-review.googlesource.com/13872
    Reviewed-by: Russ Cox <rsc@golang.org>

 src/cmd/compile/internal/gc/walk.go |  5 +++++
 src/runtime/export_test.go          |  1 +
 src/runtime/gc_test.go              | 17 +++++++++++++++++
 src/runtime/iface.go                |  5 +++++
 4 files changed, 28 insertions(+)
