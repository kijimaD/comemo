commit fd17253587862248ee9a30a89e59db2fa9b77d1d
Author: Daniel Theophanes <kardianos@gmail.com>
Date:   Sat Sep 23 15:30:46 2017 -0700

    [release-branch.go1.9] database/sql: prevent race in driver by locking dc in Next
    
    Database drivers should be called from a single goroutine to ease
    driver's design. If a driver chooses to handle context
    cancels internally it may do so.
    
    The sql package violated this agreement when calling Next or
    NextResultSet. It was possible for a concurrent rollback
    triggered from a context cancel to call a Tx.Rollback (which
    takes a driver connection lock) while a Rows.Next is in progress
    (which does not tack the driver connection lock).
    
    The current internal design of the sql package is each call takes
    roughly two locks: a closemu lock which prevents an disposing of
    internal resources (assigning nil or removing from lists)
    and a driver connection lock that prevents calling driver code from
    multiple goroutines.
    
    Fixes #21117
    
    Change-Id: Ie340dc752a503089c27f57ffd43e191534829360
    Reviewed-on: https://go-review.googlesource.com/65731
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
    Reviewed-on: https://go-review.googlesource.com/71510
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Daniel Theophanes <kardianos@gmail.com>

 src/database/sql/fakedb_test.go |  1 +
 src/database/sql/sql.go         | 12 ++++++++++++
 src/database/sql/sql_test.go    |  8 +++++++-
 3 files changed, 20 insertions(+), 1 deletion(-)
