commit c166ff6838ff8a8b871f6efd265791442242ddad
Author: David Chase <drchase@google.com>
Date:   Wed Jul 18 16:18:28 2018 -0400

    cmd/compile: update delve's reference data for ssa/debug_test
    
    Recent versions of Delve pay attention to the debugging changes
    for 1.11, which causes different (better!) debugging behavior.
    Update the reference data to reflect this.
    
    Change-Id: I2efa165aa71769ace9f7885b4ce3420cd9b2d3a3
    Reviewed-on: https://go-review.googlesource.com/128697
    Run-TryBot: David Chase <drchase@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 .../internal/ssa/testdata/hist.dlv-opt.nexts       | 67 ----------------------
 .../internal/ssa/testdata/scopes.dlv-opt.nexts     | 17 ------
 2 files changed, 84 deletions(-)

diff --git a/src/cmd/compile/internal/ssa/testdata/hist.dlv-opt.nexts b/src/cmd/compile/internal/ssa/testdata/hist.dlv-opt.nexts
index 089d176c60..7eb1d3a35b 100644
--- a/src/cmd/compile/internal/ssa/testdata/hist.dlv-opt.nexts
+++ b/src/cmd/compile/internal/ssa/testdata/hist.dlv-opt.nexts
@@ -2,150 +2,83 @@
 55:	func test() {
 57:		l := line{point{1 + zero, 2 + zero}, point{3 + zero, 4 + zero}}
 58:		tinycall()                // this forces l etc to stack
-57:		l := line{point{1 + zero, 2 + zero}, point{3 + zero, 4 + zero}}
 59:		dx := l.end.x - l.begin.x //gdb-dbg=(l.begin.x,l.end.y)//gdb-opt=(l,dx/O,dy/O)
 60:		dy := l.end.y - l.begin.y //gdb-opt=(dx,dy/O)
 61:		sink = dx + dy            //gdb-opt=(dx,dy)
 63:		hist := make([]int, 7)                                //gdb-opt=(dx/O,dy/O) // TODO sink is missing if this code is in 'test' instead of 'main'
 64:		var reader io.Reader = strings.NewReader(cannedInput) //gdb-dbg=(hist/A) // TODO cannedInput/A is missing if this code is in 'test' instead of 'main'
 65:		if len(os.Args) > 1 {
-73:		scanner := bufio.NewScanner(reader)
-63:		hist := make([]int, 7)                                //gdb-opt=(dx/O,dy/O) // TODO sink is missing if this code is in 'test' instead of 'main'
-74:		for scanner.Scan() { //gdb-opt=(scanner/A)
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 76:			i, err := strconv.ParseInt(s, 10, 64)
 77:			if err != nil { //gdb-dbg=(i) //gdb-opt=(err,hist,i)
-76:			i, err := strconv.ParseInt(s, 10, 64)
 81:			hist = ensure(int(i), hist)
 82:			hist[int(i)]++
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 76:			i, err := strconv.ParseInt(s, 10, 64)
 77:			if err != nil { //gdb-dbg=(i) //gdb-opt=(err,hist,i)
-76:			i, err := strconv.ParseInt(s, 10, 64)
 81:			hist = ensure(int(i), hist)
 82:			hist[int(i)]++
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 76:			i, err := strconv.ParseInt(s, 10, 64)
 77:			if err != nil { //gdb-dbg=(i) //gdb-opt=(err,hist,i)
-76:			i, err := strconv.ParseInt(s, 10, 64)
 81:			hist = ensure(int(i), hist)
 82:			hist[int(i)]++
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 76:			i, err := strconv.ParseInt(s, 10, 64)
 77:			if err != nil { //gdb-dbg=(i) //gdb-opt=(err,hist,i)
-76:			i, err := strconv.ParseInt(s, 10, 64)
 81:			hist = ensure(int(i), hist)
 82:			hist[int(i)]++
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 76:			i, err := strconv.ParseInt(s, 10, 64)
 77:			if err != nil { //gdb-dbg=(i) //gdb-opt=(err,hist,i)
-76:			i, err := strconv.ParseInt(s, 10, 64)
 81:			hist = ensure(int(i), hist)
 82:			hist[int(i)]++
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 76:			i, err := strconv.ParseInt(s, 10, 64)
 77:			if err != nil { //gdb-dbg=(i) //gdb-opt=(err,hist,i)
-76:			i, err := strconv.ParseInt(s, 10, 64)
 81:			hist = ensure(int(i), hist)
 82:			hist[int(i)]++
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 76:			i, err := strconv.ParseInt(s, 10, 64)
 77:			if err != nil { //gdb-dbg=(i) //gdb-opt=(err,hist,i)
-76:			i, err := strconv.ParseInt(s, 10, 64)
 81:			hist = ensure(int(i), hist)
 82:			hist[int(i)]++
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 76:			i, err := strconv.ParseInt(s, 10, 64)
 77:			if err != nil { //gdb-dbg=(i) //gdb-opt=(err,hist,i)
-76:			i, err := strconv.ParseInt(s, 10, 64)
 81:			hist = ensure(int(i), hist)
 82:			hist[int(i)]++
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 76:			i, err := strconv.ParseInt(s, 10, 64)
 77:			if err != nil { //gdb-dbg=(i) //gdb-opt=(err,hist,i)
-76:			i, err := strconv.ParseInt(s, 10, 64)
 81:			hist = ensure(int(i), hist)
 82:			hist[int(i)]++
-81:			hist = ensure(int(i), hist)
 74:		for scanner.Scan() { //gdb-opt=(scanner/A)
 86:		for i, a := range hist {
 87:			if a == 0 { //gdb-opt=(a,n,t)
 86:		for i, a := range hist {
 87:			if a == 0 { //gdb-opt=(a,n,t)
-86:		for i, a := range hist {
-91:			n += a
-90:			t += i * a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 91:			n += a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-90:			t += i * a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 90:			t += i * a
 92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 86:		for i, a := range hist {
-90:			t += i * a
-91:			n += a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-86:		for i, a := range hist {
 87:			if a == 0 { //gdb-opt=(a,n,t)
-86:		for i, a := range hist {
 91:			n += a
 90:			t += i * a
 92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-91:			n += a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-90:			t += i * a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-90:			t += i * a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-86:		for i, a := range hist {
-90:			t += i * a
-91:			n += a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 86:		for i, a := range hist {
 87:			if a == 0 { //gdb-opt=(a,n,t)
 86:		for i, a := range hist {
 87:			if a == 0 { //gdb-opt=(a,n,t)
-86:		for i, a := range hist {
-91:			n += a
-90:			t += i * a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 91:			n += a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 90:			t += i * a
 92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-90:			t += i * a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-86:		for i, a := range hist {
-90:			t += i * a
-91:			n += a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 86:		for i, a := range hist {
 87:			if a == 0 { //gdb-opt=(a,n,t)
-86:		for i, a := range hist {
-91:			n += a
-90:			t += i * a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 91:			n += a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-90:			t += i * a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 90:			t += i * a
 92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
 86:		for i, a := range hist {
-90:			t += i * a
-91:			n += a
-92:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
-86:		for i, a := range hist {
 87:			if a == 0 { //gdb-opt=(a,n,t)
 86:		for i, a := range hist {
 99:	}
diff --git a/src/cmd/compile/internal/ssa/testdata/scopes.dlv-opt.nexts b/src/cmd/compile/internal/ssa/testdata/scopes.dlv-opt.nexts
index 1af55df4a0..3cc2ec5121 100644
--- a/src/cmd/compile/internal/ssa/testdata/scopes.dlv-opt.nexts
+++ b/src/cmd/compile/internal/ssa/testdata/scopes.dlv-opt.nexts
@@ -4,32 +4,17 @@
 24:		y := id(0)
 25:		fmt.Println(x)
 26:		for i := x; i < 3; i++ {
-30:		y = x + y //gdb-dbg=(x,y)//gdb-opt=(x,y)
-26:		for i := x; i < 3; i++ {
-30:		y = x + y //gdb-dbg=(x,y)//gdb-opt=(x,y)
-26:		for i := x; i < 3; i++ {
 27:			x := i * i
 28:			y += id(x) //gdb-dbg=(x,y)//gdb-opt=(x,y)
 26:		for i := x; i < 3; i++ {
-28:			y += id(x) //gdb-dbg=(x,y)//gdb-opt=(x,y)
-30:		y = x + y //gdb-dbg=(x,y)//gdb-opt=(x,y)
-26:		for i := x; i < 3; i++ {
 27:			x := i * i
 28:			y += id(x) //gdb-dbg=(x,y)//gdb-opt=(x,y)
 26:		for i := x; i < 3; i++ {
-28:			y += id(x) //gdb-dbg=(x,y)//gdb-opt=(x,y)
-30:		y = x + y //gdb-dbg=(x,y)//gdb-opt=(x,y)
-26:		for i := x; i < 3; i++ {
 27:			x := i * i
 28:			y += id(x) //gdb-dbg=(x,y)//gdb-opt=(x,y)
 26:		for i := x; i < 3; i++ {
-28:			y += id(x) //gdb-dbg=(x,y)//gdb-opt=(x,y)
-30:		y = x + y //gdb-dbg=(x,y)//gdb-opt=(x,y)
-26:		for i := x; i < 3; i++ {
 31:		fmt.Println(x, y)
 30:		y = x + y //gdb-dbg=(x,y)//gdb-opt=(x,y)
-31:		fmt.Println(x, y)
-22:	func test() {
 33:		for x := 0; x <= 1; x++ { // From delve scopetest.go
 35:			f1(a)
 38:				f2(b)
@@ -49,11 +34,9 @@
 54:				f = id(2)
 56:			for i := 0; i <= 5; i++ {
 58:				if i == f {
-56:			for i := 0; i <= 5; i++ {
 62:				sleepytime()
 56:			for i := 0; i <= 5; i++ {
 58:				if i == f {
-56:			for i := 0; i <= 5; i++ {
 62:				sleepytime()
 56:			for i := 0; i <= 5; i++ {
 58:				if i == f {
