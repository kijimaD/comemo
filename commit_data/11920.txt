commit cc8e12bb52bf5fee147de785ab18c8efda683370
Author: Lai Jiangshan <eag0628@gmail.com>
Date:   Wed Feb 15 13:51:49 2012 +1100

    reflect: fix panic strings
    
    use ':' instead of ';' to keep consistency with the other panic strings
    
    R=golang-dev, dsymonds, r
    CC=golang-dev
    https://golang.org/cl/5666048
---
 src/pkg/reflect/type.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/pkg/reflect/type.go b/src/pkg/reflect/type.go
index f55454b181..53638a4624 100644
--- a/src/pkg/reflect/type.go
+++ b/src/pkg/reflect/type.go
@@ -561,7 +561,7 @@ func (t *commonType) Elem() Type {
 		tt := (*sliceType)(unsafe.Pointer(t))
 		return toType(tt.elem)
 	}
-	panic("reflect; Elem of invalid type")
+	panic("reflect: Elem of invalid type")
 }
 
 func (t *commonType) Field(i int) StructField {
@@ -630,7 +630,7 @@ func (t *commonType) NumField() int {
 
 func (t *commonType) NumIn() int {
 	if t.Kind() != Func {
-		panic("reflect; NumIn of non-func type")
+		panic("reflect: NumIn of non-func type")
 	}
 	tt := (*funcType)(unsafe.Pointer(t))
 	return len(tt.in)
@@ -638,7 +638,7 @@ func (t *commonType) NumIn() int {
 
 func (t *commonType) NumOut() int {
 	if t.Kind() != Func {
-		panic("reflect; NumOut of non-func type")
+		panic("reflect: NumOut of non-func type")
 	}
 	tt := (*funcType)(unsafe.Pointer(t))
 	return len(tt.out)
