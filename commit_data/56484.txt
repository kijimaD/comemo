commit 18d0e6a14f0de7fe1a32799f3d0982c274b3c091
Author: David Chase <drchase@google.com>
Date:   Tue Apr 2 11:12:44 2024 -0400

    cmd/compile, cmd/internal: fine-grained fiddling with loop alignment
    
    This appears to be useful only on amd64, and was specifically
    benchmarked on Apple Silicon and did not produce any benefit there.
    This CL adds the assembly instruction `PCALIGNMAX align,amount`
    which aligns to `align` if that can be achieved with `amount`
    or fewer bytes of padding. (0 means never, but will align the
    enclosing function.)
    
    Specifically, if low-order-address-bits + amount are
    greater than or equal to align; thus, `PCALIGNMAX 64,63` is
    the same as `PCALIGN 64` and `PCALIGNMAX 64,0` will never
    emit any alignment, but will still cause the function itself
    to be aligned to (at least) 64 bytes.
    
    Change-Id: Id51a056f1672f8095e8f755e01f72836c9686aa3
    Reviewed-on: https://go-review.googlesource.com/c/go/+/577935
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Keith Randall <khr@google.com>
    Reviewed-by: Keith Randall <khr@golang.org>

 src/cmd/compile/internal/base/debug.go     |  1 +
 src/cmd/compile/internal/base/flag.go      |  1 +
 src/cmd/compile/internal/gc/compile.go     |  5 +-
 src/cmd/compile/internal/gc/main.go        |  2 +-
 src/cmd/compile/internal/inline/inl.go     | 90 +++++++++++++++++++-----------
 src/cmd/compile/internal/ssa/block.go      | 19 ++++++-
 src/cmd/compile/internal/ssa/func.go       |  1 +
 src/cmd/compile/internal/ssa/looprotate.go | 13 ++++-
 src/cmd/compile/internal/ssagen/pgen.go    |  6 +-
 src/cmd/compile/internal/ssagen/ssa.go     | 43 +++++++++++++-
 src/cmd/internal/obj/arm64/asm7.go         | 27 ++++-----
 src/cmd/internal/obj/link.go               |  1 +
 src/cmd/internal/obj/util.go               | 61 ++++++++++++++++++++
 src/cmd/internal/obj/x86/asm6.go           | 30 ++++------
 14 files changed, 221 insertions(+), 79 deletions(-)
