commit 9e8d136888f269a6ff8060e44e8a50e4f50474be
Author: Ian Lance Taylor <iant@golang.org>
Date:   Wed Nov 18 12:48:48 2009 -0800

    On 32-bit x86, one should configure with --with-arch=.
    
    R=r
    https://golang.org/cl/156080
---
 doc/gccgo_install.html | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/doc/gccgo_install.html b/doc/gccgo_install.html
index 27d93e8bc7..587e4dd8fc 100644
--- a/doc/gccgo_install.html
+++ b/doc/gccgo_install.html
@@ -31,11 +31,16 @@ repository: <code>svn://gcc.gnu.org/svn/gcc/branches/gccgo</code>.
 
 <p>
 Building <code>gccgo</code> is just like building <code>gcc</code>
-with one additional option.  See
+with one or two additional options.  See
 the <a href="http://gcc.gnu.org/install/">instructions on the gcc web
 site</a>.  When you run <code>configure</code>, add the
-option <code>--enable-languages=c,c++,go</code> (along with other languages you
-may want to build).
+option <code>--enable-languages=c,c++,go</code> (along with other
+languages you may want to build).  If you are targeting a 32-bit x86,
+then you will want to build <code>gccgo</code> to default to
+supporting locked compare and exchange instructions; do this by also
+using the <code>configure</code> option <code>--with-arch=i586</code>
+(or a newer architecture, depending on where you need your programs to
+run).
 </p>
 
 <p>
