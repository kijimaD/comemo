commit 801a9d9a0c32f0a8db43f145e71b53f11a02b7e2
Author: Russ Cox <rsc@golang.org>
Date:   Tue Mar 10 13:31:15 2020 -0400

    test/codegen: mention in README that tests only run on Linux without -all_codegen
    
    This took me a while to figure out. The relevant code is in
    test/run.go (note the "linux" hard-coded strings):
    
            var arch, subarch, os string
            switch {
            case archspec[2] != "": // 3 components: "linux/386/sse2"
                    os, arch, subarch = archspec[0], archspec[1][1:], archspec[2][1:]
            case archspec[1] != "": // 2 components: "386/sse2"
                    os, arch, subarch = "linux", archspec[0], archspec[1][1:]
            default: // 1 component: "386"
                    os, arch, subarch = "linux", archspec[0], ""
                    if arch == "wasm" {
                            os = "js"
                    }
            }
    
    Change-Id: I92ba280025d2072e17532a5e43cf1d676789c167
    Reviewed-on: https://go-review.googlesource.com/c/go/+/222819
    Reviewed-by: Keith Randall <khr@golang.org>
---
 test/codegen/README | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/test/codegen/README b/test/codegen/README
index d6b8cf5b32..b803fe585f 100644
--- a/test/codegen/README
+++ b/test/codegen/README
@@ -16,8 +16,10 @@ step of the top-level test/run.go suite, called "asmcheck".
 
 The codegen harness is part of the all.bash test suite, but for
 performance reasons only the codegen tests for the host machine's
-GOARCH are enabled by default. To perform comprehensive tests for all
-the supported architectures, one can run the following command
+GOARCH are enabled by default, and only on GOOS=linux.
+
+To perform comprehensive tests for all the supported architectures
+(even on a non-Linux system), one can run the following command
 
   $ ../bin/go run run.go -all_codegen -v codegen
 
