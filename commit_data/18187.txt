commit affab3f3128558dd808247f01abfee4b2bfee712
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Tue Jan 7 10:40:56 2014 -0800

    net/http: fix data race when sharing request body between client and server
    
    A server Handler (e.g. a proxy) can receive a Request, and
    then turn around and give a copy of that Request.Body out to
    the Transport. So then two goroutines own that Request.Body
    (the server and the http client), and both think they can
    close it on failure.  Therefore, all incoming server requests
    bodies (always *http.body from transfer.go) need to be
    thread-safe.
    
    Fixes #6995
    
    R=golang-codereviews, r
    CC=golang-codereviews
    https://golang.org/cl/46570043

 src/pkg/net/http/response_test.go |  7 +++--
 src/pkg/net/http/serve_test.go    | 58 +++++++++++++++++++++++++++++++++++++++
 src/pkg/net/http/transfer.go      | 41 +++++++++++++++++++++------
 src/pkg/net/http/transfer_test.go |  6 ++--
 4 files changed, 99 insertions(+), 13 deletions(-)
