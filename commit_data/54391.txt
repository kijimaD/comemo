commit 4a0ce46917ea51a677fffe203458af4a3224f67c
Author: Robert Findley <rfindley@google.com>
Date:   Thu Oct 13 10:24:19 2022 -0400

    go/types: remove mode argument from the pkgFiles helper
    
    This mode is now always 0. Remove the unnecessary argument to better
    align with types2.
    
    Change-Id: Ib59196a9dfc26fd66ae51381eabc760c39ad9ede
    Reviewed-on: https://go-review.googlesource.com/c/go/+/442775
    Run-TryBot: Robert Findley <rfindley@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Robert Griesemer <gri@google.com>
---
 src/go/types/errorcalls_test.go | 2 +-
 src/go/types/lookup_test.go     | 2 +-
 src/go/types/self_test.go       | 8 ++++----
 3 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/go/types/errorcalls_test.go b/src/go/types/errorcalls_test.go
index e4164d4bea..6d6bd6011f 100644
--- a/src/go/types/errorcalls_test.go
+++ b/src/go/types/errorcalls_test.go
@@ -16,7 +16,7 @@ const errorfMinArgCount = 4
 // errorfMinArgCount arguments (otherwise we should use check.error).
 func TestErrorCalls(t *testing.T) {
 	fset := token.NewFileSet()
-	files, err := pkgFiles(fset, ".", 0)
+	files, err := pkgFiles(fset, ".")
 	if err != nil {
 		t.Fatal(err)
 	}
diff --git a/src/go/types/lookup_test.go b/src/go/types/lookup_test.go
index cd5e3fb13d..d3ca58b9fa 100644
--- a/src/go/types/lookup_test.go
+++ b/src/go/types/lookup_test.go
@@ -22,7 +22,7 @@ func BenchmarkLookupFieldOrMethod(b *testing.B) {
 	path := filepath.Join(runtime.GOROOT(), "src", "net", "http")
 
 	fset := token.NewFileSet()
-	files, err := pkgFiles(fset, path, 0)
+	files, err := pkgFiles(fset, path)
 	if err != nil {
 		b.Fatal(err)
 	}
diff --git a/src/go/types/self_test.go b/src/go/types/self_test.go
index a1af85f27b..7a1e770830 100644
--- a/src/go/types/self_test.go
+++ b/src/go/types/self_test.go
@@ -19,7 +19,7 @@ import (
 
 func TestSelf(t *testing.T) {
 	fset := token.NewFileSet()
-	files, err := pkgFiles(fset, ".", 0)
+	files, err := pkgFiles(fset, ".")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -61,7 +61,7 @@ func BenchmarkCheck(b *testing.B) {
 
 func runbench(b *testing.B, path string, ignoreFuncBodies, writeInfo bool) {
 	fset := token.NewFileSet()
-	files, err := pkgFiles(fset, path, 0)
+	files, err := pkgFiles(fset, path)
 	if err != nil {
 		b.Fatal(err)
 	}
@@ -98,7 +98,7 @@ func runbench(b *testing.B, path string, ignoreFuncBodies, writeInfo bool) {
 	b.ReportMetric(float64(lines)*float64(b.N)/time.Since(start).Seconds(), "lines/s")
 }
 
-func pkgFiles(fset *token.FileSet, path string, mode parser.Mode) ([]*ast.File, error) {
+func pkgFiles(fset *token.FileSet, path string) ([]*ast.File, error) {
 	filenames, err := pkgFilenames(path) // from stdlib_test.go
 	if err != nil {
 		return nil, err
@@ -106,7 +106,7 @@ func pkgFiles(fset *token.FileSet, path string, mode parser.Mode) ([]*ast.File,
 
 	var files []*ast.File
 	for _, filename := range filenames {
-		file, err := parser.ParseFile(fset, filename, nil, mode)
+		file, err := parser.ParseFile(fset, filename, nil, 0)
 		if err != nil {
 			return nil, err
 		}
