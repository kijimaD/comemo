commit 59bdbb3effe3e61f85e336a52323024bafaf44bd
Author: Andy Pan <panjf2000@gmail.com>
Date:   Sat Aug 27 02:51:11 2022 +0800

    net: add the missing OS Darwin in the comment of sendFile
    
    Change-Id: Ice7e3762d4a1d71e23d619be699697f5c6523cc5
    Reviewed-on: https://go-review.googlesource.com/c/go/+/425879
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Heschi Kreinick <heschi@google.com>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Run-TryBot: Ian Lance Taylor <iant@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
---
 src/net/sendfile_unix_alt.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/net/sendfile_unix_alt.go b/src/net/sendfile_unix_alt.go
index f99af92bc8..b86771721e 100644
--- a/src/net/sendfile_unix_alt.go
+++ b/src/net/sendfile_unix_alt.go
@@ -20,7 +20,7 @@ import (
 //
 // if handled == false, sendFile performed no work.
 func sendFile(c *netFD, r io.Reader) (written int64, err error, handled bool) {
-	// FreeBSD, DragonFly and Solaris use 0 as the "until EOF" value.
+	// Darwin, FreeBSD, DragonFly and Solaris use 0 as the "until EOF" value.
 	// If you pass in more bytes than the file contains, it will
 	// loop back to the beginning ad nauseam until it's sent
 	// exactly the number of bytes told to. As such, we need to
@@ -48,7 +48,7 @@ func sendFile(c *netFD, r io.Reader) (written int64, err error, handled bool) {
 		remain = fi.Size()
 	}
 
-	// The other quirk with FreeBSD/DragonFly/Solaris's sendfile
+	// The other quirk with Darwin/FreeBSD/DragonFly/Solaris's sendfile
 	// implementation is that it doesn't use the current position
 	// of the file -- if you pass it offset 0, it starts from
 	// offset 0. There's no way to tell it "start from current
