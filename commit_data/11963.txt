commit 7e8a369426e80801eb6fcdfce94f6fc35746ee79
Author: Rob Pike <r@golang.org>
Date:   Wed Feb 15 21:23:58 2012 -0800

    exp/inotify: remove use of _test
    Fixes #2573.
    
    R=golang-dev, dsymonds
    CC=golang-dev
    https://golang.org/cl/5676063
---
 src/pkg/exp/inotify/inotify_linux_test.go | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/src/pkg/exp/inotify/inotify_linux_test.go b/src/pkg/exp/inotify/inotify_linux_test.go
index c2160fc653..d41d66bfac 100644
--- a/src/pkg/exp/inotify/inotify_linux_test.go
+++ b/src/pkg/exp/inotify/inotify_linux_test.go
@@ -7,6 +7,7 @@
 package inotify
 
 import (
+	"io/ioutil"
 	"os"
 	"testing"
 	"time"
@@ -16,16 +17,19 @@ func TestInotifyEvents(t *testing.T) {
 	// Create an inotify watcher instance and initialize it
 	watcher, err := NewWatcher()
 	if err != nil {
-		t.Fatalf("NewWatcher() failed: %s", err)
+		t.Fatalf("NewWatcher failed: %s", err)
 	}
 
-	t.Logf("NEEDS TO BE CONVERTED TO NEW GO TOOL") // TODO
-	return
+	dir, err := ioutil.TempDir("", "inotify")
+	if err != nil {
+		t.Fatalf("TempDir failed: %s", err)
+	}
+	defer os.RemoveAll(dir)
 
 	// Add a watch for "_test"
-	err = watcher.Watch("_test")
+	err = watcher.Watch(dir)
 	if err != nil {
-		t.Fatalf("Watcher.Watch() failed: %s", err)
+		t.Fatalf("Watch failed: %s", err)
 	}
 
 	// Receive errors on the error channel on a separate goroutine
@@ -35,7 +39,7 @@ func TestInotifyEvents(t *testing.T) {
 		}
 	}()
 
-	const testFile string = "_test/TestInotifyEvents.testfile"
+	testFile := dir + "/TestInotifyEvents.testfile"
 
 	// Receive events on the event channel on a separate goroutine
 	eventstream := watcher.Event
@@ -58,7 +62,7 @@ func TestInotifyEvents(t *testing.T) {
 	// This should add at least one event to the inotify event queue
 	_, err = os.OpenFile(testFile, os.O_WRONLY|os.O_CREATE, 0666)
 	if err != nil {
-		t.Fatalf("creating test file failed: %s", err)
+		t.Fatalf("creating test file: %s", err)
 	}
 
 	// We expect this event to be received almost immediately, but let's wait 1 s to be sure
@@ -95,7 +99,7 @@ func TestInotifyClose(t *testing.T) {
 		t.Fatal("double Close() test failed: second Close() call didn't return")
 	}
 
-	err := watcher.Watch("_test")
+	err := watcher.Watch(os.TempDir())
 	if err == nil {
 		t.Fatal("expected error on Watch() after Close(), got nil")
 	}
