commit 46276d6b6b14993b4851b77cf48c67ede3360e31
Author: Austin Clements <austin@google.com>
Date:   Mon Sep 26 18:09:54 2016 -0400

    doc: catch go1.8.txt up on runtime changes
    
    This clarifies some of the titles so they're more "news" friendly and
    less implementation-oriented.
    
    Change-Id: Ied02aa1e6824b04db5d32ecdd58e972515b1f588
    Reviewed-on: https://go-review.googlesource.com/29830
    Reviewed-by: Rick Hudson <rlh@golang.org>
---
 doc/go1.8.txt | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/doc/go1.8.txt b/doc/go1.8.txt
index a571d47339..12d424edac 100644
--- a/doc/go1.8.txt
+++ b/doc/go1.8.txt
@@ -149,10 +149,7 @@ reflect: ignore struct tags when converting structs (CL 30191)
 runtime, runtime/cgo: revert CL 18814; don't drop signal stack in new thread on dragonfly (CL 29971)
 runtime/race: don't crash on invalid PCs (CL 29714)
 runtime: assume 64kB physical pages on ARM (CL 25021)
-runtime: bound scanobject to ~100 Âµs (CL 23540)
-runtime: document MemStats (CL 28972)
 runtime: don't call cgocallback from signal handler (CL 30218)
-runtime: don't hard-code physical page size (CL 25022)
 runtime: fetch physical page size from the OS (CL 25050)
 runtime: fix check for vacuous page boundary rounding (CL 27230)
 runtime: fix map iterator concurrent map check (CL 24749)
@@ -160,6 +157,7 @@ runtime: fix newextram PC passed to race detector (CL 29712)
 runtime: limit the number of map overflow buckets (CL 25049)
 runtime: report GCSys and OtherSys in heap profile (CL 29276)
 runtime: sleep on CLOCK_MONOTONIC in futexsleep1 on freebsd (CL 30154)
+runtime: use correct system page size on all arches (CL 25022)
 runtime: use RtlGenRandom instead of CryptGenRandom (CL 29700)
 sort: add Slice, SliceStable, and SliceIsSorted (CL 27321)
 spec: ignore struct tags when converting structs (CL 24190)
@@ -167,7 +165,7 @@ spec: update language on type switches to match implementations (CL 27356)
 strings, bytes: panic if Repeat overflows or if given a negative count (CL 29954)
 syscall: add bounds checking and error returns to ParseNetlinkMessage (CL 26990)
 syscall: fix Send{msg,msgN}, Recvmsg and control message handling on solaris (CL 30171)
-syscall: make Getpagesize return page size from runtime (CL 25051)
+syscall: make Getpagesize return system-reported page size (CL 25051)
 syscall: validate ParseDirent inputs (CL 23780)
 testing: add Name method to *T and *B (CL 29970)
 testing: respect benchtime on very fast benchmarks (CL 26664)
@@ -225,9 +223,12 @@ math/big: use array instead of slice for deBruijn lookups (CL 26663)
 math: speed up bessel functions on AMD64 (CL 28086)
 reflect: avoid zeroing memory that will be overwritten (CL 28011)
 regexp: reduce mallocs in Regexp.Find* and Regexp.ReplaceAll* (CL 23030)
+runtime: cgo calls are about 100ns faster (CL 29656, CL 30080)
+runtime: defer is now 2X faster (CL 29656)
 runtime: implement getcallersp in Go (CL 29655)
 runtime: improve memmove for amd64 (CL 22515, CL 29590)
 runtime: increase malloc size classes (CL 24493)
+runtime: large objects no longer cause significant goroutine pauses (CL 23540)
 runtime: make append only clear uncopied memory (CL 30192)
 runtime: memclr perf improvements on ppc64x (CL 30373)
 runtime: minor string/rune optimizations (CL 27460)
@@ -241,3 +242,7 @@ strings: use AVX2 for Index if available (CL 22551)
 syscall: avoid convT2I allocs for common Windows error values (CL 28484, CL 28990)
 text/template: improve lexer performance in finding left delimiters (CL 24863)
 unicode/utf8: reduce bounds checks in EncodeRune (CL 28492)
+
+Documentation:
+
+runtime: runtime.MemStats has much more detailed documentation (CL 28972)
