commit 82fc28c0f5a5af9fd18c0c49a65aa6a44ede1aa3
Author: Robert Griesemer <gri@golang.org>
Date:   Mon Mar 12 20:27:27 2012 -0700

    go spec: fix inaccuracy in type identity definition
    
    Pointed out by Steven Blenkinsop (steven099@gmail.com)
    via golang-nuts.
    
    R=r, dsymonds
    CC=golang-dev
    https://golang.org/cl/5783087
---
 doc/go_spec.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index 04b9b244ce..808255a38a 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -1,6 +1,6 @@
 <!--{
 	"Title": "The Go Programming Language Specification",
-	"Subtitle": "Version of March 7, 2012",
+	"Subtitle": "Version of March 12, 2012",
 	"Path": "/ref/spec"
 }-->
 
@@ -1321,7 +1321,7 @@ Two types are either <i>identical</i> or <i>different</i>.
 
 <p>
 Two named types are identical if their type names originate in the same
-type <a href="#Declarations_and_scope">declaration</a>.
+<a href="#Type_declarations">TypeSpec</a>.
 A named and an unnamed type are always different. Two unnamed types are identical
 if the corresponding type literals are identical, that is, if they have the same
 literal structure and corresponding components have identical types. In detail:
