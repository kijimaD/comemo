commit 02cae293cc950edae42a0dff99ce64e7eb296e26
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Thu Apr 14 11:50:00 2011 -0700

    gotest: generate gofmt-compliant code
    
    R=r
    CC=golang-dev
    https://golang.org/cl/4400047
---
 src/cmd/gotest/gotest.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/cmd/gotest/gotest.go b/src/cmd/gotest/gotest.go
index a72f8d41e8..3ff81304b3 100644
--- a/src/cmd/gotest/gotest.go
+++ b/src/cmd/gotest/gotest.go
@@ -378,7 +378,7 @@ func writeTestmainGo() {
 		fmt.Fprintf(b, "import %q\n", "./_xtest_")
 	}
 	fmt.Fprintf(b, "import %q\n", "testing")
-	fmt.Fprintf(b, "import __os__     %q\n", "os")     // rename in case tested package is called os
+	fmt.Fprintf(b, "import __os__ %q\n", "os")         // rename in case tested package is called os
 	fmt.Fprintf(b, "import __regexp__ %q\n", "regexp") // rename in case tested package is called regexp
 	fmt.Fprintln(b)                                    // for gofmt
 
@@ -393,7 +393,7 @@ func writeTestmainGo() {
 	fmt.Fprintln(b)
 
 	// Benchmarks.
-	fmt.Fprintln(b, "var benchmarks = []testing.InternalBenchmark{")
+	fmt.Fprintf(b, "var benchmarks = []testing.InternalBenchmark{")
 	for _, f := range files {
 		for _, bm := range f.benchmarks {
 			fmt.Fprintf(b, "\t{\"%s.%s\", %s.%s},\n", f.pkg, bm, notMain(f.pkg), bm)
