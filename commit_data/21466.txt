commit 805907115352801a54f987fc9079251b478cce3f
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Tue Feb 3 08:58:04 2015 +0300

    runtime: bound defer pools
    
    The unbounded list-based defer pool can grow infinitely.
    This can happen if a goroutine routinely allocates a defer;
    then blocks on one P; and then unblocked, scheduled and
    frees the defer on another P.
    The scenario was reported on golang-nuts list.
    
    We've been here several times. Any unbounded local caches
    are bad and grow to infinite size. This change introduces
    central defer pool; local pools become fixed-size
    with the only purpose of amortizing accesses to the
    central pool.
    
    Change-Id: Iadcfb113ccecf912e1b64afc07926f0de9de2248
    Reviewed-on: https://go-review.googlesource.com/3741
    Reviewed-by: Keith Randall <khr@golang.org>

 src/runtime/mgc0.go     | 27 +++++++++++++++------------
 src/runtime/panic.go    | 40 +++++++++++++++++++++++++++++++++++-----
 src/runtime/proc1.go    | 10 ++++++++++
 src/runtime/runtime2.go |  7 ++++++-
 4 files changed, 66 insertions(+), 18 deletions(-)
