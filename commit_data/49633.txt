commit 5e0f8edbdc071db5cc2d50878df3089477df2b27
Author: Leonard Wang <wangdeyu0907@gmail.com>
Date:   Tue Jul 6 23:39:29 2021 +0800

    cmd/compile: remove useless fcount
    
    Change-Id: Ibc23b43dc9a7fabb27d7991977b283459f3deae3
    Reviewed-on: https://go-review.googlesource.com/c/go/+/333009
    Run-TryBot: Keith Randall <khr@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
---
 src/cmd/compile/internal/noder/noder.go | 2 --
 1 file changed, 2 deletions(-)

diff --git a/src/cmd/compile/internal/noder/noder.go b/src/cmd/compile/internal/noder/noder.go
index 61a7f8aad4..2f18a2f231 100644
--- a/src/cmd/compile/internal/noder/noder.go
+++ b/src/cmd/compile/internal/noder/noder.go
@@ -154,7 +154,6 @@ func LoadPackage(filenames []string) {
 	// Phase 3: Type check function bodies.
 	// Don't use range--typecheck can add closures to Target.Decls.
 	base.Timer.Start("fe", "typecheck", "func")
-	var fcount int64
 	for i := 0; i < len(typecheck.Target.Decls); i++ {
 		if fn, ok := typecheck.Target.Decls[i].(*ir.Func); ok {
 			if base.Flag.W > 1 {
@@ -166,7 +165,6 @@ func LoadPackage(filenames []string) {
 				s := fmt.Sprintf("\nafter typecheck %v", fn)
 				ir.Dump(s, fn)
 			}
-			fcount++
 		}
 	}
 
