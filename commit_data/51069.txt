commit d514411625bdd437c7d1997b92685bb03bfbf2a8
Author: Jeremy Faller <jeremy@golang.org>
Date:   Wed Dec 1 12:44:04 2021 -0500

    doc/go1.18: add information on new pacer.
    
    This is based off Michael's notes.
    
    Updates #47694
    
    Change-Id: I6e7944f85b776e8481829a2fafd177a49557c6ca
    Reviewed-on: https://go-review.googlesource.com/c/go/+/368156
    Trust: Jeremy Faller <jeremy@golang.org>
    Run-TryBot: Jeremy Faller <jeremy@golang.org>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>
---
 doc/go1.18.html | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/doc/go1.18.html b/doc/go1.18.html
index 74d0e0c23e..285b44946e 100644
--- a/doc/go1.18.html
+++ b/doc/go1.18.html
@@ -200,6 +200,21 @@ proposal</a>.
   into Win32 functions that block for extended periods of time.
 </p>
 
+<p><!-- https://github.com/golang/go/issues/44167-->
+  The garbage collector now includes non-heap sources of garbage collector work
+  (e.g., stack scanning) when determining how frequently to run. As a result,
+  garbage collector overhead is more predictable when these sources are
+  significant. For most applications these changes will be negligible; however,
+  some Go applications may now use less memory and spend more time on garbage
+  collection, or vice versa, than before. The intended workaround is to tweak
+  <code>GOGC</code> where necessary.
+</p>
+
+<p>
+  The runtime now returns memory to the operating system more efficiently and has
+  been tuned to work more aggressively as a result.
+</p>
+
 <h2 id="compiler">Compiler</h2>
 
 <p><!-- https://golang.org/issue/40724 -->
