commit bd1bff4e7aa1e417aaa617a7f10b1cff88a6e243
Author: Bryan C. Mills <bcmills@google.com>
Date:   Fri Jan 28 15:54:49 2022 -0500

    internal/testenv: add a test for the GoTool function
    
    GoTool was added in CL 20967, and revised in CL 21292, for #14901.
    
    I don't fully understand what problem the GoTool function was added to
    solve: the discussion on that issue was pretty sparse, but it seems
    like when we run tests of GOROOT packages they always know their own
    location relative to GOROOT (and thus always know where to find the
    'go' tool).
    
    Lacking that understanding, I don't want to change its behavior, but I
    do at least want to verify that it resolves to the real 'go' tool in
    the common case (running 'go test' on a package in GOROOT/src).
    
    For #50892
    For #50893
    Updates #14901
    
    Change-Id: I06d831e6765be631dfc4854d7fddc3d27fc1de34
    Reviewed-on: https://go-review.googlesource.com/c/go/+/381834
    Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>
    Reviewed-by: David Chase <drchase@google.com>
    Auto-Submit: Bryan Mills <bcmills@google.com>
    Run-TryBot: Bryan Mills <bcmills@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
---
 src/internal/testenv/testenv_test.go | 53 ++++++++++++++++++++++++++++++++++++
 1 file changed, 53 insertions(+)

diff --git a/src/internal/testenv/testenv_test.go b/src/internal/testenv/testenv_test.go
new file mode 100644
index 0000000000..ebc27f159a
--- /dev/null
+++ b/src/internal/testenv/testenv_test.go
@@ -0,0 +1,53 @@
+// Copyright 2022 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package testenv_test
+
+import (
+	"internal/testenv"
+	"os"
+	"path/filepath"
+	"runtime"
+	"testing"
+)
+
+func TestGoToolLocation(t *testing.T) {
+	testenv.MustHaveGoBuild(t)
+
+	var exeSuffix string
+	if runtime.GOOS == "windows" {
+		exeSuffix = ".exe"
+	}
+
+	// Tests are defined to run within their package source directory,
+	// and this package's source directory is $GOROOT/src/internal/testenv.
+	// The 'go' command is installed at $GOROOT/bin/go, so if the environment
+	// is correct then testenv.GoTool() should be identical to ../../../bin/go.
+
+	relWant := "../../../bin/go" + exeSuffix
+	absWant, err := filepath.Abs(relWant)
+	if err != nil {
+		t.Fatal(err)
+	}
+
+	wantInfo, err := os.Stat(absWant)
+	if err != nil {
+		t.Fatal(err)
+	}
+	t.Logf("found go tool at %q (%q)", relWant, absWant)
+
+	goTool, err := testenv.GoTool()
+	if err != nil {
+		t.Fatalf("testenv.GoTool(): %v", err)
+	}
+	t.Logf("testenv.GoTool() = %q", goTool)
+
+	gotInfo, err := os.Stat(goTool)
+	if err != nil {
+		t.Fatal(err)
+	}
+	if !os.SameFile(wantInfo, gotInfo) {
+		t.Fatalf("%q is not the same file as %q", absWant, goTool)
+	}
+}
