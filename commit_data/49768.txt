commit 7c648e2acb31363ea128b754503343cf2c82ba6f
Author: Katie Hockman <katie@golang.org>
Date:   Thu Sep 9 11:02:30 2021 -0400

    [dev.fuzz] internal/fuzz: avoid incorrect bytes modification during minimization
    
    During minimization, the "canonical inputs" (vals) are updated
    as viable minimized values are found. Previously, these bytes
    could be changed later during minimization. This patch updates
    the minimization code to revert the bytes back when a candidate
    doesn't pass the minimization checks.
    
    Another approach was in CL 340630 which would make a new allocation
    each time a candidate was attempted. This will get very expensive
    very quickly, as minimization can run several thousand times for every
    new crash and every newly discovered interesting input.
    
    Credit to Steven Johnstone (steven.james.johnstone@gmail.com) for the
    "single_bytes" test which was added to minimize_test.go.
    
    Fixes golang/go#47587
    
    Change-Id: Ibd12f73458ed812bab7d3f1d4118854a54fc4d0a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/348610
    Trust: Katie Hockman <katie@golang.org>
    Trust: Jay Conrod <jayconrod@google.com>
    Run-TryBot: Katie Hockman <katie@golang.org>
    Reviewed-by: Jay Conrod <jayconrod@google.com>

 src/internal/fuzz/minimize.go      | 13 ++++++++-----
 src/internal/fuzz/minimize_test.go | 37 ++++++++++++++++++++++++++++++++++---
 2 files changed, 42 insertions(+), 8 deletions(-)
