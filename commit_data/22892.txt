commit d1eee2cebf47816f53132d86ef6f3850fa22eefd
Author: Srdjan Petrovic <spetrovic@google.com>
Date:   Fri Apr 3 09:48:51 2015 -0700

    runtime: shared library init support for android/arm.
    
    Follows http://golang.org/cl/8454, a similar CL for arm architectures.
    This CL involves android-specific changes, namely, synthesizing
    argv/auxv, as android doesn't provide those to the init functions.
    
    This code is based on crawshaw@ android code in golang.org/x/mobile.
    
    Change-Id: I32364efbb2662e80270a99bd7dfb1d0421b5417d
    Reviewed-on: https://go-review.googlesource.com/8457
    Reviewed-by: David Crawshaw <crawshaw@golang.org>
---
 src/runtime/rt0_android_arm.s | 24 +++++++++++++++++++++---
 src/runtime/rt0_linux_amd64.s |  4 ++--
 src/runtime/rt0_linux_arm.s   |  2 ++
 3 files changed, 25 insertions(+), 5 deletions(-)

diff --git a/src/runtime/rt0_android_arm.s b/src/runtime/rt0_android_arm.s
index ad5cf88baa..85712531d2 100644
--- a/src/runtime/rt0_android_arm.s
+++ b/src/runtime/rt0_android_arm.s
@@ -10,8 +10,26 @@ TEXT _rt0_arm_android(SB),NOSPLIT,$-4
 	MOVW		$_rt0_arm_linux1(SB), R4
 	B		(R4)
 
-// This symbol is called when a shared library is loaded.
+// When building with -buildmode=c-shared, this symbol is called when the shared
+// library is loaded.
 TEXT _rt0_arm_android_lib(SB),NOSPLIT,$0
-	// TODO(crawshaw): initialize runtime.
-	// At the moment this is done in mobile/app/android.c:init_go_runtime
+	MOVW	$1, R0                          // argc
+	MOVW	$_rt0_arm_android_argv(SB), R1  // **argv
+	BL _rt0_arm_linux_lib(SB)
 	RET
+
+DATA _rt0_arm_android_argv+0x00(SB)/4,$_rt0_arm_android_argv0(SB)
+DATA _rt0_arm_android_argv+0x04(SB)/4,$0
+DATA _rt0_arm_android_argv+0x08(SB)/4,$0
+DATA _rt0_arm_android_argv+0x0C(SB)/4,$15      // AT_PLATFORM
+DATA _rt0_arm_android_argv+0x10(SB)/4,$_rt0_arm_android_auxv0(SB)
+DATA _rt0_arm_android_argv+0x14(SB)/4,$16      // AT_HWCAP
+DATA _rt0_arm_android_argv+0x18(SB)/4,$0x2040  // HWCAP_VFP | HWCAP_VFPv3
+DATA _rt0_arm_android_argv+0x1C(SB)/4,$0
+GLOBL _rt0_arm_android_argv(SB),NOPTR,$0x20
+
+DATA _rt0_arm_android_argv0(SB)/8, $"gojni"
+GLOBL _rt0_arm_android_argv0(SB),RODATA,$8
+
+DATA _rt0_arm_android_auxv0(SB)/4, $"v7l"
+GLOBL _rt0_arm_android_auxv0(SB),RODATA,$4
diff --git a/src/runtime/rt0_linux_amd64.s b/src/runtime/rt0_linux_amd64.s
index 0fdb393ee5..9010aba271 100644
--- a/src/runtime/rt0_linux_amd64.s
+++ b/src/runtime/rt0_linux_amd64.s
@@ -10,8 +10,8 @@ TEXT _rt0_amd64_linux(SB),NOSPLIT,$-8
 	MOVQ	$main(SB), AX
 	JMP	AX
 
-// When linking with -shared, this symbol is called when the shared library
-// is loaded.
+// When building with -buildmode=c-shared, this symbol is called when the shared
+// library is loaded.
 TEXT _rt0_amd64_linux_lib(SB),NOSPLIT,$40
 	MOVQ	DI, _rt0_amd64_linux_lib_argc<>(SB)
 	MOVQ	SI, _rt0_amd64_linux_lib_argv<>(SB)
diff --git a/src/runtime/rt0_linux_arm.s b/src/runtime/rt0_linux_arm.s
index cd79619a59..878a6dd194 100644
--- a/src/runtime/rt0_linux_arm.s
+++ b/src/runtime/rt0_linux_arm.s
@@ -10,6 +10,8 @@ TEXT _rt0_arm_linux(SB),NOSPLIT,$-4
 	MOVW	$_rt0_arm_linux1(SB), R4
 	B		(R4)
 
+// When building with -buildmode=c-shared, this symbol is called when the shared
+// library is loaded.
 TEXT _rt0_arm_linux_lib(SB),NOSPLIT,$40
 	// Preserve callee-save registers.  Raspberry Pi's dlopen(), for example,
 	// actually cares that R11 is preserved.
