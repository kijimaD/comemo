commit bb53a5ad43732893da095e82334fb9f0ea912878
Author: Robert Griesemer <gri@golang.org>
Date:   Mon Feb 1 15:39:42 2021 -0800

    [dev.typeparams] cmd/compile/internal/importer: adjust importer to match compiler importer
    
    The compiler chooses the literal value export format by type
    not by constant.Kind. That is, a floating-point constant is
    always exported as a (big) float value, not a (big) rational
    value, even though the internal representation may be that
    of a rational number. (This is a possibility now that the
    compiler also uses the go/constant package.)
    
    Naturally, during import, a floating-point value is read as
    a float and represented as a (big) float in go/constant.
    
    The types2 importer (based on the go/types importer) read
    the floating-point number elements (mantissa, exponent) but
    then constructed the float go/constant value through a series
    of elementary operations, typically leading to a rational,
    but sometimes even an integer number (e.g. for math.MaxFloat64).
    
    There is no problem with that (the value is the same) but if
    we want to impose bitsize limits on overlarge integer values
    we quickly run into trouble with large floats represented as
    integers.
    
    This change matches the code importing float literals with
    the code used by the compiler.
    
    Note: At some point we may want to relax the import/export code
    for constant values and export them by representation rather than
    by type. As is, we lose accuracy since all floating-point point
    values, even the ones internally represented as rational numbers
    end up being exported as floating-point numbers.
    
    Change-Id: Ic751b2046a0fd047f751da3d35cbef0a1b5fea3e
    Reviewed-on: https://go-review.googlesource.com/c/go/+/288632
    Trust: Robert Griesemer <gri@golang.org>
    Reviewed-by: Robert Findley <rfindley@google.com>

 src/cmd/compile/internal/importer/iimport.go | 52 +++++++++++-----------------
 1 file changed, 20 insertions(+), 32 deletions(-)
