commit 54e109ea197cbf1edd78c9d48a76083db0b0deea
Author: Ian Lance Taylor <iant@golang.org>
Date:   Tue Feb 14 09:38:18 2023 -0800

    slices: skip TestGrow allocation test if noopt
    
    Change-Id: Ie444367c6bb16ed78482d1786b546e6daa63444a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/468196
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Run-TryBot: Ian Lance Taylor <iant@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
---
 src/slices/slices_test.go | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/slices/slices_test.go b/src/slices/slices_test.go
index 97030bebbb..80efb34fc8 100644
--- a/src/slices/slices_test.go
+++ b/src/slices/slices_test.go
@@ -6,6 +6,7 @@ package slices
 
 import (
 	"internal/race"
+	"internal/testenv"
 	"math"
 	"strings"
 	"testing"
@@ -455,7 +456,7 @@ func TestGrow(t *testing.T) {
 	}
 	if n := testing.AllocsPerRun(100, func() { Grow(s2, cap(s2)-len(s2)+1) }); n != 1 {
 		errorf := t.Errorf
-		if race.Enabled {
+		if race.Enabled || testenv.OptimizationOff() {
 			errorf = t.Logf // this allocates multiple times in race detector mode
 		}
 		errorf("Grow should allocate once when given insufficient capacity; allocated %v times", n)
