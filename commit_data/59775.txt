commit 734fd7a949e17a0ad379d9db593ce9b0d03703ab
Author: zhangjian <zj.cosmos@gmail.com>
Date:   Sun Apr 21 12:03:35 2024 +0000

    cmd/compile/internal/ssa: fix the description of auxCCop as auxInt
    
    The auxCCop has been modified from aux to auxInt in CL 252517.
    
    Change-Id: I5c472d684c51fd38fd38f61561d1b1644e20bafe
    GitHub-Last-Rev: 78d1cf40f476adbda2f42b929607501b07f0c91c
    GitHub-Pull-Request: golang/go#66950
    Reviewed-on: https://go-review.googlesource.com/c/go/+/580635
    Reviewed-by: Keith Randall <khr@golang.org>
    Reviewed-by: Keith Randall <khr@google.com>
    Auto-Submit: Keith Randall <khr@golang.org>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Joedian Reid <joedian@google.com>
---
 src/cmd/compile/internal/ssa/op.go    | 2 +-
 src/cmd/compile/internal/ssa/value.go | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/cmd/compile/internal/ssa/op.go b/src/cmd/compile/internal/ssa/op.go
index cb151b2f6c..912c5e58d2 100644
--- a/src/cmd/compile/internal/ssa/op.go
+++ b/src/cmd/compile/internal/ssa/op.go
@@ -353,6 +353,7 @@ const (
 	auxFloat32                // auxInt is a float32 (encoded with math.Float64bits)
 	auxFloat64                // auxInt is a float64 (encoded with math.Float64bits)
 	auxFlagConstant           // auxInt is a flagConstant
+	auxCCop                   // auxInt is a ssa.Op that represents a flags-to-bool conversion (e.g. LessThan)
 	auxNameOffsetInt8         // aux is a &struct{Name ir.Name, Offset int64}; auxInt is index in parameter registers array
 	auxString                 // aux is a string
 	auxSym                    // aux is a symbol (a *gc.Node for locals, an *obj.LSym for globals, or nil for none)
@@ -360,7 +361,6 @@ const (
 	auxSymValAndOff           // aux is a symbol, auxInt is a ValAndOff
 	auxTyp                    // aux is a type
 	auxTypSize                // aux is a type, auxInt is a size, must have Aux.(Type).Size() == AuxInt
-	auxCCop                   // aux is a ssa.Op that represents a flags-to-bool conversion (e.g. LessThan)
 	auxCall                   // aux is a *ssa.AuxCall
 	auxCallOff                // aux is a *ssa.AuxCall, AuxInt is int64 param (in+out) size
 
diff --git a/src/cmd/compile/internal/ssa/value.go b/src/cmd/compile/internal/ssa/value.go
index 4eaab40354..a9f4f102af 100644
--- a/src/cmd/compile/internal/ssa/value.go
+++ b/src/cmd/compile/internal/ssa/value.go
@@ -228,7 +228,7 @@ func (v *Value) auxString() string {
 		}
 		return s + fmt.Sprintf(" [%s]", v.AuxValAndOff())
 	case auxCCop:
-		return fmt.Sprintf(" {%s}", Op(v.AuxInt))
+		return fmt.Sprintf(" [%s]", Op(v.AuxInt))
 	case auxS390XCCMask, auxS390XRotateParams:
 		return fmt.Sprintf(" {%v}", v.Aux)
 	case auxFlagConstant:
