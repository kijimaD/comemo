commit 7148478f1b433caa11c8827657ee1bc61f0b1c5d
Author: Rhys Hiltner <rhys@justin.tv>
Date:   Fri Nov 8 10:30:24 2019 -0800

    sync: yield to the waiter when unlocking a starving mutex
    
    When we have already assigned the semaphore ticket to a specific
    waiter, we want to get the waiter running as fast as possible since
    no other G waiting on the semaphore can acquire it optimistically.
    
    The net effect is that, when a sync.Mutex is contended, the code in
    the critical section guarded by the Mutex gets a priority boost.
    
    Fixes #33747
    
    The original work was done in CL 200577 by Carlo Alberto Ferraris. The
    change was reverted in CL 205817 because it broke the linux-arm64-packet
    and solaris-amd64-oraclerel builders.
    
    Change-Id: I76d79b1d63fd206ed1c57fe6900cb7ae9e4d46cb
    Reviewed-on: https://go-review.googlesource.com/c/go/+/206180
    Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>

 src/runtime/export_test.go |  8 ++++
 src/runtime/proc.go        | 15 +++++++
 src/runtime/sema.go        | 21 +++++++++-
 src/runtime/sema_test.go   | 97 ++++++++++++++++++++++++++++++++++++++++++++++
 src/sync/mutex.go          |  3 +-
 5 files changed, 142 insertions(+), 2 deletions(-)
