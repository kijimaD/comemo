commit b8d8c9e79f24dedc3c01e4e26d5a885720c479f0
Author: Isaiah Becker-Mayer <ibeckermayer@gmail.com>
Date:   Mon Aug 29 16:41:44 2022 +0000

    sync: clarify Cond.Wait documentation
    
    The previous wording was unclear and seemingly contradictory.
    
    Change-Id: I0781dc4525948f4e8e5698271362a82387688f81
    GitHub-Last-Rev: c1e032fa9451dd50a69cf572cd80dcdbe6591d2e
    GitHub-Pull-Request: golang/go#53516
    Reviewed-on: https://go-review.googlesource.com/c/go/+/413774
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Dmitri Shuralyov <dmitshur@google.com>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Run-TryBot: Ian Lance Taylor <iant@google.com>
---
 src/sync/cond.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/sync/cond.go b/src/sync/cond.go
index cbf5ba6071..cc927adf58 100644
--- a/src/sync/cond.go
+++ b/src/sync/cond.go
@@ -53,7 +53,7 @@ func NewCond(l Locker) *Cond {
 // Wait locks c.L before returning. Unlike in other systems,
 // Wait cannot return unless awoken by Broadcast or Signal.
 //
-// Because c.L is not locked when Wait first resumes, the caller
+// Because c.L is not locked while Wait is waiting, the caller
 // typically cannot assume that the condition is true when
 // Wait returns. Instead, the caller should Wait in a loop:
 //
