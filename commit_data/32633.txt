commit 08dca4c649ba7f90f209376ba342bd46ef14ebe5
Author: Todd Neal <todd@tneal.org>
Date:   Mon Apr 24 11:20:09 2017 -0400

    cmd/compile: ignore types when considering tuple select for CSE
    
    Fixes #20097
    
    Change-Id: I3c9626ccc8cd0c46a7081ea8650b2ff07a5d4fcd
    Reviewed-on: https://go-review.googlesource.com/41505
    Run-TryBot: Todd Neal <todd@tneal.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/cmd/compile/internal/ssa/cse.go | 10 +++++++---
 test/fixedbugs/issue20097.go        | 18 ++++++++++++++++++
 2 files changed, 25 insertions(+), 3 deletions(-)

diff --git a/src/cmd/compile/internal/ssa/cse.go b/src/cmd/compile/internal/ssa/cse.go
index d852e22d5c..d931d6bf5f 100644
--- a/src/cmd/compile/internal/ssa/cse.go
+++ b/src/cmd/compile/internal/ssa/cse.go
@@ -322,9 +322,13 @@ func cmpVal(v, w *Value, auxIDs auxmap) types.Cmp {
 		// that generate memory.
 		return lt2Cmp(v.ID < w.ID)
 	}
-
-	if tc := v.Type.Compare(w.Type); tc != types.CMPeq {
-		return tc
+	// OpSelect is a pseudo-op. We need to be more agressive
+	// regarding CSE to keep multiple OpSelect's of the same
+	// argument from existing.
+	if v.Op != OpSelect0 && v.Op != OpSelect1 {
+		if tc := v.Type.Compare(w.Type); tc != types.CMPeq {
+			return tc
+		}
 	}
 
 	if v.Aux != w.Aux {
diff --git a/test/fixedbugs/issue20097.go b/test/fixedbugs/issue20097.go
new file mode 100644
index 0000000000..236a1bd40a
--- /dev/null
+++ b/test/fixedbugs/issue20097.go
@@ -0,0 +1,18 @@
+// compile
+
+// Copyright 2017 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Issue 20097: ensure that we CSE multiple Select ops with
+// the same underlying type
+
+package main
+
+type T int64
+
+func f(x, y int64) (int64, T) {
+	a := x / y
+	b := T(x) / T(y)
+	return a, b
+}
