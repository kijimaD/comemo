commit e91876f4406a89eb0b0c07e93a6ae4e4f32d48b6
Author: Roland Shoemaker <roland@golang.org>
Date:   Wed Mar 15 20:53:10 2023 -0700

    internal/fuzz: release lock when reading file fails
    
    When corpusEntryData failed in workerClient.fuzz and
    workerClient.minimize, the shared memory mutex wasn't properly given up,
    which would cause a deadlock when worker.cleanup was called.
    
    This was tickled by #59062, wherein the fuzz cache directory would be
    removed during operation of the fuzzer, causing corpusEntryData to fail
    because the entry files no longer existed.
    
    Updates #51484
    
    Change-Id: Iea284041c20d1581c662bddbbc7e12191771a364
    Reviewed-on: https://go-review.googlesource.com/c/go/+/476815
    Run-TryBot: Roland Shoemaker <roland@golang.org>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Auto-Submit: Roland Shoemaker <roland@golang.org>
    Reviewed-by: Bryan Mills <bcmills@google.com>

 .../go/testdata/script/test_fuzz_err_deadlock.txt  | 50 ++++++++++++++++++++++
 src/internal/fuzz/worker.go                        |  3 +-
 2 files changed, 52 insertions(+), 1 deletion(-)
