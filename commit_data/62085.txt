commit e57769d5ad251a26d7676cd7a63e5332b26a35f0
Author: Jakub Ciolek <jakub@ciolek.dev>
Date:   Tue Jan 7 07:00:24 2025 +0100

    cmd/compile: on AMD64, prefer XOR/AND for (x & 1) == 0 check
    
    It's shorter to encode. Additionally, XOR and AND generally
    have higher throughput than BT/SET*.
    
    compilecmp:
    
    runtime
    runtime.(*sweepClass).split 58 -> 56  (-3.45%)
    runtime.sweepClass.split 14 -> 11  (-21.43%)
    
    runtime [cmd/compile]
    runtime.(*sweepClass).split 58 -> 56  (-3.45%)
    runtime.sweepClass.split 14 -> 11  (-21.43%)
    
    strconv
    strconv.ryuFtoaShortest changed
    
    strconv [cmd/compile]
    strconv.ryuFtoaShortest changed
    
    math/big
    math/big.(*Int).MulRange 255 -> 252  (-1.18%)
    
    testing/quick
    testing/quick.sizedValue changed
    
    internal/fuzz
    internal/fuzz.(*pcgRand).bool 69 -> 70  (+1.45%)
    
    cmd/internal/obj/x86
    cmd/internal/obj/x86.(*AsmBuf).asmevex changed
    
    math/big [cmd/compile]
    math/big.(*Int).MulRange 255 -> 252  (-1.18%)
    
    cmd/internal/obj/x86 [cmd/compile]
    cmd/internal/obj/x86.(*AsmBuf).asmevex changed
    
    net/http
    net/http.(*http2stream).isPushed 11 -> 10  (-9.09%)
    
    cmd/vendor/github.com/google/pprof/internal/binutils
    cmd/vendor/github.com/google/pprof/internal/binutils.(*file).computeBase changed
    
    Change-Id: I9cb2987eb263c85ee4e93d6f8455c91a55273173
    Reviewed-on: https://go-review.googlesource.com/c/go/+/640975
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    Reviewed-by: Keith Randall <khr@golang.org>
    Reviewed-by: Keith Randall <khr@google.com>
    Auto-Submit: Keith Randall <khr@golang.org>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>

 src/cmd/compile/internal/ssa/_gen/AMD64.rules |  2 ++
 src/cmd/compile/internal/ssa/rewriteAMD64.go  | 32 +++++++++++++++++++++++++++
 test/codegen/bool.go                          |  2 ++
 3 files changed, 36 insertions(+)
