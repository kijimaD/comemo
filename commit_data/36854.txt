commit fb5279cc45703d24a37279e6c0d9e0e7fd7228c5
Author: Johan Brandhorst <johan.brandhorst@gmail.com>
Date:   Mon Jun 4 15:03:05 2018 +0000

    net/http: fix build errors on js/wasm target
    
    The in-progress WASM port does not yet have sufficient automatic
    testing performed against it, so these errors slipped through when
    adding the new Fetch API backed http.Roundtripper.
    
    Updates #25506
    
    Change-Id: I84c5832452e3e6067a02d926f67d01aaca66b837
    GitHub-Last-Rev: 064062b5fd256e7fce961a13a8ac00a135f60221
    GitHub-Pull-Request: golang/go#25714
    Reviewed-on: https://go-review.googlesource.com/116076
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/net/http/roundtrip_js.go | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/net/http/roundtrip_js.go b/src/net/http/roundtrip_js.go
index 277fc7ed3b..e99d418da4 100644
--- a/src/net/http/roundtrip_js.go
+++ b/src/net/http/roundtrip_js.go
@@ -12,13 +12,13 @@ import (
 	"io"
 	"io/ioutil"
 	"os"
-	"path"
 	"strconv"
+	"strings"
 	"syscall/js"
 )
 
 // RoundTrip implements the RoundTripper interface using the WHATWG Fetch API.
-func (*Transport) RoundTrip(req *Request) (*Response, error) {
+func (t *Transport) RoundTrip(req *Request) (*Response, error) {
 	if useFakeNetwork() {
 		return t.roundTrip(req)
 	}
@@ -134,10 +134,12 @@ func (*Transport) RoundTrip(req *Request) (*Response, error) {
 	}
 }
 
+var errClosed = errors.New("net/http: reader is closed")
+
 // useFakeNetwork is used to determine whether the request is made
 // by a test and should be made to use the fake in-memory network.
 func useFakeNetwork() bool {
-	return len(os.Args) > 0 && path.Base(os.Args[0]) == "node"
+	return len(os.Args) > 0 && strings.HasSuffix(os.Args[0], ".test")
 }
 
 // streamReader implements an io.ReadCloser wrapper for ReadableStream.
