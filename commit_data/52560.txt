commit 526de61c67add8400d73b28bbed3f3680586c472
Author: Wayne Zuo <wdvxdr@golangcn.org>
Date:   Sun May 8 11:04:34 2022 +0800

    test: add test case for #51840
    
    This issue has been fixed in CL 403837.
    
    Fixes #51840.
    
    Change-Id: I282062bb06278696fe25e9ede333c64539dc964e
    Reviewed-on: https://go-review.googlesource.com/c/go/+/404914
    Run-TryBot: Wayne Zuo <wdvxdr@golangcn.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    Auto-Submit: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: David Chase <drchase@google.com>
---
 test/typeparam/issue51840.go | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/test/typeparam/issue51840.go b/test/typeparam/issue51840.go
new file mode 100644
index 0000000000..19fa3e468b
--- /dev/null
+++ b/test/typeparam/issue51840.go
@@ -0,0 +1,36 @@
+// compile
+
+// Copyright 2022 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package main
+
+type Addr struct {
+	hi uint64
+	lo uint64
+	z  *byte
+}
+
+func EqualMap[M1, M2 ~map[K]V, K, V comparable](m1 M1, m2 M2) bool {
+	for k, v1 := range m1 {
+		if v2, ok := m2[k]; !ok || v1 != v2 {
+			return false
+		}
+	}
+	return true
+}
+
+type Set[T comparable] map[T]struct{}
+
+func NewSet[T comparable](items ...T) Set[T] {
+	return nil
+}
+
+func (s Set[T]) Equals(other Set[T]) bool {
+	return EqualMap(s, other)
+}
+
+func main() {
+	NewSet[Addr](Addr{0, 0, nil})
+}
