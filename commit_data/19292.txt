commit 6f3b84a7575c65aa2f4fd9753c03d0cc03a7638e
Author: Robert Griesemer <gri@golang.org>
Date:   Wed May 7 08:42:08 2014 -0700

    spec: clarify type properties
    
    If the underlying type of a type T is a boolean, numeric,
    or string type, then T is also a boolean, numeric, or
    string type, respectively.
    
    Not a language change.
    
    Fixes #7551.
    
    LGTM=iant, rsc, robert.hencke, r
    R=r, rsc, iant, ken, robert.hencke
    CC=golang-codereviews
    https://golang.org/cl/100130044
---
 doc/go_spec.html | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index e6831e9091..496a7b2c3b 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -1,6 +1,6 @@
 <!--{
 	"Title": "The Go Programming Language Specification",
-	"Subtitle": "Version of March 7, 2014",
+	"Subtitle": "Version of May 7, 2014",
 	"Path": "/ref/spec"
 }-->
 
@@ -1771,9 +1771,9 @@ last non-empty expression list.
 
 <p>
 A type declaration binds an identifier, the <i>type name</i>, to a new type
-that has the same <a href="#Types">underlying type</a> as
-an existing type.  The new type is <a href="#Type_identity">different</a> from
-the existing type.
+that has the same <a href="#Types">underlying type</a> as an existing type,
+and operations defined for the existing type are also defined for the new type.
+The new type is <a href="#Type_identity">different</a> from the existing type.
 </p>
 
 <pre class="ebnf">
