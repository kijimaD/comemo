commit 0358c8957aa6d3de1ad855d95f3ab4334e63b77c
Author: Russ Cox <rsc@golang.org>
Date:   Thu Dec 15 19:32:47 2011 -0500

    io/ioutil: remove another reference to _test
    
    R=golang-dev, bradfitz
    CC=golang-dev
    https://golang.org/cl/5492051
---
 src/pkg/io/ioutil/ioutil_test.go | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/src/pkg/io/ioutil/ioutil_test.go b/src/pkg/io/ioutil/ioutil_test.go
index 63be71cdf9..3e85e3d0c8 100644
--- a/src/pkg/io/ioutil/ioutil_test.go
+++ b/src/pkg/io/ioutil/ioutil_test.go
@@ -70,26 +70,26 @@ func TestReadDir(t *testing.T) {
 		t.Fatalf("ReadDir %s: error expected, none found", dirname)
 	}
 
-	dirname = "."
+	dirname = ".."
 	list, err := ReadDir(dirname)
 	if err != nil {
 		t.Fatalf("ReadDir %s: %v", dirname, err)
 	}
 
-	foundTest := false
-	foundTestDir := false
+	foundFile := false
+	foundSubDir := false
 	for _, dir := range list {
 		switch {
-		case !dir.IsDir() && dir.Name() == "ioutil_test.go":
-			foundTest = true
-		case dir.IsDir() && dir.Name() == "_test":
-			foundTestDir = true
+		case !dir.IsDir() && dir.Name() == "io_test.go":
+			foundFile = true
+		case dir.IsDir() && dir.Name() == "ioutil":
+			foundSubDir = true
 		}
 	}
-	if !foundTest {
-		t.Fatalf("ReadDir %s: test file not found", dirname)
+	if !foundFile {
+		t.Fatalf("ReadDir %s: io_test.go file not found", dirname)
 	}
-	if !foundTestDir {
-		t.Fatalf("ReadDir %s: _test directory not found", dirname)
+	if !foundSubDir {
+		t.Fatalf("ReadDir %s: ioutil directory not found", dirname)
 	}
 }
