commit 77db076129160d50a098958c8e3f3fd5caa6257a
Merge: b77f5e4c85 1a27f048ad
Author: Filippo Valsorda <filippo@golang.org>
Date:   Fri Jun 29 13:16:42 2018 -0400

    [dev.boringcrypto] all: merge master into dev.boringcrypto
    
    Add a couple of skips for slow js/wasm tests.
    
    Change-Id: Ic95256b1d3c6e5e2f0cc536fad51e914d31cda9e

 .github/SUPPORT.md                                 |    2 +-
 api/except.txt                                     |   11 +-
 api/go1.11.txt                                     |  546 +++++++
 doc/code.html                                      |   10 +-
 doc/contribute.html                                |   63 +-
 doc/debugging_with_gdb.html                        |    4 +-
 doc/diagnostics.html                               |    4 +-
 doc/docs.html                                      |    2 +-
 doc/editors.html                                   |    2 +-
 doc/gccgo_contribute.html                          |    6 +-
 doc/gccgo_install.html                             |   10 +-
 doc/go1.11.html                                    |  346 +++++
 doc/go1.2.html                                     |    4 +-
 doc/go1.4.html                                     |   10 +-
 doc/go1.6.html                                     |    2 +-
 doc/go1.7.html                                     |    2 +-
 doc/go_faq.html                                    |   12 +-
 doc/go_spec.html                                   |   10 +-
 doc/install-source.html                            |    8 +-
 doc/install.html                                   |   39 +-
 doc/root.html                                      |    2 +-
 lib/time/update.bash                               |    4 +-
 lib/time/zoneinfo.zip                              |  Bin 364985 -> 365101 bytes
 misc/cgo/test/cgo_test.go                          |    1 +
 misc/cgo/test/issue18146.go                        |    8 +-
 misc/cgo/test/issue23356.go                        |   19 +
 misc/cgo/test/issue23555.go                        |   11 +
 .../cgo/test/issue23555a/a.go                      |   11 +-
 misc/cgo/test/issue23555b/a.go                     |   12 +
 misc/cgo/test/issue23720.go                        |   22 +
 misc/cgo/test/issue9400/gccgo.go                   |    2 +
 misc/cgo/test/issue9400/stubs.go                   |    2 +
 misc/cgo/test/sigprocmask.c                        |   21 +-
 misc/cgo/testplugin/src/issue25756/main.go         |   52 +
 misc/cgo/testplugin/src/issue25756/plugin/c-life.c |   56 +
 misc/cgo/testplugin/src/issue25756/plugin/life.go  |   39 +
 misc/cgo/testplugin/src/issue25756/plugin/life.h   |    7 +
 misc/cgo/testplugin/test.bash                      |   11 +-
 misc/cgo/testsanitizers/tsan_test.go               |    4 +
 misc/cgo/testshared/src/trivial/trivial.go         |    5 +
 misc/wasm/wasm_exec.js                             |  232 ++-
 src/archive/zip/struct.go                          |   10 +-
 src/bufio/scan.go                                  |   19 +-
 src/cmd/asm/internal/arch/arm64.go                 |    3 +-
 src/cmd/asm/internal/asm/testdata/arm64.s          |    2 +
 src/cmd/cgo/doc.go                                 |   25 +
 src/cmd/cgo/main.go                                |    2 +
 src/cmd/cgo/out.go                                 |   22 +-
 src/cmd/compile/README.md                          |    2 +-
 src/cmd/compile/internal/arm64/ssa.go              |   35 +-
 src/cmd/compile/internal/gc/bexport.go             |   16 +-
 src/cmd/compile/internal/gc/bimport.go             |    2 +-
 src/cmd/compile/internal/gc/builtin.go             |    1 +
 src/cmd/compile/internal/gc/builtin/runtime.go     |    1 +
 src/cmd/compile/internal/gc/const.go               |   18 +-
 src/cmd/compile/internal/gc/esc.go                 |   91 +-
 src/cmd/compile/internal/gc/export.go              |    4 +-
 src/cmd/compile/internal/gc/go.go                  |    1 +
 src/cmd/compile/internal/gc/iexport.go             |   16 +-
 src/cmd/compile/internal/gc/iimport.go             |    4 +-
 src/cmd/compile/internal/gc/inl.go                 |    6 +
 src/cmd/compile/internal/gc/main.go                |    6 +-
 src/cmd/compile/internal/gc/noder.go               |    4 +
 src/cmd/compile/internal/gc/racewalk.go            |   27 +-
 src/cmd/compile/internal/gc/select.go              |   10 +-
 src/cmd/compile/internal/gc/ssa.go                 |   52 +-
 src/cmd/compile/internal/gc/swt.go                 |    5 +
 src/cmd/compile/internal/gc/typecheck.go           |   76 +-
 src/cmd/compile/internal/gc/walk.go                |    5 +-
 src/cmd/compile/internal/ssa/compile.go            |    4 +-
 src/cmd/compile/internal/ssa/gen/AMD64Ops.go       |    4 +-
 src/cmd/compile/internal/ssa/gen/ARM.rules         |   10 +-
 src/cmd/compile/internal/ssa/gen/ARM64.rules       |    8 +-
 src/cmd/compile/internal/ssa/gen/ARM64Ops.go       |   19 +-
 src/cmd/compile/internal/ssa/gen/Wasm.rules        |    5 +
 src/cmd/compile/internal/ssa/gen/WasmOps.go        |    2 +-
 src/cmd/compile/internal/ssa/gen/genericOps.go     |    7 +
 src/cmd/compile/internal/ssa/html.go               |  120 +-
 src/cmd/compile/internal/ssa/loopbce.go            |    6 +-
 src/cmd/compile/internal/ssa/opGen.go              |   86 +-
 src/cmd/compile/internal/ssa/rewriteARM.go         |   20 +-
 src/cmd/compile/internal/ssa/rewriteARM64.go       |   66 +-
 src/cmd/compile/internal/ssa/rewriteWasm.go        |   21 +
 src/cmd/compile/internal/ssa/schedule.go           |   22 +-
 src/cmd/compile/internal/types/scope.go            |   13 +-
 src/cmd/compile/internal/wasm/ssa.go               |   16 +-
 src/cmd/cover/cover_test.go                        |   34 +-
 src/cmd/dist/build.go                              |    2 +
 src/cmd/dist/buildtool.go                          |    2 +
 src/cmd/dist/test.go                               |   43 +-
 src/cmd/doc/doc_test.go                            |   20 +-
 src/cmd/doc/main.go                                |   29 +-
 src/cmd/doc/testdata/nested/ignore.go              |    4 +
 src/cmd/doc/testdata/nested/nested/real.go         |    4 +
 src/cmd/go/alldocs.go                              |   11 +-
 src/cmd/go/go_test.go                              |   39 +-
 src/cmd/go/internal/cache/cache.go                 |   15 +
 src/cmd/go/internal/cfg/cfg.go                     |   12 +
 src/cmd/go/internal/dirhash/hash.go                |  103 ++
 src/cmd/go/internal/dirhash/hash_test.go           |  135 ++
 src/cmd/go/internal/envcmd/env.go                  |    3 +
 src/cmd/go/internal/fix/fix.go                     |   11 +
 src/cmd/go/internal/fmtcmd/fmt.go                  |   10 +
 src/cmd/go/internal/generate/generate.go           |   16 +
 src/cmd/go/internal/get/get.go                     |   16 +-
 src/cmd/go/internal/help/help.go                   |    2 +-
 src/cmd/go/internal/help/helpdoc.go                |    1 +
 src/cmd/go/internal/imports/build.go               |  211 +++
 src/cmd/go/internal/imports/read.go                |  249 +++
 src/cmd/go/internal/imports/read_test.go           |  228 +++
 src/cmd/go/internal/imports/scan.go                |   82 +
 src/cmd/go/internal/imports/scan_test.go           |   67 +
 src/cmd/go/internal/imports/tags.go                |   35 +
 src/cmd/go/internal/imports/testdata/import1/x.go  |    3 +
 src/cmd/go/internal/imports/testdata/import1/x1.go |    9 +
 .../internal/imports/testdata/import1/x_darwin.go  |    3 +
 .../internal/imports/testdata/import1/x_windows.go |    3 +
 src/cmd/go/internal/list/list.go                   |    3 +-
 src/cmd/go/internal/load/path.go                   |   16 -
 src/cmd/go/internal/load/pkg.go                    |   98 +-
 src/cmd/go/internal/load/search.go                 |  338 +----
 src/cmd/go/internal/modconv/dep.go                 |   71 +
 src/cmd/go/internal/modconv/glide.go               |   40 +
 src/cmd/go/internal/modconv/glock.go               |   23 +
 src/cmd/go/internal/modconv/godeps.go              |   29 +
 src/cmd/go/internal/modconv/modconv.go             |   25 +
 src/cmd/go/internal/modconv/modconv_test.go        |   69 +
 .../go/internal/modconv/testdata/cockroach.glock   |   41 +
 src/cmd/go/internal/modconv/testdata/cockroach.out |   31 +
 .../internal/modconv/testdata/dockermachine.godeps |  159 ++
 .../go/internal/modconv/testdata/dockermachine.out |   33 +
 .../go/internal/modconv/testdata/dockerman.glide   |   52 +
 src/cmd/go/internal/modconv/testdata/dockerman.out |   16 +
 src/cmd/go/internal/modconv/testdata/govmomi.out   |    5 +
 .../go/internal/modconv/testdata/govmomi.vmanifest |   46 +
 src/cmd/go/internal/modconv/testdata/juju.out      |  106 ++
 src/cmd/go/internal/modconv/testdata/juju.tsv      |  106 ++
 src/cmd/go/internal/modconv/testdata/moby.out      |  105 ++
 src/cmd/go/internal/modconv/testdata/moby.vconf    |  149 ++
 .../go/internal/modconv/testdata/panicparse.out    |    8 +
 .../go/internal/modconv/testdata/panicparse.vyml   |   17 +
 .../go/internal/modconv/testdata/prometheus.out    |  258 ++++
 .../go/internal/modconv/testdata/prometheus.vjson  | 1605 ++++++++++++++++++++
 src/cmd/go/internal/modconv/testdata/upspin.dep    |   57 +
 src/cmd/go/internal/modconv/testdata/upspin.out    |    8 +
 src/cmd/go/internal/modconv/tsv.go                 |   23 +
 src/cmd/go/internal/modconv/vconf.go               |   26 +
 src/cmd/go/internal/modconv/vjson.go               |   28 +
 src/cmd/go/internal/modconv/vmanifest.go           |   28 +
 src/cmd/go/internal/modconv/vyml.go                |   40 +
 src/cmd/go/internal/modfetch/bitbucket/fetch.go    |   22 +
 src/cmd/go/internal/modfetch/codehost/codehost.go  |  187 +++
 src/cmd/go/internal/modfetch/coderepo.go           |  576 +++++++
 src/cmd/go/internal/modfetch/coderepo_test.go      |  688 +++++++++
 src/cmd/go/internal/modfetch/convert.go            |   78 +
 src/cmd/go/internal/modfetch/convert_test.go       |  139 ++
 src/cmd/go/internal/modfetch/domain.go             |  178 +++
 src/cmd/go/internal/modfetch/github/fetch.go       |   24 +
 src/cmd/go/internal/modfetch/gitrepo/fetch.go      |  445 ++++++
 src/cmd/go/internal/modfetch/gitrepo/fetch_test.go |  500 ++++++
 src/cmd/go/internal/modfetch/googlesource/fetch.go |   25 +
 src/cmd/go/internal/modfetch/gopkgin.go            |   22 +
 src/cmd/go/internal/modfetch/noweb.go              |   24 +
 src/cmd/go/internal/modfetch/proxy.go              |  164 ++
 src/cmd/go/internal/modfetch/query.go              |   84 +
 src/cmd/go/internal/modfetch/repo.go               |  137 ++
 src/cmd/go/internal/modfetch/unzip.go              |  100 ++
 src/cmd/go/internal/modfetch/web.go                |   31 +
 src/cmd/go/internal/modfile/gopkgin.go             |   47 +
 src/cmd/go/internal/modfile/print.go               |  164 ++
 src/cmd/go/internal/modfile/read.go                |  699 +++++++++
 src/cmd/go/internal/modfile/read_test.go           |  306 ++++
 src/cmd/go/internal/modfile/rule.go                |  507 +++++++
 src/cmd/go/internal/modfile/testdata/block.golden  |   29 +
 src/cmd/go/internal/modfile/testdata/block.in      |   29 +
 .../go/internal/modfile/testdata/comment.golden    |   10 +
 src/cmd/go/internal/modfile/testdata/comment.in    |    8 +
 src/cmd/go/internal/modfile/testdata/empty.golden  |    0
 src/cmd/go/internal/modfile/testdata/empty.in      |    0
 .../go/internal/modfile/testdata/gopkg.in.golden   |    6 +
 src/cmd/go/internal/modfile/testdata/module.golden |    1 +
 src/cmd/go/internal/modfile/testdata/module.in     |    1 +
 .../go/internal/modfile/testdata/replace.golden    |    5 +
 src/cmd/go/internal/modfile/testdata/replace.in    |    5 +
 .../go/internal/modfile/testdata/replace2.golden   |    8 +
 src/cmd/go/internal/modfile/testdata/replace2.in   |    8 +
 src/cmd/go/internal/modfile/testdata/rule1.golden  |    7 +
 src/cmd/go/internal/modinfo/info.go                |   11 +
 src/cmd/go/internal/module/module.go               |  195 +++
 src/cmd/go/internal/module/module_test.go          |  184 +++
 src/cmd/go/internal/mvs/mvs.go                     |  308 ++++
 src/cmd/go/internal/mvs/mvs_test.go                |  377 +++++
 src/cmd/go/internal/search/search.go               |  423 ++++++
 .../{load/match_test.go => search/search_test.go}  |   10 +-
 src/cmd/go/internal/semver/semver.go               |  351 +++++
 src/cmd/go/internal/semver/semver_test.go          |  123 ++
 src/cmd/go/internal/vet/vetflag.go                 |    2 +-
 src/cmd/go/internal/vgo/build.go                   |  115 ++
 src/cmd/go/internal/vgo/fetch.go                   |  232 +++
 src/cmd/go/internal/vgo/get.go                     |  152 ++
 src/cmd/go/internal/vgo/init.go                    |  411 +++++
 src/cmd/go/internal/vgo/list.go                    |  153 ++
 src/cmd/go/internal/vgo/load.go                    |  575 +++++++
 src/cmd/go/internal/vgo/search.go                  |  196 +++
 src/cmd/go/internal/vgo/vendor.go                  |  156 ++
 src/cmd/go/internal/vgo/verify.go                  |  104 ++
 src/cmd/go/internal/web2/web.go                    |  297 ++++
 src/cmd/go/internal/web2/web_test.go               |   35 +
 src/cmd/go/internal/webtest/test.go                |  314 ++++
 src/cmd/go/internal/work/action.go                 |   31 +-
 src/cmd/go/internal/work/build.go                  |    3 +-
 src/cmd/go/internal/work/buildid.go                |   55 +-
 src/cmd/go/internal/work/exec.go                   |   91 +-
 src/cmd/go/internal/work/init.go                   |   13 +-
 src/cmd/go/testdata/badmod/go.mod                  |    1 +
 src/cmd/go/testdata/badmod/x.go                    |    4 +
 src/cmd/go/testdata/src/vetfail/p1/p1.go           |    2 +
 src/cmd/go/testdata/vendormod/go.mod               |   16 +
 src/cmd/go/testdata/vendormod/v1.go                |    3 +
 src/cmd/go/testdata/vendormod/v2.go                |    5 +
 src/cmd/go/testdata/vendormod/v3.go                |    5 +
 src/cmd/go/testdata/vendormod/w/go.mod             |    1 +
 src/cmd/go/testdata/vendormod/w/w.go               |    1 +
 src/cmd/go/testdata/vendormod/x/go.mod             |    1 +
 src/cmd/go/testdata/vendormod/x/x.go               |    1 +
 src/cmd/go/testdata/vendormod/y/go.mod             |    1 +
 src/cmd/go/testdata/vendormod/y/y.go               |    1 +
 src/cmd/go/testdata/vendormod/z/go.mod             |    1 +
 src/cmd/go/testdata/vendormod/z/z.go               |    1 +
 src/cmd/internal/obj/arm64/a.out.go                |    2 +
 src/cmd/internal/obj/arm64/anames.go               |    2 +
 src/cmd/internal/obj/arm64/asm7.go                 |   12 +-
 src/cmd/internal/obj/ppc64/obj9.go                 |   16 +-
 src/cmd/internal/obj/wasm/a.out.go                 |    3 +
 src/cmd/internal/obj/wasm/anames.go                |    1 +
 src/cmd/internal/obj/wasm/wasmobj.go               |   16 +-
 src/cmd/link/doc.go                                |    4 +-
 src/cmd/link/internal/ld/config.go                 |    7 +
 src/cmd/link/internal/ld/data.go                   |  126 +-
 src/cmd/link/internal/ld/dwarf.go                  |   86 +-
 src/cmd/link/internal/ld/elf.go                    |    2 +-
 src/cmd/link/internal/ld/lib.go                    |   40 +-
 src/cmd/link/internal/ld/link.go                   |    7 +-
 src/cmd/link/internal/ld/macho.go                  |   77 +-
 src/cmd/link/internal/ld/macho_combine_dwarf.go    |  155 +-
 src/cmd/link/internal/ld/main.go                   |    5 +-
 src/cmd/link/internal/ld/pcln.go                   |    7 +-
 src/cmd/link/internal/ld/pe.go                     |   58 +-
 src/cmd/link/internal/ld/symtab.go                 |   38 +-
 src/cmd/link/internal/wasm/asm.go                  |   22 +-
 src/cmd/nm/nm_test.go                              |   22 +
 src/cmd/trace/annotations.go                       |    4 +
 src/cmd/trace/annotations_test.go                  |    6 +
 src/cmd/trace/trace_test.go                        |    2 +
 src/cmd/vet/all/main.go                            |    6 +-
 src/cmd/vet/all/whitelist/darwin_386.txt           |    1 -
 src/cmd/vet/all/whitelist/darwin_arm.txt           |    6 -
 src/cmd/vet/all/whitelist/darwin_arm64.txt         |    2 -
 src/cmd/vet/all/whitelist/linux_ppc64x.txt         |    1 -
 src/cmd/vet/all/whitelist/s390x.txt                |    7 +
 src/cmd/vet/all/whitelist/wasm.txt                 |   28 +
 src/cmd/vet/asmdecl.go                             |    6 +-
 src/cmd/vet/bool.go                                |   25 +-
 src/cmd/vet/buildtag.go                            |   23 +-
 src/cmd/vet/doc.go                                 |   27 +-
 src/cmd/vet/main.go                                |  110 +-
 src/cmd/vet/print.go                               |  375 +++--
 src/cmd/vet/testdata/buildtag/buildtag.go          |    2 +-
 src/cmd/vet/testdata/print.go                      |   71 +-
 src/context/example_test.go                        |    2 +
 src/crypto/aes/aes_gcm.go                          |   15 +-
 src/crypto/aes/cbc_s390x.go                        |    4 +
 src/crypto/aes/cipher.go                           |    7 +
 src/crypto/aes/cipher_amd64.go                     |    7 +
 src/crypto/aes/cipher_arm64.go                     |    7 +
 src/crypto/aes/cipher_ppc64le.go                   |    7 +
 src/crypto/aes/cipher_s390x.go                     |   18 +-
 src/crypto/aes/ctr_s390x.go                        |    9 +-
 src/crypto/aes/gcm_s390x.go                        |   31 +-
 src/crypto/cipher/cbc.go                           |    8 +
 src/crypto/cipher/cfb.go                           |    8 +
 src/crypto/cipher/ctr.go                           |    8 +
 src/crypto/cipher/gcm.go                           |   23 +-
 src/crypto/cipher/ofb.go                           |    8 +
 src/crypto/des/cipher.go                           |   47 +-
 src/crypto/internal/subtle/aliasing.go             |   34 +
 src/crypto/internal/subtle/aliasing_appengine.go   |   37 +
 src/crypto/internal/subtle/aliasing_test.go        |   50 +
 src/crypto/rand/rand.go                            |    4 +-
 src/crypto/rand/rand_js.go                         |    6 +-
 src/crypto/rc4/rc4.go                              |    8 +-
 src/crypto/rc4/rc4_asm.go                          |   10 +-
 src/crypto/rsa/boring_test.go                      |    6 +-
 src/crypto/sha1/sha1block_s390x.go                 |    7 +-
 src/crypto/sha1/sha1block_s390x.s                  |   34 +-
 src/crypto/sha256/sha256block_s390x.go             |    7 +-
 src/crypto/sha256/sha256block_s390x.s              |   34 +-
 src/crypto/sha512/sha512block_s390x.go             |    7 +-
 src/crypto/sha512/sha512block_s390x.s              |   34 +-
 src/crypto/tls/auth.go                             |  108 ++
 src/crypto/tls/auth_test.go                        |  101 ++
 src/crypto/tls/boring_test.go                      |    4 +-
 src/crypto/tls/cipher_suites.go                    |    4 +-
 src/crypto/tls/common.go                           |   15 +-
 src/crypto/tls/handshake_client.go                 |   26 +-
 src/crypto/tls/handshake_client_test.go            |   39 +
 src/crypto/tls/handshake_server.go                 |   59 +-
 src/crypto/tls/key_agreement.go                    |  140 +-
 src/crypto/tls/prf.go                              |   33 +-
 src/crypto/x509/root_darwin.go                     |    4 +-
 src/crypto/x509/root_darwin_test.go                |    5 -
 src/debug/elf/file.go                              |   41 +-
 src/debug/macho/file.go                            |   82 +-
 src/debug/pe/file.go                               |   91 +-
 src/encoding/base32/base32.go                      |   26 +-
 src/encoding/gob/encoder_test.go                   |    2 +-
 src/flag/example_value_test.go                     |   44 +
 src/flag/flag.go                                   |    3 +
 src/go/ast/ast.go                                  |    8 +-
 src/go/build/deps_test.go                          |  124 +-
 src/go/doc/example.go                              |  122 +-
 src/go/doc/example_test.go                         |  114 +-
 src/go/doc/reader.go                               |    8 +-
 .../{issue18063.0.golden => issue22856.0.golden}   |   18 +-
 .../{issue18063.1.golden => issue22856.1.golden}   |   18 +-
 .../{issue18063.2.golden => issue22856.2.golden}   |   18 +-
 .../doc/testdata/{issue18063.go => issue22856.go}  |   12 +-
 src/go/internal/gccgoimporter/ar.go                |  148 ++
 src/go/internal/gccgoimporter/importer.go          |   50 +-
 src/go/internal/gccgoimporter/importer_test.go     |    1 +
 src/go/internal/gccgoimporter/parser.go            |    9 +-
 .../internal/gccgoimporter/testdata/libimportsar.a |  Bin 0 -> 9302 bytes
 src/go/internal/gcimporter/bimport.go              |   29 +-
 src/go/internal/gcimporter/gcimporter.go           |   21 +-
 src/go/internal/gcimporter/gcimporter_test.go      |   12 +
 src/go/internal/gcimporter/iimport.go              |   21 +-
 .../internal/gcimporter/testdata/versions/test.go  |    5 +-
 .../gcimporter/testdata/versions/test_go1.11_0i.a  |  Bin 0 -> 2420 bytes
 .../gcimporter/testdata/versions/test_go1.11_6b.a  |  Bin 0 -> 2426 bytes
 .../testdata/versions/test_go1.11_999b.a           |  Bin 0 -> 2600 bytes
 .../testdata/versions/test_go1.11_999i.a           |  Bin 0 -> 2420 bytes
 src/go/types/sizes.go                              |    3 +-
 src/go/types/type.go                               |   16 +-
 src/go/types/typestring_test.go                    |   26 +-
 src/go/types/universe.go                           |    2 +-
 src/html/template/escape.go                        |    2 +-
 src/internal/bytealg/compare_wasm.s                |   24 +-
 src/internal/bytealg/indexbyte_wasm.s              |   20 +-
 src/internal/cpu/cpu.go                            |   26 +-
 src/internal/cpu/cpu_no_init.go                    |    1 +
 src/internal/cpu/cpu_s390x.go                      |  157 +-
 src/internal/cpu/cpu_s390x.s                       |  122 +-
 src/internal/cpu/cpu_s390x_test.go                 |   63 +
 src/internal/poll/fd_mutex.go                      |   10 +-
 src/internal/poll/fd_mutex_test.go                 |   22 +
 src/internal/poll/fd_unix.go                       |   54 +-
 src/internal/poll/sendfile_windows.go              |   10 +
 src/internal/poll/splice_linux.go                  |   28 +-
 src/internal/syscall/unix/nonblocking_js.go        |    2 +
 .../syscall/windows/registry/zsyscall_windows.go   |    2 +-
 src/internal/syscall/windows/zsyscall_windows.go   |    2 +-
 src/make.bash                                      |    2 +-
 src/math/big/float.go                              |    8 +-
 src/math/big/float_test.go                         |   25 +
 src/math/big/int.go                                |   16 +-
 src/math/big/int_test.go                           |    2 +-
 src/math/example_test.go                           |   24 +
 src/mime/multipart/formdata.go                     |    2 +-
 src/mime/multipart/formdata_test.go                |    7 +-
 src/mime/multipart/multipart.go                    |   14 +-
 src/mime/multipart/multipart_test.go               |    8 +
 src/mime/quotedprintable/reader.go                 |    4 +
 src/mime/quotedprintable/reader_test.go            |    4 +-
 src/mime/type.go                                   |    3 +-
 src/net/cgo_unix.go                                |    2 +-
 src/net/dnsconfig_unix.go                          |    2 +-
 src/net/example_test.go                            |    5 +-
 src/net/fd_unix.go                                 |   42 +-
 src/net/fd_windows.go                              |    2 +-
 src/net/file_test.go                               |   54 +
 src/net/file_unix.go                               |    5 +-
 src/net/hosts.go                                   |    2 +-
 src/net/http/export_test.go                        |    4 +-
 src/net/http/header.go                             |   19 +-
 src/net/http/httptest/recorder.go                  |    6 +-
 src/net/http/httptrace/trace.go                    |   14 +-
 src/net/http/request.go                            |   22 +-
 src/net/http/response.go                           |    4 +-
 src/net/http/roundtrip_js.go                       |   38 +-
 src/net/http/serve_test.go                         |  119 ++
 src/net/http/server.go                             |   78 +-
 src/net/http/sniff.go                              |    2 +
 src/net/http/sniff_test.go                         |    1 +
 src/net/http/transfer.go                           |   17 +-
 src/net/http/transfer_test.go                      |    2 +-
 src/net/http/transport.go                          |   56 +-
 src/net/http/transport_test.go                     |  113 +-
 src/net/ip.go                                      |   60 +-
 src/net/ipsock.go                                  |   28 +-
 src/net/lookup.go                                  |   32 +-
 src/net/lookup_fake.go                             |    6 +
 src/net/lookup_plan9.go                            |    6 +
 src/net/lookup_test.go                             |   83 +
 src/net/lookup_unix.go                             |   25 +
 src/net/lookup_windows.go                          |    6 +
 src/net/net.go                                     |    8 +-
 src/net/net_fake.go                                |    2 +-
 src/net/sendfile_test.go                           |   59 +
 src/net/sendfile_unix_alt.go                       |    6 +
 src/net/splice_test.go                             |   63 +
 src/os/fifo_test.go                                |  112 ++
 src/os/file.go                                     |   15 +-
 src/os/file_unix.go                                |   15 +-
 src/os/path.go                                     |   61 +-
 src/os/pipe_test.go                                |   90 ++
 src/race.bash                                      |    4 +-
 src/reflect/all_test.go                            |   88 +-
 src/reflect/type.go                                |   34 +-
 src/regexp/example_test.go                         |    6 +
 src/regexp/regexp.go                               |    4 +-
 src/runtime/asm_arm.s                              |   71 +-
 src/runtime/asm_arm64.s                            |   34 +-
 src/runtime/asm_ppc64x.s                           |   16 +-
 src/runtime/asm_wasm.s                             |    4 +-
 src/runtime/defs_darwin.go                         |   55 +-
 src/runtime/defs_darwin_386.go                     |   96 +-
 src/runtime/defs_darwin_amd64.go                   |   97 +-
 src/runtime/defs_darwin_arm.go                     |   96 +-
 src/runtime/defs_darwin_arm64.go                   |   96 +-
 src/runtime/iface.go                               |    2 +-
 src/runtime/internal/atomic/bench_test.go          |   20 +
 src/runtime/internal/sys/arch.go                   |    2 +-
 src/runtime/internal/sys/arch_wasm.go              |    2 +-
 src/runtime/lock_futex.go                          |    6 +
 src/runtime/lock_js.go                             |  125 +-
 src/runtime/lock_sema.go                           |    6 +
 src/runtime/map.go                                 |   15 +-
 src/runtime/map_fast32.go                          |    5 +-
 src/runtime/map_fast64.go                          |    5 +-
 src/runtime/map_faststr.go                         |    5 +-
 src/runtime/map_test.go                            |   96 +-
 src/runtime/memclr_386.s                           |    2 +-
 src/runtime/memclr_amd64.s                         |    2 +-
 src/runtime/memmove_386.s                          |    2 +-
 src/runtime/memmove_amd64.s                        |    3 +-
 src/runtime/netpoll_kqueue.go                      |    6 -
 src/runtime/os_darwin.go                           |  359 +----
 src/runtime/os_dragonfly.go                        |    6 +
 src/runtime/os_freebsd.go                          |    6 +
 src/runtime/os_netbsd.go                           |    6 +
 src/runtime/os_openbsd.go                          |    6 +
 src/runtime/panic.go                               |    6 +
 src/runtime/pprof/proto.go                         |   65 +-
 src/runtime/pprof/proto_test.go                    |   76 +
 src/runtime/pprof/testdata/mappingtest/main.go     |  105 ++
 src/runtime/proc.go                                |   14 +
 src/runtime/race.go                                |    1 +
 src/runtime/race/race.go                           |    2 +-
 src/runtime/race_ppc64le.s                         |  568 +++++++
 src/runtime/rt0_darwin_arm64.s                     |   40 +-
 src/runtime/rt0_js_wasm.s                          |   78 +-
 src/runtime/runtime-gdb_test.go                    |    3 +
 src/runtime/runtime-lldb_test.go                   |   14 +-
 src/runtime/runtime2.go                            |    3 +
 src/runtime/stack.go                               |    6 +-
 src/runtime/sys_darwin.go                          |  143 ++
 src/runtime/sys_darwin_386.s                       |  433 ++++--
 src/runtime/sys_darwin_amd64.s                     |  388 ++---
 src/runtime/sys_darwin_arm.s                       |  364 ++---
 src/runtime/sys_darwin_arm64.s                     |  400 +++--
 src/runtime/sys_wasm.s                             |   15 +-
 src/runtime/testdata/testprog/numcpu_freebsd.go    |   13 +-
 src/runtime/tls_ppc64x.s                           |    2 +-
 src/runtime/trace/trace.go                         |    4 +-
 src/runtime/vlrt.go                                |    1 +
 src/strconv/atob.go                                |    2 +-
 src/sync/rwmutex.go                                |    1 -
 src/syscall/asm_darwin_amd64.s                     |    2 +-
 src/syscall/fs_js.go                               |   20 +-
 src/syscall/js/callback.go                         |  147 ++
 src/syscall/js/js.go                               |  233 ++-
 src/syscall/js/js_js.s                             |   42 +-
 src/syscall/js/js_test.go                          |  124 +-
 src/syscall/js/typedarray.go                       |  103 ++
 src/syscall/mkall.sh                               |   30 +
 src/syscall/mkerrors.sh                            |    2 +-
 src/syscall/mksyscall.pl                           |    2 +-
 src/syscall/mksyscall_solaris.pl                   |    2 +-
 src/syscall/mksyscall_windows.go                   |    2 +-
 src/syscall/mksysctl_openbsd.pl                    |    2 +-
 src/syscall/mksysnum_darwin.pl                     |    2 +-
 src/syscall/mksysnum_dragonfly.pl                  |    2 +-
 src/syscall/mksysnum_freebsd.pl                    |    2 +-
 src/syscall/mksysnum_linux.pl                      |    2 +-
 src/syscall/mksysnum_netbsd.pl                     |    2 +-
 src/syscall/mksysnum_openbsd.pl                    |    2 +-
 src/syscall/mksysnum_plan9.sh                      |    2 +-
 src/syscall/net_js.go                              |    7 +
 src/syscall/security_windows.go                    |    4 +-
 src/syscall/syscall_linux.go                       |   27 +-
 src/syscall/syscall_linux_test.go                  |   94 ++
 src/syscall/syscall_windows_test.go                |    6 +
 src/syscall/types_linux.go                         |    1 +
 src/syscall/zerrors_darwin_386.go                  |    2 +-
 src/syscall/zerrors_darwin_amd64.go                |    2 +-
 src/syscall/zerrors_darwin_arm.go                  |    2 +-
 src/syscall/zerrors_darwin_arm64.go                |    2 +-
 src/syscall/zerrors_dragonfly_amd64.go             |    2 +-
 src/syscall/zerrors_freebsd_386.go                 |    2 +-
 src/syscall/zerrors_freebsd_amd64.go               |    2 +-
 src/syscall/zerrors_freebsd_arm.go                 |    2 +-
 src/syscall/zerrors_linux_386.go                   |    2 +-
 src/syscall/zerrors_linux_amd64.go                 |    2 +-
 src/syscall/zerrors_linux_arm.go                   |    2 +-
 src/syscall/zerrors_linux_arm64.go                 |    2 +-
 src/syscall/zerrors_linux_mips.go                  |    2 +-
 src/syscall/zerrors_linux_mips64.go                |    2 +-
 src/syscall/zerrors_linux_mips64le.go              |    2 +-
 src/syscall/zerrors_linux_mipsle.go                |    2 +-
 src/syscall/zerrors_linux_ppc64.go                 |    2 +-
 src/syscall/zerrors_linux_ppc64le.go               |    2 +-
 src/syscall/zerrors_linux_s390x.go                 |    2 +-
 src/syscall/zerrors_netbsd_386.go                  |    2 +-
 src/syscall/zerrors_netbsd_amd64.go                |    2 +-
 src/syscall/zerrors_netbsd_arm.go                  |    2 +-
 src/syscall/zerrors_openbsd_386.go                 |    2 +-
 src/syscall/zerrors_openbsd_amd64.go               |    2 +-
 src/syscall/zerrors_openbsd_arm.go                 |    2 +-
 src/syscall/zerrors_solaris_amd64.go               |    2 +-
 src/syscall/zerrors_windows.go                     |    2 +-
 src/syscall/zsyscall_darwin_386.go                 |    2 +-
 src/syscall/zsyscall_darwin_amd64.go               |    2 +-
 src/syscall/zsyscall_darwin_arm.go                 |    2 +-
 src/syscall/zsyscall_darwin_arm64.go               |    2 +-
 src/syscall/zsyscall_dragonfly_amd64.go            |    2 +-
 src/syscall/zsyscall_freebsd_386.go                |    2 +-
 src/syscall/zsyscall_freebsd_amd64.go              |    2 +-
 src/syscall/zsyscall_freebsd_arm.go                |    2 +-
 src/syscall/zsyscall_linux_386.go                  |   62 +-
 src/syscall/zsyscall_linux_amd64.go                |   62 +-
 src/syscall/zsyscall_linux_arm.go                  |   62 +-
 src/syscall/zsyscall_linux_arm64.go                |   62 +-
 src/syscall/zsyscall_linux_mips.go                 |   78 +-
 src/syscall/zsyscall_linux_mips64.go               |   78 +-
 src/syscall/zsyscall_linux_mips64le.go             |   78 +-
 src/syscall/zsyscall_linux_mipsle.go               |   78 +-
 src/syscall/zsyscall_linux_ppc64.go                |   62 +-
 src/syscall/zsyscall_linux_ppc64le.go              |   62 +-
 src/syscall/zsyscall_linux_s390x.go                |   62 +-
 src/syscall/zsyscall_nacl_386.go                   |    2 +-
 src/syscall/zsyscall_nacl_amd64p32.go              |    2 +-
 src/syscall/zsyscall_nacl_arm.go                   |    2 +-
 src/syscall/zsyscall_netbsd_386.go                 |    2 +-
 src/syscall/zsyscall_netbsd_amd64.go               |    2 +-
 src/syscall/zsyscall_netbsd_arm.go                 |    2 +-
 src/syscall/zsyscall_openbsd_386.go                |    2 +-
 src/syscall/zsyscall_openbsd_amd64.go              |    2 +-
 src/syscall/zsyscall_openbsd_arm.go                |    2 +-
 src/syscall/zsyscall_plan9_386.go                  |    2 +-
 src/syscall/zsyscall_plan9_amd64.go                |    2 +-
 src/syscall/zsyscall_plan9_arm.go                  |    2 +-
 src/syscall/zsyscall_solaris_amd64.go              |    2 +-
 src/syscall/zsyscall_windows.go                    |    2 +-
 src/syscall/zsysctl_openbsd.go                     |    2 +-
 src/syscall/zsysnum_darwin_386.go                  |    2 +-
 src/syscall/zsysnum_darwin_amd64.go                |    2 +-
 src/syscall/zsysnum_darwin_arm.go                  |    2 +-
 src/syscall/zsysnum_darwin_arm64.go                |    2 +-
 src/syscall/zsysnum_dragonfly_amd64.go             |    2 +-
 src/syscall/zsysnum_freebsd_386.go                 |    2 +-
 src/syscall/zsysnum_freebsd_amd64.go               |    2 +-
 src/syscall/zsysnum_freebsd_arm.go                 |    2 +-
 src/syscall/zsysnum_linux_386.go                   |    2 +-
 src/syscall/zsysnum_linux_amd64.go                 |    2 +-
 src/syscall/zsysnum_linux_arm.go                   |    2 +-
 src/syscall/zsysnum_linux_arm64.go                 |    2 +-
 src/syscall/zsysnum_linux_mips.go                  |    2 +-
 src/syscall/zsysnum_linux_mips64.go                |    2 +-
 src/syscall/zsysnum_linux_mips64le.go              |    2 +-
 src/syscall/zsysnum_linux_mipsle.go                |    2 +-
 src/syscall/zsysnum_linux_ppc64.go                 |    2 +-
 src/syscall/zsysnum_linux_ppc64le.go               |    2 +-
 src/syscall/zsysnum_linux_s390x.go                 |    2 +-
 src/syscall/zsysnum_netbsd_386.go                  |    2 +-
 src/syscall/zsysnum_netbsd_amd64.go                |    2 +-
 src/syscall/zsysnum_netbsd_arm.go                  |    2 +-
 src/syscall/zsysnum_openbsd_386.go                 |    2 +-
 src/syscall/zsysnum_openbsd_amd64.go               |    2 +-
 src/syscall/zsysnum_openbsd_arm.go                 |    2 +-
 src/syscall/zsysnum_plan9.go                       |    2 +-
 src/syscall/ztypes_linux_386.go                    |    1 +
 src/syscall/ztypes_linux_amd64.go                  |    1 +
 src/syscall/ztypes_linux_arm.go                    |    1 +
 src/syscall/ztypes_linux_arm64.go                  |    1 +
 src/syscall/ztypes_linux_mips.go                   |    1 +
 src/syscall/ztypes_linux_mips64.go                 |    1 +
 src/syscall/ztypes_linux_mips64le.go               |    1 +
 src/syscall/ztypes_linux_mipsle.go                 |    1 +
 src/syscall/ztypes_linux_ppc64.go                  |    1 +
 src/syscall/ztypes_linux_ppc64le.go                |    1 +
 src/syscall/ztypes_linux_s390x.go                  |    1 +
 src/text/template/exec.go                          |   22 +-
 src/text/template/parse/lex.go                     |    2 +-
 src/text/template/parse/node.go                    |   40 +-
 src/text/template/parse/parse.go                   |    4 +-
 src/time/zoneinfo_abbrs_windows.go                 |    9 +-
 src/unicode/letter.go                              |   26 +-
 src/unicode/letter_test.go                         |   12 +
 test/fixedbugs/issue18640.go                       |   21 +
 test/fixedbugs/issue23823.go                       |   15 +
 test/fixedbugs/issue24651a.go                      |   24 +
 test/fixedbugs/issue24651b.go                      |   24 +
 test/fixedbugs/issue24763.go                       |   21 +
 test/fixedbugs/issue24939.go                       |   21 +
 test/fixedbugs/issue25727.go                       |   21 +
 test/fixedbugs/issue25776.go                       |   99 ++
 test/fixedbugs/issue25958.go                       |   17 +
 test/fixedbugs/issue25966.go                       |   24 +
 test/fixedbugs/issue25984.dir/p.go                 |   15 +
 test/fixedbugs/issue25984.dir/q.go                 |   11 +
 test/fixedbugs/issue25984.go                       |    7 +
 test/fixedbugs/issue25993.go                       |   21 +
 test/fixedbugs/issue26043.go                       |   32 +
 test/fixedbugs/issue26097.go                       |   47 +
 test/fixedbugs/issue26105.go                       |   25 +
 test/fixedbugs/issue26120.go                       |   23 +
 test/strcopy.go                                    |   29 +
 627 files changed, 25379 insertions(+), 4394 deletions(-)

diff --cc src/crypto/aes/cipher.go
index fbd01a8f40,bb93fbb36e..db0ee38b78
--- a/src/crypto/aes/cipher.go
+++ b/src/crypto/aes/cipher.go
@@@ -6,7 -6,7 +6,8 @@@ package ae
  
  import (
  	"crypto/cipher"
 +	"crypto/internal/boring"
+ 	"crypto/internal/subtle"
  	"strconv"
  )
  
diff --cc src/crypto/aes/cipher_amd64.go
index 7efab31065,b12d9b46a2..fd88343cae
--- a/src/crypto/aes/cipher_amd64.go
+++ b/src/crypto/aes/cipher_amd64.go
@@@ -6,7 -6,7 +6,8 @@@ package ae
  
  import (
  	"crypto/cipher"
 +	"crypto/internal/boring"
+ 	"crypto/internal/subtle"
  	"internal/cpu"
  )
  
diff --cc src/crypto/rsa/boring_test.go
index f68dfc9999,0000000000..26fdabb197
mode 100644,000000..100644
--- a/src/crypto/rsa/boring_test.go
+++ b/src/crypto/rsa/boring_test.go
@@@ -1,127 -1,0 +1,127 @@@
 +// Copyright 2017 The Go Authors. All rights reserved.
 +// Use of this source code is governed by a BSD-style
 +// license that can be found in the LICENSE file.
 +
 +// Note: Can run these tests against the non-BoringCrypto
 +// version of the code by using "CGO_ENABLED=0 go test".
 +
 +package rsa
 +
 +import (
 +	"crypto"
 +	"crypto/rand"
 +	"encoding/asn1"
 +	"reflect"
 +	"runtime"
 +	"runtime/debug"
 +	"sync"
 +	"sync/atomic"
 +	"testing"
 +	"unsafe"
 +)
 +
 +func TestBoringASN1Marshal(t *testing.T) {
 +	k, err := GenerateKey(rand.Reader, 128)
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +	// This used to fail, because of the unexported 'boring' field.
 +	// Now the compiler hides it [sic].
 +	_, err = asn1.Marshal(k.PublicKey)
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +}
 +
 +func TestBoringDeepEqual(t *testing.T) {
 +	k, err := GenerateKey(rand.Reader, 128)
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +	k.boring = nil // probably nil already but just in case
 +	k2 := *k
 +	k2.boring = unsafe.Pointer(k) // anything not nil, for this test
 +	if !reflect.DeepEqual(k, &k2) {
 +		// compiler should be hiding the boring field from reflection
 +		t.Fatalf("DeepEqual compared boring fields")
 +	}
 +}
 +
 +func TestBoringVerify(t *testing.T) {
 +	// This changed behavior and broke golang.org/x/crypto/openpgp.
 +	// Go accepts signatures without leading 0 padding, while BoringCrypto does not.
 +	// So the Go wrappers must adapt.
 +	key := &PublicKey{
 +		N: bigFromHex("c4fdf7b40a5477f206e6ee278eaef888ca73bf9128a9eef9f2f1ddb8b7b71a4c07cfa241f028a04edb405e4d916c61d6beabc333813dc7b484d2b3c52ee233c6a79b1eea4e9cc51596ba9cd5ac5aeb9df62d86ea051055b79d03f8a4fa9f38386f5bd17529138f3325d46801514ea9047977e0829ed728e68636802796801be1"),
 +		E: 65537,
 +	}
 +
 +	hash := fromHex("019c5571724fb5d0e47a4260c940e9803ba05a44")
 +	paddedHash := fromHex("3021300906052b0e03021a05000414019c5571724fb5d0e47a4260c940e9803ba05a44")
 +
 +	// signature is one byte shorter than key.N.
 +	sig := fromHex("5edfbeb6a73e7225ad3cc52724e2872e04260d7daf0d693c170d8c4b243b8767bc7785763533febc62ec2600c30603c433c095453ede59ff2fcabeb84ce32e0ed9d5cf15ffcbc816202b64370d4d77c1e9077d74e94a16fb4fa2e5bec23a56d7a73cf275f91691ae1801a976fcde09e981a2f6327ac27ea1fecf3185df0d56")
 +
 +	err := VerifyPKCS1v15(key, 0, paddedHash, sig)
 +	if err != nil {
 +		t.Errorf("raw: %v", err)
 +	}
 +
 +	err = VerifyPKCS1v15(key, crypto.SHA1, hash, sig)
 +	if err != nil {
 +		t.Errorf("sha1: %v", err)
 +	}
 +}
 +
 +func TestBoringGenerateKey(t *testing.T) {
 +	k, err := GenerateKey(rand.Reader, 2048) // 2048 is smallest size BoringCrypto might kick in for
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +
 +	// Non-Boring GenerateKey always sets CRTValues to a non-nil (possibly empty) slice.
 +	if k.Precomputed.CRTValues == nil {
 +		t.Fatalf("GenerateKey: Precomputed.CRTValues = nil")
 +	}
 +}
 +
 +func TestBoringFinalizers(t *testing.T) {
- 	if runtime.GOOS == "nacl" {
- 		// Times out on nacl (without BoringCrypto)
++	if runtime.GOOS == "nacl" || runtime.GOOS == "js" {
++		// Times out on nacl and js/wasm (without BoringCrypto)
 +		// but not clear why - probably consuming rand.Reader too quickly
 +		// and being throttled. Also doesn't really matter.
- 		t.Skip("skipping on nacl")
++		t.Skipf("skipping on %s/%s", runtime.GOOS, runtime.GOARCH)
 +	}
 +
 +	k, err := GenerateKey(rand.Reader, 2048)
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +
 +	// Run test with GOGC=10, to make bug more likely.
 +	// Without the KeepAlives, the loop usually dies after
 +	// about 30 iterations.
 +	defer debug.SetGCPercent(debug.SetGCPercent(10))
 +	for n := 0; n < 200; n++ {
 +		// Clear the underlying BoringCrypto object.
 +		atomic.StorePointer(&k.boring, nil)
 +
 +		// Race to create the underlying BoringCrypto object.
 +		// The ones that lose the race are prime candidates for
 +		// being GC'ed too early if the finalizers are not being
 +		// used correctly.
 +		var wg sync.WaitGroup
 +		for i := 0; i < 10; i++ {
 +			wg.Add(1)
 +			go func() {
 +				defer wg.Done()
 +				sum := make([]byte, 32)
 +				_, err := SignPKCS1v15(rand.Reader, k, crypto.SHA256, sum)
 +				if err != nil {
 +					panic(err) // usually caused by memory corruption, so hard stop
 +				}
 +			}()
 +		}
 +		wg.Wait()
 +	}
 +}
diff --cc src/crypto/tls/boring_test.go
index f31f3f6bc8,0000000000..2ac62a5540
mode 100644,000000..100644
--- a/src/crypto/tls/boring_test.go
+++ b/src/crypto/tls/boring_test.go
@@@ -1,576 -1,0 +1,576 @@@
 +// Copyright 2017 The Go Authors. All rights reserved.
 +// Use of this source code is governed by a BSD-style
 +// license that can be found in the LICENSE file.
 +
 +package tls
 +
 +import (
 +	"crypto/ecdsa"
 +	"crypto/elliptic"
 +	"crypto/internal/boring/fipstls"
 +	"crypto/rand"
 +	"crypto/rsa"
 +	"crypto/x509"
 +	"crypto/x509/pkix"
 +	"fmt"
 +	"math/big"
 +	"net"
 +	"runtime"
 +	"strings"
 +	"testing"
 +	"time"
 +)
 +
 +func TestBoringServerProtocolVersion(t *testing.T) {
 +	test := func(name string, v uint16, msg string) {
 +		t.Run(name, func(t *testing.T) {
 +			serverConfig := testConfig.Clone()
 +			serverConfig.MinVersion = VersionSSL30
 +			clientHello := &clientHelloMsg{
 +				vers:               v,
 +				cipherSuites:       allCipherSuites(),
 +				compressionMethods: []uint8{compressionNone},
 +			}
 +			testClientHelloFailure(t, serverConfig, clientHello, msg)
 +		})
 +	}
 +
 +	test("VersionSSL30", VersionSSL30, "")
 +	test("VersionTLS10", VersionTLS10, "")
 +	test("VersionTLS11", VersionTLS11, "")
 +	test("VersionTLS12", VersionTLS12, "")
 +
 +	fipstls.Force()
 +	defer fipstls.Abandon()
 +	test("VersionSSL30", VersionSSL30, "unsupported, maximum protocol version")
 +	test("VersionTLS10", VersionTLS10, "unsupported, maximum protocol version")
 +	test("VersionTLS11", VersionTLS11, "unsupported, maximum protocol version")
 +	test("VersionTLS12", VersionTLS12, "")
 +}
 +
 +func isBoringCipherSuite(id uint16) bool {
 +	switch id {
 +	case TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,
 +		TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,
 +		TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,
 +		TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,
 +		TLS_RSA_WITH_AES_128_GCM_SHA256,
 +		TLS_RSA_WITH_AES_256_GCM_SHA384:
 +		return true
 +	}
 +	return false
 +}
 +
 +func isBoringCurve(id CurveID) bool {
 +	switch id {
 +	case CurveP256, CurveP384, CurveP521:
 +		return true
 +	}
 +	return false
 +}
 +
 +func isECDSA(id uint16) bool {
 +	for _, suite := range cipherSuites {
 +		if suite.id == id {
 +			return suite.flags&suiteECDSA == suiteECDSA
 +		}
 +	}
 +	panic(fmt.Sprintf("unknown cipher suite %#x", id))
 +}
 +
 +func isBoringSignatureScheme(alg SignatureScheme) bool {
 +	switch alg {
 +	default:
 +		return false
 +	case PKCS1WithSHA256,
 +		ECDSAWithP256AndSHA256,
 +		PKCS1WithSHA384,
 +		ECDSAWithP384AndSHA384,
 +		PKCS1WithSHA512,
 +		ECDSAWithP521AndSHA512:
 +		// ok
 +	}
 +	return true
 +}
 +
 +func TestBoringServerCipherSuites(t *testing.T) {
 +	serverConfig := testConfig.Clone()
 +	serverConfig.CipherSuites = allCipherSuites()
 +	serverConfig.Certificates = make([]Certificate, 1)
 +
 +	for _, id := range allCipherSuites() {
 +		if isECDSA(id) {
 +			serverConfig.Certificates[0].Certificate = [][]byte{testECDSACertificate}
 +			serverConfig.Certificates[0].PrivateKey = testECDSAPrivateKey
 +		} else {
 +			serverConfig.Certificates[0].Certificate = [][]byte{testRSACertificate}
 +			serverConfig.Certificates[0].PrivateKey = testRSAPrivateKey
 +		}
 +		serverConfig.BuildNameToCertificate()
 +		t.Run(fmt.Sprintf("suite=%#x", id), func(t *testing.T) {
 +			clientHello := &clientHelloMsg{
 +				vers:               VersionTLS12,
 +				cipherSuites:       []uint16{id},
 +				compressionMethods: []uint8{compressionNone},
 +				supportedCurves:    defaultCurvePreferences,
 +				supportedPoints:    []uint8{pointFormatUncompressed},
 +			}
 +
 +			testClientHello(t, serverConfig, clientHello)
 +			t.Run("fipstls", func(t *testing.T) {
 +				fipstls.Force()
 +				defer fipstls.Abandon()
 +				msg := ""
 +				if !isBoringCipherSuite(id) {
 +					msg = "no cipher suite supported by both client and server"
 +				}
 +				testClientHelloFailure(t, serverConfig, clientHello, msg)
 +			})
 +		})
 +	}
 +}
 +
 +func TestBoringServerCurves(t *testing.T) {
 +	serverConfig := testConfig.Clone()
 +	serverConfig.Certificates = make([]Certificate, 1)
 +	serverConfig.Certificates[0].Certificate = [][]byte{testECDSACertificate}
 +	serverConfig.Certificates[0].PrivateKey = testECDSAPrivateKey
 +	serverConfig.BuildNameToCertificate()
 +
 +	for _, curveid := range defaultCurvePreferences {
 +		t.Run(fmt.Sprintf("curve=%d", curveid), func(t *testing.T) {
 +			clientHello := &clientHelloMsg{
 +				vers:               VersionTLS12,
 +				cipherSuites:       []uint16{TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256},
 +				compressionMethods: []uint8{compressionNone},
 +				supportedCurves:    []CurveID{curveid},
 +				supportedPoints:    []uint8{pointFormatUncompressed},
 +			}
 +
 +			testClientHello(t, serverConfig, clientHello)
 +
 +			// With fipstls forced, bad curves should be rejected.
 +			t.Run("fipstls", func(t *testing.T) {
 +				fipstls.Force()
 +				defer fipstls.Abandon()
 +				msg := ""
 +				if !isBoringCurve(curveid) {
 +					msg = "no cipher suite supported by both client and server"
 +				}
 +				testClientHelloFailure(t, serverConfig, clientHello, msg)
 +			})
 +		})
 +	}
 +}
 +
 +func boringHandshake(t *testing.T, clientConfig, serverConfig *Config) (clientErr, serverErr error) {
 +	c, s := realNetPipe(t)
 +	client := Client(c, clientConfig)
 +	server := Server(s, serverConfig)
 +	done := make(chan error, 1)
 +	go func() {
 +		done <- client.Handshake()
 +		c.Close()
 +	}()
 +	serverErr = server.Handshake()
 +	s.Close()
 +	clientErr = <-done
 +	return
 +}
 +
 +func TestBoringServerSignatureAndHash(t *testing.T) {
 +	serverConfig := testConfig.Clone()
 +	serverConfig.Certificates = make([]Certificate, 1)
 +
 +	defer func() {
 +		testingOnlyForceClientHelloSignatureAlgorithms = nil
 +	}()
 +
 +	for _, sigHash := range defaultSupportedSignatureAlgorithms {
 +		testingOnlyForceClientHelloSignatureAlgorithms = []SignatureScheme{sigHash}
 +
 +		t.Run(fmt.Sprintf("%v", sigHash), func(t *testing.T) {
 +			if sigHash == PKCS1WithSHA1 || sigHash == PKCS1WithSHA256 || sigHash == PKCS1WithSHA384 || sigHash == PKCS1WithSHA512 {
 +				serverConfig.CipherSuites = []uint16{TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256}
 +				serverConfig.Certificates[0].Certificate = [][]byte{testRSACertificate}
 +				serverConfig.Certificates[0].PrivateKey = testRSAPrivateKey
 +			} else {
 +				serverConfig.CipherSuites = []uint16{TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256}
 +				serverConfig.Certificates = make([]Certificate, 1)
 +				serverConfig.Certificates[0].Certificate = [][]byte{testECDSACertificate}
 +				serverConfig.Certificates[0].PrivateKey = testECDSAPrivateKey
 +			}
 +			serverConfig.BuildNameToCertificate()
 +
 +			clientErr, _ := boringHandshake(t, testConfig, serverConfig)
 +			if clientErr != nil {
 +				t.Fatalf("expected handshake with %v to succeed; err=%v", sigHash, clientErr)
 +			}
 +
 +			// With fipstls forced, bad curves should be rejected.
 +			t.Run("fipstls", func(t *testing.T) {
 +				fipstls.Force()
 +				defer fipstls.Abandon()
 +				clientErr, _ := boringHandshake(t, testConfig, serverConfig)
 +				if isBoringSignatureScheme(sigHash) {
 +					if clientErr != nil {
 +						t.Fatalf("expected handshake with %v to succeed; err=%v", sigHash, clientErr)
 +					}
 +				} else {
 +					if clientErr == nil {
 +						t.Fatalf("expected handshake with %v to fail, but it succeeded", sigHash)
 +					}
 +				}
 +			})
 +		})
 +	}
 +}
 +
 +func TestBoringClientHello(t *testing.T) {
 +	// Test that no matter what we put in the client config,
 +	// the client does not offer non-FIPS configurations.
 +	fipstls.Force()
 +	defer fipstls.Abandon()
 +
 +	c, s := net.Pipe()
 +	defer c.Close()
 +	defer s.Close()
 +
 +	clientConfig := testConfig.Clone()
 +	// All sorts of traps for the client to avoid.
 +	clientConfig.MinVersion = VersionSSL30
 +	clientConfig.CipherSuites = allCipherSuites()
 +	clientConfig.CurvePreferences = defaultCurvePreferences
 +
 +	go Client(c, testConfig).Handshake()
 +	srv := Server(s, testConfig)
 +	msg, err := srv.readHandshake()
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +	hello, ok := msg.(*clientHelloMsg)
 +	if !ok {
 +		t.Fatalf("unexpected message type %T", msg)
 +	}
 +
 +	if hello.vers != VersionTLS12 {
 +		t.Errorf("client vers=%#x, want %#x (TLS 1.2)", hello.vers, VersionTLS12)
 +	}
 +	for _, id := range hello.cipherSuites {
 +		if !isBoringCipherSuite(id) {
 +			t.Errorf("client offered disallowed suite %#x", id)
 +		}
 +	}
 +	for _, id := range hello.supportedCurves {
 +		if !isBoringCurve(id) {
 +			t.Errorf("client offered disallowed curve %d", id)
 +		}
 +	}
 +	for _, sigHash := range hello.supportedSignatureAlgorithms {
 +		if !isBoringSignatureScheme(sigHash) {
 +			t.Errorf("client offered disallowed signature-and-hash %v", sigHash)
 +		}
 +	}
 +}
 +
 +func TestBoringCertAlgs(t *testing.T) {
- 	// NaCl and arm time out generating keys. Nothing in this test is architecture-specific, so just don't bother on those.
- 	if runtime.GOOS == "nacl" || runtime.GOARCH == "arm" {
++	// NaCl, arm and wasm time out generating keys. Nothing in this test is architecture-specific, so just don't bother on those.
++	if runtime.GOOS == "nacl" || runtime.GOARCH == "arm" || runtime.GOOS == "js" {
 +		t.Skipf("skipping on %s/%s because key generation takes too long", runtime.GOOS, runtime.GOARCH)
 +	}
 +
 +	// Set up some roots, intermediate CAs, and leaf certs with various algorithms.
 +	// X_Y is X signed by Y.
 +	R1 := boringCert(t, "R1", boringRSAKey(t, 2048), nil, boringCertCA|boringCertFIPSOK)
 +	R2 := boringCert(t, "R2", boringRSAKey(t, 4096), nil, boringCertCA)
 +
 +	M1_R1 := boringCert(t, "M1_R1", boringECDSAKey(t, elliptic.P256()), R1, boringCertCA|boringCertFIPSOK)
 +	M2_R1 := boringCert(t, "M2_R1", boringECDSAKey(t, elliptic.P224()), R1, boringCertCA)
 +
 +	I_R1 := boringCert(t, "I_R1", boringRSAKey(t, 3072), R1, boringCertCA|boringCertFIPSOK)
 +	I_R2 := boringCert(t, "I_R2", I_R1.key, R2, boringCertCA|boringCertFIPSOK)
 +	I_M1 := boringCert(t, "I_M1", I_R1.key, M1_R1, boringCertCA|boringCertFIPSOK)
 +	I_M2 := boringCert(t, "I_M2", I_R1.key, M2_R1, boringCertCA|boringCertFIPSOK)
 +
 +	L1_I := boringCert(t, "L1_I", boringECDSAKey(t, elliptic.P384()), I_R1, boringCertLeaf|boringCertFIPSOK)
 +	L2_I := boringCert(t, "L2_I", boringRSAKey(t, 1024), I_R1, boringCertLeaf)
 +
 +	// boringCert checked that isBoringCertificate matches the caller's boringCertFIPSOK bit.
 +	// If not, no point in building bigger end-to-end tests.
 +	if t.Failed() {
 +		t.Fatalf("isBoringCertificate failures; not continuing")
 +	}
 +
 +	// client verifying server cert
 +	testServerCert := func(t *testing.T, desc string, pool *x509.CertPool, key interface{}, list [][]byte, ok bool) {
 +		clientConfig := testConfig.Clone()
 +		clientConfig.RootCAs = pool
 +		clientConfig.InsecureSkipVerify = false
 +		clientConfig.ServerName = "example.com"
 +
 +		serverConfig := testConfig.Clone()
 +		serverConfig.Certificates = []Certificate{{Certificate: list, PrivateKey: key}}
 +		serverConfig.BuildNameToCertificate()
 +
 +		clientErr, _ := boringHandshake(t, clientConfig, serverConfig)
 +
 +		if (clientErr == nil) == ok {
 +			if ok {
 +				t.Logf("%s: accept", desc)
 +			} else {
 +				t.Logf("%s: reject", desc)
 +			}
 +		} else {
 +			if ok {
 +				t.Errorf("%s: BAD reject (%v)", desc, clientErr)
 +			} else {
 +				t.Errorf("%s: BAD accept", desc)
 +			}
 +		}
 +	}
 +
 +	// server verifying client cert
 +	testClientCert := func(t *testing.T, desc string, pool *x509.CertPool, key interface{}, list [][]byte, ok bool) {
 +		clientConfig := testConfig.Clone()
 +		clientConfig.ServerName = "example.com"
 +		clientConfig.Certificates = []Certificate{{Certificate: list, PrivateKey: key}}
 +
 +		serverConfig := testConfig.Clone()
 +		serverConfig.ClientCAs = pool
 +		serverConfig.ClientAuth = RequireAndVerifyClientCert
 +
 +		_, serverErr := boringHandshake(t, clientConfig, serverConfig)
 +
 +		if (serverErr == nil) == ok {
 +			if ok {
 +				t.Logf("%s: accept", desc)
 +			} else {
 +				t.Logf("%s: reject", desc)
 +			}
 +		} else {
 +			if ok {
 +				t.Errorf("%s: BAD reject (%v)", desc, serverErr)
 +			} else {
 +				t.Errorf("%s: BAD accept", desc)
 +			}
 +		}
 +	}
 +
 +	// Run simple basic test with known answers before proceeding to
 +	// exhaustive test with computed answers.
 +	r1pool := x509.NewCertPool()
 +	r1pool.AddCert(R1.cert)
 +	testServerCert(t, "basic", r1pool, L2_I.key, [][]byte{L2_I.der, I_R1.der}, true)
 +	testClientCert(t, "basic (client cert)", r1pool, L2_I.key, [][]byte{L2_I.der, I_R1.der}, true)
 +	fipstls.Force()
 +	testServerCert(t, "basic (fips)", r1pool, L2_I.key, [][]byte{L2_I.der, I_R1.der}, false)
 +	testClientCert(t, "basic (fips, client cert)", r1pool, L2_I.key, [][]byte{L2_I.der, I_R1.der}, false)
 +	fipstls.Abandon()
 +
 +	if t.Failed() {
 +		t.Fatal("basic test failed, skipping exhaustive test")
 +	}
 +
 +	if testing.Short() {
 +		t.Logf("basic test passed; skipping exhaustive test in -short mode")
 +		return
 +	}
 +
 +	for l := 1; l <= 2; l++ {
 +		leaf := L1_I
 +		if l == 2 {
 +			leaf = L2_I
 +		}
 +		for i := 0; i < 64; i++ {
 +			reachable := map[string]bool{leaf.parentOrg: true}
 +			reachableFIPS := map[string]bool{leaf.parentOrg: leaf.fipsOK}
 +			list := [][]byte{leaf.der}
 +			listName := leaf.name
 +			addList := func(cond int, c *boringCertificate) {
 +				if cond != 0 {
 +					list = append(list, c.der)
 +					listName += "," + c.name
 +					if reachable[c.org] {
 +						reachable[c.parentOrg] = true
 +					}
 +					if reachableFIPS[c.org] && c.fipsOK {
 +						reachableFIPS[c.parentOrg] = true
 +					}
 +				}
 +			}
 +			addList(i&1, I_R1)
 +			addList(i&2, I_R2)
 +			addList(i&4, I_M1)
 +			addList(i&8, I_M2)
 +			addList(i&16, M1_R1)
 +			addList(i&32, M2_R1)
 +
 +			for r := 1; r <= 3; r++ {
 +				pool := x509.NewCertPool()
 +				rootName := ","
 +				shouldVerify := false
 +				shouldVerifyFIPS := false
 +				addRoot := func(cond int, c *boringCertificate) {
 +					if cond != 0 {
 +						rootName += "," + c.name
 +						pool.AddCert(c.cert)
 +						if reachable[c.org] {
 +							shouldVerify = true
 +						}
 +						if reachableFIPS[c.org] && c.fipsOK {
 +							shouldVerifyFIPS = true
 +						}
 +					}
 +				}
 +				addRoot(r&1, R1)
 +				addRoot(r&2, R2)
 +				rootName = rootName[1:] // strip leading comma
 +				testServerCert(t, listName+"->"+rootName[1:], pool, leaf.key, list, shouldVerify)
 +				testClientCert(t, listName+"->"+rootName[1:]+"(client cert)", pool, leaf.key, list, shouldVerify)
 +				fipstls.Force()
 +				testServerCert(t, listName+"->"+rootName[1:]+" (fips)", pool, leaf.key, list, shouldVerifyFIPS)
 +				testClientCert(t, listName+"->"+rootName[1:]+" (fips, client cert)", pool, leaf.key, list, shouldVerifyFIPS)
 +				fipstls.Abandon()
 +			}
 +		}
 +	}
 +}
 +
 +const (
 +	boringCertCA = iota
 +	boringCertLeaf
 +	boringCertFIPSOK = 0x80
 +)
 +
 +func boringRSAKey(t *testing.T, size int) *rsa.PrivateKey {
 +	k, err := rsa.GenerateKey(rand.Reader, size)
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +	return k
 +}
 +
 +func boringECDSAKey(t *testing.T, curve elliptic.Curve) *ecdsa.PrivateKey {
 +	k, err := ecdsa.GenerateKey(curve, rand.Reader)
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +	return k
 +}
 +
 +type boringCertificate struct {
 +	name      string
 +	org       string
 +	parentOrg string
 +	der       []byte
 +	cert      *x509.Certificate
 +	key       interface{}
 +	fipsOK    bool
 +}
 +
 +func boringCert(t *testing.T, name string, key interface{}, parent *boringCertificate, mode int) *boringCertificate {
 +	org := name
 +	parentOrg := ""
 +	if i := strings.Index(org, "_"); i >= 0 {
 +		org = org[:i]
 +		parentOrg = name[i+1:]
 +	}
 +	tmpl := &x509.Certificate{
 +		SerialNumber: big.NewInt(1),
 +		Subject: pkix.Name{
 +			Organization: []string{org},
 +		},
 +		NotBefore: time.Unix(0, 0),
 +		NotAfter:  time.Unix(0, 0),
 +
 +		KeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,
 +		ExtKeyUsage:           []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth, x509.ExtKeyUsageClientAuth},
 +		BasicConstraintsValid: true,
 +	}
 +	if mode&^boringCertFIPSOK == boringCertLeaf {
 +		tmpl.DNSNames = []string{"example.com"}
 +	} else {
 +		tmpl.IsCA = true
 +		tmpl.KeyUsage |= x509.KeyUsageCertSign
 +	}
 +
 +	var pcert *x509.Certificate
 +	var pkey interface{}
 +	if parent != nil {
 +		pcert = parent.cert
 +		pkey = parent.key
 +	} else {
 +		pcert = tmpl
 +		pkey = key
 +	}
 +
 +	var pub interface{}
 +	var desc string
 +	switch k := key.(type) {
 +	case *rsa.PrivateKey:
 +		pub = &k.PublicKey
 +		desc = fmt.Sprintf("RSA-%d", k.N.BitLen())
 +	case *ecdsa.PrivateKey:
 +		pub = &k.PublicKey
 +		desc = "ECDSA-" + k.Curve.Params().Name
 +	default:
 +		t.Fatalf("invalid key %T", key)
 +	}
 +
 +	der, err := x509.CreateCertificate(rand.Reader, tmpl, pcert, pub, pkey)
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +	cert, err := x509.ParseCertificate(der)
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +
 +	// Tell isBoringCertificate to enforce FIPS restrictions for this check.
 +	fipstls.Force()
 +	defer fipstls.Abandon()
 +
 +	fipsOK := mode&boringCertFIPSOK != 0
 +	if isBoringCertificate(cert) != fipsOK {
 +		t.Errorf("isBoringCertificate(cert with %s key) = %v, want %v", desc, !fipsOK, fipsOK)
 +	}
 +	return &boringCertificate{name, org, parentOrg, der, cert, key, fipsOK}
 +}
 +
 +func boringPool(t *testing.T, list ...*boringCertificate) *x509.CertPool {
 +	pool := x509.NewCertPool()
 +	for _, c := range list {
 +		cert, err := x509.ParseCertificate(c.der)
 +		if err != nil {
 +			t.Fatal(err)
 +		}
 +		pool.AddCert(cert)
 +	}
 +	return pool
 +}
 +
 +func boringList(t *testing.T, list ...*boringCertificate) [][]byte {
 +	var all [][]byte
 +	for _, c := range list {
 +		all = append(all, c.der)
 +	}
 +	return all
 +}
 +
 +// realNetPipe is like net.Pipe but returns an actual network socket pair,
 +// which has buffering that avoids various deadlocks if both sides
 +// try to speak at the same time.
 +func realNetPipe(t *testing.T) (net.Conn, net.Conn) {
 +	l := newLocalListener(t)
 +	defer l.Close()
 +	c, err := net.Dial("tcp", l.Addr().String())
 +	if err != nil {
 +		t.Fatal(err)
 +	}
 +	s, err := l.Accept()
 +	if err != nil {
 +		c.Close()
 +		t.Fatal(err)
 +	}
 +	return c, s
 +}
diff --cc src/crypto/tls/common.go
index a76e4efac0,7c8f0de6e8..9a63eef571
--- a/src/crypto/tls/common.go
+++ b/src/crypto/tls/common.go
@@@ -128,13 -127,15 +128,15 @@@ const 
  	// Rest of these are reserved by the TLS spec
  )
  
- // Signature algorithms for TLS 1.2 (See RFC 5246, section A.4.1)
+ // Signature algorithms (for internal signaling use). Starting at 16 to avoid overlap with
+ // TLS 1.2 codepoints (RFC 5246, section A.4.1), with which these have nothing to do.
  const (
- 	signatureRSA   uint8 = 1
- 	signatureECDSA uint8 = 3
+ 	signaturePKCS1v15 uint8 = iota + 16
+ 	signatureECDSA
+ 	signatureRSAPSS
  )
  
 -// supportedSignatureAlgorithms contains the signature and hash algorithms that
 +// defaultSupportedSignatureAlgorithms contains the signature and hash algorithms that
  // the code advertises as supported in a TLS 1.2 ClientHello and in a TLS 1.2
  // CertificateRequest. The two fields are merged to match with TLS 1.3.
  // Note that in TLS 1.2, the ECDSA algorithms are not constrained to P-256, etc.
diff --cc src/crypto/tls/handshake_server.go
index 5b1aa64166,0d685927b3..c5caab1224
--- a/src/crypto/tls/handshake_server.go
+++ b/src/crypto/tls/handshake_server.go
@@@ -520,59 -519,15 +519,15 @@@ func (hs *serverHandshakeState) doFullH
  		}
  
  		// Determine the signature type.
- 		var signatureAlgorithm SignatureScheme
- 		var sigType uint8
- 		if certVerify.hasSignatureAndHash {
- 			signatureAlgorithm = certVerify.signatureAlgorithm
- 			if !isSupportedSignatureAlgorithm(signatureAlgorithm, supportedSignatureAlgorithms()) {
- 				return errors.New("tls: unsupported hash function for client certificate")
- 			}
- 			sigType = signatureFromSignatureScheme(signatureAlgorithm)
- 		} else {
- 			// Before TLS 1.2 the signature algorithm was implicit
- 			// from the key type, and only one hash per signature
- 			// algorithm was possible. Leave signatureAlgorithm
- 			// unset.
- 			switch pub.(type) {
- 			case *ecdsa.PublicKey:
- 				sigType = signatureECDSA
- 			case *rsa.PublicKey:
- 				sigType = signatureRSA
- 			}
 -		_, sigType, hashFunc, err := pickSignatureAlgorithm(pub, []SignatureScheme{certVerify.signatureAlgorithm}, supportedSignatureAlgorithms, c.vers)
++		_, sigType, hashFunc, err := pickSignatureAlgorithm(pub, []SignatureScheme{certVerify.signatureAlgorithm}, supportedSignatureAlgorithms(), c.vers)
+ 		if err != nil {
+ 			c.sendAlert(alertIllegalParameter)
+ 			return err
  		}
  
- 		switch key := pub.(type) {
- 		case *ecdsa.PublicKey:
- 			if sigType != signatureECDSA {
- 				err = errors.New("tls: bad signature type for client's ECDSA certificate")
- 				break
- 			}
- 			ecdsaSig := new(ecdsaSignature)
- 			if _, err = asn1.Unmarshal(certVerify.signature, ecdsaSig); err != nil {
- 				break
- 			}
- 			if ecdsaSig.R.Sign() <= 0 || ecdsaSig.S.Sign() <= 0 {
- 				err = errors.New("tls: ECDSA signature contained zero or negative values")
- 				break
- 			}
- 			var digest []byte
- 			if digest, _, err = hs.finishedHash.hashForClientCertificate(sigType, signatureAlgorithm, hs.masterSecret); err != nil {
- 				break
- 			}
- 			if !ecdsa.Verify(key, digest, ecdsaSig.R, ecdsaSig.S) {
- 				err = errors.New("tls: ECDSA verification failure")
- 			}
- 		case *rsa.PublicKey:
- 			if sigType != signatureRSA {
- 				err = errors.New("tls: bad signature type for client's RSA certificate")
- 				break
- 			}
- 			var digest []byte
- 			var hashFunc crypto.Hash
- 			if digest, hashFunc, err = hs.finishedHash.hashForClientCertificate(sigType, signatureAlgorithm, hs.masterSecret); err != nil {
- 				break
- 			}
- 			err = rsa.VerifyPKCS1v15(key, hashFunc, digest, certVerify.signature)
+ 		var digest []byte
+ 		if digest, err = hs.finishedHash.hashForClientCertificate(sigType, hashFunc, hs.masterSecret); err == nil {
+ 			err = verifyHandshakeSignature(sigType, pub, hashFunc, digest, certVerify.signature)
  		}
  		if err != nil {
  			c.sendAlert(alertBadCertificate)
diff --cc src/crypto/tls/key_agreement.go
index 5d6dc21c6d,1e77facce0..0754d1b389
--- a/src/crypto/tls/key_agreement.go
+++ b/src/crypto/tls/key_agreement.go
@@@ -247,17 -208,12 +208,12 @@@ NextCandidate
  	serverECDHParams[3] = byte(len(ecdhePublic))
  	copy(serverECDHParams[4:], ecdhePublic)
  
- 	var signatureAlgorithm SignatureScheme
- 
- 	if ka.version >= VersionTLS12 {
- 		var err error
- 		signatureAlgorithm, err = pickTLS12HashForSignature(ka.sigType, clientHello.supportedSignatureAlgorithms)
- 		if err != nil {
- 			return nil, err
- 		}
+ 	priv, ok := cert.PrivateKey.(crypto.Signer)
+ 	if !ok {
+ 		return nil, errors.New("tls: certificate private key does not implement crypto.Signer")
  	}
  
- 	digest, hashFunc, err := hashForServerKeyExchange(ka.sigType, signatureAlgorithm, ka.version, clientHello.random, hello.random, serverECDHParams)
 -	signatureAlgorithm, sigType, hashFunc, err := pickSignatureAlgorithm(priv.Public(), clientHello.supportedSignatureAlgorithms, supportedSignatureAlgorithms, ka.version)
++	signatureAlgorithm, sigType, hashFunc, err := pickSignatureAlgorithm(priv.Public(), clientHello.supportedSignatureAlgorithms, supportedSignatureAlgorithms(), ka.version)
  	if err != nil {
  		return nil, err
  	}
diff --cc src/go/build/deps_test.go
index ff04b9e982,29dbe47d29..08ab218610
--- a/src/go/build/deps_test.go
+++ b/src/go/build/deps_test.go
@@@ -99,34 -99,29 +99,36 @@@ var pkgDeps = map[string][]string
  	// L3 adds reflection and some basic utility packages
  	// and interface definitions, but nothing that makes
  	// system calls.
- 	"crypto":              {"L2", "hash"}, // interfaces
- 	"crypto/cipher":       {"L2", "crypto/subtle"},
- 	"crypto/subtle":       {},
- 	"encoding/base32":     {"L2"},
- 	"encoding/base64":     {"L2", "encoding/binary"},
- 	"encoding/binary":     {"L2", "reflect"},
- 	"hash":                {"L2"}, // interfaces
- 	"hash/adler32":        {"L2", "hash"},
- 	"hash/crc32":          {"L2", "hash"},
- 	"hash/crc64":          {"L2", "hash"},
- 	"hash/fnv":            {"L2", "hash"},
- 	"image":               {"L2", "image/color"}, // interfaces
- 	"image/color":         {"L2"},                // interfaces
- 	"image/color/palette": {"L2", "image/color"},
- 	"reflect":             {"L2"},
- 	"sort":                {"reflect"},
+ 	"crypto":                 {"L2", "hash"}, // interfaces
+ 	"crypto/cipher":          {"L2", "crypto/subtle", "crypto/internal/subtle"},
+ 	"crypto/internal/subtle": {"unsafe", "reflect"}, // reflect behind a appengine tag
+ 	"crypto/subtle":          {},
+ 	"encoding/base32":        {"L2"},
+ 	"encoding/base64":        {"L2", "encoding/binary"},
+ 	"encoding/binary":        {"L2", "reflect"},
+ 	"hash":                   {"L2"}, // interfaces
+ 	"hash/adler32":           {"L2", "hash"},
+ 	"hash/crc32":             {"L2", "hash"},
+ 	"hash/crc64":             {"L2", "hash"},
+ 	"hash/fnv":               {"L2", "hash"},
+ 	"image":                  {"L2", "image/color"}, // interfaces
+ 	"image/color":            {"L2"},                // interfaces
+ 	"image/color/palette":    {"L2", "image/color"},
+ 	"reflect":                {"L2"},
+ 	"sort":                   {"reflect"},
  
 +	"crypto/internal/boring":         {"L2", "C", "crypto", "crypto/cipher", "crypto/internal/boring/sig", "crypto/subtle", "encoding/asn1", "hash", "math/big"},
 +	"crypto/internal/boring/fipstls": {"sync/atomic"},
 +	"crypto/internal/cipherhw":       {"crypto/internal/boring"},
 +	"crypto/tls/fipsonly":            {"crypto/internal/boring/fipstls", "crypto/internal/boring/sig"},
 +
  	"L3": {
  		"L2",
  		"crypto",
  		"crypto/cipher",
 +		"crypto/internal/boring",
 +		"crypto/internal/boring/fipstls",
+ 		"crypto/internal/subtle",
  		"crypto/subtle",
  		"encoding/base32",
  		"encoding/base64",
@@@ -236,49 -231,49 +238,49 @@@
  	"go/types":                  {"L4", "GOPARSER", "container/heap", "go/constant"},
  
  	// One of a kind.
--	"archive/tar":              {"L4", "OS", "syscall", "os/user"},
--	"archive/zip":              {"L4", "OS", "compress/flate"},
--	"container/heap":           {"sort"},
--	"compress/bzip2":           {"L4"},
--	"compress/flate":           {"L4"},
--	"compress/gzip":            {"L4", "compress/flate"},
--	"compress/lzw":             {"L4"},
--	"compress/zlib":            {"L4", "compress/flate"},
--	"context":                  {"errors", "fmt", "reflect", "sync", "time"},
--	"database/sql":             {"L4", "container/list", "context", "database/sql/driver", "database/sql/internal"},
--	"database/sql/driver":      {"L4", "context", "time", "database/sql/internal"},
--	"debug/dwarf":              {"L4"},
--	"debug/elf":                {"L4", "OS", "debug/dwarf", "compress/zlib"},
--	"debug/gosym":              {"L4"},
- 	"debug/macho":              {"L4", "OS", "debug/dwarf"},
- 	"debug/pe":                 {"L4", "OS", "debug/dwarf"},
 -	"debug/macho":              {"L4", "OS", "debug/dwarf", "compress/zlib"},
 -	"debug/pe":                 {"L4", "OS", "debug/dwarf", "compress/zlib"},
--	"debug/plan9obj":           {"L4", "OS"},
--	"encoding":                 {"L4"},
--	"encoding/ascii85":         {"L4"},
--	"encoding/asn1":            {"L4", "math/big"},
--	"encoding/csv":             {"L4"},
--	"encoding/gob":             {"L4", "OS", "encoding"},
--	"encoding/hex":             {"L4"},
--	"encoding/json":            {"L4", "encoding"},
--	"encoding/pem":             {"L4"},
--	"encoding/xml":             {"L4", "encoding"},
--	"flag":                     {"L4", "OS"},
--	"go/build":                 {"L4", "OS", "GOPARSER"},
--	"html":                     {"L4"},
--	"image/draw":               {"L4", "image/internal/imageutil"},
--	"image/gif":                {"L4", "compress/lzw", "image/color/palette", "image/draw"},
--	"image/internal/imageutil": {"L4"},
--	"image/jpeg":               {"L4", "image/internal/imageutil"},
--	"image/png":                {"L4", "compress/zlib"},
--	"index/suffixarray":        {"L4", "regexp"},
--	"internal/singleflight":    {"sync"},
--	"internal/trace":           {"L4", "OS"},
--	"math/big":                 {"L4"},
--	"mime":                     {"L4", "OS", "syscall", "internal/syscall/windows/registry"},
--	"mime/quotedprintable":     {"L4"},
--	"net/internal/socktest":    {"L4", "OS", "syscall", "internal/syscall/windows"},
--	"net/url":                  {"L4"},
--	"plugin":                   {"L0", "OS", "CGO"},
++	"archive/tar":                    {"L4", "OS", "syscall", "os/user"},
++	"archive/zip":                    {"L4", "OS", "compress/flate"},
++	"container/heap":                 {"sort"},
++	"compress/bzip2":                 {"L4"},
++	"compress/flate":                 {"L4"},
++	"compress/gzip":                  {"L4", "compress/flate"},
++	"compress/lzw":                   {"L4"},
++	"compress/zlib":                  {"L4", "compress/flate"},
++	"context":                        {"errors", "fmt", "reflect", "sync", "time"},
++	"database/sql":                   {"L4", "container/list", "context", "database/sql/driver", "database/sql/internal"},
++	"database/sql/driver":            {"L4", "context", "time", "database/sql/internal"},
++	"debug/dwarf":                    {"L4"},
++	"debug/elf":                      {"L4", "OS", "debug/dwarf", "compress/zlib"},
++	"debug/gosym":                    {"L4"},
++	"debug/macho":                    {"L4", "OS", "debug/dwarf", "compress/zlib"},
++	"debug/pe":                       {"L4", "OS", "debug/dwarf", "compress/zlib"},
++	"debug/plan9obj":                 {"L4", "OS"},
++	"encoding":                       {"L4"},
++	"encoding/ascii85":               {"L4"},
++	"encoding/asn1":                  {"L4", "math/big"},
++	"encoding/csv":                   {"L4"},
++	"encoding/gob":                   {"L4", "OS", "encoding"},
++	"encoding/hex":                   {"L4"},
++	"encoding/json":                  {"L4", "encoding"},
++	"encoding/pem":                   {"L4"},
++	"encoding/xml":                   {"L4", "encoding"},
++	"flag":                           {"L4", "OS"},
++	"go/build":                       {"L4", "OS", "GOPARSER"},
++	"html":                           {"L4"},
++	"image/draw":                     {"L4", "image/internal/imageutil"},
++	"image/gif":                      {"L4", "compress/lzw", "image/color/palette", "image/draw"},
++	"image/internal/imageutil":       {"L4"},
++	"image/jpeg":                     {"L4", "image/internal/imageutil"},
++	"image/png":                      {"L4", "compress/zlib"},
++	"index/suffixarray":              {"L4", "regexp"},
++	"internal/singleflight":          {"sync"},
++	"internal/trace":                 {"L4", "OS"},
++	"math/big":                       {"L4"},
++	"mime":                           {"L4", "OS", "syscall", "internal/syscall/windows/registry"},
++	"mime/quotedprintable":           {"L4"},
++	"net/internal/socktest":          {"L4", "OS", "syscall", "internal/syscall/windows"},
++	"net/url":                        {"L4"},
++	"plugin":                         {"L0", "OS", "CGO"},
  	"runtime/pprof/internal/profile": {"L4", "OS", "compress/gzip", "regexp"},
  	"testing/internal/testdeps":      {"L4", "internal/testlog", "runtime/pprof", "regexp"},
  	"text/scanner":                   {"L4", "OS"},
