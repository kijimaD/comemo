commit 2837c395526476e31fb15dbb948ed77389cdc75b
Author: Austin Clements <austin@google.com>
Date:   Sun Jul 17 23:12:41 2016 -0400

    doc/go1.7.html: mention specific runtime improvements
    
    Most of the runtime improvements are hard to quantify or summarize,
    but it's worth mentioning some of the substantial improvements in STW
    time, and that the scavenger now actually works on ARM64, PPC64, and
    MIPS.
    
    Change-Id: I0e951038516378cc3f95b364716ef1c183f3445a
    Reviewed-on: https://go-review.googlesource.com/24966
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 doc/go1.7.html | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/doc/go1.7.html b/doc/go1.7.html
index 77cf579e27..b5f08d012e 100644
--- a/doc/go1.7.html
+++ b/doc/go1.7.html
@@ -375,6 +375,12 @@ and
 packages.
 </p>
 
+<p>
+Stop-the-world times should be significantly lower for programs with
+large numbers of idle goroutines, substantial stack size fluctuation,
+or large package-level variables.
+</p>
+
 <h2 id="library">Core library</h2>
 
 <h3 id="context">Context</h3>
@@ -470,6 +476,12 @@ eliminating the
 common in some environments.
 </p>
 
+<p>
+The runtime can now return unused memory to the operating system on
+all architectures. In Go 1.6 and earlier, the runtime could not
+release memory on ARM64, 64-bit PowerPC, or MIPS.
+</p>
+
 <p>
 On Windows, Go programs in Go 1.5 and earlier forced
 the global Windows timer resolution to 1ms at startup
