commit e5a7ab8550e3725a52301586e8e99ee9845de91d
Author: Mikio Hara <mikioh.mikioh@gmail.com>
Date:   Tue Dec 10 14:30:52 2013 +0900

    net: fix nits found by go tool vet
    
    R=golang-dev, dave, adg
    CC=golang-dev
    https://golang.org/cl/27430043
---
 src/pkg/net/net_test.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/pkg/net/net_test.go b/src/pkg/net/net_test.go
index 1320096df8..c9fb433ec9 100644
--- a/src/pkg/net/net_test.go
+++ b/src/pkg/net/net_test.go
@@ -231,12 +231,12 @@ func TestErrorNil(t *testing.T) {
 	// Make Listen fail by relistening on the same address.
 	l, err := Listen("tcp", "127.0.0.1:0")
 	if err != nil {
-		t.Fatal("Listen 127.0.0.1:0: %v", err)
+		t.Fatalf("Listen 127.0.0.1:0: %v", err)
 	}
 	defer l.Close()
 	l1, err := Listen("tcp", l.Addr().String())
 	if err == nil {
-		t.Fatal("second Listen %v: %v", l.Addr(), err)
+		t.Fatalf("second Listen %v: %v", l.Addr(), err)
 	}
 	if l1 != nil {
 		t.Fatalf("Listen returned non-nil interface %T(%v) with err != nil", l1, l1)
@@ -245,12 +245,12 @@ func TestErrorNil(t *testing.T) {
 	// Make ListenPacket fail by relistening on the same address.
 	lp, err := ListenPacket("udp", "127.0.0.1:0")
 	if err != nil {
-		t.Fatal("Listen 127.0.0.1:0: %v", err)
+		t.Fatalf("Listen 127.0.0.1:0: %v", err)
 	}
 	defer lp.Close()
 	lp1, err := ListenPacket("udp", lp.LocalAddr().String())
 	if err == nil {
-		t.Fatal("second Listen %v: %v", lp.LocalAddr(), err)
+		t.Fatalf("second Listen %v: %v", lp.LocalAddr(), err)
 	}
 	if lp1 != nil {
 		t.Fatalf("ListenPacket returned non-nil interface %T(%v) with err != nil", lp1, lp1)
