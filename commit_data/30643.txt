commit 277bcbbdcd26f2d64493e596238e34b47782f98e
Author: Özgür Kesim <oec-go@kesim.org>
Date:   Fri Oct 21 13:14:57 2016 +0200

    text/template: handle option missingkey=error consistently
    
    The existing implementation of text/template handles the option
    "missingkey=error" in an inconsitent manner:  If the provided data is
    a nil-interface, no error is returned (despite the fact that no key
    can be found in it).
    
    This patch makes text/template return an error if "missingkey=error"
    is set and the provided data is a not a valid reflect.Value.
    
    Fixes #15356
    
    Change-Id: Ia0a83da48652ecfaf31f18bdbd78cb21dbca1164
    Reviewed-on: https://go-review.googlesource.com/31638
    Reviewed-by: Rob Pike <r@golang.org>
    Run-TryBot: Rob Pike <r@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
---
 src/text/template/exec.go      | 3 +++
 src/text/template/exec_test.go | 6 ++++++
 2 files changed, 9 insertions(+)

diff --git a/src/text/template/exec.go b/src/text/template/exec.go
index 49f15faacd..ea964dc2bc 100644
--- a/src/text/template/exec.go
+++ b/src/text/template/exec.go
@@ -541,6 +541,9 @@ func (s *state) evalFunction(dot reflect.Value, node *parse.IdentifierNode, cmd
 // value of the pipeline, if any.
 func (s *state) evalField(dot reflect.Value, fieldName string, node parse.Node, args []parse.Node, final, receiver reflect.Value) reflect.Value {
 	if !receiver.IsValid() {
+		if s.tmpl.option.missingKey == mapError { // Treat invalid value as missing map key.
+			s.errorf("nil data; no entry for key %q", fieldName)
+		}
 		return zero
 	}
 	typ := receiver.Type()
diff --git a/src/text/template/exec_test.go b/src/text/template/exec_test.go
index 7d4af3bcba..5892b27391 100644
--- a/src/text/template/exec_test.go
+++ b/src/text/template/exec_test.go
@@ -1142,6 +1142,12 @@ func TestMissingMapKey(t *testing.T) {
 	if err == nil {
 		t.Errorf("expected error; got none")
 	}
+	// same Option, but now a nil interface: ask for an error
+	err = tmpl.Execute(&b, nil)
+	t.Log(err)
+	if err == nil {
+		t.Errorf("expected error for nil-interface; got none")
+	}
 }
 
 // Test that the error message for multiline unterminated string
