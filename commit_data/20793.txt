commit d0ee959ab74f39734ae99fdd3e50bea08b52625d
Author: Alex Brainman <alex.brainman@gmail.com>
Date:   Sat Oct 11 21:34:10 2014 +1100

    cmd/ld: correct pe section names if longer then 8 chars
    
    gcc 4.9.1 generates pe sections with names longer then 8 charters.
    
    From IMAGE_SECTION_HEADER definition:
    
    Name
    An 8-byte, null-padded UTF-8 string. There is no terminating null character
    if the string is exactly eight characters long. For longer names, this
    member contains a forward slash (/) followed by an ASCII representation
    of a decimal number that is an offset into the string table.
    
    Our current pe object file reader does not read string table when section
    names starts with /. Do that, so (issue 8811 example)
    
    c:\go\path\src\isssue8811>go build
    # isssue8811
    isssue8811/glfw(.text): isssue8811/glfw(/76): not defined
    isssue8811/glfw(.text): undefined: isssue8811/glfw(/76)
    
    becomes
    
    c:\go\path\src\isssue8811>go build
    # isssue8811
    isssue8811/glfw(.text): isssue8811/glfw(.rdata$.refptr._glfwInitialized): not defined
    isssue8811/glfw(.text): undefined: isssue8811/glfw(.rdata$.refptr._glfwInitialized)
    
    Small progress to
    
    Update #8811
    
    LGTM=iant, jfrederich
    R=golang-codereviews, iant, jfrederich
    CC=golang-codereviews
    https://golang.org/cl/154210044
---
 src/cmd/ld/ldpe.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/src/cmd/ld/ldpe.c b/src/cmd/ld/ldpe.c
index 1b05916148..9257c243c9 100644
--- a/src/cmd/ld/ldpe.c
+++ b/src/cmd/ld/ldpe.c
@@ -179,6 +179,15 @@ ldpe(Biobuf *f, char *pkg, int64 len, char *pn)
 	Bseek(f, base+obj->fh.PointerToSymbolTable+sizeof(symbuf)*obj->fh.NumberOfSymbols, 0);
 	if(Bread(f, obj->snames, l) != l)
 		goto bad;
+	// rewrite section names if they start with /
+	for(i=0; i < obj->fh.NumberOfSections; i++) {
+		if(obj->sect[i].name == nil)
+			continue;
+		if(obj->sect[i].name[0] != '/')
+			continue;
+		l = atoi(obj->sect[i].name + 1);
+		obj->sect[i].name = (char*)&obj->snames[l];
+	}
 	// read symbols
 	obj->pesym = mal(obj->fh.NumberOfSymbols*sizeof obj->pesym[0]);
 	obj->npesym = obj->fh.NumberOfSymbols;
