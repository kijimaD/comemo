commit a016ecfdcbc266f45f33350238777fba9a391b8d
Author: Robert Griesemer <gri@golang.org>
Date:   Wed Oct 5 15:59:09 2016 -0700

    spec: clarify acceptable indices in array/slice composite literals
    
    This simply documents the status quo accepted by cmd/compile, gccgo,
    and go/types. The new language matches the language used for indices
    of index expressions for arrays and slices.
    
    Fixes #16679.
    
    Change-Id: I65447889fbda9d222f2a9e6c10334d1b38c555f0
    Reviewed-on: https://go-review.googlesource.com/30474
    Reviewed-by: Rob Pike <r@golang.org>
---
 doc/go_spec.html | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index 6e07c945e1..5f0a16c0ff 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -1,6 +1,6 @@
 <!--{
 	"Title": "The Go Programming Language Specification",
-	"Subtitle": "Version of October 4, 2016",
+	"Subtitle": "Version of October 6, 2016",
 	"Path": "/ref/spec"
 }-->
 
@@ -2286,8 +2286,10 @@ For array and slice literals the following rules apply:
 	<li>Each element has an associated integer index marking
 	    its position in the array.
 	</li>
-	<li>An element with a key uses the key as its index; the
-	    key must be a constant integer expression.
+	<li>An element with a key uses the key as its index. The
+	    key must be a non-negative constant representable by
+	    a value of type <code>int</code>; and if it is typed
+	    it must be of integer type.
 	</li>
 	<li>An element without a key uses the previous element's index plus one.
 	    If the first element has no key, its index is zero.
