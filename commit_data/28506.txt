commit 87ee12cece96ec5837fe89c37899d725e7e852d9
Author: Andrew Gerrand <adg@golang.org>
Date:   Tue May 31 13:21:35 2016 +1000

    crypto/tls: reduce size of buffer in throughput benchmarks
    
    The Windows builders run the throughput benchmarks really slowly with a
    64kb buffer. Lowering it to 16kb brings the performance back into line
    with the other builders.
    
    This is a work-around to get the build green until we can figure out why
    the Windows builders are slow with the larger buffer size.
    
    Update #15899
    
    Change-Id: I215ebf115e8295295c87f3b3e22a4ef1f9e77f81
    Reviewed-on: https://go-review.googlesource.com/23574
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/crypto/tls/tls_test.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/crypto/tls/tls_test.go b/src/crypto/tls/tls_test.go
index 894d7e82ab..47f02beeda 100644
--- a/src/crypto/tls/tls_test.go
+++ b/src/crypto/tls/tls_test.go
@@ -504,7 +504,7 @@ func throughput(b *testing.B, totalBytes int64, dynamicRecordSizingDisabled bool
 	clientConfig := *testConfig
 	clientConfig.DynamicRecordSizingDisabled = dynamicRecordSizingDisabled
 
-	buf := make([]byte, 1<<16)
+	buf := make([]byte, 1<<14)
 	chunks := int(math.Ceil(float64(totalBytes) / float64(len(buf))))
 	for i := 0; i < N; i++ {
 		conn, err := Dial("tcp", ln.Addr().String(), &clientConfig)
