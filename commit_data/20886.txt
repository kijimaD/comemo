commit 5361b747b732cf6cf183591b7a66b83fb6fab29f
Author: Robert Griesemer <gri@golang.org>
Date:   Thu Oct 23 09:45:11 2014 -0700

    spec: minimal documention of unsafe.Pointer conversions
    
    Per suggestion from rsc as a result of the dicussion of
    (abandoned) CL 153110044.
    
    Fixes #7192.
    
    LGTM=r, rsc, iant
    R=r, rsc, iant, ken
    CC=golang-codereviews
    https://golang.org/cl/163050043
---
 doc/go_spec.html | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index 97effeaa4a..ad645c1ffc 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -1,6 +1,6 @@
 <!--{
 	"Title": "The Go Programming Language Specification",
-	"Subtitle": "Version of October 16, 2014",
+	"Subtitle": "Version of October 23, 2014",
 	"Path": "/ref/spec"
 }-->
 
@@ -6207,8 +6207,8 @@ type Error interface {
 The built-in package <code>unsafe</code>, known to the compiler,
 provides facilities for low-level programming including operations
 that violate the type system. A package using <code>unsafe</code>
-must be vetted manually for type safety.  The package provides the
-following interface:
+must be vetted manually for type safety and may not be portable.
+The package provides the following interface:
 </p>
 
 <pre class="grammar">
@@ -6223,10 +6223,11 @@ func Sizeof(variable ArbitraryType) uintptr
 </pre>
 
 <p>
-Any pointer or value of <a href="#Types">underlying type</a> <code>uintptr</code> can be converted to
-a <code>Pointer</code> type and vice versa.
 A <code>Pointer</code> is a <a href="#Pointer_types">pointer type</a> but a <code>Pointer</code>
 value may not be <a href="#Address_operators">dereferenced</a>.
+Any pointer or value of <a href="#Types">underlying type</a> <code>uintptr</code> can be converted to
+a <code>Pointer</code> type and vice versa.
+The effect of converting between <code>Pointer</code> and <code>uintptr</code> is implementation-defined.
 </p>
 
 <pre>
