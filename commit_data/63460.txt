commit 59209c4b3587f10e07ce466d41dcb74b332babd5
Author: Guoqi Chen <chenguoqi@loongson.cn>
Date:   Wed Aug 30 17:08:22 2023 +0800

    internal/abi, internal/buildcfg: always enable register ABI on loong64
    
    Change-Id: Ia3a31556c8d355eb6bdb42d3b3c8bc6b37311ed9
    Reviewed-on: https://go-review.googlesource.com/c/go/+/525575
    Run-TryBot: Cherry Mui <cherryyz@google.com>
    Reviewed-by: David Chase <drchase@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Meidan Li <limeidan@loongson.cn>
    Reviewed-by: sophie zhao <zhaoxiaolin@loongson.cn>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Cherry Mui <cherryyz@google.com>
---
 src/internal/abi/abi_generic.go | 2 +-
 src/internal/abi/abi_loong64.go | 2 --
 src/internal/buildcfg/exp.go    | 4 +---
 3 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/src/internal/abi/abi_generic.go b/src/internal/abi/abi_generic.go
index 76ef2e2898..a08d3208d4 100644
--- a/src/internal/abi/abi_generic.go
+++ b/src/internal/abi/abi_generic.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build !goexperiment.regabiargs && !amd64 && !arm64 && !ppc64 && !ppc64le && !riscv64
+//go:build !goexperiment.regabiargs && !amd64 && !arm64 && !loong64 && !ppc64 && !ppc64le && !riscv64
 
 package abi
 
diff --git a/src/internal/abi/abi_loong64.go b/src/internal/abi/abi_loong64.go
index c2306ae8d8..10ad89815b 100644
--- a/src/internal/abi/abi_loong64.go
+++ b/src/internal/abi/abi_loong64.go
@@ -2,8 +2,6 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build goexperiment.regabiargs
-
 package abi
 
 const (
diff --git a/src/internal/buildcfg/exp.go b/src/internal/buildcfg/exp.go
index 0f29233fb3..7c7cefba7b 100644
--- a/src/internal/buildcfg/exp.go
+++ b/src/internal/buildcfg/exp.go
@@ -62,11 +62,9 @@ func ParseGOEXPERIMENT(goos, goarch, goexp string) (*ExperimentFlags, error) {
 	// always on.
 	var regabiSupported, regabiAlwaysOn bool
 	switch goarch {
-	case "amd64", "arm64", "ppc64le", "ppc64", "riscv64":
+	case "amd64", "arm64", "loong64", "ppc64le", "ppc64", "riscv64":
 		regabiAlwaysOn = true
 		regabiSupported = true
-	case "loong64":
-		regabiSupported = true
 	}
 
 	baseline := goexperiment.Flags{
