commit 77863e42432bbd7cbe0a476bc20773283356f64f
Author: Dmitri Shuralyov <dmitshur@golang.org>
Date:   Thu Jul 27 13:03:58 2023 -0400

    src/buildall.bash: mention no longer being used by Go build system
    
    The buildall.bash script was initially added in 2015 (in CL 9438),
    documented as used in the implementation of the new compile-only
    builders at the time.
    
    That description was updated as the builder implementation changed
    from "linux-amd64-compilesmoke" to "all-compile" and most recently
    to "misc-compile", which it still mentions today.
    
    The build system stopped using it in CL 464955 and there are no plans
    to use it again in the future, so update the description so that it's
    not misleading. Notably, adding additional checks to this script does
    not mean they will be caught by builders.
    
    Updates #31916.
    Updates #58163.
    
    Change-Id: I17558b1c150a3ad95105de14511c51791287991b
    Reviewed-on: https://go-review.googlesource.com/c/go/+/513755
    Reviewed-by: Dmitri Shuralyov <dmitshur@google.com>
    Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
    Auto-Submit: Dmitri Shuralyov <dmitshur@golang.org>
    Run-TryBot: Dmitri Shuralyov <dmitshur@google.com>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
---
 src/buildall.bash                | 8 ++++++--
 src/cmd/go/internal/work/exec.go | 4 ++--
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/buildall.bash b/src/buildall.bash
index 4e9b15bf4b..3b8f6ee6f5 100755
--- a/src/buildall.bash
+++ b/src/buildall.bash
@@ -6,8 +6,12 @@
 # Usage: buildall.bash [-e] [pattern]
 #
 # buildall.bash builds the standard library for all Go-supported
-# architectures. It is used by the "misc-compile" trybot builders,
-# as a smoke test to quickly flag portability issues.
+# architectures.
+#
+# Originally the Go build system used it as a smoke test to quickly
+# flag portability issues in builders named "misc-compile" or "all-compile".
+# As of CL 464955, the build system uses make.bash -compile-only instead,
+# so this script no longer runs in any automated fashion.
 #
 # Options:
 #   -e: stop at first failure
diff --git a/src/cmd/go/internal/work/exec.go b/src/cmd/go/internal/work/exec.go
index 13d2a78a97..197078a0e9 100644
--- a/src/cmd/go/internal/work/exec.go
+++ b/src/cmd/go/internal/work/exec.go
@@ -1250,7 +1250,7 @@ func (b *Builder) vet(ctx context.Context, a *Action) error {
 		// that vet doesn't like in low-level packages
 		// like runtime, sync, and reflect.
 		// Note that $GOROOT/src/buildall.bash
-		// does the same for the misc-compile trybots
+		// does the same
 		// and should be updated if these flags are
 		// changed here.
 		vetFlags = []string{"-unsafeptr=false"}
@@ -1260,7 +1260,7 @@ func (b *Builder) vet(ctx context.Context, a *Action) error {
 		// like hard-coded forced returns or panics that make
 		// code unreachable. It's unreasonable to insist on files
 		// not having any unreachable code during "go test".
-		// (buildall.bash still runs with -unreachable enabled
+		// (buildall.bash still has -unreachable enabled
 		// for the overall whole-tree scan.)
 		if cfg.CmdName == "test" {
 			vetFlags = append(vetFlags, "-unreachable=false")
