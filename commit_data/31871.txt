commit 10fdf769f07fdbc51cb50965a5de1674892057d6
Author: Josh Bleecher Snyder <josharian@gmail.com>
Date:   Tue Mar 21 09:57:47 2017 -0700

    cmd/compile: remove function-name-based debuglive tweaks
    
    It's easier to grep output than recompile the compiler anyway.
    
    For concurrent compilation.
    
    Updates #15756
    
    Change-Id: I151cb5dc77056469cd9019d516f86454e931a197
    Reviewed-on: https://go-review.googlesource.com/38424
    Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
---
 src/cmd/compile/internal/gc/plive.go | 12 ------------
 1 file changed, 12 deletions(-)

diff --git a/src/cmd/compile/internal/gc/plive.go b/src/cmd/compile/internal/gc/plive.go
index 548f1ea6c6..bd54e6a34a 100644
--- a/src/cmd/compile/internal/gc/plive.go
+++ b/src/cmd/compile/internal/gc/plive.go
@@ -1109,15 +1109,6 @@ func livenessemit(lv *Liveness, argssym, livesym *Sym) {
 // structure read by the garbage collector.
 // Returns a map from GC safe points to their corresponding stack map index.
 func liveness(e *ssafn, f *ssa.Func, argssym, livesym *Sym) map[*ssa.Value]int {
-	// Change name to dump debugging information only for a specific function.
-	debugdelta := 0
-
-	if e.curfn.Func.Nname.Sym.Name == "!" {
-		debugdelta = 2
-	}
-
-	debuglive += debugdelta
-
 	// Construct the global liveness state.
 	vars := getvariables(e.curfn)
 	lv := newliveness(e.curfn, f, vars, e.stkptrsize)
@@ -1133,8 +1124,5 @@ func liveness(e *ssafn, f *ssa.Func, argssym, livesym *Sym) map[*ssa.Value]int {
 
 	// Emit the live pointer map data structures
 	livenessemit(lv, argssym, livesym)
-
-	debuglive -= debugdelta
-
 	return lv.stackMapIndex
 }
