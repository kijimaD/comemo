commit aeecee8ce4cf1821dcb6b5e37e20f40696278498
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Mon May 9 15:11:24 2016 +0200

    runtime/race: deflake test
    
    The test sometimes fails on builders.
    The test uses sleeps to establish the necessary goroutine
    execution order. If sleeps undersleep/oversleep
    the race is still reported, but it can be reported when the
    main test goroutine returns. In such case test driver
    can't match the race with the test and reports failure.
    
    Wait for both test goroutines to ensure that the race
    is reported in the test scope.
    
    Fixes #15579
    
    Change-Id: I0b9bec0ebfb0c127d83eb5325a7fe19ef9545050
    Reviewed-on: https://go-review.googlesource.com/22951
    Run-TryBot: Dmitry Vyukov <dvyukov@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/runtime/race/testdata/chan_test.go | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/runtime/race/testdata/chan_test.go b/src/runtime/race/testdata/chan_test.go
index cddd9a6e78..449191639e 100644
--- a/src/runtime/race/testdata/chan_test.go
+++ b/src/runtime/race/testdata/chan_test.go
@@ -285,17 +285,20 @@ func TestRaceChanWrongClose(t *testing.T) {
 	v1 := 0
 	v2 := 0
 	c := make(chan int, 1)
+	done := make(chan bool)
 	go func() {
 		defer func() {
 			recover()
 		}()
 		v1 = 1
 		c <- 1
+		done <- true
 	}()
 	go func() {
 		time.Sleep(1e7)
 		v2 = 2
 		close(c)
+		done <- true
 	}()
 	time.Sleep(2e7)
 	if _, who := <-c; who {
@@ -303,6 +306,8 @@ func TestRaceChanWrongClose(t *testing.T) {
 	} else {
 		v1 = 2
 	}
+	<-done
+	<-done
 }
 
 func TestRaceChanSendClose(t *testing.T) {
