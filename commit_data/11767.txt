commit 3f1cff395136be93ccd5f4ced34644b9dd6840c1
Author: Rob Pike <r@golang.org>
Date:   Fri Feb 10 14:37:50 2012 +1100

    testing/quick: documentation tweaks
    
    Fixes #2960.
    
    R=golang-dev, bradfitz
    CC=golang-dev
    https://golang.org/cl/5652055
---
 src/pkg/testing/quick/quick.go | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/src/pkg/testing/quick/quick.go b/src/pkg/testing/quick/quick.go
index f94c541f2b..2427098228 100644
--- a/src/pkg/testing/quick/quick.go
+++ b/src/pkg/testing/quick/quick.go
@@ -50,7 +50,7 @@ const complexSize = 50
 
 // Value returns an arbitrary value of the given type.
 // If the type implements the Generator interface, that will be used.
-// Note: in order to create arbitrary values for structs, all the members must be public.
+// Note: To create arbitrary values for structs, all the fields must be exported.
 func Value(t reflect.Type, rand *rand.Rand) (value reflect.Value, ok bool) {
 	if m, ok := reflect.Zero(t).Interface().(Generator); ok {
 		return m.Generate(rand, complexSize), true
@@ -155,9 +155,10 @@ type Config struct {
 	// If non-nil, rand is a source of random numbers. Otherwise a default
 	// pseudo-random source will be used.
 	Rand *rand.Rand
-	// If non-nil, Values is a function which generates a slice of arbitrary
-	// Values that are congruent with the arguments to the function being
-	// tested. Otherwise, Values is used to generate the values.
+	// If non-nil, the Values function generates a slice of arbitrary
+	// reflect.Values that are congruent with the arguments to the function
+	// being tested. Otherwise, the top-level Values function is used
+	// to generate them.
 	Values func([]reflect.Value, *rand.Rand)
 }
 
