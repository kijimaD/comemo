commit 968153d0632ad138440780d6041cc5a5b50a1fa3
Author: Rob Pike <r@golang.org>
Date:   Mon Oct 13 10:27:51 2014 -0700

    net/rpc: fix mutex comment
    Fixes #8086.
    
    LGTM=bradfitz
    R=golang-codereviews, bradfitz
    CC=golang-codereviews
    https://golang.org/cl/153420044
---
 src/net/rpc/client.go | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/net/rpc/client.go b/src/net/rpc/client.go
index 21f79b0684..d0c4a69214 100644
--- a/src/net/rpc/client.go
+++ b/src/net/rpc/client.go
@@ -41,10 +41,10 @@ type Call struct {
 type Client struct {
 	codec ClientCodec
 
-	sending sync.Mutex
+	reqMutex sync.Mutex // protects following
+	request  Request
 
 	mutex    sync.Mutex // protects following
-	request  Request
 	seq      uint64
 	pending  map[uint64]*Call
 	closing  bool // user has called Close
@@ -69,8 +69,8 @@ type ClientCodec interface {
 }
 
 func (client *Client) send(call *Call) {
-	client.sending.Lock()
-	defer client.sending.Unlock()
+	client.reqMutex.Lock()
+	defer client.reqMutex.Unlock()
 
 	// Register this call.
 	client.mutex.Lock()
@@ -146,7 +146,7 @@ func (client *Client) input() {
 		}
 	}
 	// Terminate pending calls.
-	client.sending.Lock()
+	client.reqMutex.Lock()
 	client.mutex.Lock()
 	client.shutdown = true
 	closing := client.closing
@@ -162,7 +162,7 @@ func (client *Client) input() {
 		call.done()
 	}
 	client.mutex.Unlock()
-	client.sending.Unlock()
+	client.reqMutex.Unlock()
 	if debugLog && err != io.EOF && !closing {
 		log.Println("rpc: client protocol error:", err)
 	}
