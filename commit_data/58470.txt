commit ea14b633627f467a2e35eb7f67df6f3ed60469c0
Author: Tobias Klauser <tklauser@distanz.ch>
Date:   Thu Nov 9 09:10:49 2023 +0100

    syscall: regen zsyscall_{aix_ppc64,solaris_amd64}.go
    
    This renames libc_Setrlimit to libc_setrlimit after CL 476097.
    
    Change-Id: I217043a5086cb40d050373eaee3f897173dd678b
    Reviewed-on: https://go-review.googlesource.com/c/go/+/538936
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Auto-Submit: Tobias Klauser <tobias.klauser@gmail.com>
    Reviewed-by: Heschi Kreinick <heschi@google.com>
    Run-TryBot: Tobias Klauser <tobias.klauser@gmail.com>
---
 src/syscall/zsyscall_aix_ppc64.go     | 8 ++++----
 src/syscall/zsyscall_solaris_amd64.go | 8 ++++----
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/syscall/zsyscall_aix_ppc64.go b/src/syscall/zsyscall_aix_ppc64.go
index fb36fd33ba..111e6711d7 100644
--- a/src/syscall/zsyscall_aix_ppc64.go
+++ b/src/syscall/zsyscall_aix_ppc64.go
@@ -87,7 +87,7 @@ import "unsafe"
 //go:cgo_import_dynamic libc_Setpriority setpriority "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Setregid setregid "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Setreuid setreuid "libc.a/shr_64.o"
-//go:cgo_import_dynamic libc_Setrlimit setrlimit "libc.a/shr_64.o"
+//go:cgo_import_dynamic libc_setrlimit setrlimit "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Stat stat "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Statfs statfs "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Symlink symlink "libc.a/shr_64.o"
@@ -181,7 +181,7 @@ import "unsafe"
 //go:linkname libc_Setpriority libc_Setpriority
 //go:linkname libc_Setregid libc_Setregid
 //go:linkname libc_Setreuid libc_Setreuid
-//go:linkname libc_Setrlimit libc_Setrlimit
+//go:linkname libc_setrlimit libc_setrlimit
 //go:linkname libc_Stat libc_Stat
 //go:linkname libc_Statfs libc_Statfs
 //go:linkname libc_Symlink libc_Symlink
@@ -278,7 +278,7 @@ var (
 	libc_Setpriority,
 	libc_Setregid,
 	libc_Setreuid,
-	libc_Setrlimit,
+	libc_setrlimit,
 	libc_Stat,
 	libc_Statfs,
 	libc_Symlink,
@@ -1272,7 +1272,7 @@ func Setreuid(ruid int, euid int) (err error) {
 // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
 
 func setrlimit(which int, lim *Rlimit) (err error) {
-	_, _, e1 := rawSyscall6(uintptr(unsafe.Pointer(&libc_Setrlimit)), 2, uintptr(which), uintptr(unsafe.Pointer(lim)), 0, 0, 0, 0)
+	_, _, e1 := rawSyscall6(uintptr(unsafe.Pointer(&libc_setrlimit)), 2, uintptr(which), uintptr(unsafe.Pointer(lim)), 0, 0, 0, 0)
 	if e1 != 0 {
 		err = errnoErr(e1)
 	}
diff --git a/src/syscall/zsyscall_solaris_amd64.go b/src/syscall/zsyscall_solaris_amd64.go
index e25db63eba..5f05db929a 100644
--- a/src/syscall/zsyscall_solaris_amd64.go
+++ b/src/syscall/zsyscall_solaris_amd64.go
@@ -64,7 +64,7 @@ import "unsafe"
 //go:cgo_import_dynamic libc_Setpriority setpriority "libc.so"
 //go:cgo_import_dynamic libc_Setregid setregid "libc.so"
 //go:cgo_import_dynamic libc_Setreuid setreuid "libc.so"
-//go:cgo_import_dynamic libc_Setrlimit setrlimit "libc.so"
+//go:cgo_import_dynamic libc_setrlimit setrlimit "libc.so"
 //go:cgo_import_dynamic libc_Setsid setsid "libc.so"
 //go:cgo_import_dynamic libc_Setuid setuid "libc.so"
 //go:cgo_import_dynamic libc_shutdown shutdown "libsocket.so"
@@ -152,7 +152,7 @@ import "unsafe"
 //go:linkname libc_Setpriority libc_Setpriority
 //go:linkname libc_Setregid libc_Setregid
 //go:linkname libc_Setreuid libc_Setreuid
-//go:linkname libc_Setrlimit libc_Setrlimit
+//go:linkname libc_setrlimit libc_setrlimit
 //go:linkname libc_Setsid libc_Setsid
 //go:linkname libc_Setuid libc_Setuid
 //go:linkname libc_shutdown libc_shutdown
@@ -243,7 +243,7 @@ var (
 	libc_Setpriority,
 	libc_Setregid,
 	libc_Setreuid,
-	libc_Setrlimit,
+	libc_setrlimit,
 	libc_Setsid,
 	libc_Setuid,
 	libc_shutdown,
@@ -963,7 +963,7 @@ func Setreuid(ruid int, euid int) (err error) {
 // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
 
 func setrlimit(which int, lim *Rlimit) (err error) {
-	_, _, e1 := rawSysvicall6(uintptr(unsafe.Pointer(&libc_Setrlimit)), 2, uintptr(which), uintptr(unsafe.Pointer(lim)), 0, 0, 0, 0)
+	_, _, e1 := rawSysvicall6(uintptr(unsafe.Pointer(&libc_setrlimit)), 2, uintptr(which), uintptr(unsafe.Pointer(lim)), 0, 0, 0, 0)
 	if e1 != 0 {
 		err = errnoErr(e1)
 	}
