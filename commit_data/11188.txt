commit f53cc8e6ffd20e8bc433a3b449f667d4d44585a9
Author: Christopher Wedgwood <cw@f00f.org>
Date:   Mon Jan 16 10:09:36 2012 -0500

    exp/ssh: rename (some) fields
    
    R=dave, agl, agl
    CC=golang-dev
    https://golang.org/cl/5494057
---
 src/pkg/exp/ssh/client.go  | 5 ++---
 src/pkg/exp/ssh/session.go | 8 ++++----
 2 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/src/pkg/exp/ssh/client.go b/src/pkg/exp/ssh/client.go
index 8df81457bf..eb6c035221 100644
--- a/src/pkg/exp/ssh/client.go
+++ b/src/pkg/exp/ssh/client.go
@@ -306,9 +306,8 @@ type clientChan struct {
 	stdout      *chanReader      // receives the payload of channelData messages
 	stderr      *chanReader      // receives the payload of channelExtendedData messages
 	msg         chan interface{} // incoming messages
-
-	theyClosed bool // indicates the close msg has been received from the remote side
-	weClosed   bool // incidates the close msg has been sent from our side
+	theyClosed  bool             // indicates the close msg has been received from the remote side
+	weClosed    bool             // incidates the close msg has been sent from our side
 }
 
 // newClientChan returns a partially constructed *clientChan
diff --git a/src/pkg/exp/ssh/session.go b/src/pkg/exp/ssh/session.go
index 807dd8740d..ea4addbd50 100644
--- a/src/pkg/exp/ssh/session.go
+++ b/src/pkg/exp/ssh/session.go
@@ -70,7 +70,7 @@ type Session struct {
 
 	started   bool // true once Start, Run or Shell is invoked.
 	copyFuncs []func() error
-	errch     chan error // one send per copyFunc
+	errors    chan error // one send per copyFunc
 
 	// true if pipe method is active
 	stdinpipe, stdoutpipe, stderrpipe bool
@@ -244,10 +244,10 @@ func (s *Session) start() error {
 		setupFd(s)
 	}
 
-	s.errch = make(chan error, len(s.copyFuncs))
+	s.errors = make(chan error, len(s.copyFuncs))
 	for _, fn := range s.copyFuncs {
 		go func(fn func() error) {
-			s.errch <- fn()
+			s.errors <- fn()
 		}(fn)
 	}
 	return nil
@@ -270,7 +270,7 @@ func (s *Session) Wait() error {
 
 	var copyError error
 	for _ = range s.copyFuncs {
-		if err := <-s.errch; err != nil && copyError == nil {
+		if err := <-s.errors; err != nil && copyError == nil {
 			copyError = err
 		}
 	}
