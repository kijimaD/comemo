commit 12fab9d122def141e76aa718d18d6b3be1de6a0d
Author: Russ Cox <rsc@golang.org>
Date:   Fri Feb 10 23:20:00 2012 -0500

    gc: add test case for issue 1743
    
    Fixes #1743.
    (Actually was fixed earlier, but now we have proof.)
    
    R=ken2
    CC=golang-dev
    https://golang.org/cl/5649064
---
 test/fixedbugs/bug414.dir/main.go | 18 ++++++++++++++++++
 test/fixedbugs/bug414.dir/p1.go   | 21 +++++++++++++++++++++
 test/fixedbugs/bug414.go          |  7 +++++++
 3 files changed, 46 insertions(+)

diff --git a/test/fixedbugs/bug414.dir/main.go b/test/fixedbugs/bug414.dir/main.go
new file mode 100644
index 0000000000..52001233c6
--- /dev/null
+++ b/test/fixedbugs/bug414.dir/main.go
@@ -0,0 +1,18 @@
+// Copyright 2012 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+	  package main
+	
+	  import "./p1"
+	
+	  type MyObject struct {
+	    p1.Fer
+	  }
+	
+	  func main() {
+	    var b p1.Fer = &p1.Object{}
+	    p1.PrintFer(b)
+	    var c p1.Fer = &MyObject{b}
+	    p1.PrintFer(c)
+	  }
diff --git a/test/fixedbugs/bug414.dir/p1.go b/test/fixedbugs/bug414.dir/p1.go
new file mode 100644
index 0000000000..7768818bf9
--- /dev/null
+++ b/test/fixedbugs/bug414.dir/p1.go
@@ -0,0 +1,21 @@
+// Copyright 2012 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+	  package p1
+	
+	  import "fmt"
+	
+	  type Fer interface {
+	    f() string
+	  }
+	
+	  type Object struct {}
+	
+	  func (this *Object) f() string {
+	    return "Object.f"
+	  }
+	
+	  func PrintFer(fer Fer) {
+	    fmt.Sprintln(fer.f())
+	  }
diff --git a/test/fixedbugs/bug414.go b/test/fixedbugs/bug414.go
new file mode 100644
index 0000000000..8824b1a1ed
--- /dev/null
+++ b/test/fixedbugs/bug414.go
@@ -0,0 +1,7 @@
+// $G $D/$F.dir/p1.go && $G $D/$F.dir/main.go && $L main.$A && ./$A.out
+
+// Copyright 2012 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package ignored
