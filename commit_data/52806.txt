commit 73587b71a62f7c7a27664a207781dedae223774b
Author: Michael Anthony Knyszek <mknyszek@google.com>
Date:   Thu Jun 2 21:10:26 2022 +0000

    runtime: avoid string allocation in printDebuglog
    
    Either due to a new nowritebarrierrec annotation or a change in escape
    analysis, printDebuglog can't be called from sighandler anymore.
    
    Fix this by avoiding a string allocation that's the primary culprit.
    
    Change-Id: Ic84873a453f45852b0443a46597ed3ab8c9443fd
    Reviewed-on: https://go-review.googlesource.com/c/go/+/410121
    Run-TryBot: Michael Knyszek <mknyszek@google.com>
    Reviewed-by: Michael Pratt <mpratt@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
---
 src/runtime/debuglog.go | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/runtime/debuglog.go b/src/runtime/debuglog.go
index 7f92a6baf8..ca1a791c93 100644
--- a/src/runtime/debuglog.go
+++ b/src/runtime/debuglog.go
@@ -777,7 +777,8 @@ func printDebugLog() {
 			// Logged before runtimeInitTime was set.
 			pnano = 0
 		}
-		print(string(itoaDiv(tmpbuf[:], uint64(pnano), 9)))
+		pnanoBytes := itoaDiv(tmpbuf[:], uint64(pnano), 9)
+		print(slicebytetostringtmp((*byte)(noescape(unsafe.Pointer(&pnanoBytes[0]))), len(pnanoBytes)))
 		print(" P ", p, "] ")
 
 		for i := 0; s.begin < s.end; i++ {
