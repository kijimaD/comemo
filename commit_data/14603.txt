commit 15353d211440e0fa422f8a45a0130354365d890b
Author: Shenghou Ma <minux.ma@gmail.com>
Date:   Tue Dec 11 11:49:02 2012 -0500

    encoding/base64: new example for NewEncoder with emphasis on Close
    Fixes #4394.
    
    R=iant, bradfitz, rsc, remigius.gieben
    CC=golang-dev
    https://golang.org/cl/6847125
---
 src/pkg/encoding/base32/example_test.go | 15 +++++++++++++++
 src/pkg/encoding/base64/example_test.go | 15 +++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/src/pkg/encoding/base32/example_test.go b/src/pkg/encoding/base32/example_test.go
index bd16ca1c79..f6128d9003 100644
--- a/src/pkg/encoding/base32/example_test.go
+++ b/src/pkg/encoding/base32/example_test.go
@@ -2,11 +2,14 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
+// Keep in sync with ../base64/example_test.go.
+
 package base32_test
 
 import (
 	"encoding/base32"
 	"fmt"
+	"os"
 )
 
 func ExampleEncoding_EncodeToString() {
@@ -28,3 +31,15 @@ func ExampleEncoding_DecodeString() {
 	// Output:
 	// "some data with \x00 and \ufeff"
 }
+
+func ExampleNewEncoder() {
+	input := []byte("foo\x00bar")
+	encoder := base32.NewEncoder(base32.StdEncoding, os.Stdout)
+	encoder.Write(input)
+	// Must close the encoder when finished to flush any partial blocks.
+	// If you comment out the following line, the last partial block "r"
+	// won't be encoded.
+	encoder.Close()
+	// Output:
+	// MZXW6ADCMFZA====
+}
diff --git a/src/pkg/encoding/base64/example_test.go b/src/pkg/encoding/base64/example_test.go
index 40b5438771..d18b856a0f 100644
--- a/src/pkg/encoding/base64/example_test.go
+++ b/src/pkg/encoding/base64/example_test.go
@@ -2,11 +2,14 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
+// Keep in sync with ../base32/example_test.go.
+
 package base64_test
 
 import (
 	"encoding/base64"
 	"fmt"
+	"os"
 )
 
 func ExampleEncoding_EncodeToString() {
@@ -28,3 +31,15 @@ func ExampleEncoding_DecodeString() {
 	// Output:
 	// "some data with \x00 and \ufeff"
 }
+
+func ExampleNewEncoder() {
+	input := []byte("foo\x00bar")
+	encoder := base64.NewEncoder(base64.StdEncoding, os.Stdout)
+	encoder.Write(input)
+	// Must close the encoder when finished to flush any partial blocks.
+	// If you comment out the following line, the last partial block "r"
+	// won't be encoded.
+	encoder.Close()
+	// Output:
+	// Zm9vAGJhcg==
+}
