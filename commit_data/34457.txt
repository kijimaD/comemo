commit c74712b3b2a38393157bad0550657fd06a5c5a8a
Author: griesemer <gri@golang.org>
Date:   Wed Oct 25 16:11:51 2017 -0700

    test: add test cases for method expressions with literal receiver types
    
    For #9060.
    
    Change-Id: Ibd0f047083f3c98cec96c655a3e2024df8e1d2a0
    Reviewed-on: https://go-review.googlesource.com/73554
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 test/method7.go | 57 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 57 insertions(+)

diff --git a/test/method7.go b/test/method7.go
new file mode 100644
index 0000000000..4e1b3c340a
--- /dev/null
+++ b/test/method7.go
@@ -0,0 +1,57 @@
+// run
+
+// Copyright 2017 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Test forms of method expressions T.m where T is
+// a literal type.
+
+package main
+
+var got, want string
+
+type I interface {
+	m()
+}
+
+type S struct {
+}
+
+func (S) m()          { got += " m()" }
+func (S) m1(s string) { got += " m1(" + s + ")" }
+
+type T int
+
+func (T) m2() { got += " m2()" }
+
+func main() {
+	// method expressions with named receiver types
+	I.m(S{})
+	want += " m()"
+
+	S.m1(S{}, "a")
+	want += " m1(a)"
+
+	// method expressions with literal receiver types
+	f := interface{ m1(string) }.m1
+	f(S{}, "b")
+	want += " m1(b)"
+
+	interface{ m1(string) }.m1(S{}, "c")
+	want += " m1(c)"
+
+	x := S{}
+	interface{ m1(string) }.m1(x, "d")
+	want += " m1(d)"
+
+	g := struct{ T }.m2
+	_ = g
+	// cannot link the call below - see #22444
+	// g(struct{T}{})
+	// want += " m2()"
+
+	if got != want {
+		panic("got" + got + ", want" + want)
+	}
+}
