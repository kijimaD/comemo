commit d5f78d77c065b2c202e17b3be0d3490507cf5a4c
Author: Shenghou Ma <minux.ma@gmail.com>
Date:   Mon Mar 5 23:16:11 2012 +0800

    builder: use short test for subrepos
    
    R=rsc, golang-dev, bradfitz
    CC=golang-dev
    https://golang.org/cl/5732053
---
 misc/dashboard/builder/main.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/misc/dashboard/builder/main.go b/misc/dashboard/builder/main.go
index 4fe65b7a5d..534ff514ad 100644
--- a/misc/dashboard/builder/main.go
+++ b/misc/dashboard/builder/main.go
@@ -23,7 +23,7 @@ import (
 const (
 	codeProject      = "go"
 	codePyScript     = "misc/dashboard/googlecode_upload.py"
-	hgUrl            = "https://go.googlecode.com/hg/"
+	hgUrl            = "https://code.google.com/p/go/"
 	mkdirPerm        = 0750
 	waitInterval     = 30 * time.Second // time to wait before checking for new revs
 	pkgBuildInterval = 24 * time.Hour   // rebuild packages every 24 hours
@@ -429,7 +429,7 @@ func (b *Builder) buildSubrepos(goRoot, goHash string) {
 }
 
 // buildSubrepo fetches the given package, updates it to the specified hash,
-// and runs 'go test pkg/...'. It returns the build log and any error.
+// and runs 'go test -short pkg/...'. It returns the build log and any error.
 func (b *Builder) buildSubrepo(goRoot, pkg, hash string) (string, error) {
 	goBin := filepath.Join(goRoot, "bin")
 	goTool := filepath.Join(goBin, "go")
@@ -466,7 +466,7 @@ func (b *Builder) buildSubrepo(goRoot, pkg, hash string) (string, error) {
 	}
 
 	// test the package
-	log, status, err = runLog(env, "", goRoot, goTool, "test", pkg+"/...")
+	log, status, err = runLog(env, "", goRoot, goTool, "test", "-short", pkg+"/...")
 	if err == nil && status != 0 {
 		err = fmt.Errorf("go exited with status %d", status)
 	}
