commit d05d6fab32cb3d47f8682d19ca11085430f39164
Author: Baokun Lee <bk@golangcn.org>
Date:   Sat Jan 23 17:05:01 2021 +0800

    [dev.regabi] cmd/compile: replace ir.Name map with ir.NameSet for SSA 2
    
    Same as CL 284897, the last one.
    
    Passes toolstash -cmp.
    
    Updates #43819
    
    Change-Id: I0bd8958b3717fb58a5a6576f1819a85f33b76e2d
    Reviewed-on: https://go-review.googlesource.com/c/go/+/285913
    Run-TryBot: Baokun Lee <bk@golangcn.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    Trust: Baokun Lee <bk@golangcn.org>
---
 src/cmd/compile/internal/ssa/deadstore.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/cmd/compile/internal/ssa/deadstore.go b/src/cmd/compile/internal/ssa/deadstore.go
index 0cf9931dbc..31d3f62d4e 100644
--- a/src/cmd/compile/internal/ssa/deadstore.go
+++ b/src/cmd/compile/internal/ssa/deadstore.go
@@ -299,7 +299,7 @@ func elimUnreadAutos(f *Func) {
 	// Loop over all ops that affect autos taking note of which
 	// autos we need and also stores that we might be able to
 	// eliminate.
-	seen := make(map[*ir.Name]bool)
+	var seen ir.NameSet
 	var stores []*Value
 	for _, b := range f.Blocks {
 		for _, v := range b.Values {
@@ -317,7 +317,7 @@ func elimUnreadAutos(f *Func) {
 				// If we haven't seen the auto yet
 				// then this might be a store we can
 				// eliminate.
-				if !seen[n] {
+				if !seen.Has(n) {
 					stores = append(stores, v)
 				}
 			default:
@@ -327,7 +327,7 @@ func elimUnreadAutos(f *Func) {
 				// because dead loads haven't been
 				// eliminated yet.
 				if v.Uses > 0 {
-					seen[n] = true
+					seen.Add(n)
 				}
 			}
 		}
@@ -336,7 +336,7 @@ func elimUnreadAutos(f *Func) {
 	// Eliminate stores to unread autos.
 	for _, store := range stores {
 		n, _ := store.Aux.(*ir.Name)
-		if seen[n] {
+		if seen.Has(n) {
 			continue
 		}
 
