commit 7b49445d0fab71820314a2e5bdfba6b84b7f16d0
Author: Russ Cox <rsc@golang.org>
Date:   Wed Aug 30 10:10:15 2017 -0400

    [dev.boringcrypto] cmd/compile: hide new boring fields from reflection
    
    This is terrible but much simpler, cleaner, and more effective
    than all the alternatives I have come up with.
    
    Lots of code assumes that reflect.DeepEqual is meaningful
    on rsa.PublicKey etc, because previously they consisted only of
    exported meaningful fields.
    
    Worse, there exists code that assumes asn1.Marshal can be
    passed an rsa.PublicKey, because that struct has historically
    matched exactly the form that would be needed to produce
    the official ASN.1 DER encoding of an RSA public key.
    
    Instead of tracking down and fixing all of that code
    (and probably more), we can limit the BoringCrypto-induced
    damage by ensliting the compiler to hide the new field
    from reflection. Then nothing can get at it and nothing can
    be disrupted by it.
    
    Kill two birds with one cannon ball.
    
    I'm very sorry.
    
    Change-Id: I0ca4d6047c7e98f880cbb81904048c1952e278cc
    Reviewed-on: https://go-review.googlesource.com/60271
    Reviewed-by: Adam Langley <agl@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>

 src/cmd/compile/internal/gc/reflect.go | 19 ++++++++++++++++
 src/crypto/rsa/boring_test.go          | 40 ++++++++++++++++++++++++++++++++++
 2 files changed, 59 insertions(+)
