commit 84fc1e20f17097c1b6710f79cdd03dafeb908eaf
Author: Anschel Schaffer-Cohen <anschelsc@gmail.com>
Date:   Fri Dec 31 10:37:55 2010 +1100

    Fix documentation typo.
            This is really insignificant, but it might as well be fixed.
    
    R=golang-dev, brainman
    CC=golang-dev
    https://golang.org/cl/3832045
---
 src/pkg/io/io.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/pkg/io/io.go b/src/pkg/io/io.go
index 2b2f4d5671..fa1c0d2b06 100644
--- a/src/pkg/io/io.go
+++ b/src/pkg/io/io.go
@@ -203,7 +203,7 @@ func ReadFull(r Reader, buf []byte) (n int, err os.Error) {
 // If dst implements the ReaderFrom interface,
 // the copy is implemented by calling dst.ReadFrom(src).
 func Copyn(dst Writer, src Reader, n int64) (written int64, err os.Error) {
-	// If the writer has a ReadFrom method, use it to to do the copy.
+	// If the writer has a ReadFrom method, use it to do the copy.
 	// Avoids a buffer allocation and a copy.
 	if rt, ok := dst.(ReaderFrom); ok {
 		return rt.ReadFrom(LimitReader(src, n))
@@ -246,12 +246,12 @@ func Copyn(dst Writer, src Reader, n int64) (written int64, err os.Error) {
 // Otherwise, if src implements the WriterTo interface,
 // the copy is implemented by calling src.WriteTo(dst).
 func Copy(dst Writer, src Reader) (written int64, err os.Error) {
-	// If the writer has a ReadFrom method, use it to to do the copy.
+	// If the writer has a ReadFrom method, use it to do the copy.
 	// Avoids an allocation and a copy.
 	if rt, ok := dst.(ReaderFrom); ok {
 		return rt.ReadFrom(src)
 	}
-	// Similarly, if the reader has a WriteTo method, use it to to do the copy.
+	// Similarly, if the reader has a WriteTo method, use it to do the copy.
 	if wt, ok := src.(WriterTo); ok {
 		return wt.WriteTo(dst)
 	}
