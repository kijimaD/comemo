commit ec58e3f3271de385cf976a805e611d3da09c3a0e
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Fri Jun 17 15:19:59 2022 -0700

    test: add regress test for #53419
    
    This currently works with GOEXPERIMENT=unified. Add a regress test to
    make sure it stays that way.
    
    Updates #53419.
    
    Change-Id: I2ea1f9039c59807fbd497d69a0420771f8d6d035
    Reviewed-on: https://go-review.googlesource.com/c/go/+/413014
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    Auto-Submit: Matthew Dempsky <mdempsky@google.com>
    Reviewed-by: Robert Griesemer <gri@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
---
 src/go/internal/gcimporter/gcimporter_test.go |  1 +
 test/run.go                                   |  1 +
 test/typeparam/issue53419.go                  | 28 +++++++++++++++++++++++++++
 3 files changed, 30 insertions(+)

diff --git a/src/go/internal/gcimporter/gcimporter_test.go b/src/go/internal/gcimporter/gcimporter_test.go
index 6dced31ffb..9aca6216a7 100644
--- a/src/go/internal/gcimporter/gcimporter_test.go
+++ b/src/go/internal/gcimporter/gcimporter_test.go
@@ -177,6 +177,7 @@ func TestImportTypeparamTests(t *testing.T) {
 		"equal.go":      "inconsistent embedded sorting", // TODO(rfindley): investigate this.
 		"nested.go":     "fails to compile",              // TODO(rfindley): investigate this.
 		"issue50417.go": "inconsistent interface member sorting",
+		"issue53419.go": "fails to compile",
 	}
 
 	for _, entry := range list {
diff --git a/test/run.go b/test/run.go
index cb1622ccc9..8934e23b38 100644
--- a/test/run.go
+++ b/test/run.go
@@ -1966,6 +1966,7 @@ var types2Failures32Bit = setOf(
 var go118Failures = setOf(
 	"typeparam/nested.go",     // 1.18 compiler doesn't support function-local types with generics
 	"typeparam/issue51521.go", // 1.18 compiler produces bad panic message and link error
+	"typeparam/issue53419.go", // 1.18 compiler mishandles generic selector resolution
 )
 
 // In all of these cases, the 1.17 compiler reports reasonable errors, but either the
diff --git a/test/typeparam/issue53419.go b/test/typeparam/issue53419.go
new file mode 100644
index 0000000000..62a226ff9f
--- /dev/null
+++ b/test/typeparam/issue53419.go
@@ -0,0 +1,28 @@
+// run
+
+// Copyright 2022 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package main
+
+type T1 struct{}
+type T2 struct{}
+type Both struct {
+	T1
+	T2
+}
+
+func (T1) m()   { panic("FAIL") }
+func (T2) m()   { panic("FAIL") }
+func (Both) m() {}
+
+func f[T interface{ m() }](c T) {
+	c.m()
+}
+
+func main() {
+	var b Both
+	b.m()
+	f(b)
+}
