commit 1a2ca95ad2d0e6599ab8b9772c30afbb743abc89
Author: Robert Findley <rfindley@google.com>
Date:   Sat Jun 4 17:01:47 2022 -0400

    go/types, types2: only set instance context if packages match
    
    In CL 404885, we avoid infinite expansion of type instances by sharing a
    context between the expanding type and new instances created during
    expansion. This ensures that we do not create an infinite number of
    identical but distinct instances in the presence of reference cycles.
    This pins additional memory to the new instance, but no more
    (approximately) than would be pinned by the original expanding instance.
    
    However, we can do better: since type cycles are only possible within a
    single package, we only need to share the local context if the two types
    are in the same package. This reduces the scope of the shared local
    context, and in particular can avoid pinning the package of the
    expanding type to the package of the newly created instance.
    
    Updates #52728
    
    Change-Id: Iad2c85f4ecf60125f1da0ba22a7fdec7423e0338
    Reviewed-on: https://go-review.googlesource.com/c/go/+/410416
    Run-TryBot: Robert Findley <rfindley@google.com>
    Reviewed-by: Robert Griesemer <gri@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>

 src/cmd/compile/internal/types2/instantiate.go | 39 +++++++++++++-------------
 src/cmd/compile/internal/types2/named.go       | 35 ++++++++++++++++-------
 src/cmd/compile/internal/types2/subst.go       | 28 +++++++++---------
 src/go/types/instantiate.go                    | 39 +++++++++++++-------------
 src/go/types/named.go                          | 35 ++++++++++++++++-------
 src/go/types/subst.go                          | 28 +++++++++---------
 6 files changed, 120 insertions(+), 84 deletions(-)
