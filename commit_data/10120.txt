commit 8658b36ba2cab730e1717d61a88f72d92b27a286
Author: Russ Cox <rsc@golang.org>
Date:   Wed Oct 26 15:27:47 2011 -0700

    test/alias.go: additional tests
    
    R=ken2
    CC=golang-dev
    https://golang.org/cl/5327045
---
 test/alias.go  | 18 +++++++++++++++++-
 test/alias1.go | 54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 71 insertions(+), 1 deletion(-)

diff --git a/test/alias.go b/test/alias.go
index 6039b3183f..199c782d00 100644
--- a/test/alias.go
+++ b/test/alias.go
@@ -9,11 +9,27 @@ package main
 // Test that error messages say what the source file says
 // (uint8 vs byte).
 
+import (
+	"fmt"
+	"utf8"
+)
+
 func f(byte) {}
 func g(uint8) {}
 
 func main() {
-	var x int
+	var x float64
 	f(x)  // ERROR "byte"
 	g(x)  // ERROR "uint8"
+
+	// Test across imports.
+
+	var ff fmt.Formatter
+	var fs fmt.State
+	ff.Format(fs, x)  // ERROR "rune"
+
+	utf8.RuneStart(x)  // ERROR "byte"
+
+	var s utf8.String
+	s.At(x)  // ERROR "int"
 }
diff --git a/test/alias1.go b/test/alias1.go
new file mode 100644
index 0000000000..e8ef8a23f9
--- /dev/null
+++ b/test/alias1.go
@@ -0,0 +1,54 @@
+// $G $D/$F.go && $L $F.$A && ./$A.out
+
+// Copyright 2011 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package main
+
+// Test that dynamic interface checks treat byte=uint8
+// and rune=int or rune=int32.
+
+func main() {
+	var x interface{}
+
+	x = byte(1)
+	switch x.(type) {
+	case uint8:
+		// ok
+	default:
+		println("byte != uint8")
+	}
+
+	x = uint8(2)
+	switch x.(type) {
+	case byte:
+		// ok
+	default:
+		println("uint8 != byte")
+	}
+
+	rune32 := false
+	x = rune(3)
+	switch x.(type) {
+	case int:
+		// ok
+	case int32:
+		// must be new code
+		rune32 = true
+	default:
+		println("rune != int and rune != int32")
+	}
+
+	if rune32 {
+		x = int32(4)
+	} else {
+		x = int(5)
+	}
+	switch x.(type) {
+	case rune:
+		// ok
+	default:
+		println("int (or int32) != rune")
+	}
+}
