commit a41db4318d0e551e22d0766d6191e436ea9fa87b
Author: Russ Cox <rsc@golang.org>
Date:   Fri Sep 3 15:37:45 2010 -0400

    goinstall: assume go binaries are in path
    
    (Following new convention.)
    
    Fixes #1063.
    
    R=adg
    CC=golang-dev
    https://golang.org/cl/2115042
---
 src/cmd/goinstall/main.go | 4 ----
 src/cmd/goinstall/make.go | 4 ++--
 2 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/src/cmd/goinstall/main.go b/src/cmd/goinstall/main.go
index f0bd9c5b1c..2d410cd4fc 100644
--- a/src/cmd/goinstall/main.go
+++ b/src/cmd/goinstall/main.go
@@ -29,7 +29,6 @@ func usage() {
 var (
 	argv0         = os.Args[0]
 	errors        = false
-	gobin         = os.Getenv("GOBIN")
 	parents       = make(map[string]string)
 	root          = runtime.GOROOT()
 	visit         = make(map[string]status)
@@ -57,9 +56,6 @@ func main() {
 		fmt.Fprintf(os.Stderr, "%s: no $GOROOT\n", argv0)
 		os.Exit(1)
 	}
-	if gobin == "" {
-		gobin = root + "/bin"
-	}
 	root += "/src/pkg/"
 
 	// special case - "unsafe" is already installed
diff --git a/src/cmd/goinstall/make.go b/src/cmd/goinstall/make.go
index 769c874159..4e001b49bd 100644
--- a/src/cmd/goinstall/make.go
+++ b/src/cmd/goinstall/make.go
@@ -21,14 +21,14 @@ func domake(dir, pkg string, local bool) os.Error {
 	if local {
 		_, err := os.Stat(dir + "/Makefile")
 		if err == nil {
-			return run(dir, nil, gobin+"/gomake", "install")
+			return run(dir, nil, "gomake", "install")
 		}
 	}
 	makefile, err := makeMakefile(dir, pkg)
 	if err != nil {
 		return err
 	}
-	return run(dir, makefile, gobin+"/gomake", "-f-", "install")
+	return run(dir, makefile, "gomake", "-f-", "install")
 }
 
 // makeMakefile computes the standard Makefile for the directory dir
