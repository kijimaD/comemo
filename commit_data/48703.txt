commit cb80937bf6b728fa56ee315d2c079f07c2f9f2a1
Author: Cherry Mui <cherryyz@google.com>
Date:   Tue Jun 8 20:38:30 2021 +0000

    Revert "doc/go1.17: mention block profile bias fix"
    
    This reverts CL 324471 (commit 689f4c7415acc8a135440574a483e0eeabba8b87).
    
    Reason for revert: break ~all builders. And it is not a doc-only change.
    
    Change-Id: Iadbdda34d2ca476a9f5e6c2d3a28592ed7ccb067
    Reviewed-on: https://go-review.googlesource.com/c/go/+/326170
    Trust: Cherry Mui <cherryyz@google.com>
    Run-TryBot: Cherry Mui <cherryyz@google.com>
    Reviewed-by: Heschi Kreinick <heschi@google.com>
---
 doc/go1.17.html                 | 10 ----------
 src/runtime/pprof/pprof_test.go | 22 ----------------------
 2 files changed, 32 deletions(-)

diff --git a/doc/go1.17.html b/doc/go1.17.html
index 56f88e6724..1e153377d6 100644
--- a/doc/go1.17.html
+++ b/doc/go1.17.html
@@ -737,16 +737,6 @@ Do not send CLs removing the interior tags from such phrases.
   </dd>
 </dl><!-- runtime/metrics -->
 
-
-<dl id="runtime/pprof"><dt><a href="/pkg/runtime/pprof">runtime/pprof</a></dt>
-  <dd>
-    <p><!-- CL 299991 -->
-      Block profiles are no longer biased to favor infrequent long events over
-      frequent short events.
-    </p>
-  </dd>
-</dl><!-- runtime/pprof -->
-
 <dl id="strconv"><dt><a href="/pkg/strconv/">strconv</a></dt>
   <dd>
     <p><!-- CL 170079 -->
diff --git a/src/runtime/pprof/pprof_test.go b/src/runtime/pprof/pprof_test.go
index e139ee787d..7cbb4fc7ae 100644
--- a/src/runtime/pprof/pprof_test.go
+++ b/src/runtime/pprof/pprof_test.go
@@ -106,28 +106,6 @@ func TestCPUProfileMultithreaded(t *testing.T) {
 	})
 }
 
-func TestCPUProfileThreadBias(t *testing.T) {
-	cpuHogA := func(dur time.Duration) {
-		cpuHogger(cpuHog1, &salt2, dur)
-	}
-
-	defer runtime.GOMAXPROCS(runtime.GOMAXPROCS(2))
-	prof := testCPUProfile(t, stackContains, []string{"runtime/pprof.cpuHog1", "runtime/pprof.cpuHog2"}, avoidFunctions(), func(dur time.Duration) {
-		//c := make(chan int)
-		//go func() {
-		//cpuHogger(cpuHog1, &salt1, dur)
-		//c <- 1
-		//}()
-		cpuHogA(dur)
-		//<-c
-	})
-	fmt.Printf("%#v\n", prof)
-}
-
-func cpuHogA(dur time.Duration) {
-	cpuHogger(cpuHog1, &salt2, dur)
-}
-
 // containsInlinedCall reports whether the function body for the function f is
 // known to contain an inlined function call within the first maxBytes bytes.
 func containsInlinedCall(f interface{}, maxBytes int) bool {
