commit 42057e9848d40fc6181cd7a68fd788c652772b8d
Author: korzhao <korzhao95@gmail.com>
Date:   Sat Sep 11 01:14:54 2021 +0800

    cmd/compile: save the note of fields when translating struct
    
    Fixes #48317
    
    Change-Id: I756ae6253022870071004332dd8f49169307f7e6
    Reviewed-on: https://go-review.googlesource.com/c/go/+/349013
    Run-TryBot: Dan Scales <danscales@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
    Reviewed-by: Dan Scales <danscales@google.com>
    Trust: Dan Scales <danscales@google.com>
---
 src/cmd/compile/internal/typecheck/subr.go |  1 +
 test/typeparam/issue48317.go               | 38 ++++++++++++++++++++++++++++++
 2 files changed, 39 insertions(+)

diff --git a/src/cmd/compile/internal/typecheck/subr.go b/src/cmd/compile/internal/typecheck/subr.go
index 34f20879f1..5323872eaf 100644
--- a/src/cmd/compile/internal/typecheck/subr.go
+++ b/src/cmd/compile/internal/typecheck/subr.go
@@ -1312,6 +1312,7 @@ func (ts *Tsubster) tstruct(t *types.Type, force bool) *types.Type {
 			// the type param, not the instantiated type).
 			newfields[i] = types.NewField(f.Pos, f.Sym, t2)
 			newfields[i].Embedded = f.Embedded
+			newfields[i].Note = f.Note
 			if f.IsDDD() {
 				newfields[i].SetIsDDD(true)
 			}
diff --git a/test/typeparam/issue48317.go b/test/typeparam/issue48317.go
new file mode 100644
index 0000000000..c8f088dc7a
--- /dev/null
+++ b/test/typeparam/issue48317.go
@@ -0,0 +1,38 @@
+// run -gcflags="-G=3"
+
+// Copyright 2021 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package main
+
+import (
+	"encoding/json"
+)
+
+type A[T any] struct {
+	F1 string `json:"t1"`
+	F2 T      `json:"t2"`
+	B  B      `json:"t3"`
+}
+
+type B struct {
+	F4 int `json:"t4"`
+}
+
+func a[T any]() {
+	data := `{"t1":"1","t2":2,"t3":{"t4":4}}`
+	a1 := A[T]{}
+	if err := json.Unmarshal([]byte(data), &a1); err != nil {
+		panic(err)
+	}
+	if bytes, err := json.Marshal(&a1); err != nil {
+		panic(err)
+	} else if string(bytes) != data {
+		panic(string(bytes))
+	}
+}
+
+func main() {
+	a[int]()
+}
