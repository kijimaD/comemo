commit f755e16726d954fee279935ef6ce64e0a89c6757
Author: Russ Cox <rsc@golang.org>
Date:   Fri Jul 22 12:40:56 2022 -0400

    bootstrap.bash: delete BOOTSTRAP_FORMAT=mintgz code
    
    It has been superceded by golang.org/x/build/cmd/genbootstrap.
    
    Change-Id: Ifc00cd1de769bf807a0f6df643897c2f2339a073
    Reviewed-on: https://go-review.googlesource.com/c/go/+/419116
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Gopher Robot <gobot@golang.org>
---
 src/bootstrap.bash | 46 ++--------------------------------------------
 1 file changed, 2 insertions(+), 44 deletions(-)

diff --git a/src/bootstrap.bash b/src/bootstrap.bash
index 4038eaf942..1e4f1c5081 100755
--- a/src/bootstrap.bash
+++ b/src/bootstrap.bash
@@ -15,14 +15,8 @@
 # Only changes that have been committed to Git (at least locally,
 # not necessary reviewed and submitted to master) are included in the tree.
 #
-# As a special case for Go's internal use only, if the
-# BOOTSTRAP_FORMAT environment variable is set to "mintgz", the
-# resulting archive is intended for use by the Go build system and
-# differs in that the mintgz file:
-#   * is a tar.gz file instead of bz2
-#   * has many unnecessary files deleted to reduce its size
-#   * does not have a shared directory component for each tar entry
-# Do not depend on the mintgz format.
+# See also golang.org/x/build/cmd/genbootstrap, which is used
+# to generate bootstrap tgz files for builders.
 
 set -e
 
@@ -37,11 +31,6 @@ if [ -e $targ ]; then
 	exit 2
 fi
 
-if [ "$BOOTSTRAP_FORMAT" != "mintgz" -a "$BOOTSTRAP_FORMAT" != "" ]; then
-	echo "unknown BOOTSTRAP_FORMAT format"
-	exit 2
-fi
-
 unset GOROOT
 src=$(cd .. && pwd)
 echo "#### Copying to $targ"
@@ -79,39 +68,8 @@ else
 	rm -rf "pkg/${gohostos}_${gohostarch}" "pkg/tool/${gohostos}_${gohostarch}"
 fi
 
-if [ "$BOOTSTRAP_FORMAT" = "mintgz" ]; then
-	# Fetch git revision before rm -rf .git.
-	GITREV=$(git rev-parse --short HEAD)
-fi
-
 rm -rf pkg/bootstrap pkg/obj .git
 
-# Support for building minimal tar.gz for the builders.
-# The build system doesn't support bzip2, and by deleting more stuff,
-# they start faster, especially on machines without fast filesystems
-# and things like tmpfs configures.
-# Do not depend on this format. It's for internal use only.
-if [ "$BOOTSTRAP_FORMAT" = "mintgz" ]; then
-	OUTGZ="gobootstrap-${GOOS}-${GOARCH}-${GITREV}.tar.gz"
-	echo "Preparing to generate build system's ${OUTGZ}; cleaning ..."
-	rm -rf bin/gofmt
-	rm -rf src/runtime/race/race_*.syso
-	rm -rf api test doc misc/cgo/test
-	rm -rf pkg/tool/*_*/{addr2line,api,cgo,cover,doc,fix,nm,objdump,pack,pprof,test2json,trace,vet}
-	rm -rf pkg/*_*/{image,database,cmd}
-	rm -rf $(find . -type d -name testdata)
-	find . -type f -name '*_test.go' -exec rm {} \;
-	# git clean doesn't clean symlinks apparently, and the buildlet
-	# rejects them, so:
-	find . -type l -exec rm {} \;
-
-	echo "Writing ${OUTGZ} ..."
-	tar cf - . | gzip -9 > ../$OUTGZ
-	cd ..
-	ls -l "$(pwd)/$OUTGZ"
-	exit 0
-fi
-
 echo ----
 echo Bootstrap toolchain for "$GOOS/$GOARCH" installed in "$(pwd)".
 echo Building tbz.
