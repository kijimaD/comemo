commit b79314289b93e3377f349b1d65c6b2073ac4e6ad
Author: Paul E. Murphy <murp@ibm.com>
Date:   Thu Oct 31 11:49:44 2024 -0500

    os: skip TestPipeThreads on aix
    
    This tests fails sporadically on the aix-ppc64 CI. I suspect this is
    an aix performance related issue. Skip the test.
    
    AIX seems slow to perform a non-blocking reading on a pipe, and this
    results in too many threads being created. This happens as far back
    as go1.22, where I stopped looking.
    
    On the GCC farm machine gcc119, The failure rate seemed coupled to
    GOMAXPROCS; about 1% for <=8, up to 40%+ for >=30 for all releases
    tested.
    
    For #70131
    
    Change-Id: If002b55e5a4586d10cc7876d7c25259e61b17163
    Reviewed-on: https://go-review.googlesource.com/c/go/+/623817
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Run-TryBot: Paul Murphy <murp@ibm.com>
    Auto-Submit: Ian Lance Taylor <iant@golang.org>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Carlos Amedee <carlos@golang.org>
---
 src/os/os_test.go | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/os/os_test.go b/src/os/os_test.go
index 5b1c8ba2f0..4470acd83b 100644
--- a/src/os/os_test.go
+++ b/src/os/os_test.go
@@ -2626,6 +2626,8 @@ func TestRemoveAllRace(t *testing.T) {
 // Test that reading from a pipe doesn't use up a thread.
 func TestPipeThreads(t *testing.T) {
 	switch runtime.GOOS {
+	case "aix":
+		t.Skip("skipping on aix; issue 70131")
 	case "illumos", "solaris":
 		t.Skip("skipping on Solaris and illumos; issue 19111")
 	case "windows":
