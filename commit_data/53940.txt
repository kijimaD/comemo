commit 51c34e2f0b51e62ba195a90fa1c1a8d5be83e2dd
Author: Michael Anthony Knyszek <mknyszek@google.com>
Date:   Wed Sep 7 20:33:06 2022 +0000

    runtime: remove unused scanSize parameter to gcmarknewobject
    
    This was left over from the old pacer, and never removed when the old
    pacer was removed in Go 1.19.
    
    Change-Id: I79e5f0420c6100c66bd06129a68f5bbab7c1ea8f
    Reviewed-on: https://go-review.googlesource.com/c/go/+/429256
    Reviewed-by: Keith Randall <khr@google.com>
    Run-TryBot: Michael Knyszek <mknyszek@google.com>
    Auto-Submit: Michael Knyszek <mknyszek@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/runtime/malloc.go  | 4 ++--
 src/runtime/mgcmark.go | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/runtime/malloc.go b/src/runtime/malloc.go
index 205c6d44a8..f2b93c04f4 100644
--- a/src/runtime/malloc.go
+++ b/src/runtime/malloc.go
@@ -1052,8 +1052,8 @@ func mallocgc(size uintptr, typ *_type, needzero bool) unsafe.Pointer {
 		}
 	}
 
-	var scanSize uintptr
 	if !noscan {
+		var scanSize uintptr
 		heapBitsSetType(uintptr(x), size, dataSize, typ)
 		if dataSize > typ.size {
 			// Array allocation. If there are any
@@ -1081,7 +1081,7 @@ func mallocgc(size uintptr, typ *_type, needzero bool) unsafe.Pointer {
 	// This may be racing with GC so do it atomically if there can be
 	// a race marking the bit.
 	if gcphase != _GCoff {
-		gcmarknewobject(span, uintptr(x), size, scanSize)
+		gcmarknewobject(span, uintptr(x), size)
 	}
 
 	if raceenabled {
diff --git a/src/runtime/mgcmark.go b/src/runtime/mgcmark.go
index 8d3259c79a..90240c3159 100644
--- a/src/runtime/mgcmark.go
+++ b/src/runtime/mgcmark.go
@@ -1563,7 +1563,7 @@ func gcDumpObject(label string, obj, off uintptr) {
 //
 //go:nowritebarrier
 //go:nosplit
-func gcmarknewobject(span *mspan, obj, size, scanSize uintptr) {
+func gcmarknewobject(span *mspan, obj, size uintptr) {
 	if useCheckmark { // The world should be stopped so this should not happen.
 		throw("gcmarknewobject called while doing checkmark")
 	}
