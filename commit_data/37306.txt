commit 13baf4b2cd34dfb41c570e35b48ec287713f4d7f
Author: Keith Randall <keithr@alum.mit.edu>
Date:   Sun Nov 4 19:23:08 2018 -0800

    cmd/compile: encourage inlining of functions with single-call bodies
    
    This is a simple tweak to allow a bit more mid-stack inlining.
    In cases like this:
    
    func f() {
        g()
    }
    
    We'd really like to inline f into its callers. It can't hurt.
    
    We implement this optimization by making calls a bit cheaper, enough
    to afford a single call in the function body, but not 2.
    The remaining budget allows for some argument modification, or perhaps
    a wrapping conditional:
    
    func f(x int) {
        g(x, 0)
    }
    func f(x int) {
        if x > 0 {
            g()
        }
    }
    
    Update #19348
    
    Change-Id: Ifb1ea0dd1db216c3fd5c453c31c3355561fe406f
    Reviewed-on: https://go-review.googlesource.com/c/147361
    Reviewed-by: Austin Clements <austin@google.com>
    Reviewed-by: David Chase <drchase@google.com>

 src/cmd/compile/internal/gc/inl.go | 14 +++++++++++---
 src/runtime/extern.go              |  1 +
 src/runtime/runtime-gdb_test.go    |  8 +++-----
 src/runtime/stack_test.go          |  3 +++
 test/closure3.dir/main.go          |  2 ++
 test/fixedbugs/issue7921.go        |  2 +-
 test/inline.go                     | 18 ++++++++++++++++++
 test/live_syscall.go               |  8 ++++----
 8 files changed, 43 insertions(+), 13 deletions(-)
