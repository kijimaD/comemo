commit c5d419683463ef0ce5ba3d078624bd36e9e20e31
Author: Shenghou Ma <minux.ma@gmail.com>
Date:   Wed Apr 3 03:34:04 2013 +0800

    cmd/go: fix typo in docs
    Fixes #5181.
    
    R=golang-dev, bradfitz
    CC=golang-dev
    https://golang.org/cl/8277043
---
 src/cmd/go/doc.go  | 13 +++++++------
 src/cmd/go/test.go | 13 +++++++------
 2 files changed, 14 insertions(+), 12 deletions(-)

diff --git a/src/cmd/go/doc.go b/src/cmd/go/doc.go
index 498365f838..6ffcf9ab6c 100644
--- a/src/cmd/go/doc.go
+++ b/src/cmd/go/doc.go
@@ -708,17 +708,18 @@ control the execution of any test:
 	    Print memory allocation statistics for benchmarks.
 
 	-benchtime t
-		Run enough iterations of each benchmark to take t, specified
-		as a time.Duration (for example, -benchtime 1h30s).
-		The default is 1 second (1s).
+	    Run enough iterations of each benchmark to take t, specified
+	    as a time.Duration (for example, -benchtime 1h30s).
+	    The default is 1 second (1s).
 
 	-blockprofile block.out
 	    Write a goroutine blocking profile to the specified file
 	    when all tests are complete.
 
 	-blockprofilerate n
-	    Control the detail provided in goroutine blocking profiles by setting
-	    runtime.BlockProfileRate to n.  See 'godoc runtime BlockProfileRate'.
+	    Control the detail provided in goroutine blocking profiles by
+	    calling runtime.SetBlockProfileRate with n.
+	    See 'godoc runtime SetBlockProfileRate'.
 	    The profiler aims to sample, on average, one blocking event every
 	    n nanoseconds the program spends blocked.  By default,
 	    if -test.blockprofile is set without this flag, all blocking events
@@ -760,7 +761,7 @@ control the execution of any test:
 	    exhaustive tests.
 
 	-timeout t
-		If a test runs longer than t, panic.
+	    If a test runs longer than t, panic.
 
 	-v
 	    Verbose output: log all tests as they are run. Also print all
diff --git a/src/cmd/go/test.go b/src/cmd/go/test.go
index 56046a8c71..58ebcc0717 100644
--- a/src/cmd/go/test.go
+++ b/src/cmd/go/test.go
@@ -98,17 +98,18 @@ control the execution of any test:
 	    Print memory allocation statistics for benchmarks.
 
 	-benchtime t
-		Run enough iterations of each benchmark to take t, specified
-		as a time.Duration (for example, -benchtime 1h30s).
-		The default is 1 second (1s).
+	    Run enough iterations of each benchmark to take t, specified
+	    as a time.Duration (for example, -benchtime 1h30s).
+	    The default is 1 second (1s).
 
 	-blockprofile block.out
 	    Write a goroutine blocking profile to the specified file
 	    when all tests are complete.
 
 	-blockprofilerate n
-	    Control the detail provided in goroutine blocking profiles by setting
-	    runtime.BlockProfileRate to n.  See 'godoc runtime BlockProfileRate'.
+	    Control the detail provided in goroutine blocking profiles by
+	    calling runtime.SetBlockProfileRate with n.
+	    See 'godoc runtime SetBlockProfileRate'.
 	    The profiler aims to sample, on average, one blocking event every
 	    n nanoseconds the program spends blocked.  By default,
 	    if -test.blockprofile is set without this flag, all blocking events
@@ -150,7 +151,7 @@ control the execution of any test:
 	    exhaustive tests.
 
 	-timeout t
-		If a test runs longer than t, panic.
+	    If a test runs longer than t, panic.
 
 	-v
 	    Verbose output: log all tests as they are run. Also print all
