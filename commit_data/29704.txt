commit 4caf93c9571ed637cf3876042d263b0d8938a2fe
Author: Oleg Vakheta <helginet@gmail.com>
Date:   Fri Nov 27 17:07:58 2015 +0200

    fmt: add tests for parsenum
    
    Change-Id: Ie7b869892816a171d8c71612998cc32a190aeff9
    Reviewed-on: https://go-review.googlesource.com/17227
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Russ Cox <rsc@golang.org>
---
 src/fmt/export_test.go |  1 +
 src/fmt/fmt_test.go    | 23 +++++++++++++++++++++++
 2 files changed, 24 insertions(+)

diff --git a/src/fmt/export_test.go b/src/fmt/export_test.go
index 12d5a1130a..14163a29af 100644
--- a/src/fmt/export_test.go
+++ b/src/fmt/export_test.go
@@ -5,3 +5,4 @@
 package fmt
 
 var IsSpace = isSpace
+var Parsenum = parsenum
diff --git a/src/fmt/fmt_test.go b/src/fmt/fmt_test.go
index 5fb2a632b2..8c1c02158e 100644
--- a/src/fmt/fmt_test.go
+++ b/src/fmt/fmt_test.go
@@ -1737,3 +1737,26 @@ func TestFormatterFlags(t *testing.T) {
 		}
 	}
 }
+
+func TestParsenum(t *testing.T) {
+	testCases := []struct {
+		s          string
+		start, end int
+		num        int
+		isnum      bool
+		newi       int
+	}{
+		{"a123", 0, 4, 0, false, 0},
+		{"1234", 1, 1, 0, false, 1},
+		{"123a", 0, 4, 123, true, 3},
+		{"12a3", 0, 4, 12, true, 2},
+		{"1234", 0, 4, 1234, true, 4},
+		{"1a234", 1, 3, 0, false, 1},
+	}
+	for _, tt := range testCases {
+		num, isnum, newi := Parsenum(tt.s, tt.start, tt.end)
+		if num != tt.num || isnum != tt.isnum || newi != tt.newi {
+			t.Errorf("parsenum(%q, %d, %d) = %d, %v, %d, want %d, %v, %d", tt.s, tt.start, tt.end, num, isnum, newi, tt.num, tt.isnum, tt.newi)
+		}
+	}
+}
