commit 0b76e326bb15ec828aeb1470902a71c7416b64b9
Author: Mateusz Poliwczak <mpoliwczak34@gmail.com>
Date:   Thu Nov 3 15:18:25 2022 +0000

    net: do not modify shared test variable in TestDNSReadConfig
    
    Fixes #56542
    
    Change-Id: I294856f8fb4d49393310ec92ab40fb7d841b6570
    GitHub-Last-Rev: a4563400af816caa6119775b7b01b51134c62149
    GitHub-Pull-Request: golang/go#56545
    Reviewed-on: https://go-review.googlesource.com/c/go/+/447198
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Run-TryBot: Bryan Mills <bcmills@google.com>
    Auto-Submit: Bryan Mills <bcmills@google.com>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
---
 src/net/dnsconfig_unix_test.go | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/src/net/dnsconfig_unix_test.go b/src/net/dnsconfig_unix_test.go
index 9be751f2e3..0aae2ba85b 100644
--- a/src/net/dnsconfig_unix_test.go
+++ b/src/net/dnsconfig_unix_test.go
@@ -176,16 +176,17 @@ func TestDNSReadConfig(t *testing.T) {
 	getHostname = func() (string, error) { return "host.domain.local", nil }
 
 	for _, tt := range dnsReadConfigTests {
-		if len(tt.want.search) == 0 {
-			tt.want.search = append(tt.want.search, dnsDefaultSearch()...)
+		want := *tt.want
+		if len(want.search) == 0 {
+			want.search = dnsDefaultSearch()
 		}
 		conf := dnsReadConfig(tt.name)
 		if conf.err != nil {
 			t.Fatal(conf.err)
 		}
 		conf.mtime = time.Time{}
-		if !reflect.DeepEqual(conf, tt.want) {
-			t.Errorf("%s:\ngot: %+v\nwant: %+v", tt.name, conf, tt.want)
+		if !reflect.DeepEqual(conf, &want) {
+			t.Errorf("%s:\ngot: %+v\nwant: %+v", tt.name, conf, want)
 		}
 	}
 }
@@ -272,8 +273,13 @@ func TestDNSNameLength(t *testing.T) {
 			t.Fatal(conf.err)
 		}
 
+		suffixList := tt.want.search
+		if len(suffixList) == 0 {
+			suffixList = dnsDefaultSearch()
+		}
+
 		var shortestSuffix int
-		for _, suffix := range tt.want.search {
+		for _, suffix := range suffixList {
 			if shortestSuffix == 0 || len(suffix) < shortestSuffix {
 				shortestSuffix = len(suffix)
 			}
