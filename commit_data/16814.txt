commit 8c741c97f710c1e197cd7d2d02d8380dbb759859
Author: Russ Cox <rsc@golang.org>
Date:   Thu Jul 18 15:38:19 2013 -0400

    cmd/6a, cmd/6l: make FUNCDATA work
    
    R=ken2
    CC=golang-dev
    https://golang.org/cl/11397043
---
 src/cmd/5a/a.y     |   19 +-
 src/cmd/5a/lex.c   |    1 +
 src/cmd/5a/y.tab.c |  962 ++++++++++++++++++++++----------------------
 src/cmd/5a/y.tab.h |   72 ++--
 src/cmd/6a/a.y     |   21 +-
 src/cmd/6a/lex.c   |    1 +
 src/cmd/6a/y.tab.c | 1132 +++++++++++++++++++++++++++-------------------------
 src/cmd/6a/y.tab.h |   68 ++--
 src/cmd/8a/a.y     |   20 +-
 src/cmd/8a/lex.c   |    1 +
 src/cmd/8a/y.tab.c | 1055 ++++++++++++++++++++++++------------------------
 src/cmd/8a/y.tab.h |   64 +--
 12 files changed, 1769 insertions(+), 1647 deletions(-)

diff --git a/src/cmd/5a/a.y b/src/cmd/5a/a.y
index 467f928927..19ef98b76a 100644
--- a/src/cmd/5a/a.y
+++ b/src/cmd/5a/a.y
@@ -50,11 +50,11 @@
 %left	'*' '/' '%'
 %token	<lval>	LTYPE1 LTYPE2 LTYPE3 LTYPE4 LTYPE5
 %token	<lval>	LTYPE6 LTYPE7 LTYPE8 LTYPE9 LTYPEA
-%token	<lval>	LTYPEB LTYPEC LTYPED LTYPEE LTYPEF
+%token	<lval>	LTYPEB LTYPEC LTYPED LTYPEE
 %token	<lval>	LTYPEG LTYPEH LTYPEI LTYPEJ LTYPEK
 %token	<lval>	LTYPEL LTYPEM LTYPEN LTYPEBX LTYPEPLD
 %token	<lval>	LCONST LSP LSB LFP LPC
-%token	<lval>	LTYPEX LTYPEPC LR LREG LF LFREG LC LCREG LPSR LFCR
+%token	<lval>	LTYPEX LTYPEPC LTYPEF LR LREG LF LFREG LC LCREG LPSR LFCR
 %token	<lval>	LCOND LS LAT
 %token	<dval>	LFCONST
 %token	<sval>	LSCONST
@@ -322,10 +322,23 @@ inst:
 /*
  * PCDATA
  */
-|	LTYPEPC imm ',' imm
+|	LTYPEPC gen ',' gen
 	{
+		if($2.type != D_CONST || $4.type != D_CONST)
+			yyerror("arguments to PCDATA must be integer constants");
 		outcode($1, Always, &$2, NREG, &$4);
 	}
+/*
+ * FUNCDATA
+ */
+|	LTYPEF gen ',' gen
+	{
+		if($2.type != D_CONST)
+			yyerror("index for FUNCDATA must be integer constant");
+		if($4.type != D_EXTERN && $4.type != D_STATIC)
+			yyerror("value for FUNCDATA must be symbol reference");
+ 		outcode($1, Always, &$2, NREG, &$4);
+	}
 /*
  * END
  */
diff --git a/src/cmd/5a/lex.c b/src/cmd/5a/lex.c
index 5e31b243c8..3b537a9675 100644
--- a/src/cmd/5a/lex.c
+++ b/src/cmd/5a/lex.c
@@ -415,6 +415,7 @@ struct
 
 	"USEFIELD",	LTYPEN, AUSEFIELD,
 	"PCDATA",	LTYPEPC,	APCDATA,
+	"FUNCDATA",	LTYPEF,	AFUNCDATA,
 
 	0
 };
diff --git a/src/cmd/5a/y.tab.c b/src/cmd/5a/y.tab.c
index da76656bf8..c2895a7dc3 100644
--- a/src/cmd/5a/y.tab.c
+++ b/src/cmd/5a/y.tab.c
@@ -80,24 +80,24 @@
      LTYPEC = 269,
      LTYPED = 270,
      LTYPEE = 271,
-     LTYPEF = 272,
-     LTYPEG = 273,
-     LTYPEH = 274,
-     LTYPEI = 275,
-     LTYPEJ = 276,
-     LTYPEK = 277,
-     LTYPEL = 278,
-     LTYPEM = 279,
-     LTYPEN = 280,
-     LTYPEBX = 281,
-     LTYPEPLD = 282,
-     LCONST = 283,
-     LSP = 284,
-     LSB = 285,
-     LFP = 286,
-     LPC = 287,
-     LTYPEX = 288,
-     LTYPEPC = 289,
+     LTYPEG = 272,
+     LTYPEH = 273,
+     LTYPEI = 274,
+     LTYPEJ = 275,
+     LTYPEK = 276,
+     LTYPEL = 277,
+     LTYPEM = 278,
+     LTYPEN = 279,
+     LTYPEBX = 280,
+     LTYPEPLD = 281,
+     LCONST = 282,
+     LSP = 283,
+     LSB = 284,
+     LFP = 285,
+     LPC = 286,
+     LTYPEX = 287,
+     LTYPEPC = 288,
+     LTYPEF = 289,
      LR = 290,
      LREG = 291,
      LF = 292,
@@ -131,24 +131,24 @@
 #define LTYPEC 269
 #define LTYPED 270
 #define LTYPEE 271
-#define LTYPEF 272
-#define LTYPEG 273
-#define LTYPEH 274
-#define LTYPEI 275
-#define LTYPEJ 276
-#define LTYPEK 277
-#define LTYPEL 278
-#define LTYPEM 279
-#define LTYPEN 280
-#define LTYPEBX 281
-#define LTYPEPLD 282
-#define LCONST 283
-#define LSP 284
-#define LSB 285
-#define LFP 286
-#define LPC 287
-#define LTYPEX 288
-#define LTYPEPC 289
+#define LTYPEG 272
+#define LTYPEH 273
+#define LTYPEI 274
+#define LTYPEJ 275
+#define LTYPEK 276
+#define LTYPEL 277
+#define LTYPEM 278
+#define LTYPEN 279
+#define LTYPEBX 280
+#define LTYPEPLD 281
+#define LCONST 282
+#define LSP 283
+#define LSB 284
+#define LFP 285
+#define LPC 286
+#define LTYPEX 287
+#define LTYPEPC 288
+#define LTYPEF 289
 #define LR 290
 #define LREG 291
 #define LF 292
@@ -435,16 +435,16 @@ union yyalloc
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  2
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   615
+#define YYLAST   609
 
 /* YYNTOKENS -- Number of terminals.  */
 #define YYNTOKENS  71
 /* YYNNTS -- Number of nonterminals.  */
 #define YYNNTS  35
 /* YYNRULES -- Number of rules.  */
-#define YYNRULES  132
+#define YYNRULES  133
 /* YYNRULES -- Number of states.  */
-#define YYNSTATES  335
+#define YYNSTATES  339
 
 /* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
 #define YYUNDEFTOK  2
@@ -498,16 +498,16 @@ static const yytype_uint16 yyprhs[] =
       26,    31,    33,    36,    39,    47,    54,    60,    66,    72,
       77,    82,    86,    90,    95,   102,   110,   118,   126,   133,
      140,   144,   149,   156,   165,   172,   177,   181,   187,   193,
-     201,   208,   221,   229,   239,   242,   247,   250,   251,   254,
-     257,   258,   261,   266,   269,   272,   275,   278,   283,   286,
-     288,   291,   295,   297,   301,   305,   307,   309,   311,   316,
-     318,   320,   322,   324,   326,   328,   330,   334,   336,   341,
-     343,   348,   350,   352,   354,   356,   359,   361,   367,   372,
-     377,   382,   387,   389,   391,   393,   395,   400,   402,   404,
-     406,   411,   413,   415,   417,   422,   427,   433,   441,   442,
-     445,   448,   450,   452,   454,   456,   458,   461,   464,   467,
-     471,   472,   475,   477,   481,   485,   489,   493,   497,   502,
-     507,   511,   515
+     201,   208,   221,   229,   239,   242,   247,   252,   255,   256,
+     259,   262,   263,   266,   271,   274,   277,   280,   283,   288,
+     291,   293,   296,   300,   302,   306,   310,   312,   314,   316,
+     321,   323,   325,   327,   329,   331,   333,   335,   339,   341,
+     346,   348,   353,   355,   357,   359,   361,   364,   366,   372,
+     377,   382,   387,   392,   394,   396,   398,   400,   405,   407,
+     409,   411,   416,   418,   420,   422,   427,   432,   438,   446,
+     447,   450,   453,   455,   457,   459,   461,   463,   466,   469,
+     472,   476,   477,   480,   482,   486,   490,   494,   498,   502,
+     507,   512,   516,   520
 };
 
 /* YYRHS -- A `-1'-separated list of the rules' RHS.  */
@@ -521,7 +521,7 @@ static const yytype_int8 yyrhs[] =
       64,    96,    64,    -1,    13,    78,    89,    64,    91,    -1,
       14,    78,    89,    64,    91,    -1,    15,    78,    84,    64,
       84,    -1,    16,    78,    79,    80,    -1,    16,    78,    79,
-      85,    -1,    36,    79,    86,    -1,    17,    79,    80,    -1,
+      85,    -1,    35,    79,    86,    -1,    17,    79,    80,    -1,
       18,    78,    79,    84,    -1,    19,    78,    89,    64,    96,
       79,    -1,    20,    78,    87,    64,    65,    83,    66,    -1,
       20,    78,    65,    83,    66,    64,    87,    -1,    21,    78,
@@ -530,41 +530,42 @@ static const yytype_int8 yyrhs[] =
       22,    78,    79,    -1,    23,   100,    64,    90,    -1,    23,
      100,    64,   103,    64,    90,    -1,    23,   100,    64,   103,
       64,    90,     9,   103,    -1,    24,   100,    11,   103,    64,
-      81,    -1,    25,    78,    91,    79,    -1,    29,    79,    81,
-      -1,    30,    78,    99,    64,    99,    -1,    32,    78,    98,
-      64,    99,    -1,    32,    78,    98,    64,    48,    64,    99,
-      -1,    33,    78,    99,    64,    99,    79,    -1,    31,    78,
+      81,    -1,    25,    78,    91,    79,    -1,    28,    79,    81,
+      -1,    29,    78,    99,    64,    99,    -1,    31,    78,    98,
+      64,    99,    -1,    31,    78,    98,    64,    48,    64,    99,
+      -1,    32,    78,    99,    64,    99,    79,    -1,    30,    78,
      103,    64,   105,    64,    96,    64,    97,    64,    97,   104,
-      -1,    34,    78,    91,    64,    91,    64,    92,    -1,    35,
-      78,    91,    64,    91,    64,    91,    64,    96,    -1,    37,
-      88,    -1,    44,    90,    64,    90,    -1,    26,    79,    -1,
-      -1,    78,    53,    -1,    78,    54,    -1,    -1,    64,    79,
-      -1,   103,    67,    42,    68,    -1,    58,   101,    -1,    59,
-     101,    -1,    69,   103,    -1,    69,    88,    -1,    69,    10,
-      69,    88,    -1,    69,    57,    -1,    82,    -1,    69,    56,
-      -1,    69,     9,    56,    -1,    96,    -1,    96,     9,    96,
-      -1,    96,    79,    83,    -1,    91,    -1,    81,    -1,    93,
-      -1,    93,    67,    96,    68,    -1,    51,    -1,    52,    -1,
-     103,    -1,    88,    -1,    99,    -1,    86,    -1,   100,    -1,
-      67,    96,    68,    -1,    86,    -1,   103,    67,    95,    68,
-      -1,   100,    -1,   100,    67,    95,    68,    -1,    87,    -1,
-      91,    -1,    90,    -1,    93,    -1,    69,   103,    -1,    96,
-      -1,    67,    96,    64,    96,    68,    -1,    96,     6,     6,
-      94,    -1,    96,     7,     7,    94,    -1,    96,     9,     7,
-      94,    -1,    96,    55,     7,    94,    -1,    96,    -1,   103,
-      -1,    46,    -1,    42,    -1,    45,    67,   105,    68,    -1,
-      95,    -1,    39,    -1,    50,    -1,    49,    67,   105,    68,
-      -1,    99,    -1,    82,    -1,    48,    -1,    47,    67,   103,
-      68,    -1,   103,    67,   102,    68,    -1,    58,   101,    67,
-     102,    68,    -1,    58,     6,     7,   101,    67,    40,    68,
-      -1,    -1,     8,   103,    -1,     9,   103,    -1,    40,    -1,
-      39,    -1,    41,    -1,    38,    -1,    60,    -1,     9,   103,
-      -1,     8,   103,    -1,    70,   103,    -1,    67,   105,    68,
-      -1,    -1,    64,   105,    -1,   103,    -1,   105,     8,   105,
-      -1,   105,     9,   105,    -1,   105,    10,   105,    -1,   105,
-      11,   105,    -1,   105,    12,   105,    -1,   105,     6,     6,
-     105,    -1,   105,     7,     7,   105,    -1,   105,     5,   105,
-      -1,   105,     4,   105,    -1,   105,     3,   105,    -1
+      -1,    33,    78,    91,    64,    91,    64,    92,    -1,    34,
+      78,    91,    64,    91,    64,    91,    64,    96,    -1,    36,
+      88,    -1,    43,    84,    64,    84,    -1,    44,    84,    64,
+      84,    -1,    26,    79,    -1,    -1,    78,    53,    -1,    78,
+      54,    -1,    -1,    64,    79,    -1,   103,    67,    41,    68,
+      -1,    58,   101,    -1,    59,   101,    -1,    69,   103,    -1,
+      69,    88,    -1,    69,    10,    69,    88,    -1,    69,    57,
+      -1,    82,    -1,    69,    56,    -1,    69,     9,    56,    -1,
+      96,    -1,    96,     9,    96,    -1,    96,    79,    83,    -1,
+      91,    -1,    81,    -1,    93,    -1,    93,    67,    96,    68,
+      -1,    51,    -1,    52,    -1,   103,    -1,    88,    -1,    99,
+      -1,    86,    -1,   100,    -1,    67,    96,    68,    -1,    86,
+      -1,   103,    67,    95,    68,    -1,   100,    -1,   100,    67,
+      95,    68,    -1,    87,    -1,    91,    -1,    90,    -1,    93,
+      -1,    69,   103,    -1,    96,    -1,    67,    96,    64,    96,
+      68,    -1,    96,     6,     6,    94,    -1,    96,     7,     7,
+      94,    -1,    96,     9,     7,    94,    -1,    96,    55,     7,
+      94,    -1,    96,    -1,   103,    -1,    46,    -1,    41,    -1,
+      45,    67,   105,    68,    -1,    95,    -1,    38,    -1,    50,
+      -1,    49,    67,   105,    68,    -1,    99,    -1,    82,    -1,
+      48,    -1,    47,    67,   103,    68,    -1,   103,    67,   102,
+      68,    -1,    58,   101,    67,   102,    68,    -1,    58,     6,
+       7,   101,    67,    39,    68,    -1,    -1,     8,   103,    -1,
+       9,   103,    -1,    39,    -1,    38,    -1,    40,    -1,    37,
+      -1,    60,    -1,     9,   103,    -1,     8,   103,    -1,    70,
+     103,    -1,    67,   105,    68,    -1,    -1,    64,   105,    -1,
+     103,    -1,   105,     8,   105,    -1,   105,     9,   105,    -1,
+     105,    10,   105,    -1,   105,    11,   105,    -1,   105,    12,
+     105,    -1,   105,     6,     6,   105,    -1,   105,     7,     7,
+     105,    -1,   105,     5,   105,    -1,   105,     4,   105,    -1,
+     105,     3,   105,    -1
 };
 
 /* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
@@ -574,16 +575,16 @@ static const yytype_uint16 yyrline[] =
       93,    99,   100,   101,   107,   111,   115,   122,   129,   136,
      140,   147,   154,   161,   168,   175,   184,   196,   200,   204,
      211,   218,   222,   226,   239,   246,   253,   260,   264,   268,
-     272,   279,   301,   309,   318,   325,   332,   338,   341,   345,
-     350,   351,   354,   360,   369,   377,   383,   388,   393,   399,
-     402,   408,   416,   420,   429,   435,   436,   437,   438,   443,
-     449,   455,   461,   462,   465,   466,   474,   483,   484,   493,
-     494,   500,   503,   504,   505,   507,   515,   523,   532,   538,
-     544,   550,   558,   564,   572,   573,   577,   585,   586,   592,
-     593,   601,   602,   605,   611,   619,   627,   635,   645,   648,
-     652,   658,   659,   660,   663,   664,   668,   672,   676,   680,
-     686,   689,   695,   696,   700,   704,   708,   712,   716,   720,
-     724,   728,   732
+     272,   279,   301,   309,   318,   325,   334,   345,   351,   354,
+     358,   363,   364,   367,   373,   382,   390,   396,   401,   406,
+     412,   415,   421,   429,   433,   442,   448,   449,   450,   451,
+     456,   462,   468,   474,   475,   478,   479,   487,   496,   497,
+     506,   507,   513,   516,   517,   518,   520,   528,   536,   545,
+     551,   557,   563,   571,   577,   585,   586,   590,   598,   599,
+     605,   606,   614,   615,   618,   624,   632,   640,   648,   658,
+     661,   665,   671,   672,   673,   676,   677,   681,   685,   689,
+     693,   699,   702,   708,   709,   713,   717,   721,   725,   729,
+     733,   737,   741,   745
 };
 #endif
 
@@ -595,9 +596,9 @@ static const char *const yytname[] =
   "$end", "error", "$undefined", "'|'", "'^'", "'&'", "'<'", "'>'", "'+'",
   "'-'", "'*'", "'/'", "'%'", "LTYPE1", "LTYPE2", "LTYPE3", "LTYPE4",
   "LTYPE5", "LTYPE6", "LTYPE7", "LTYPE8", "LTYPE9", "LTYPEA", "LTYPEB",
-  "LTYPEC", "LTYPED", "LTYPEE", "LTYPEF", "LTYPEG", "LTYPEH", "LTYPEI",
-  "LTYPEJ", "LTYPEK", "LTYPEL", "LTYPEM", "LTYPEN", "LTYPEBX", "LTYPEPLD",
-  "LCONST", "LSP", "LSB", "LFP", "LPC", "LTYPEX", "LTYPEPC", "LR", "LREG",
+  "LTYPEC", "LTYPED", "LTYPEE", "LTYPEG", "LTYPEH", "LTYPEI", "LTYPEJ",
+  "LTYPEK", "LTYPEL", "LTYPEM", "LTYPEN", "LTYPEBX", "LTYPEPLD", "LCONST",
+  "LSP", "LSB", "LFP", "LPC", "LTYPEX", "LTYPEPC", "LTYPEF", "LR", "LREG",
   "LF", "LFREG", "LC", "LCREG", "LPSR", "LFCR", "LCOND", "LS", "LAT",
   "LFCONST", "LSCONST", "LNAME", "LLAB", "LVAR", "':'", "'='", "';'",
   "','", "'['", "']'", "'('", "')'", "'$'", "'~'", "$accept", "prog", "@1",
@@ -631,16 +632,16 @@ static const yytype_uint8 yyr1[] =
       74,    74,    74,    74,    77,    77,    77,    77,    77,    77,
       77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
       77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
-      77,    77,    77,    77,    77,    77,    77,    78,    78,    78,
-      79,    79,    80,    80,    80,    81,    81,    81,    81,    81,
-      82,    82,    83,    83,    83,    84,    84,    84,    84,    84,
-      84,    84,    84,    84,    85,    85,    86,    87,    87,    88,
-      88,    88,    89,    89,    89,    90,    91,    92,    93,    93,
-      93,    93,    94,    94,    95,    95,    95,    96,    96,    97,
-      97,    98,    98,    99,    99,   100,   100,   100,   101,   101,
-     101,   102,   102,   102,   103,   103,   103,   103,   103,   103,
-     104,   104,   105,   105,   105,   105,   105,   105,   105,   105,
-     105,   105,   105
+      77,    77,    77,    77,    77,    77,    77,    77,    78,    78,
+      78,    79,    79,    80,    80,    80,    81,    81,    81,    81,
+      81,    82,    82,    83,    83,    83,    84,    84,    84,    84,
+      84,    84,    84,    84,    84,    85,    85,    86,    87,    87,
+      88,    88,    88,    89,    89,    89,    90,    91,    92,    93,
+      93,    93,    93,    94,    94,    95,    95,    95,    96,    96,
+      97,    97,    98,    98,    99,    99,   100,   100,   100,   101,
+     101,   101,   102,   102,   102,   103,   103,   103,   103,   103,
+     103,   104,   104,   105,   105,   105,   105,   105,   105,   105,
+     105,   105,   105,   105
 };
 
 /* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
@@ -650,16 +651,16 @@ static const yytype_uint8 yyr2[] =
        4,     1,     2,     2,     7,     6,     5,     5,     5,     4,
        4,     3,     3,     4,     6,     7,     7,     7,     6,     6,
        3,     4,     6,     8,     6,     4,     3,     5,     5,     7,
-       6,    12,     7,     9,     2,     4,     2,     0,     2,     2,
-       0,     2,     4,     2,     2,     2,     2,     4,     2,     1,
-       2,     3,     1,     3,     3,     1,     1,     1,     4,     1,
-       1,     1,     1,     1,     1,     1,     3,     1,     4,     1,
-       4,     1,     1,     1,     1,     2,     1,     5,     4,     4,
-       4,     4,     1,     1,     1,     1,     4,     1,     1,     1,
-       4,     1,     1,     1,     4,     4,     5,     7,     0,     2,
-       2,     1,     1,     1,     1,     1,     2,     2,     2,     3,
-       0,     2,     1,     3,     3,     3,     3,     3,     4,     4,
-       3,     3,     3
+       6,    12,     7,     9,     2,     4,     4,     2,     0,     2,
+       2,     0,     2,     4,     2,     2,     2,     2,     4,     2,
+       1,     2,     3,     1,     3,     3,     1,     1,     1,     4,
+       1,     1,     1,     1,     1,     1,     1,     3,     1,     4,
+       1,     4,     1,     1,     1,     1,     2,     1,     5,     4,
+       4,     4,     4,     1,     1,     1,     1,     4,     1,     1,
+       1,     4,     1,     1,     1,     4,     4,     5,     7,     0,
+       2,     2,     1,     1,     1,     1,     1,     2,     2,     2,
+       3,     0,     2,     1,     3,     3,     3,     3,     3,     4,
+       4,     3,     3,     3
 };
 
 /* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
@@ -667,236 +668,234 @@ static const yytype_uint8 yyr2[] =
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
-       2,     3,     1,     0,     0,    47,    47,    47,    47,    50,
-      47,    47,    47,    47,    47,     0,     0,    47,    50,    50,
-      47,    47,    47,    47,    47,    47,    50,     0,     0,     0,
-       0,     0,    11,     4,     0,    13,     0,     0,     0,    50,
-      50,     0,    50,     0,     0,    50,    50,     0,     0,   114,
-     108,   115,     0,     0,     0,     0,     0,     0,    46,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,    77,    81,
-      44,    79,     0,     0,     0,     7,     0,     5,     0,    12,
-      98,    95,     0,    94,    48,    49,     0,    83,    82,    84,
-      97,    86,     0,     0,   103,    69,    70,     0,    66,    59,
-       0,    72,    65,    67,    73,    71,     0,    51,   108,   108,
-      22,     0,     0,     0,     0,     0,     0,     0,     0,    86,
-      30,   117,   116,     0,     0,     0,     0,   122,     0,   118,
-       0,     0,     0,    50,    36,     0,     0,     0,   102,     0,
-     101,     0,     0,     0,     0,    21,     0,     0,     0,    85,
+       2,     3,     1,     0,     0,    48,    48,    48,    48,    51,
+      48,    48,    48,    48,    48,     0,     0,    48,    51,    51,
+      48,    48,    48,    48,    48,    48,    51,     0,     0,     0,
+       0,     0,     0,    11,     4,     0,    13,     0,     0,     0,
+      51,    51,     0,    51,     0,     0,    51,    51,     0,     0,
+     115,   109,   116,     0,     0,     0,     0,     0,     0,    47,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,    78,
+      82,    44,    80,     0,    99,    96,     0,    95,     0,   104,
+      70,    71,     0,    67,    60,     0,    73,    66,    68,    98,
+      87,    74,    72,     0,     7,     0,     5,     0,    12,    49,
+      50,     0,     0,    84,    83,    85,     0,     0,     0,    52,
+     109,   109,    22,     0,     0,     0,     0,     0,     0,     0,
+       0,    87,    30,   118,   117,     0,     0,     0,     0,   123,
+       0,   119,     0,     0,     0,    51,    36,     0,     0,     0,
+     103,     0,   102,     0,     0,     0,     0,    21,     0,     0,
+       0,     0,     0,     0,     0,    61,    59,    57,    56,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,    60,    58,    56,    55,     0,
-       0,   108,    19,    20,    74,    75,     0,    53,    54,     0,
-      23,     0,     0,    50,     0,     0,     0,     0,   108,   109,
-     110,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,   119,    31,     0,   112,   111,   113,     0,     0,
-      35,     0,     0,     0,     0,     0,     0,     0,    76,     0,
-       0,    45,     8,     9,     6,    10,     0,    16,    86,     0,
-       0,     0,     0,    17,     0,    61,     0,    18,     0,    53,
-       0,     0,    50,     0,     0,     0,     0,     0,    50,     0,
-       0,   132,   131,   130,     0,     0,   123,   124,   125,   126,
-     127,     0,   105,     0,    37,     0,   103,    38,    50,     0,
-       0,    80,    78,    96,    15,    88,    92,    93,    89,    90,
-      91,   104,    57,    68,    52,    24,     0,    63,    64,     0,
-      29,    50,    28,     0,   106,   128,   129,    32,    34,     0,
-       0,    40,     0,     0,    14,    26,    25,    27,     0,     0,
-       0,    39,     0,    42,     0,   107,    33,     0,     0,     0,
-       0,    99,     0,     0,    43,     0,     0,     0,     0,   120,
-      87,   100,     0,    41,   121
+      86,     0,     0,     0,   109,    19,    20,    75,    76,     0,
+      54,    55,     0,    23,     0,     0,    51,     0,     0,     0,
+       0,   109,   110,   111,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,   120,    31,     0,   113,   112,
+     114,     0,     0,    35,     0,     0,     0,     0,     0,     0,
+       0,    77,     0,     0,     0,     0,    62,     0,    45,     0,
+       0,     0,     0,     0,    46,     8,     9,     6,    10,    16,
+      87,    17,    18,    54,     0,     0,    51,     0,     0,     0,
+       0,     0,    51,     0,     0,   133,   132,   131,     0,     0,
+     124,   125,   126,   127,   128,     0,   106,     0,    37,     0,
+     104,    38,    51,     0,     0,    81,    79,    97,   105,    58,
+      69,    89,    93,    94,    90,    91,    92,    15,    53,    24,
+       0,    64,    65,     0,    29,    51,    28,     0,   107,   129,
+     130,    32,    34,     0,     0,    40,     0,     0,    14,    26,
+      25,    27,     0,     0,     0,    39,     0,    42,     0,   108,
+      33,     0,     0,     0,     0,   100,     0,     0,    43,     0,
+       0,     0,     0,   121,    88,   101,     0,    41,   122
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
-      -1,     1,     3,    33,   153,   151,    34,    36,   107,   110,
-      98,    99,   182,   100,   173,    68,    69,   101,    86,    87,
-      88,   313,    89,   275,    90,   119,   322,   139,   104,    71,
-     126,   208,   127,   333,   128
+      -1,     1,     3,    34,   168,   166,    35,    37,   109,   112,
+      83,    84,   185,    85,   176,    69,    70,    86,   102,   103,
+      87,   317,    88,   281,    89,   121,   326,   141,    91,    72,
+     128,   211,   129,   337,   130
 };
 
 /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
    STATE-NUM.  */
-#define YYPACT_NINF -127
+#define YYPACT_NINF -128
 static const yytype_int16 yypact[] =
 {
-    -127,    39,  -127,   320,   -20,  -127,  -127,  -127,  -127,   -13,
-    -127,  -127,  -127,  -127,  -127,   260,   260,  -127,   -13,   -13,
-    -127,  -127,  -127,  -127,  -127,  -127,   -13,   421,    -6,    28,
-     -12,     9,  -127,  -127,    -9,  -127,   321,   321,   350,     3,
-     -13,   122,     3,   321,   397,   323,     3,   444,   444,  -127,
-     385,  -127,   444,   444,    13,     7,    74,   467,  -127,    23,
-      91,   417,   248,    91,   467,   467,    29,   194,  -127,  -127,
-    -127,    41,    44,   444,    54,  -127,   444,  -127,   444,  -127,
-    -127,  -127,    79,  -127,  -127,  -127,    77,  -127,  -127,  -127,
-    -127,    69,    85,    86,  -127,  -127,  -127,    56,  -127,  -127,
-      92,  -127,  -127,   109,  -127,    44,   200,  -127,   161,   161,
-    -127,   112,   376,   142,    42,   160,   174,    29,   183,  -127,
-    -127,  -127,  -127,   239,   444,   444,   188,  -127,    95,  -127,
-     182,    20,   444,   -13,  -127,   184,   186,    -1,  -127,   192,
-    -127,   193,   201,   202,    42,  -127,   204,   119,   159,  -127,
-      -6,   320,   535,   320,   545,   444,    42,   275,   266,   290,
-     296,    42,   444,   430,   236,  -127,  -127,  -127,    44,   376,
-      42,   385,  -127,  -127,  -127,  -127,   252,  -127,  -127,   284,
-    -127,    42,   262,     6,   264,   119,   268,    29,   161,  -127,
-    -127,    20,   444,   444,   444,   325,   340,   444,   444,   444,
-     444,   444,  -127,  -127,   297,  -127,  -127,  -127,   302,   307,
-    -127,   147,   444,   317,   175,   147,    42,    42,  -127,   313,
-     314,  -127,  -127,  -127,  -127,  -127,   280,  -127,   322,   194,
-     194,   194,   194,  -127,   331,  -127,   421,  -127,   332,   188,
-     283,   339,   -13,   345,    42,    42,    42,    42,   347,   346,
-     344,   595,   585,   603,   444,   444,   123,   123,  -127,  -127,
-    -127,    -6,  -127,    23,  -127,   525,   352,  -127,   -13,   367,
-     368,  -127,  -127,  -127,    42,  -127,  -127,  -127,  -127,  -127,
-    -127,  -127,  -127,  -127,  -127,  -127,   457,  -127,  -127,   371,
-    -127,   113,  -127,   393,  -127,   267,   267,   431,  -127,    42,
-     147,  -127,   374,    42,  -127,  -127,  -127,  -127,   379,   444,
-     378,  -127,    42,  -127,   380,  -127,  -127,   181,   384,    42,
-     382,  -127,   390,    42,  -127,   444,   181,   388,   304,   394,
-    -127,  -127,   444,  -127,   575
+    -128,     4,  -128,   315,   -35,  -128,  -128,  -128,  -128,   -10,
+    -128,  -128,  -128,  -128,  -128,    44,    44,  -128,   -10,   -10,
+    -128,  -128,  -128,  -128,  -128,  -128,   -10,   416,   371,   371,
+     -49,     9,    32,  -128,  -128,    38,  -128,   487,   487,   344,
+      69,   -10,   391,    69,   487,   209,   489,    69,   317,   317,
+    -128,    49,  -128,   317,   317,    42,    48,   106,    67,  -128,
+      61,   191,    25,    93,   191,    67,    67,    68,   170,  -128,
+    -128,  -128,    72,    84,  -128,  -128,    86,  -128,   109,  -128,
+    -128,  -128,   233,  -128,  -128,    80,  -128,  -128,   115,  -128,
+     426,  -128,    84,   120,  -128,   317,  -128,   317,  -128,  -128,
+    -128,   317,   137,  -128,  -128,  -128,   148,   155,   397,  -128,
+      74,    74,  -128,   164,   371,   204,   240,   207,   206,    68,
+     223,  -128,  -128,  -128,  -128,   270,   317,   317,   227,  -128,
+     183,  -128,    90,   160,   317,   -10,  -128,   234,   237,    16,
+    -128,   254,  -128,   255,   256,   257,   240,  -128,   212,   168,
+     548,   317,   317,   428,   258,  -128,  -128,  -128,    84,   371,
+     240,   318,   316,   335,   348,   371,   315,   502,   315,   512,
+    -128,   240,   240,   371,    49,  -128,  -128,  -128,  -128,   289,
+    -128,  -128,   330,  -128,   240,   291,    11,   307,   168,   312,
+      68,    74,  -128,  -128,   160,   317,   317,   317,   377,   379,
+     317,   317,   317,   317,   317,  -128,  -128,   324,  -128,  -128,
+    -128,   325,   337,  -128,    77,   317,   338,   126,    77,   240,
+     240,  -128,   339,   342,   249,   347,  -128,   416,  -128,   352,
+     170,   170,   170,   170,  -128,  -128,  -128,  -128,  -128,  -128,
+     362,  -128,  -128,   227,    -2,   359,   -10,   366,   240,   240,
+     240,   240,   375,   336,   384,   562,   590,   597,   317,   317,
+     213,   213,  -128,  -128,  -128,   385,  -128,    61,  -128,   357,
+     395,  -128,   -10,   396,   398,  -128,  -128,  -128,  -128,  -128,
+    -128,  -128,  -128,  -128,  -128,  -128,  -128,   240,  -128,  -128,
+     434,  -128,  -128,   400,  -128,   432,  -128,   424,  -128,   436,
+     436,   459,  -128,   240,    77,  -128,   402,   240,  -128,  -128,
+    -128,  -128,   404,   317,   411,  -128,   240,  -128,   415,  -128,
+    -128,   216,   418,   240,   413,  -128,   421,   240,  -128,   317,
+     216,   419,   302,   425,  -128,  -128,   317,  -128,   573
 };
 
 /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
-    -127,  -127,  -127,  -126,  -127,  -127,  -127,   552,    -5,   354,
-     -56,   399,   -11,  -101,  -127,   -44,   -42,   -17,    10,    -8,
-     -29,  -127,   -33,   -47,   -28,   -19,   137,  -127,   -18,    15,
-    -102,   278,   -15,  -127,   -26
+    -128,  -128,  -128,   -77,  -128,  -128,  -128,   538,    50,   382,
+     -57,   429,    33,    -7,  -128,   -48,   -43,   -21,    36,  -127,
+     -23,  -128,    29,    17,  -101,   -28,   161,  -128,   -37,    -8,
+     -65,   299,     2,  -128,   -32
 };
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
    number is the opposite.  If zero, do what YYDEFACT says.
    If YYTABLE_NINF, syntax error.  */
-#define YYTABLE_NINF -63
+#define YYTABLE_NINF -64
 static const yytype_int16 yytable[] =
 {
-      55,    55,   115,   134,    41,   103,   177,   178,   213,   102,
-      70,   180,    72,    58,    59,   244,   118,    91,    91,    91,
-      74,    66,   145,   105,    91,   222,   111,   224,   133,   116,
-      54,    56,   121,   122,   106,   142,   143,   112,   129,     2,
-     117,   120,   135,    35,   140,   141,   136,    92,   146,    77,
-     152,    40,   154,   113,    79,   165,    84,    85,   149,   205,
-     206,   207,   174,    73,    47,   163,   164,    40,   237,   239,
-      40,    78,   -62,   186,   131,   157,   158,   130,   159,   103,
-     167,    80,   168,   102,    81,   132,   249,    82,    83,    75,
-      76,   176,    97,    91,    49,   183,   144,   105,   192,   193,
-     194,   195,   196,   197,   198,   199,   200,   201,   147,   189,
-     190,   148,   165,   166,    50,   204,    51,   209,   150,   219,
-     220,   175,   203,    67,   160,   146,    53,   227,   210,   226,
-      47,    48,   233,   199,   200,   201,   103,   228,    93,    94,
-     102,   156,   221,   248,    84,    85,   155,   234,   122,   161,
-      91,   238,    80,   162,   105,    81,   169,   220,    82,    83,
-      49,    81,   242,   202,    82,    83,   251,   252,   253,   124,
-     125,   256,   257,   258,   259,   260,   170,    40,   245,   179,
-     108,   109,    51,   278,   279,   280,   265,   269,   270,    52,
-      47,    48,    53,   264,    93,    94,   267,   268,   205,   206,
-     207,    81,    47,    48,    82,    83,   181,   298,    47,    48,
-     276,   276,   276,   276,   277,   277,   277,   277,   290,   282,
-      49,    72,    93,   266,   184,   287,   183,   183,   295,   296,
-     320,   321,    49,    80,   288,   289,    81,   285,    49,    82,
-      83,   185,    51,   292,   305,   304,   188,   187,   211,    52,
-     212,    73,    53,   297,    51,   191,   214,   215,   171,   109,
-      51,    52,   307,   301,    53,   216,   217,    67,    47,    48,
-      53,   116,   218,   230,   314,   197,   198,   199,   200,   201,
-     310,   229,   311,   192,   193,   194,   195,   196,   197,   198,
-     199,   200,   201,   318,   316,    93,    94,   231,    49,   328,
-     324,    84,    85,   232,   327,   236,   334,   192,   193,   194,
-     195,   196,   197,   198,   199,   200,   201,   137,    50,   240,
-      51,     4,   205,   206,   207,   241,   241,    52,   243,   246,
-      53,   254,   247,     5,     6,     7,     8,     9,    10,    11,
-      12,    13,    14,    15,    16,    17,    18,   255,   273,    19,
-      20,    21,    22,    23,    24,    25,    26,    27,    47,    48,
-      80,   261,    80,    81,    28,    81,    82,    83,    82,    83,
-     262,   263,   331,   235,    84,    85,    84,    85,    29,    30,
-      31,   271,   272,    32,    47,    48,   274,    40,    49,    80,
-      73,   123,    81,   124,   125,    82,    83,    93,    94,   281,
-     283,    95,    96,    84,    85,    47,    48,   284,    50,   286,
-      51,   291,   294,   293,    49,    80,   300,    67,    81,    97,
-      53,    82,    83,    93,    94,    47,    48,    95,    96,    47,
-      48,   302,   303,   308,    50,    49,    51,   306,    47,    48,
-     309,   312,   317,    67,   319,    97,    53,   315,   323,   325,
-      84,    85,    47,    48,   326,    49,   330,    51,   332,    49,
-     172,   138,   114,   329,    67,    47,    48,    53,    49,   250,
-      84,    85,     0,     0,     0,     0,     0,    51,     0,    50,
-       0,    51,    49,     0,    52,     0,   235,    53,    67,     0,
-      51,    53,     0,     0,     0,    49,     0,    52,     0,     0,
-      53,     0,     0,     0,    51,     0,    80,     0,     0,    81,
-       0,    52,    82,    83,    53,     0,     0,    51,     0,     0,
-      84,    85,     0,     0,    67,     0,     0,    53,   192,   193,
-     194,   195,   196,   197,   198,   199,   200,   201,   192,   193,
-     194,   195,   196,   197,   198,   199,   200,   201,   192,   193,
-     194,   195,   196,   197,   198,   199,   200,   201,    37,    38,
-      39,     0,    42,    43,    44,    45,    46,     0,     0,    57,
-       0,     0,    60,    61,    62,    63,    64,    65,   192,   193,
-     194,   195,   196,   197,   198,   199,   200,   201,     0,   299,
-     194,   195,   196,   197,   198,   199,   200,   201,   223,   193,
-     194,   195,   196,   197,   198,   199,   200,   201,   225,   195,
-     196,   197,   198,   199,   200,   201
+      90,    90,   117,   136,     2,   206,    71,    55,    57,    90,
+      90,    90,    94,    95,   104,   104,    90,    56,    56,   147,
+     248,   104,    93,   120,   137,   216,   142,   143,    36,    73,
+      92,    92,   107,    48,    49,   135,   208,   209,   210,   245,
+     148,    92,   144,   145,   113,   180,   181,   118,   222,   223,
+     123,   124,    48,    49,    41,   125,   131,   126,   127,    42,
+     177,   157,    50,   167,   138,   169,   105,   105,    59,    60,
+      96,   189,   155,   105,   106,    41,    67,   -63,    99,   100,
+     115,    50,   126,   127,   158,    52,    90,   223,   186,   235,
+     108,   237,    53,   114,    97,    54,   119,   122,    48,    49,
+     178,    98,    51,   170,    52,    74,   132,   183,    75,   243,
+     179,    53,    76,    77,    54,   133,    92,   134,   148,   224,
+      99,   100,    99,   100,    78,    79,   253,    50,   192,   193,
+      82,    90,   229,    41,   207,   146,   212,    90,   301,   149,
+      78,    79,   252,   240,   159,    90,    99,   100,   239,   241,
+      52,   150,   228,   151,   225,   124,   246,    53,   234,   101,
+      54,    92,   139,   255,   256,   257,   242,    92,   260,   261,
+     262,   263,   264,    78,   270,    92,   152,   268,    48,    49,
+     271,   272,   160,   269,   165,   213,   195,   196,   197,   198,
+     199,   200,   201,   202,   203,   204,   273,   274,   208,   209,
+     210,   171,   282,   282,   282,   282,   279,    50,    74,    75,
+     302,    75,   172,    76,    77,    76,    77,    48,    49,   173,
+     291,   186,   186,   202,   203,   204,   299,   300,   294,    73,
+      52,   182,   283,   283,   283,   283,   249,    53,    78,    79,
+      54,    48,   153,   154,    99,   100,    50,   309,   284,   285,
+     286,   205,   195,   196,   197,   198,   199,   200,   201,   202,
+     203,   204,    99,   100,   308,   324,   325,   315,   184,    52,
+      50,   187,   311,   188,   116,   314,    68,   191,    74,    54,
+     221,    75,   292,   293,   318,    76,    77,   190,   322,   155,
+     156,    51,   118,    52,   194,   328,   289,   332,   214,   331,
+      68,   215,   296,    54,   338,   195,   196,   197,   198,   199,
+     200,   201,   202,   203,   204,   320,     4,   277,   217,   218,
+     219,   220,   305,   231,   230,    48,    49,   227,     5,     6,
+       7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
+      17,    18,   232,    19,    20,    21,    22,    23,    24,    25,
+      26,    27,    48,    49,    50,   233,   244,   247,    28,    29,
+     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
+     335,   245,   250,    30,    31,    32,   251,    52,    33,    48,
+      49,    50,    74,   258,    53,    75,   259,    54,   265,    76,
+      77,    78,    79,   266,   226,    80,    81,    99,   100,    48,
+      49,   267,    51,   297,    52,    48,    49,   275,    50,    74,
+     276,    68,    75,    82,    54,   278,    76,    77,    78,    79,
+     280,   303,    80,    81,    48,    49,   287,   288,    50,    51,
+     290,    52,   161,   162,    50,   163,    48,    49,    68,   295,
+      82,    54,    48,    49,   200,   201,   202,   203,   204,   110,
+     111,    52,   298,    50,   101,   174,   111,    52,    53,   304,
+     306,    54,   307,   312,    68,    50,   310,    54,   313,   316,
+      74,    50,   319,    75,    51,   321,    52,    76,    77,   323,
+     329,   164,   327,    68,   226,   330,    54,   334,    52,   336,
+     175,   333,   140,   254,    52,    53,    41,     0,    54,     0,
+       0,    68,     0,     0,    54,   195,   196,   197,   198,   199,
+     200,   201,   202,   203,   204,   195,   196,   197,   198,   199,
+     200,   201,   202,   203,   204,    74,     0,    74,    75,     0,
+      75,     0,    76,    77,    76,    77,     0,     0,     0,     0,
+      99,   100,    99,   100,    38,    39,    40,     0,    43,    44,
+      45,    46,    47,    41,     0,    58,   101,     0,    61,    62,
+      63,    64,    65,    66,     0,   236,   196,   197,   198,   199,
+     200,   201,   202,   203,   204,   238,   195,   196,   197,   198,
+     199,   200,   201,   202,   203,   204,   208,   209,   210,    75,
+       0,     0,     0,    76,    77,   197,   198,   199,   200,   201,
+     202,   203,   204,   198,   199,   200,   201,   202,   203,   204
 };
 
 static const yytype_int16 yycheck[] =
 {
-      15,    16,    44,    59,     9,    38,   108,   109,     9,    38,
-      27,   112,    27,    18,    19,     9,    45,    36,    37,    38,
-      28,    26,    66,    38,    43,   151,    41,   153,    57,    44,
-      15,    16,    47,    48,    39,    64,    65,    42,    53,     0,
-      45,    46,    60,    63,    62,    63,    61,    37,    67,    61,
-      76,    64,    78,    43,    63,    56,    53,    54,    73,    39,
-      40,    41,   106,    69,     8,     9,    10,    64,   169,   171,
-      64,    62,    66,   117,    67,     6,     7,    64,     9,   112,
-      97,    39,    97,   112,    42,    11,   188,    45,    46,    61,
-      62,   106,    69,   112,    38,   114,    67,   112,     3,     4,
-       5,     6,     7,     8,     9,    10,    11,    12,    67,   124,
-     125,    67,    56,    57,    58,   130,    60,   132,    64,   147,
-     148,   106,   130,    67,    55,   144,    70,   156,   133,   155,
-       8,     9,   161,    10,    11,    12,   169,   156,    47,    48,
-     169,    64,   150,   187,    53,    54,    67,   162,   163,    64,
-     169,   170,    39,    67,   169,    42,    64,   185,    45,    46,
-      38,    42,   181,    68,    45,    46,   192,   193,   194,     8,
-       9,   197,   198,   199,   200,   201,    67,    64,   183,    67,
-      58,    59,    60,   230,   231,   232,   212,   216,   217,    67,
-       8,     9,    70,   211,    47,    48,   214,   215,    39,    40,
-      41,    42,     8,     9,    45,    46,    64,   263,     8,     9,
-     229,   230,   231,   232,   229,   230,   231,   232,   247,   236,
-      38,   236,    47,    48,    64,   244,   245,   246,   254,   255,
-      49,    50,    38,    39,   245,   246,    42,   242,    38,    45,
-      46,    67,    60,   248,   286,   274,     7,    64,    64,    67,
-      64,    69,    70,   261,    60,    67,    64,    64,    58,    59,
-      60,    67,   291,   268,    70,    64,    64,    67,     8,     9,
-      70,   286,    68,     7,   303,     8,     9,    10,    11,    12,
-     299,     6,   300,     3,     4,     5,     6,     7,     8,     9,
-      10,    11,    12,   312,   309,    47,    48,     7,    38,   325,
-     319,    53,    54,     7,   323,    69,   332,     3,     4,     5,
-       6,     7,     8,     9,    10,    11,    12,    69,    58,    67,
-      60,     1,    39,    40,    41,    42,    42,    67,    66,    65,
-      70,     6,    64,    13,    14,    15,    16,    17,    18,    19,
-      20,    21,    22,    23,    24,    25,    26,     7,    68,    29,
-      30,    31,    32,    33,    34,    35,    36,    37,     8,     9,
-      39,    64,    39,    42,    44,    42,    45,    46,    45,    46,
-      68,    64,    68,    56,    53,    54,    53,    54,    58,    59,
-      60,    68,    68,    63,     8,     9,    64,    64,    38,    39,
-      69,     6,    42,     8,     9,    45,    46,    47,    48,    68,
-      68,    51,    52,    53,    54,     8,     9,    68,    58,    64,
-      60,    64,    68,    67,    38,    39,    64,    67,    42,    69,
-      70,    45,    46,    47,    48,     8,     9,    51,    52,     8,
-       9,    64,    64,    40,    58,    38,    60,    66,     8,     9,
-       9,    67,    64,    67,    64,    69,    70,    68,    64,    67,
-      53,    54,     8,     9,    64,    38,    68,    60,    64,    38,
-     106,    62,    65,   326,    67,     8,     9,    70,    38,   191,
-      53,    54,    -1,    -1,    -1,    -1,    -1,    60,    -1,    58,
-      -1,    60,    38,    -1,    67,    -1,    56,    70,    67,    -1,
-      60,    70,    -1,    -1,    -1,    38,    -1,    67,    -1,    -1,
-      70,    -1,    -1,    -1,    60,    -1,    39,    -1,    -1,    42,
-      -1,    67,    45,    46,    70,    -1,    -1,    60,    -1,    -1,
-      53,    54,    -1,    -1,    67,    -1,    -1,    70,     3,     4,
-       5,     6,     7,     8,     9,    10,    11,    12,     3,     4,
-       5,     6,     7,     8,     9,    10,    11,    12,     3,     4,
-       5,     6,     7,     8,     9,    10,    11,    12,     6,     7,
-       8,    -1,    10,    11,    12,    13,    14,    -1,    -1,    17,
-      -1,    -1,    20,    21,    22,    23,    24,    25,     3,     4,
-       5,     6,     7,     8,     9,    10,    11,    12,    -1,    64,
-       5,     6,     7,     8,     9,    10,    11,    12,    63,     4,
-       5,     6,     7,     8,     9,    10,    11,    12,    63,     6,
-       7,     8,     9,    10,    11,    12
+      28,    29,    45,    60,     0,   132,    27,    15,    16,    37,
+      38,    39,    61,    62,    37,    38,    44,    15,    16,    67,
+       9,    44,    29,    46,    61,     9,    63,    64,    63,    27,
+      28,    29,    39,     8,     9,    58,    38,    39,    40,    41,
+      68,    39,    65,    66,    42,   110,   111,    45,   149,   150,
+      48,    49,     8,     9,    64,     6,    54,     8,     9,     9,
+     108,    82,    37,    95,    62,    97,    37,    38,    18,    19,
+      61,   119,    56,    44,    38,    64,    26,    66,    53,    54,
+      44,    37,     8,     9,    82,    60,   114,   188,   116,   166,
+      40,   168,    67,    43,    62,    70,    46,    47,     8,     9,
+     108,    63,    58,   101,    60,    38,    64,   114,    41,   174,
+     108,    67,    45,    46,    70,    67,   114,    11,   146,   151,
+      53,    54,    53,    54,    47,    48,   191,    37,   126,   127,
+      69,   159,   160,    64,   132,    67,   134,   165,   265,    67,
+      47,    48,   190,   171,    64,   173,    53,    54,   171,   172,
+      60,    67,   159,    67,   152,   153,   184,    67,   165,    69,
+      70,   159,    69,   195,   196,   197,   173,   165,   200,   201,
+     202,   203,   204,    47,    48,   173,    67,   214,     8,     9,
+     217,   218,    67,   215,    64,   135,     3,     4,     5,     6,
+       7,     8,     9,    10,    11,    12,   219,   220,    38,    39,
+      40,    64,   230,   231,   232,   233,   227,    37,    38,    41,
+     267,    41,    64,    45,    46,    45,    46,     8,     9,    64,
+     248,   249,   250,    10,    11,    12,   258,   259,   251,   227,
+      60,    67,   230,   231,   232,   233,   186,    67,    47,    48,
+      70,     8,     9,    10,    53,    54,    37,   290,   231,   232,
+     233,    68,     3,     4,     5,     6,     7,     8,     9,    10,
+      11,    12,    53,    54,   287,    49,    50,   304,    64,    60,
+      37,    64,   295,    67,    65,   303,    67,     7,    38,    70,
+      68,    41,   249,   250,   307,    45,    46,    64,   316,    56,
+      57,    58,   290,    60,    67,   323,   246,   329,    64,   327,
+      67,    64,   252,    70,   336,     3,     4,     5,     6,     7,
+       8,     9,    10,    11,    12,   313,     1,    68,    64,    64,
+      64,    64,   272,     7,     6,     8,     9,    69,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,     7,    28,    29,    30,    31,    32,    33,    34,
+      35,    36,     8,     9,    37,     7,    67,    66,    43,    44,
+       3,     4,     5,     6,     7,     8,     9,    10,    11,    12,
+      68,    41,    65,    58,    59,    60,    64,    60,    63,     8,
+       9,    37,    38,     6,    67,    41,     7,    70,    64,    45,
+      46,    47,    48,    68,    56,    51,    52,    53,    54,     8,
+       9,    64,    58,    67,    60,     8,     9,    68,    37,    38,
+      68,    67,    41,    69,    70,    68,    45,    46,    47,    48,
+      68,    64,    51,    52,     8,     9,    64,    68,    37,    58,
+      64,    60,     6,     7,    37,     9,     8,     9,    67,    64,
+      69,    70,     8,     9,     8,     9,    10,    11,    12,    58,
+      59,    60,    68,    37,    69,    58,    59,    60,    67,    64,
+      64,    70,    64,    39,    67,    37,    66,    70,     9,    67,
+      38,    37,    68,    41,    58,    64,    60,    45,    46,    64,
+      67,    55,    64,    67,    56,    64,    70,    68,    60,    64,
+     108,   330,    63,   194,    60,    67,    64,    -1,    70,    -1,
+      -1,    67,    -1,    -1,    70,     3,     4,     5,     6,     7,
+       8,     9,    10,    11,    12,     3,     4,     5,     6,     7,
+       8,     9,    10,    11,    12,    38,    -1,    38,    41,    -1,
+      41,    -1,    45,    46,    45,    46,    -1,    -1,    -1,    -1,
+      53,    54,    53,    54,     6,     7,     8,    -1,    10,    11,
+      12,    13,    14,    64,    -1,    17,    69,    -1,    20,    21,
+      22,    23,    24,    25,    -1,    63,     4,     5,     6,     7,
+       8,     9,    10,    11,    12,    63,     3,     4,     5,     6,
+       7,     8,     9,    10,    11,    12,    38,    39,    40,    41,
+      -1,    -1,    -1,    45,    46,     5,     6,     7,     8,     9,
+      10,    11,    12,     6,     7,     8,     9,    10,    11,    12
 };
 
 /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
@@ -904,39 +903,39 @@ static const yytype_int16 yycheck[] =
 static const yytype_uint8 yystos[] =
 {
        0,    72,     0,    73,     1,    13,    14,    15,    16,    17,
-      18,    19,    20,    21,    22,    23,    24,    25,    26,    29,
-      30,    31,    32,    33,    34,    35,    36,    37,    44,    58,
-      59,    60,    63,    74,    77,    63,    78,    78,    78,    78,
-      64,    79,    78,    78,    78,    78,    78,     8,     9,    38,
-      58,    60,    67,    70,   100,   103,   100,    78,    79,    79,
-      78,    78,    78,    78,    78,    78,    79,    67,    86,    87,
-      88,   100,   103,    69,    90,    61,    62,    61,    62,    63,
-      39,    42,    45,    46,    53,    54,    89,    90,    91,    93,
-      95,    96,    89,    47,    48,    51,    52,    69,    81,    82,
-      84,    88,    91,    93,    99,   103,    79,    79,    58,    59,
-      80,   103,    79,    89,    65,    87,   103,    79,    91,    96,
-      79,   103,   103,     6,     8,     9,   101,   103,   105,   103,
-      64,    67,    11,    91,    81,    99,   103,    69,    82,    98,
-      99,    99,    91,    91,    67,    86,    96,    67,    67,   103,
-      64,    76,   105,    75,   105,    67,    64,     6,     7,     9,
-      55,    64,    67,     9,    10,    56,    57,    88,   103,    64,
-      67,    58,    80,    85,    86,   100,   103,   101,   101,    67,
-      84,    64,    83,    96,    64,    67,    86,    64,     7,   103,
-     103,    67,     3,     4,     5,     6,     7,     8,     9,    10,
-      11,    12,    68,    90,   103,    39,    40,    41,   102,   103,
-      79,    64,    64,     9,    64,    64,    64,    64,    68,    95,
-      95,    90,    74,    63,    74,    63,   105,    91,    96,     6,
-       7,     7,     7,    91,   103,    56,    69,    84,    96,   101,
-      67,    42,    96,    66,     9,    79,    65,    64,    86,   101,
-     102,   105,   105,   105,     6,     7,   105,   105,   105,   105,
-     105,    64,    68,    64,    99,   105,    48,    99,    99,    91,
-      91,    68,    68,    68,    64,    94,    96,   103,    94,    94,
-      94,    68,    88,    68,    68,    79,    64,    96,    83,    83,
-      91,    64,    79,    67,    68,   105,   105,    90,    81,    64,
-      64,    79,    64,    64,    91,    87,    66,    91,    40,     9,
-      96,    99,    67,    92,    91,    68,   103,    64,    96,    64,
-      49,    50,    97,    64,    96,    67,    64,    96,   105,    97,
-      68,    68,    64,   104,   105
+      18,    19,    20,    21,    22,    23,    24,    25,    26,    28,
+      29,    30,    31,    32,    33,    34,    35,    36,    43,    44,
+      58,    59,    60,    63,    74,    77,    63,    78,    78,    78,
+      78,    64,    79,    78,    78,    78,    78,    78,     8,     9,
+      37,    58,    60,    67,    70,   100,   103,   100,    78,    79,
+      79,    78,    78,    78,    78,    78,    78,    79,    67,    86,
+      87,    88,   100,   103,    38,    41,    45,    46,    47,    48,
+      51,    52,    69,    81,    82,    84,    88,    91,    93,    95,
+      96,    99,   103,    84,    61,    62,    61,    62,    63,    53,
+      54,    69,    89,    90,    91,    93,    89,    84,    79,    79,
+      58,    59,    80,   103,    79,    89,    65,    87,   103,    79,
+      91,    96,    79,   103,   103,     6,     8,     9,   101,   103,
+     105,   103,    64,    67,    11,    91,    81,    99,   103,    69,
+      82,    98,    99,    99,    91,    91,    67,    86,    96,    67,
+      67,    67,    67,     9,    10,    56,    57,    88,   103,    64,
+      67,     6,     7,     9,    55,    64,    76,   105,    75,   105,
+     103,    64,    64,    64,    58,    80,    85,    86,   100,   103,
+     101,   101,    67,    84,    64,    83,    96,    64,    67,    86,
+      64,     7,   103,   103,    67,     3,     4,     5,     6,     7,
+       8,     9,    10,    11,    12,    68,    90,   103,    38,    39,
+      40,   102,   103,    79,    64,    64,     9,    64,    64,    64,
+      64,    68,    95,    95,   105,   103,    56,    69,    84,    96,
+       6,     7,     7,     7,    84,    74,    63,    74,    63,    91,
+      96,    91,    84,   101,    67,    41,    96,    66,     9,    79,
+      65,    64,    86,   101,   102,   105,   105,   105,     6,     7,
+     105,   105,   105,   105,   105,    64,    68,    64,    99,   105,
+      48,    99,    99,    91,    91,    68,    68,    68,    68,    88,
+      68,    94,    96,   103,    94,    94,    94,    64,    68,    79,
+      64,    96,    83,    83,    91,    64,    79,    67,    68,   105,
+     105,    90,    81,    64,    64,    79,    64,    64,    91,    87,
+      66,    91,    39,     9,    96,    99,    67,    92,    91,    68,
+     103,    64,    96,    64,    49,    50,    97,    64,    96,    67,
+      64,    96,   105,    97,    68,    68,    64,   104,   105
 };
 
 #define yyerrok		(yyerrstatus = 0)
@@ -2044,40 +2043,53 @@ yyreduce:
   case 45:
 #line 326 "a.y"
     {
+		if((yyvsp[(2) - (4)].gen).type != D_CONST || (yyvsp[(4) - (4)].gen).type != D_CONST)
+			yyerror("arguments to PCDATA must be integer constants");
 		outcode((yyvsp[(1) - (4)].lval), Always, &(yyvsp[(2) - (4)].gen), NREG, &(yyvsp[(4) - (4)].gen));
 	}
     break;
 
   case 46:
-#line 333 "a.y"
+#line 335 "a.y"
     {
-		outcode((yyvsp[(1) - (2)].lval), Always, &nullgen, NREG, &nullgen);
+		if((yyvsp[(2) - (4)].gen).type != D_CONST)
+			yyerror("index for FUNCDATA must be integer constant");
+		if((yyvsp[(4) - (4)].gen).type != D_EXTERN && (yyvsp[(4) - (4)].gen).type != D_STATIC)
+			yyerror("value for FUNCDATA must be symbol reference");
+ 		outcode((yyvsp[(1) - (4)].lval), Always, &(yyvsp[(2) - (4)].gen), NREG, &(yyvsp[(4) - (4)].gen));
 	}
     break;
 
   case 47:
-#line 338 "a.y"
+#line 346 "a.y"
     {
-		(yyval.lval) = Always;
+		outcode((yyvsp[(1) - (2)].lval), Always, &nullgen, NREG, &nullgen);
 	}
     break;
 
   case 48:
-#line 342 "a.y"
+#line 351 "a.y"
     {
-		(yyval.lval) = ((yyvsp[(1) - (2)].lval) & ~C_SCOND) | (yyvsp[(2) - (2)].lval);
+		(yyval.lval) = Always;
 	}
     break;
 
   case 49:
-#line 346 "a.y"
+#line 355 "a.y"
+    {
+		(yyval.lval) = ((yyvsp[(1) - (2)].lval) & ~C_SCOND) | (yyvsp[(2) - (2)].lval);
+	}
+    break;
+
+  case 50:
+#line 359 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (2)].lval) | (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 52:
-#line 355 "a.y"
+  case 53:
+#line 368 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_BRANCH;
@@ -2085,8 +2097,8 @@ yyreduce:
 	}
     break;
 
-  case 53:
-#line 361 "a.y"
+  case 54:
+#line 374 "a.y"
     {
 		(yyval.gen) = nullgen;
 		if(pass == 2)
@@ -2097,8 +2109,8 @@ yyreduce:
 	}
     break;
 
-  case 54:
-#line 370 "a.y"
+  case 55:
+#line 383 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_BRANCH;
@@ -2107,8 +2119,8 @@ yyreduce:
 	}
     break;
 
-  case 55:
-#line 378 "a.y"
+  case 56:
+#line 391 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_CONST;
@@ -2116,24 +2128,24 @@ yyreduce:
 	}
     break;
 
-  case 56:
-#line 384 "a.y"
+  case 57:
+#line 397 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
 		(yyval.gen).type = D_CONST;
 	}
     break;
 
-  case 57:
-#line 389 "a.y"
+  case 58:
+#line 402 "a.y"
     {
 		(yyval.gen) = (yyvsp[(4) - (4)].gen);
 		(yyval.gen).type = D_OCONST;
 	}
     break;
 
-  case 58:
-#line 394 "a.y"
+  case 59:
+#line 407 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_SCONST;
@@ -2141,8 +2153,8 @@ yyreduce:
 	}
     break;
 
-  case 60:
-#line 403 "a.y"
+  case 61:
+#line 416 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2150,8 +2162,8 @@ yyreduce:
 	}
     break;
 
-  case 61:
-#line 409 "a.y"
+  case 62:
+#line 422 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2159,15 +2171,15 @@ yyreduce:
 	}
     break;
 
-  case 62:
-#line 417 "a.y"
+  case 63:
+#line 430 "a.y"
     {
 		(yyval.lval) = 1 << (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 63:
-#line 421 "a.y"
+  case 64:
+#line 434 "a.y"
     {
 		int i;
 		(yyval.lval)=0;
@@ -2178,23 +2190,23 @@ yyreduce:
 	}
     break;
 
-  case 64:
-#line 430 "a.y"
+  case 65:
+#line 443 "a.y"
     {
 		(yyval.lval) = (1<<(yyvsp[(1) - (3)].lval)) | (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 68:
-#line 439 "a.y"
+  case 69:
+#line 452 "a.y"
     {
 		(yyval.gen) = (yyvsp[(1) - (4)].gen);
 		(yyval.gen).reg = (yyvsp[(3) - (4)].lval);
 	}
     break;
 
-  case 69:
-#line 444 "a.y"
+  case 70:
+#line 457 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_PSR;
@@ -2202,8 +2214,8 @@ yyreduce:
 	}
     break;
 
-  case 70:
-#line 450 "a.y"
+  case 71:
+#line 463 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FPCR;
@@ -2211,8 +2223,8 @@ yyreduce:
 	}
     break;
 
-  case 71:
-#line 456 "a.y"
+  case 72:
+#line 469 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_OREG;
@@ -2220,8 +2232,8 @@ yyreduce:
 	}
     break;
 
-  case 75:
-#line 467 "a.y"
+  case 76:
+#line 480 "a.y"
     {
 		(yyval.gen) = (yyvsp[(1) - (1)].gen);
 		if((yyvsp[(1) - (1)].gen).name != D_EXTERN && (yyvsp[(1) - (1)].gen).name != D_STATIC) {
@@ -2229,8 +2241,8 @@ yyreduce:
 	}
     break;
 
-  case 76:
-#line 475 "a.y"
+  case 77:
+#line 488 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_OREG;
@@ -2239,8 +2251,8 @@ yyreduce:
 	}
     break;
 
-  case 78:
-#line 485 "a.y"
+  case 79:
+#line 498 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_OREG;
@@ -2249,8 +2261,8 @@ yyreduce:
 	}
     break;
 
-  case 80:
-#line 495 "a.y"
+  case 81:
+#line 508 "a.y"
     {
 		(yyval.gen) = (yyvsp[(1) - (4)].gen);
 		(yyval.gen).type = D_OREG;
@@ -2258,8 +2270,8 @@ yyreduce:
 	}
     break;
 
-  case 85:
-#line 508 "a.y"
+  case 86:
+#line 521 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_CONST;
@@ -2267,8 +2279,8 @@ yyreduce:
 	}
     break;
 
-  case 86:
-#line 516 "a.y"
+  case 87:
+#line 529 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_REG;
@@ -2276,8 +2288,8 @@ yyreduce:
 	}
     break;
 
-  case 87:
-#line 524 "a.y"
+  case 88:
+#line 537 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_REGREG;
@@ -2286,8 +2298,8 @@ yyreduce:
 	}
     break;
 
-  case 88:
-#line 533 "a.y"
+  case 89:
+#line 546 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_SHIFT;
@@ -2295,8 +2307,8 @@ yyreduce:
 	}
     break;
 
-  case 89:
-#line 539 "a.y"
+  case 90:
+#line 552 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_SHIFT;
@@ -2304,8 +2316,8 @@ yyreduce:
 	}
     break;
 
-  case 90:
-#line 545 "a.y"
+  case 91:
+#line 558 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_SHIFT;
@@ -2313,8 +2325,8 @@ yyreduce:
 	}
     break;
 
-  case 91:
-#line 551 "a.y"
+  case 92:
+#line 564 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_SHIFT;
@@ -2322,8 +2334,8 @@ yyreduce:
 	}
     break;
 
-  case 92:
-#line 559 "a.y"
+  case 93:
+#line 572 "a.y"
     {
 		if((yyval.lval) < 0 || (yyval.lval) >= 16)
 			print("register value out of range\n");
@@ -2331,8 +2343,8 @@ yyreduce:
 	}
     break;
 
-  case 93:
-#line 565 "a.y"
+  case 94:
+#line 578 "a.y"
     {
 		if((yyval.lval) < 0 || (yyval.lval) >= 32)
 			print("shift value out of range\n");
@@ -2340,15 +2352,15 @@ yyreduce:
 	}
     break;
 
-  case 95:
-#line 574 "a.y"
+  case 96:
+#line 587 "a.y"
     {
 		(yyval.lval) = REGPC;
 	}
     break;
 
-  case 96:
-#line 578 "a.y"
+  case 97:
+#line 591 "a.y"
     {
 		if((yyvsp[(3) - (4)].lval) < 0 || (yyvsp[(3) - (4)].lval) >= NREG)
 			print("register value out of range\n");
@@ -2356,15 +2368,15 @@ yyreduce:
 	}
     break;
 
-  case 98:
-#line 587 "a.y"
+  case 99:
+#line 600 "a.y"
     {
 		(yyval.lval) = REGSP;
 	}
     break;
 
-  case 100:
-#line 594 "a.y"
+  case 101:
+#line 607 "a.y"
     {
 		if((yyvsp[(3) - (4)].lval) < 0 || (yyvsp[(3) - (4)].lval) >= NREG)
 			print("register value out of range\n");
@@ -2372,8 +2384,8 @@ yyreduce:
 	}
     break;
 
-  case 103:
-#line 606 "a.y"
+  case 104:
+#line 619 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FREG;
@@ -2381,8 +2393,8 @@ yyreduce:
 	}
     break;
 
-  case 104:
-#line 612 "a.y"
+  case 105:
+#line 625 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FREG;
@@ -2390,8 +2402,8 @@ yyreduce:
 	}
     break;
 
-  case 105:
-#line 620 "a.y"
+  case 106:
+#line 633 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_OREG;
@@ -2401,8 +2413,8 @@ yyreduce:
 	}
     break;
 
-  case 106:
-#line 628 "a.y"
+  case 107:
+#line 641 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_OREG;
@@ -2412,8 +2424,8 @@ yyreduce:
 	}
     break;
 
-  case 107:
-#line 636 "a.y"
+  case 108:
+#line 649 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_OREG;
@@ -2423,141 +2435,141 @@ yyreduce:
 	}
     break;
 
-  case 108:
-#line 645 "a.y"
+  case 109:
+#line 658 "a.y"
     {
 		(yyval.lval) = 0;
 	}
     break;
 
-  case 109:
-#line 649 "a.y"
+  case 110:
+#line 662 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 110:
-#line 653 "a.y"
+  case 111:
+#line 666 "a.y"
     {
 		(yyval.lval) = -(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 115:
-#line 665 "a.y"
+  case 116:
+#line 678 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (1)].sym)->value;
 	}
     break;
 
-  case 116:
-#line 669 "a.y"
+  case 117:
+#line 682 "a.y"
     {
 		(yyval.lval) = -(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 117:
-#line 673 "a.y"
+  case 118:
+#line 686 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 118:
-#line 677 "a.y"
+  case 119:
+#line 690 "a.y"
     {
 		(yyval.lval) = ~(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 119:
-#line 681 "a.y"
+  case 120:
+#line 694 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (3)].lval);
 	}
     break;
 
-  case 120:
-#line 686 "a.y"
+  case 121:
+#line 699 "a.y"
     {
 		(yyval.lval) = 0;
 	}
     break;
 
-  case 121:
-#line 690 "a.y"
+  case 122:
+#line 703 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 123:
-#line 697 "a.y"
+  case 124:
+#line 710 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) + (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 124:
-#line 701 "a.y"
+  case 125:
+#line 714 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) - (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 125:
-#line 705 "a.y"
+  case 126:
+#line 718 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) * (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 126:
-#line 709 "a.y"
+  case 127:
+#line 722 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) / (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 127:
-#line 713 "a.y"
+  case 128:
+#line 726 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) % (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 128:
-#line 717 "a.y"
+  case 129:
+#line 730 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (4)].lval) << (yyvsp[(4) - (4)].lval);
 	}
     break;
 
-  case 129:
-#line 721 "a.y"
+  case 130:
+#line 734 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (4)].lval) >> (yyvsp[(4) - (4)].lval);
 	}
     break;
 
-  case 130:
-#line 725 "a.y"
+  case 131:
+#line 738 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) & (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 131:
-#line 729 "a.y"
+  case 132:
+#line 742 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) ^ (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 132:
-#line 733 "a.y"
+  case 133:
+#line 746 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) | (yyvsp[(3) - (3)].lval);
 	}
@@ -2565,7 +2577,7 @@ yyreduce:
 
 
 /* Line 1267 of yacc.c.  */
-#line 2569 "y.tab.c"
+#line 2581 "y.tab.c"
       default: break;
     }
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
diff --git a/src/cmd/5a/y.tab.h b/src/cmd/5a/y.tab.h
index 3354f39337..63074de410 100644
--- a/src/cmd/5a/y.tab.h
+++ b/src/cmd/5a/y.tab.h
@@ -53,24 +53,24 @@
      LTYPEC = 269,
      LTYPED = 270,
      LTYPEE = 271,
-     LTYPEF = 272,
-     LTYPEG = 273,
-     LTYPEH = 274,
-     LTYPEI = 275,
-     LTYPEJ = 276,
-     LTYPEK = 277,
-     LTYPEL = 278,
-     LTYPEM = 279,
-     LTYPEN = 280,
-     LTYPEBX = 281,
-     LTYPEPLD = 282,
-     LCONST = 283,
-     LSP = 284,
-     LSB = 285,
-     LFP = 286,
-     LPC = 287,
-     LTYPEX = 288,
-     LTYPEPC = 289,
+     LTYPEG = 272,
+     LTYPEH = 273,
+     LTYPEI = 274,
+     LTYPEJ = 275,
+     LTYPEK = 276,
+     LTYPEL = 277,
+     LTYPEM = 278,
+     LTYPEN = 279,
+     LTYPEBX = 280,
+     LTYPEPLD = 281,
+     LCONST = 282,
+     LSP = 283,
+     LSB = 284,
+     LFP = 285,
+     LPC = 286,
+     LTYPEX = 287,
+     LTYPEPC = 288,
+     LTYPEF = 289,
      LR = 290,
      LREG = 291,
      LF = 292,
@@ -104,24 +104,24 @@
 #define LTYPEC 269
 #define LTYPED 270
 #define LTYPEE 271
-#define LTYPEF 272
-#define LTYPEG 273
-#define LTYPEH 274
-#define LTYPEI 275
-#define LTYPEJ 276
-#define LTYPEK 277
-#define LTYPEL 278
-#define LTYPEM 279
-#define LTYPEN 280
-#define LTYPEBX 281
-#define LTYPEPLD 282
-#define LCONST 283
-#define LSP 284
-#define LSB 285
-#define LFP 286
-#define LPC 287
-#define LTYPEX 288
-#define LTYPEPC 289
+#define LTYPEG 272
+#define LTYPEH 273
+#define LTYPEI 274
+#define LTYPEJ 275
+#define LTYPEK 276
+#define LTYPEL 277
+#define LTYPEM 278
+#define LTYPEN 279
+#define LTYPEBX 280
+#define LTYPEPLD 281
+#define LCONST 282
+#define LSP 283
+#define LSB 284
+#define LFP 285
+#define LPC 286
+#define LTYPEX 287
+#define LTYPEPC 288
+#define LTYPEF 289
 #define LR 290
 #define LREG 291
 #define LF 292
diff --git a/src/cmd/6a/a.y b/src/cmd/6a/a.y
index 4f2672842b..924eab2f0c 100644
--- a/src/cmd/6a/a.y
+++ b/src/cmd/6a/a.y
@@ -50,7 +50,7 @@
 %left	'*' '/' '%'
 %token	<lval>	LTYPE0 LTYPE1 LTYPE2 LTYPE3 LTYPE4
 %token	<lval>	LTYPEC LTYPED LTYPEN LTYPER LTYPET LTYPEG LTYPEPC
-%token	<lval>	LTYPES LTYPEM LTYPEI LTYPEXC LTYPEX LTYPERT
+%token	<lval>	LTYPES LTYPEM LTYPEI LTYPEXC LTYPEX LTYPERT LTYPEF
 %token	<lval>	LCONST LFP LPC LSB
 %token	<lval>	LBREG LLREG LSREG LFREG LMREG LXREG
 %token	<dval>	LFCONST
@@ -58,8 +58,9 @@
 %token	<sym>	LNAME LLAB LVAR
 %type	<lval>	con con2 expr pointer offset
 %type	<gen>	mem imm imm2 reg nam rel rem rim rom omem nmem
-%type	<gen2>	nonnon nonrel nonrem rimnon rimrem remrim spec10 spec11 spec12
+%type	<gen2>	nonnon nonrel nonrem rimnon rimrem remrim
 %type	<gen2>	spec1 spec2 spec3 spec4 spec5 spec6 spec7 spec8 spec9
+%type	<gen2>	spec10 spec11 spec12 spec13
 %%
 prog:
 |	prog 
@@ -116,6 +117,7 @@ inst:
 |	LTYPERT spec10	{ outcode($1, &$2); }
 |	LTYPEG spec11	{ outcode($1, &$2); }
 |	LTYPEPC spec12	{ outcode($1, &$2); }
+|	LTYPEF spec13	{ outcode($1, &$2); }
 
 nonnon:
 	{
@@ -310,8 +312,21 @@ spec11:	/* GLOBL */
 	}
 
 spec12:	/* PCDATA */
-	imm ',' imm
+	rim ',' rim
 	{
+		if($1.type != D_CONST || $3.type != D_CONST)
+			yyerror("arguments to PCDATA must be integer constants");
+		$$.from = $1;
+		$$.to = $3;
+	}
+
+spec13:	/* FUNCDATA */
+	rim ',' rim
+	{
+		if($1.type != D_CONST)
+			yyerror("index for FUNCDATA must be integer constant");
+		if($3.type != D_EXTERN && $3.type != D_STATIC)
+			yyerror("value for FUNCDATA must be symbol reference");
 		$$.from = $1;
 		$$.to = $3;
 	}
diff --git a/src/cmd/6a/lex.c b/src/cmd/6a/lex.c
index 46e5342c32..c7cfd1bcd3 100644
--- a/src/cmd/6a/lex.c
+++ b/src/cmd/6a/lex.c
@@ -1021,6 +1021,7 @@ struct
 	"USEFIELD",	LTYPEN, AUSEFIELD,
 	"PCLMULQDQ",	LTYPEX, APCLMULQDQ,
 	"PCDATA",	LTYPEPC,	APCDATA,
+	"FUNCDATA",	LTYPEF,	AFUNCDATA,
 	0
 };
 
diff --git a/src/cmd/6a/y.tab.c b/src/cmd/6a/y.tab.c
index 4e1faa6b9c..2330b293a1 100644
--- a/src/cmd/6a/y.tab.c
+++ b/src/cmd/6a/y.tab.c
@@ -84,22 +84,23 @@
      LTYPEXC = 273,
      LTYPEX = 274,
      LTYPERT = 275,
-     LCONST = 276,
-     LFP = 277,
-     LPC = 278,
-     LSB = 279,
-     LBREG = 280,
-     LLREG = 281,
-     LSREG = 282,
-     LFREG = 283,
-     LMREG = 284,
-     LXREG = 285,
-     LFCONST = 286,
-     LSCONST = 287,
-     LSP = 288,
-     LNAME = 289,
-     LLAB = 290,
-     LVAR = 291
+     LTYPEF = 276,
+     LCONST = 277,
+     LFP = 278,
+     LPC = 279,
+     LSB = 280,
+     LBREG = 281,
+     LLREG = 282,
+     LSREG = 283,
+     LFREG = 284,
+     LMREG = 285,
+     LXREG = 286,
+     LFCONST = 287,
+     LSCONST = 288,
+     LSP = 289,
+     LNAME = 290,
+     LLAB = 291,
+     LVAR = 292
    };
 #endif
 /* Tokens.  */
@@ -121,22 +122,23 @@
 #define LTYPEXC 273
 #define LTYPEX 274
 #define LTYPERT 275
-#define LCONST 276
-#define LFP 277
-#define LPC 278
-#define LSB 279
-#define LBREG 280
-#define LLREG 281
-#define LSREG 282
-#define LFREG 283
-#define LMREG 284
-#define LXREG 285
-#define LFCONST 286
-#define LSCONST 287
-#define LSP 288
-#define LNAME 289
-#define LLAB 290
-#define LVAR 291
+#define LTYPEF 276
+#define LCONST 277
+#define LFP 278
+#define LPC 279
+#define LSB 280
+#define LBREG 281
+#define LLREG 282
+#define LSREG 283
+#define LFREG 284
+#define LMREG 285
+#define LXREG 286
+#define LFCONST 287
+#define LSCONST 288
+#define LSP 289
+#define LNAME 290
+#define LLAB 291
+#define LVAR 292
 
 
 
@@ -180,7 +182,7 @@ typedef union YYSTYPE
 	Gen2	gen2;
 }
 /* Line 193 of yacc.c.  */
-#line 184 "y.tab.c"
+#line 186 "y.tab.c"
 	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
@@ -193,7 +195,7 @@ typedef union YYSTYPE
 
 
 /* Line 216 of yacc.c.  */
-#line 197 "y.tab.c"
+#line 199 "y.tab.c"
 
 #ifdef short
 # undef short
@@ -408,20 +410,20 @@ union yyalloc
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  2
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   543
+#define YYLAST   545
 
 /* YYNTOKENS -- Number of terminals.  */
-#define YYNTOKENS  55
+#define YYNTOKENS  56
 /* YYNNTS -- Number of nonterminals.  */
-#define YYNNTS  41
+#define YYNNTS  42
 /* YYNRULES -- Number of rules.  */
-#define YYNRULES  134
+#define YYNRULES  136
 /* YYNRULES -- Number of states.  */
-#define YYNSTATES  268
+#define YYNSTATES  273
 
 /* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
 #define YYUNDEFTOK  2
-#define YYMAXUTOK   291
+#define YYMAXUTOK   292
 
 #define YYTRANSLATE(YYX)						\
   ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
@@ -432,16 +434,16 @@ static const yytype_uint8 yytranslate[] =
        0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,     2,     2,     2,    53,    12,     5,     2,
-      51,    52,    10,     8,    50,     9,     2,    11,     2,     2,
-       2,     2,     2,     2,     2,     2,     2,     2,    47,    48,
-       6,    49,     7,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,    54,    12,     5,     2,
+      52,    53,    10,     8,    51,     9,     2,    11,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,    48,    49,
+       6,    50,     7,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     4,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,     2,     3,     2,    54,     2,     2,     2,
+       2,     2,     2,     2,     3,     2,    55,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
@@ -458,7 +460,7 @@ static const yytype_uint8 yytranslate[] =
       15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
       25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
       35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
-      45,    46
+      45,    46,    47
 };
 
 #if YYDEBUG
@@ -469,87 +471,87 @@ static const yytype_uint16 yyprhs[] =
        0,     0,     3,     4,     5,     9,    10,    15,    16,    21,
       23,    26,    29,    33,    37,    40,    43,    46,    49,    52,
       55,    58,    61,    64,    67,    70,    73,    76,    79,    82,
-      85,    88,    91,    92,    94,    98,   102,   105,   107,   110,
-     112,   115,   117,   121,   127,   131,   137,   140,   142,   144,
-     146,   150,   156,   160,   166,   169,   171,   175,   181,   187,
-     188,   190,   194,   200,   204,   206,   208,   210,   212,   215,
-     218,   220,   222,   224,   226,   231,   234,   237,   239,   241,
-     243,   245,   247,   249,   251,   254,   257,   260,   263,   266,
-     271,   277,   281,   283,   285,   287,   292,   297,   302,   309,
-     319,   323,   327,   333,   342,   344,   351,   357,   365,   366,
-     369,   372,   374,   376,   378,   380,   382,   385,   388,   391,
-     395,   397,   400,   404,   409,   411,   415,   419,   423,   427,
-     431,   436,   441,   445,   449
+      85,    88,    91,    94,    95,    97,   101,   105,   108,   110,
+     113,   115,   118,   120,   124,   130,   134,   140,   143,   145,
+     147,   149,   153,   159,   163,   169,   172,   174,   178,   184,
+     190,   191,   193,   197,   203,   207,   211,   213,   215,   217,
+     219,   222,   225,   227,   229,   231,   233,   238,   241,   244,
+     246,   248,   250,   252,   254,   256,   258,   261,   264,   267,
+     270,   273,   278,   284,   288,   290,   292,   294,   299,   304,
+     309,   316,   326,   330,   334,   340,   349,   351,   358,   364,
+     372,   373,   376,   379,   381,   383,   385,   387,   389,   392,
+     395,   398,   402,   404,   407,   411,   416,   418,   422,   426,
+     430,   434,   438,   443,   448,   452,   456
 };
 
 /* YYRHS -- A `-1'-separated list of the rules' RHS.  */
 static const yytype_int8 yyrhs[] =
 {
-      56,     0,    -1,    -1,    -1,    56,    57,    58,    -1,    -1,
-      45,    47,    59,    58,    -1,    -1,    44,    47,    60,    58,
-      -1,    48,    -1,    61,    48,    -1,     1,    48,    -1,    44,
-      49,    95,    -1,    46,    49,    95,    -1,    13,    62,    -1,
-      14,    66,    -1,    15,    65,    -1,    16,    63,    -1,    17,
-      64,    -1,    21,    67,    -1,    19,    68,    -1,    22,    69,
-      -1,    18,    70,    -1,    20,    71,    -1,    25,    72,    -1,
-      26,    73,    -1,    27,    74,    -1,    28,    75,    -1,    29,
-      76,    -1,    30,    77,    -1,    23,    78,    -1,    24,    79,
-      -1,    -1,    50,    -1,    82,    50,    80,    -1,    80,    50,
-      82,    -1,    82,    50,    -1,    82,    -1,    50,    80,    -1,
-      80,    -1,    50,    83,    -1,    83,    -1,    86,    50,    83,
-      -1,    90,    11,    93,    50,    86,    -1,    87,    50,    85,
-      -1,    87,    50,    93,    50,    85,    -1,    50,    81,    -1,
-      81,    -1,    62,    -1,    66,    -1,    82,    50,    80,    -1,
-      82,    50,    80,    47,    36,    -1,    82,    50,    80,    -1,
-      82,    50,    80,    47,    37,    -1,    82,    50,    -1,    82,
-      -1,    82,    50,    80,    -1,    84,    50,    80,    50,    93,
-      -1,    86,    50,    80,    50,    84,    -1,    -1,    86,    -1,
-      87,    50,    86,    -1,    87,    50,    93,    50,    86,    -1,
-      86,    50,    86,    -1,    84,    -1,    87,    -1,    83,    -1,
-      89,    -1,    10,    84,    -1,    10,    88,    -1,    84,    -1,
-      88,    -1,    80,    -1,    86,    -1,    93,    51,    33,    52,
-      -1,    44,    91,    -1,    45,    91,    -1,    35,    -1,    38,
-      -1,    36,    -1,    39,    -1,    43,    -1,    37,    -1,    40,
-      -1,    53,    94,    -1,    53,    93,    -1,    53,    90,    -1,
-      53,    42,    -1,    53,    41,    -1,    53,    51,    41,    52,
-      -1,    53,    51,     9,    41,    52,    -1,    53,     9,    41,
-      -1,    88,    -1,    89,    -1,    93,    -1,    93,    51,    36,
-      52,    -1,    93,    51,    43,    52,    -1,    93,    51,    37,
-      52,    -1,    93,    51,    36,    10,    93,    52,    -1,    93,
-      51,    36,    52,    51,    36,    10,    93,    52,    -1,    51,
-      36,    52,    -1,    51,    43,    52,    -1,    51,    36,    10,
-      93,    52,    -1,    51,    36,    52,    51,    36,    10,    93,
-      52,    -1,    90,    -1,    90,    51,    36,    10,    93,    52,
-      -1,    44,    91,    51,    92,    52,    -1,    44,     6,     7,
-      91,    51,    34,    52,    -1,    -1,     8,    93,    -1,     9,
-      93,    -1,    34,    -1,    43,    -1,    32,    -1,    31,    -1,
-      46,    -1,     9,    93,    -1,     8,    93,    -1,    54,    93,
-      -1,    51,    95,    52,    -1,    31,    -1,     9,    31,    -1,
-      31,     9,    31,    -1,     9,    31,     9,    31,    -1,    93,
-      -1,    95,     8,    95,    -1,    95,     9,    95,    -1,    95,
-      10,    95,    -1,    95,    11,    95,    -1,    95,    12,    95,
-      -1,    95,     6,     6,    95,    -1,    95,     7,     7,    95,
-      -1,    95,     5,    95,    -1,    95,     4,    95,    -1,    95,
-       3,    95,    -1
+      57,     0,    -1,    -1,    -1,    57,    58,    59,    -1,    -1,
+      46,    48,    60,    59,    -1,    -1,    45,    48,    61,    59,
+      -1,    49,    -1,    62,    49,    -1,     1,    49,    -1,    45,
+      50,    97,    -1,    47,    50,    97,    -1,    13,    63,    -1,
+      14,    67,    -1,    15,    66,    -1,    16,    64,    -1,    17,
+      65,    -1,    21,    68,    -1,    19,    69,    -1,    22,    70,
+      -1,    18,    71,    -1,    20,    72,    -1,    25,    73,    -1,
+      26,    74,    -1,    27,    75,    -1,    28,    76,    -1,    29,
+      77,    -1,    30,    78,    -1,    23,    79,    -1,    24,    80,
+      -1,    31,    81,    -1,    -1,    51,    -1,    84,    51,    82,
+      -1,    82,    51,    84,    -1,    84,    51,    -1,    84,    -1,
+      51,    82,    -1,    82,    -1,    51,    85,    -1,    85,    -1,
+      88,    51,    85,    -1,    92,    11,    95,    51,    88,    -1,
+      89,    51,    87,    -1,    89,    51,    95,    51,    87,    -1,
+      51,    83,    -1,    83,    -1,    63,    -1,    67,    -1,    84,
+      51,    82,    -1,    84,    51,    82,    48,    37,    -1,    84,
+      51,    82,    -1,    84,    51,    82,    48,    38,    -1,    84,
+      51,    -1,    84,    -1,    84,    51,    82,    -1,    86,    51,
+      82,    51,    95,    -1,    88,    51,    82,    51,    86,    -1,
+      -1,    88,    -1,    89,    51,    88,    -1,    89,    51,    95,
+      51,    88,    -1,    88,    51,    88,    -1,    88,    51,    82,
+      -1,    86,    -1,    89,    -1,    85,    -1,    91,    -1,    10,
+      86,    -1,    10,    90,    -1,    86,    -1,    90,    -1,    82,
+      -1,    88,    -1,    95,    52,    34,    53,    -1,    45,    93,
+      -1,    46,    93,    -1,    36,    -1,    39,    -1,    37,    -1,
+      40,    -1,    44,    -1,    38,    -1,    41,    -1,    54,    96,
+      -1,    54,    95,    -1,    54,    92,    -1,    54,    43,    -1,
+      54,    42,    -1,    54,    52,    42,    53,    -1,    54,    52,
+       9,    42,    53,    -1,    54,     9,    42,    -1,    90,    -1,
+      91,    -1,    95,    -1,    95,    52,    37,    53,    -1,    95,
+      52,    44,    53,    -1,    95,    52,    38,    53,    -1,    95,
+      52,    37,    10,    95,    53,    -1,    95,    52,    37,    53,
+      52,    37,    10,    95,    53,    -1,    52,    37,    53,    -1,
+      52,    44,    53,    -1,    52,    37,    10,    95,    53,    -1,
+      52,    37,    53,    52,    37,    10,    95,    53,    -1,    92,
+      -1,    92,    52,    37,    10,    95,    53,    -1,    45,    93,
+      52,    94,    53,    -1,    45,     6,     7,    93,    52,    35,
+      53,    -1,    -1,     8,    95,    -1,     9,    95,    -1,    35,
+      -1,    44,    -1,    33,    -1,    32,    -1,    47,    -1,     9,
+      95,    -1,     8,    95,    -1,    55,    95,    -1,    52,    97,
+      53,    -1,    32,    -1,     9,    32,    -1,    32,     9,    32,
+      -1,     9,    32,     9,    32,    -1,    95,    -1,    97,     8,
+      97,    -1,    97,     9,    97,    -1,    97,    10,    97,    -1,
+      97,    11,    97,    -1,    97,    12,    97,    -1,    97,     6,
+       6,    97,    -1,    97,     7,     7,    97,    -1,    97,     5,
+      97,    -1,    97,     4,    97,    -1,    97,     3,    97,    -1
 };
 
 /* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
 static const yytype_uint16 yyrline[] =
 {
-       0,    64,    64,    66,    65,    73,    72,    80,    79,    85,
-      86,    87,    90,    95,   101,   102,   103,   104,   105,   106,
-     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
-     117,   118,   121,   125,   132,   139,   146,   151,   158,   163,
-     170,   175,   180,   187,   195,   200,   208,   213,   220,   221,
-     224,   229,   239,   244,   254,   259,   264,   271,   279,   289,
-     293,   300,   305,   313,   320,   321,   324,   325,   326,   330,
-     334,   335,   338,   339,   342,   348,   357,   366,   371,   376,
-     381,   386,   391,   396,   402,   410,   416,   427,   433,   439,
-     445,   451,   459,   460,   463,   469,   475,   481,   487,   496,
-     505,   510,   515,   523,   533,   537,   546,   553,   562,   565,
-     569,   575,   576,   580,   583,   584,   588,   592,   596,   600,
-     606,   610,   614,   619,   626,   627,   631,   635,   639,   643,
-     647,   651,   655,   659,   663
+       0,    65,    65,    67,    66,    74,    73,    81,    80,    86,
+      87,    88,    91,    96,   102,   103,   104,   105,   106,   107,
+     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
+     118,   119,   120,   123,   127,   134,   141,   148,   153,   160,
+     165,   172,   177,   182,   189,   197,   202,   210,   215,   222,
+     223,   226,   231,   241,   246,   256,   261,   266,   273,   281,
+     291,   295,   302,   307,   315,   324,   335,   336,   339,   340,
+     341,   345,   349,   350,   353,   354,   357,   363,   372,   381,
+     386,   391,   396,   401,   406,   411,   417,   425,   431,   442,
+     448,   454,   460,   466,   474,   475,   478,   484,   490,   496,
+     502,   511,   520,   525,   530,   538,   548,   552,   561,   568,
+     577,   580,   584,   590,   591,   595,   598,   599,   603,   607,
+     611,   615,   621,   625,   629,   638,   649,   650,   654,   658,
+     662,   666,   670,   674,   678,   682,   686
 };
 #endif
 
@@ -562,14 +564,14 @@ static const char *const yytname[] =
   "'-'", "'*'", "'/'", "'%'", "LTYPE0", "LTYPE1", "LTYPE2", "LTYPE3",
   "LTYPE4", "LTYPEC", "LTYPED", "LTYPEN", "LTYPER", "LTYPET", "LTYPEG",
   "LTYPEPC", "LTYPES", "LTYPEM", "LTYPEI", "LTYPEXC", "LTYPEX", "LTYPERT",
-  "LCONST", "LFP", "LPC", "LSB", "LBREG", "LLREG", "LSREG", "LFREG",
-  "LMREG", "LXREG", "LFCONST", "LSCONST", "LSP", "LNAME", "LLAB", "LVAR",
-  "':'", "';'", "'='", "','", "'('", "')'", "'$'", "'~'", "$accept",
-  "prog", "@1", "line", "@2", "@3", "inst", "nonnon", "rimrem", "remrim",
-  "rimnon", "nonrem", "nonrel", "spec1", "spec2", "spec3", "spec4",
-  "spec5", "spec6", "spec7", "spec8", "spec9", "spec10", "spec11",
-  "spec12", "rem", "rom", "rim", "rel", "reg", "imm2", "imm", "mem",
-  "omem", "nmem", "nam", "offset", "pointer", "con", "con2", "expr", 0
+  "LTYPEF", "LCONST", "LFP", "LPC", "LSB", "LBREG", "LLREG", "LSREG",
+  "LFREG", "LMREG", "LXREG", "LFCONST", "LSCONST", "LSP", "LNAME", "LLAB",
+  "LVAR", "':'", "';'", "'='", "','", "'('", "')'", "'$'", "'~'",
+  "$accept", "prog", "@1", "line", "@2", "@3", "inst", "nonnon", "rimrem",
+  "remrim", "rimnon", "nonrem", "nonrel", "spec1", "spec2", "spec3",
+  "spec4", "spec5", "spec6", "spec7", "spec8", "spec9", "spec10", "spec11",
+  "spec12", "spec13", "rem", "rom", "rim", "rel", "reg", "imm2", "imm",
+  "mem", "omem", "nmem", "nam", "offset", "pointer", "con", "con2", "expr", 0
 };
 #endif
 
@@ -582,28 +584,28 @@ static const yytype_uint16 yytoknum[] =
       42,    47,    37,   258,   259,   260,   261,   262,   263,   264,
      265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
      275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,   288,   289,   290,   291,    58,    59,    61,
-      44,    40,    41,    36,   126
+     285,   286,   287,   288,   289,   290,   291,   292,    58,    59,
+      61,    44,    40,    41,    36,   126
 };
 # endif
 
 /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
 static const yytype_uint8 yyr1[] =
 {
-       0,    55,    56,    57,    56,    59,    58,    60,    58,    58,
-      58,    58,    61,    61,    61,    61,    61,    61,    61,    61,
-      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
-      61,    61,    62,    62,    63,    64,    65,    65,    66,    66,
-      67,    67,    67,    68,    69,    69,    70,    70,    71,    71,
-      72,    72,    73,    73,    74,    74,    74,    75,    76,    77,
-      77,    78,    78,    79,    80,    80,    81,    81,    81,    81,
-      81,    81,    82,    82,    83,    83,    83,    84,    84,    84,
-      84,    84,    84,    84,    85,    86,    86,    86,    86,    86,
-      86,    86,    87,    87,    88,    88,    88,    88,    88,    88,
-      88,    88,    88,    88,    89,    89,    90,    90,    91,    91,
-      91,    92,    92,    92,    93,    93,    93,    93,    93,    93,
-      94,    94,    94,    94,    95,    95,    95,    95,    95,    95,
-      95,    95,    95,    95,    95
+       0,    56,    57,    58,    57,    60,    59,    61,    59,    59,
+      59,    59,    62,    62,    62,    62,    62,    62,    62,    62,
+      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
+      62,    62,    62,    63,    63,    64,    65,    66,    66,    67,
+      67,    68,    68,    68,    69,    70,    70,    71,    71,    72,
+      72,    73,    73,    74,    74,    75,    75,    75,    76,    77,
+      78,    78,    79,    79,    80,    81,    82,    82,    83,    83,
+      83,    83,    83,    83,    84,    84,    85,    85,    85,    86,
+      86,    86,    86,    86,    86,    86,    87,    88,    88,    88,
+      88,    88,    88,    88,    89,    89,    90,    90,    90,    90,
+      90,    90,    90,    90,    90,    90,    91,    91,    92,    92,
+      93,    93,    93,    94,    94,    94,    95,    95,    95,    95,
+      95,    95,    96,    96,    96,    96,    97,    97,    97,    97,
+      97,    97,    97,    97,    97,    97,    97
 };
 
 /* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
@@ -612,17 +614,17 @@ static const yytype_uint8 yyr2[] =
        0,     2,     0,     0,     3,     0,     4,     0,     4,     1,
        2,     2,     3,     3,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     0,     1,     3,     3,     2,     1,     2,     1,
-       2,     1,     3,     5,     3,     5,     2,     1,     1,     1,
-       3,     5,     3,     5,     2,     1,     3,     5,     5,     0,
-       1,     3,     5,     3,     1,     1,     1,     1,     2,     2,
-       1,     1,     1,     1,     4,     2,     2,     1,     1,     1,
-       1,     1,     1,     1,     2,     2,     2,     2,     2,     4,
-       5,     3,     1,     1,     1,     4,     4,     4,     6,     9,
-       3,     3,     5,     8,     1,     6,     5,     7,     0,     2,
-       2,     1,     1,     1,     1,     1,     2,     2,     2,     3,
-       1,     2,     3,     4,     1,     3,     3,     3,     3,     3,
-       4,     4,     3,     3,     3
+       2,     2,     2,     0,     1,     3,     3,     2,     1,     2,
+       1,     2,     1,     3,     5,     3,     5,     2,     1,     1,
+       1,     3,     5,     3,     5,     2,     1,     3,     5,     5,
+       0,     1,     3,     5,     3,     3,     1,     1,     1,     1,
+       2,     2,     1,     1,     1,     1,     4,     2,     2,     1,
+       1,     1,     1,     1,     1,     1,     2,     2,     2,     2,
+       2,     4,     5,     3,     1,     1,     1,     4,     4,     4,
+       6,     9,     3,     3,     5,     8,     1,     6,     5,     7,
+       0,     2,     2,     1,     1,     1,     1,     1,     2,     2,
+       2,     3,     1,     2,     3,     4,     1,     3,     3,     3,
+       3,     3,     4,     4,     3,     3,     3
 };
 
 /* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
@@ -630,87 +632,89 @@ static const yytype_uint8 yyr2[] =
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
-       2,     3,     1,     0,     0,    32,     0,     0,     0,     0,
-       0,     0,    32,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,    59,     0,     0,     0,     9,     4,     0,    11,
-      33,    14,     0,     0,   114,    77,    79,    82,    78,    80,
-      83,    81,   108,   115,     0,     0,     0,    15,    39,    64,
-      65,    92,    93,   104,    94,     0,    16,    72,    37,    73,
-      17,     0,    18,     0,     0,   108,   108,     0,    22,    47,
-      66,    70,    71,    67,    94,    20,     0,    33,    48,    49,
-      23,   108,     0,     0,    19,    41,     0,     0,    21,     0,
-      30,     0,    31,     0,    24,     0,    25,     0,    26,    55,
-      27,     0,    28,     0,    29,    60,     7,     0,     5,     0,
-      10,   117,   116,     0,     0,     0,     0,    38,     0,     0,
-     124,     0,   118,     0,     0,     0,    88,    87,     0,    86,
-      85,    36,     0,     0,    68,    69,    75,    76,    46,     0,
-       0,    75,    40,     0,     0,     0,     0,     0,     0,     0,
-      54,     0,     0,     0,    12,     0,    13,   108,   109,   110,
-       0,     0,   100,   101,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,   119,     0,     0,     0,     0,    91,
-       0,     0,    34,    35,     0,     0,    42,     0,    44,     0,
-      61,     0,    63,    50,    52,    56,     0,     0,     8,     6,
-       0,   113,   111,   112,     0,     0,     0,   134,   133,   132,
-       0,     0,   125,   126,   127,   128,   129,     0,     0,    95,
-      97,    96,     0,    89,    74,     0,     0,   120,    84,     0,
-       0,     0,     0,     0,     0,     0,   106,   102,     0,   130,
-     131,     0,     0,     0,    90,    43,   121,     0,    45,    62,
-      51,    53,    57,    58,     0,     0,   105,    98,     0,     0,
-     122,   107,     0,     0,   123,   103,     0,    99
+       2,     3,     1,     0,     0,    33,     0,     0,     0,     0,
+       0,     0,    33,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,    60,     0,     0,     0,     0,     9,     4,     0,
+      11,    34,    14,     0,     0,   116,    79,    81,    84,    80,
+      82,    85,    83,   110,   117,     0,     0,     0,    15,    40,
+      66,    67,    94,    95,   106,    96,     0,    16,    74,    38,
+      75,    17,     0,    18,     0,     0,   110,   110,     0,    22,
+      48,    68,    72,    73,    69,    96,    20,     0,    34,    49,
+      50,    23,   110,     0,     0,    19,    42,     0,     0,    21,
+       0,    30,     0,    31,     0,    24,     0,    25,     0,    26,
+      56,    27,     0,    28,     0,    29,    61,    32,     0,     7,
+       0,     5,     0,    10,   119,   118,     0,     0,     0,     0,
+      39,     0,     0,   126,     0,   120,     0,     0,     0,    90,
+      89,     0,    88,    87,    37,     0,     0,    70,    71,    77,
+      78,    47,     0,     0,    77,    41,     0,     0,     0,     0,
+       0,     0,     0,    55,     0,     0,     0,     0,    12,     0,
+      13,   110,   111,   112,     0,     0,   102,   103,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,   121,     0,
+       0,     0,     0,    93,     0,     0,    35,    36,     0,     0,
+      43,     0,    45,     0,    62,     0,    64,    51,    53,    57,
+       0,     0,    65,     8,     6,     0,   115,   113,   114,     0,
+       0,     0,   136,   135,   134,     0,     0,   127,   128,   129,
+     130,   131,     0,     0,    97,    99,    98,     0,    91,    76,
+       0,     0,   122,    86,     0,     0,     0,     0,     0,     0,
+       0,   108,   104,     0,   132,   133,     0,     0,     0,    92,
+      44,   123,     0,    46,    63,    52,    54,    58,    59,     0,
+       0,   107,   100,     0,     0,   124,   109,     0,     0,   125,
+     105,     0,   101
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
-      -1,     1,     3,    27,   155,   153,    28,    31,    60,    62,
-      56,    47,    84,    75,    88,    68,    80,    94,    96,    98,
-     100,   102,   104,    90,    92,    57,    69,    58,    70,    49,
-     188,    59,    50,    51,    52,    53,   116,   204,    54,   228,
-     121
+      -1,     1,     3,    28,   159,   157,    29,    32,    61,    63,
+      57,    48,    85,    76,    89,    69,    81,    95,    97,    99,
+     101,   103,   105,    91,    93,   107,    58,    70,    59,    71,
+      50,   192,    60,    51,    52,    53,    54,   119,   209,    55,
+     233,   124
 };
 
 /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
    STATE-NUM.  */
-#define YYPACT_NINF -110
+#define YYPACT_NINF -86
 static const yytype_int16 yypact[] =
 {
-    -110,    40,  -110,   165,    -1,    15,   253,   274,   274,   328,
-     196,    12,   307,   372,   411,   411,     7,   274,   274,   274,
-      73,     7,     7,   -21,    20,    19,  -110,  -110,    22,  -110,
-    -110,  -110,   462,   462,  -110,  -110,  -110,  -110,  -110,  -110,
-    -110,  -110,    24,  -110,   328,   378,   462,  -110,  -110,  -110,
-    -110,  -110,  -110,    23,    28,   397,  -110,  -110,    45,  -110,
-    -110,    46,  -110,    50,   361,    24,    42,   220,  -110,  -110,
-    -110,  -110,  -110,  -110,    47,  -110,    92,   328,  -110,  -110,
-    -110,    42,    98,   462,  -110,  -110,    64,    66,  -110,    69,
-    -110,    70,  -110,    78,  -110,    87,  -110,    90,  -110,    91,
-    -110,   100,  -110,   103,  -110,  -110,  -110,   462,  -110,   462,
-    -110,  -110,  -110,   141,   462,   462,   107,  -110,     2,   112,
-    -110,    82,  -110,   129,    16,   422,  -110,  -110,   428,  -110,
-    -110,  -110,   328,   274,  -110,  -110,   107,  -110,  -110,     6,
-     462,  -110,  -110,    98,   134,   441,   452,     7,   328,   328,
-     328,   328,   328,   165,   514,   165,   514,    42,  -110,  -110,
-      -5,   462,   117,  -110,   462,   462,   462,   163,   164,   462,
-     462,   462,   462,   462,  -110,   162,    14,   144,   145,  -110,
-     458,   146,  -110,  -110,   147,   152,  -110,    10,  -110,   153,
-    -110,   166,  -110,   167,   168,  -110,   169,   170,  -110,  -110,
-     161,  -110,  -110,  -110,   172,   174,   182,   523,   531,   269,
-     462,   462,   135,   135,  -110,  -110,  -110,   462,   462,   186,
-    -110,  -110,   191,  -110,  -110,     7,   190,   229,  -110,   195,
-       7,   208,   212,   462,    73,   218,  -110,  -110,   244,   115,
-     115,   215,   216,   233,  -110,  -110,   261,   241,  -110,  -110,
-    -110,  -110,  -110,  -110,   221,   462,  -110,  -110,   275,   255,
-    -110,  -110,   235,   462,  -110,  -110,   242,  -110
+     -86,    12,   -86,   218,   -18,   -17,   264,   285,   285,   340,
+     163,     9,   319,   359,   407,   407,     3,   285,   285,   285,
+     306,     3,     3,     3,    -1,    13,    14,   -86,   -86,    18,
+     -86,   -86,   -86,   466,   466,   -86,   -86,   -86,   -86,   -86,
+     -86,   -86,   -86,    69,   -86,   340,   380,   466,   -86,   -86,
+     -86,   -86,   -86,   -86,    42,    43,     8,   -86,   -86,    19,
+     -86,   -86,    47,   -86,    48,    73,    69,    71,   243,   -86,
+     -86,   -86,   -86,   -86,   -86,    54,   -86,   104,   340,   -86,
+     -86,   -86,    71,   391,   466,   -86,   -86,    65,    67,   -86,
+      75,   -86,    76,   -86,    78,   -86,    81,   -86,    83,   -86,
+      89,   -86,   102,   -86,   103,   -86,   -86,   -86,   105,   -86,
+     466,   -86,   466,   -86,   -86,   -86,   116,   466,   466,   110,
+     -86,    16,   115,   -86,   140,   -86,   120,     4,   413,   -86,
+     -86,   425,   -86,   -86,   -86,   340,   285,   -86,   -86,   110,
+     -86,   -86,    59,   466,   -86,   -86,   391,   135,   432,   441,
+       3,   340,   340,   340,   340,   340,   340,   218,   180,   218,
+     180,    71,   -86,   -86,    -5,   466,   118,   -86,   466,   466,
+     466,   169,   187,   466,   466,   466,   466,   466,   -86,   166,
+      23,   143,   144,   -86,   462,   145,   -86,   -86,   158,   165,
+     -86,    20,   -86,   170,   -86,   172,   -86,   176,   177,   -86,
+     175,   178,   -86,   -86,   -86,   168,   -86,   -86,   -86,   164,
+     201,   219,   518,   526,   533,   466,   466,    33,    33,   -86,
+     -86,   -86,   466,   466,   203,   -86,   -86,   204,   -86,   -86,
+       3,   227,   251,   -86,   207,     3,   225,   228,   466,   306,
+     233,   -86,   -86,   259,   491,   491,   217,   221,   234,   -86,
+     -86,   267,   245,   -86,   -86,   -86,   -86,   -86,   -86,   232,
+     466,   -86,   -86,   268,   254,   -86,   -86,   238,   466,   -86,
+     -86,   239,   -86
 };
 
 /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
-    -110,  -110,  -110,  -109,  -110,  -110,  -110,   283,  -110,  -110,
-    -110,   286,  -110,  -110,  -110,  -110,  -110,  -110,  -110,  -110,
-    -110,  -110,  -110,  -110,  -110,    25,   234,    -2,   -11,    -9,
-      71,    -8,    48,    -3,    11,    -7,   -56,  -110,   -10,  -110,
-     -89
+     -86,   -86,   -86,   -35,   -86,   -86,   -86,   287,   -86,   -86,
+     -86,   294,   -86,   -86,   -86,   -86,   -86,   -86,   -86,   -86,
+     -86,   -86,   -86,   -86,   -86,   -86,    26,   229,     1,   -11,
+      -9,    79,    -8,    72,     0,    -6,    10,   -60,   -86,   -10,
+     -86,   -85
 };
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
@@ -720,153 +724,154 @@ static const yytype_int16 yypgoto[] =
 #define YYTABLE_NINF -1
 static const yytype_uint16 yytable[] =
 {
-      74,    71,    85,    87,    76,    86,    61,    72,    93,   136,
-     137,   101,   161,   103,   105,    95,    97,    99,   154,   226,
-     156,    73,   111,   112,   218,   141,   106,   201,   107,   202,
-     113,    48,   114,   115,    63,   120,   122,    48,   203,   184,
-       2,   227,   176,   177,   198,   130,   199,    29,   129,   178,
-     114,   115,   176,   177,   162,   134,    42,    74,    71,   178,
-      55,   135,    89,    91,    72,    30,   219,   108,   109,   117,
-     110,   142,    87,   120,   123,   207,   208,   209,    73,   124,
-     212,   213,   214,   215,   216,   164,   165,   166,   167,   168,
-     169,   170,   171,   172,   173,   131,   132,   120,   139,   120,
-     133,   200,   117,   140,   158,   159,    32,    33,    35,    36,
-      37,    38,    39,    40,   143,   112,    41,   144,   120,   145,
-     146,   239,   240,   169,   170,   171,   172,   173,   147,    34,
-     185,   183,   186,    87,   174,   189,   191,   148,   190,   192,
-     149,   150,    81,    66,    43,   171,   172,   173,   157,    83,
-     151,   205,    46,   152,   120,   120,   120,   182,   160,   120,
-     120,   120,   120,   120,   163,   175,     4,   184,   206,   210,
-     112,   211,   217,   193,   194,   195,   196,   197,     5,     6,
-       7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
-      17,    18,    19,    20,    21,    22,   220,   221,   223,   224,
-     120,   120,   225,   229,    32,    33,    64,   241,   242,    23,
-      24,    25,   235,    26,   231,   232,   230,   245,   238,   233,
-     234,   246,   249,   252,   236,   253,   237,    34,    32,    33,
-      64,    35,    36,    37,    38,    39,    40,   243,   247,    41,
-      65,    66,    43,   244,   250,   262,    67,    45,   187,   251,
-      46,    34,   254,   266,   255,    35,    36,    37,    38,    39,
-      40,    32,    33,    41,    65,    66,    43,   256,   257,   258,
-     259,    45,   260,   261,    46,   167,   168,   169,   170,   171,
-     172,   173,    32,    33,    34,   263,   264,   265,    35,    36,
-      37,    38,    39,    40,   267,    78,    41,    42,    79,    43,
-     248,   138,     0,    44,    45,    34,     0,    46,     0,    35,
-      36,    37,    38,    39,    40,    32,    33,    41,    42,     0,
-      43,     0,     0,     0,     0,    45,     0,    55,    46,     0,
-       0,     0,     0,     0,     0,     0,    32,    33,    34,     0,
-       0,     0,    35,    36,    37,    38,    39,    40,     0,     0,
-      41,    42,     0,    43,     0,     0,     0,    77,    45,    34,
-       0,    46,     0,    35,    36,    37,    38,    39,    40,    32,
-      33,    41,    42,     0,    43,     0,     0,     0,     0,    45,
-      32,    33,    46,     0,     0,     0,    32,    33,     0,     0,
-       0,     0,    34,     0,     0,     0,    35,    36,    37,    38,
-      39,    40,     0,    34,    41,    32,   125,    43,     0,    34,
-       0,     0,    45,     0,   118,    46,    81,    66,    43,    32,
-      33,   119,    82,    83,    43,    55,    46,     0,    34,    83,
-      32,    33,    46,     0,     0,     0,    32,   180,   126,   127,
-       0,    42,    34,    43,     0,     0,     0,     0,   128,    32,
-      33,    46,     0,    34,     0,    42,     0,    43,     0,    34,
-      32,    33,    45,   179,     0,    46,    32,    33,    43,   181,
-      32,    33,    34,    83,    43,     0,    46,     0,     0,    83,
-       0,     0,    46,    34,     0,     0,     0,    43,     0,    34,
-       0,     0,    83,    34,   187,    46,     0,     0,    43,   222,
-       0,     0,     0,    83,    43,    55,    46,     0,    43,    83,
-       0,     0,    46,    83,     0,     0,    46,   164,   165,   166,
-     167,   168,   169,   170,   171,   172,   173,   165,   166,   167,
-     168,   169,   170,   171,   172,   173,   166,   167,   168,   169,
-     170,   171,   172,   173
+      75,    72,    86,    88,    74,    87,   139,   140,    94,    62,
+      73,   102,     2,   104,   106,   108,    33,   128,    96,    98,
+     100,    77,   144,   114,   115,   158,   165,   160,   206,   231,
+     207,    30,    49,   223,    31,    64,   123,   125,    49,   208,
+      35,   180,   181,   175,   176,   177,   133,   109,   182,   110,
+     129,   130,   232,    43,    43,    44,   137,    56,    75,    72,
+     131,   111,    74,    47,   112,   138,   132,   113,    73,   166,
+     134,   120,   145,    88,   123,   116,   224,   117,   118,   117,
+     118,    33,    34,   212,   213,   214,    90,    92,   217,   218,
+     219,   220,   221,   188,   126,   127,   180,   181,   135,   136,
+     123,   205,   123,   182,   120,    35,   142,   162,   163,    36,
+      37,    38,    39,    40,    41,   143,   146,    42,   115,   147,
+      44,   123,   203,   161,   204,    46,   148,   149,    47,   150,
+     244,   245,   151,   189,   152,   190,    88,   187,   193,   195,
+     153,   194,   196,   168,   169,   170,   171,   172,   173,   174,
+     175,   176,   177,   154,   155,   210,   156,   179,   123,   123,
+     123,   186,   164,   123,   123,   123,   123,   123,   167,   188,
+     211,    33,    34,    65,   115,   215,   222,   197,   198,   199,
+     200,   201,   202,   168,   169,   170,   171,   172,   173,   174,
+     175,   176,   177,   178,   216,    35,   225,   226,   228,    36,
+      37,    38,    39,    40,    41,   123,   123,    42,    66,    67,
+      44,   229,   246,   247,    68,    46,   230,   241,    47,     4,
+     240,   234,   250,   235,   236,   237,   238,   254,   257,   239,
+     258,     5,     6,     7,     8,     9,    10,    11,    12,    13,
+      14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
+     267,    33,    34,    65,   242,   248,   243,   249,   271,   251,
+     252,   191,   255,    24,    25,    26,   256,    27,   259,   260,
+     261,   263,    33,    34,   262,    35,   264,   265,   268,    36,
+      37,    38,    39,    40,    41,   266,   269,    42,    66,    67,
+      44,   270,   272,    33,    34,    46,    35,   141,    47,    79,
+      36,    37,    38,    39,    40,    41,    80,     0,    42,    43,
+       0,    44,     0,   253,     0,    45,    46,    35,     0,    47,
+       0,    36,    37,    38,    39,    40,    41,    33,    34,    42,
+      43,     0,    44,     0,     0,     0,     0,    46,     0,    56,
+      47,     0,    36,    37,    38,    39,    40,    41,    33,    34,
+      42,    35,     0,     0,     0,    36,    37,    38,    39,    40,
+      41,     0,     0,    42,    43,     0,    44,    33,    34,     0,
+      78,    46,    35,     0,    47,     0,    36,    37,    38,    39,
+      40,    41,     0,     0,    42,    43,     0,    44,    33,    34,
+       0,    35,    46,     0,     0,    47,     0,     0,     0,    33,
+      34,     0,     0,     0,    82,    67,    44,     0,     0,     0,
+      83,    84,    35,    56,    47,    33,    34,   121,     0,     0,
+       0,    33,    34,    35,   122,     0,     0,    44,     0,     0,
+       0,     0,    84,    33,   184,    47,    82,    67,    44,    35,
+      33,    34,     0,    84,     0,    35,    47,     0,     0,    33,
+      34,     0,    43,     0,    44,   183,     0,    35,     0,    46,
+      44,     0,    47,     0,    35,    84,     0,   185,    47,     0,
+      33,    34,    44,    35,    33,    34,     0,    84,     0,    44,
+      47,     0,     0,     0,    84,     0,   191,    47,    44,     0,
+       0,     0,     0,    84,    35,    56,    47,     0,    35,   173,
+     174,   175,   176,   177,   227,     0,     0,     0,     0,    44,
+       0,     0,     0,    44,    84,     0,     0,    47,    84,     0,
+       0,    47,   169,   170,   171,   172,   173,   174,   175,   176,
+     177,   170,   171,   172,   173,   174,   175,   176,   177,   171,
+     172,   173,   174,   175,   176,   177
 };
 
 static const yytype_int16 yycheck[] =
 {
-      10,    10,    13,    13,    11,    13,     8,    10,    16,    65,
-      66,    20,    10,    21,    22,    17,    18,    19,   107,     9,
-     109,    10,    32,    33,    10,    81,    47,    32,    49,    34,
-       6,     6,     8,     9,     9,    45,    46,    12,    43,    33,
-       0,    31,    36,    37,   153,    55,   155,    48,    55,    43,
-       8,     9,    36,    37,    52,    64,    44,    67,    67,    43,
-      53,    64,    14,    15,    67,    50,    52,    47,    49,    44,
-      48,    82,    82,    83,    51,   164,   165,   166,    67,    51,
-     169,   170,   171,   172,   173,     3,     4,     5,     6,     7,
-       8,     9,    10,    11,    12,    50,    50,   107,    51,   109,
-      50,   157,    77,    11,   114,   115,     8,     9,    35,    36,
-      37,    38,    39,    40,    50,   125,    43,    51,   128,    50,
-      50,   210,   211,     8,     9,    10,    11,    12,    50,    31,
-     140,   133,   143,   143,    52,   145,   146,    50,   146,   147,
-      50,    50,    44,    45,    46,    10,    11,    12,     7,    51,
-      50,   161,    54,    50,   164,   165,   166,   132,    51,   169,
-     170,   171,   172,   173,    52,    36,     1,    33,    51,     6,
-     180,     7,    10,   148,   149,   150,   151,   152,    13,    14,
-      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
-      25,    26,    27,    28,    29,    30,    52,    52,    52,    52,
-     210,   211,    50,    50,     8,     9,    10,   217,   218,    44,
-      45,    46,    51,    48,    47,    47,    50,   225,    36,    50,
-      50,    31,   230,   233,    52,   234,    52,    31,     8,     9,
-      10,    35,    36,    37,    38,    39,    40,    51,     9,    43,
-      44,    45,    46,    52,    36,   255,    50,    51,    53,    37,
-      54,    31,    34,   263,    10,    35,    36,    37,    38,    39,
-      40,     8,     9,    43,    44,    45,    46,    52,    52,    36,
-       9,    51,    31,    52,    54,     6,     7,     8,     9,    10,
-      11,    12,     8,     9,    31,    10,    31,    52,    35,    36,
-      37,    38,    39,    40,    52,    12,    43,    44,    12,    46,
-     229,    67,    -1,    50,    51,    31,    -1,    54,    -1,    35,
-      36,    37,    38,    39,    40,     8,     9,    43,    44,    -1,
-      46,    -1,    -1,    -1,    -1,    51,    -1,    53,    54,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,     8,     9,    31,    -1,
-      -1,    -1,    35,    36,    37,    38,    39,    40,    -1,    -1,
-      43,    44,    -1,    46,    -1,    -1,    -1,    50,    51,    31,
-      -1,    54,    -1,    35,    36,    37,    38,    39,    40,     8,
-       9,    43,    44,    -1,    46,    -1,    -1,    -1,    -1,    51,
-       8,     9,    54,    -1,    -1,    -1,     8,     9,    -1,    -1,
-      -1,    -1,    31,    -1,    -1,    -1,    35,    36,    37,    38,
-      39,    40,    -1,    31,    43,     8,     9,    46,    -1,    31,
-      -1,    -1,    51,    -1,    36,    54,    44,    45,    46,     8,
-       9,    43,    50,    51,    46,    53,    54,    -1,    31,    51,
-       8,     9,    54,    -1,    -1,    -1,     8,     9,    41,    42,
-      -1,    44,    31,    46,    -1,    -1,    -1,    -1,    51,     8,
-       9,    54,    -1,    31,    -1,    44,    -1,    46,    -1,    31,
-       8,     9,    51,    41,    -1,    54,     8,     9,    46,    41,
-       8,     9,    31,    51,    46,    -1,    54,    -1,    -1,    51,
-      -1,    -1,    54,    31,    -1,    -1,    -1,    46,    -1,    31,
-      -1,    -1,    51,    31,    53,    54,    -1,    -1,    46,    41,
-      -1,    -1,    -1,    51,    46,    53,    54,    -1,    46,    51,
-      -1,    -1,    54,    51,    -1,    -1,    54,     3,     4,     5,
-       6,     7,     8,     9,    10,    11,    12,     4,     5,     6,
-       7,     8,     9,    10,    11,    12,     5,     6,     7,     8,
-       9,    10,    11,    12
+      10,    10,    13,    13,    10,    13,    66,    67,    16,     8,
+      10,    20,     0,    21,    22,    23,     8,     9,    17,    18,
+      19,    11,    82,    33,    34,   110,    10,   112,    33,     9,
+      35,    49,     6,    10,    51,     9,    46,    47,    12,    44,
+      32,    37,    38,    10,    11,    12,    56,    48,    44,    50,
+      42,    43,    32,    45,    45,    47,    65,    54,    68,    68,
+      52,    48,    68,    55,    50,    65,    56,    49,    68,    53,
+      51,    45,    83,    83,    84,     6,    53,     8,     9,     8,
+       9,     8,     9,   168,   169,   170,    14,    15,   173,   174,
+     175,   176,   177,    34,    52,    52,    37,    38,    51,    51,
+     110,   161,   112,    44,    78,    32,    52,   117,   118,    36,
+      37,    38,    39,    40,    41,    11,    51,    44,   128,    52,
+      47,   131,   157,     7,   159,    52,    51,    51,    55,    51,
+     215,   216,    51,   143,    51,   146,   146,   136,   148,   149,
+      51,   149,   150,     3,     4,     5,     6,     7,     8,     9,
+      10,    11,    12,    51,    51,   165,    51,    37,   168,   169,
+     170,   135,    52,   173,   174,   175,   176,   177,    53,    34,
+      52,     8,     9,    10,   184,     6,    10,   151,   152,   153,
+     154,   155,   156,     3,     4,     5,     6,     7,     8,     9,
+      10,    11,    12,    53,     7,    32,    53,    53,    53,    36,
+      37,    38,    39,    40,    41,   215,   216,    44,    45,    46,
+      47,    53,   222,   223,    51,    52,    51,    53,    55,     1,
+      52,    51,   230,    51,    48,    48,    51,   235,   238,    51,
+     239,    13,    14,    15,    16,    17,    18,    19,    20,    21,
+      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
+     260,     8,     9,    10,    53,    52,    37,    53,   268,    32,
+       9,    54,    37,    45,    46,    47,    38,    49,    35,    10,
+      53,    37,     8,     9,    53,    32,     9,    32,    10,    36,
+      37,    38,    39,    40,    41,    53,    32,    44,    45,    46,
+      47,    53,    53,     8,     9,    52,    32,    68,    55,    12,
+      36,    37,    38,    39,    40,    41,    12,    -1,    44,    45,
+      -1,    47,    -1,   234,    -1,    51,    52,    32,    -1,    55,
+      -1,    36,    37,    38,    39,    40,    41,     8,     9,    44,
+      45,    -1,    47,    -1,    -1,    -1,    -1,    52,    -1,    54,
+      55,    -1,    36,    37,    38,    39,    40,    41,     8,     9,
+      44,    32,    -1,    -1,    -1,    36,    37,    38,    39,    40,
+      41,    -1,    -1,    44,    45,    -1,    47,     8,     9,    -1,
+      51,    52,    32,    -1,    55,    -1,    36,    37,    38,    39,
+      40,    41,    -1,    -1,    44,    45,    -1,    47,     8,     9,
+      -1,    32,    52,    -1,    -1,    55,    -1,    -1,    -1,     8,
+       9,    -1,    -1,    -1,    45,    46,    47,    -1,    -1,    -1,
+      51,    52,    32,    54,    55,     8,     9,    37,    -1,    -1,
+      -1,     8,     9,    32,    44,    -1,    -1,    47,    -1,    -1,
+      -1,    -1,    52,     8,     9,    55,    45,    46,    47,    32,
+       8,     9,    -1,    52,    -1,    32,    55,    -1,    -1,     8,
+       9,    -1,    45,    -1,    47,    42,    -1,    32,    -1,    52,
+      47,    -1,    55,    -1,    32,    52,    -1,    42,    55,    -1,
+       8,     9,    47,    32,     8,     9,    -1,    52,    -1,    47,
+      55,    -1,    -1,    -1,    52,    -1,    54,    55,    47,    -1,
+      -1,    -1,    -1,    52,    32,    54,    55,    -1,    32,     8,
+       9,    10,    11,    12,    42,    -1,    -1,    -1,    -1,    47,
+      -1,    -1,    -1,    47,    52,    -1,    -1,    55,    52,    -1,
+      -1,    55,     4,     5,     6,     7,     8,     9,    10,    11,
+      12,     5,     6,     7,     8,     9,    10,    11,    12,     6,
+       7,     8,     9,    10,    11,    12
 };
 
 /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
    symbol of state STATE-NUM.  */
 static const yytype_uint8 yystos[] =
 {
-       0,    56,     0,    57,     1,    13,    14,    15,    16,    17,
+       0,    57,     0,    58,     1,    13,    14,    15,    16,    17,
       18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
-      28,    29,    30,    44,    45,    46,    48,    58,    61,    48,
-      50,    62,     8,     9,    31,    35,    36,    37,    38,    39,
-      40,    43,    44,    46,    50,    51,    54,    66,    80,    84,
-      87,    88,    89,    90,    93,    53,    65,    80,    82,    86,
-      63,    82,    64,    80,    10,    44,    45,    50,    70,    81,
-      83,    84,    88,    89,    93,    68,    90,    50,    62,    66,
-      71,    44,    50,    51,    67,    83,    86,    93,    69,    87,
-      78,    87,    79,    86,    72,    82,    73,    82,    74,    82,
-      75,    84,    76,    86,    77,    86,    47,    49,    47,    49,
-      48,    93,    93,     6,     8,     9,    91,    80,    36,    43,
-      93,    95,    93,    51,    51,     9,    41,    42,    51,    90,
-      93,    50,    50,    50,    84,    88,    91,    91,    81,    51,
-      11,    91,    83,    50,    51,    50,    50,    50,    50,    50,
-      50,    50,    50,    60,    95,    59,    95,     7,    93,    93,
-      51,    10,    52,    52,     3,     4,     5,     6,     7,     8,
-       9,    10,    11,    12,    52,    36,    36,    37,    43,    41,
-       9,    41,    80,    82,    33,    93,    83,    53,    85,    93,
-      86,    93,    86,    80,    80,    80,    80,    80,    58,    58,
-      91,    32,    34,    43,    92,    93,    51,    95,    95,    95,
-       6,     7,    95,    95,    95,    95,    95,    10,    10,    52,
-      52,    52,    41,    52,    52,    50,     9,    31,    94,    50,
-      50,    47,    47,    50,    50,    51,    52,    52,    36,    95,
-      95,    93,    93,    51,    52,    86,    31,     9,    85,    86,
-      36,    37,    93,    84,    34,    10,    52,    52,    36,     9,
-      31,    52,    93,    10,    31,    52,    93,    52
+      28,    29,    30,    31,    45,    46,    47,    49,    59,    62,
+      49,    51,    63,     8,     9,    32,    36,    37,    38,    39,
+      40,    41,    44,    45,    47,    51,    52,    55,    67,    82,
+      86,    89,    90,    91,    92,    95,    54,    66,    82,    84,
+      88,    64,    84,    65,    82,    10,    45,    46,    51,    71,
+      83,    85,    86,    90,    91,    95,    69,    92,    51,    63,
+      67,    72,    45,    51,    52,    68,    85,    88,    95,    70,
+      89,    79,    89,    80,    88,    73,    84,    74,    84,    75,
+      84,    76,    86,    77,    88,    78,    88,    81,    88,    48,
+      50,    48,    50,    49,    95,    95,     6,     8,     9,    93,
+      82,    37,    44,    95,    97,    95,    52,    52,     9,    42,
+      43,    52,    92,    95,    51,    51,    51,    86,    90,    93,
+      93,    83,    52,    11,    93,    85,    51,    52,    51,    51,
+      51,    51,    51,    51,    51,    51,    51,    61,    97,    60,
+      97,     7,    95,    95,    52,    10,    53,    53,     3,     4,
+       5,     6,     7,     8,     9,    10,    11,    12,    53,    37,
+      37,    38,    44,    42,     9,    42,    82,    84,    34,    95,
+      85,    54,    87,    95,    88,    95,    88,    82,    82,    82,
+      82,    82,    82,    59,    59,    93,    33,    35,    44,    94,
+      95,    52,    97,    97,    97,     6,     7,    97,    97,    97,
+      97,    97,    10,    10,    53,    53,    53,    42,    53,    53,
+      51,     9,    32,    96,    51,    51,    48,    48,    51,    51,
+      52,    53,    53,    37,    97,    97,    95,    95,    52,    53,
+      88,    32,     9,    87,    88,    37,    38,    95,    86,    35,
+      10,    53,    53,    37,     9,    32,    53,    95,    10,    32,
+      53,    95,    53
 };
 
 #define yyerrok		(yyerrstatus = 0)
@@ -1681,14 +1686,14 @@ yyreduce:
   switch (yyn)
     {
         case 3:
-#line 66 "a.y"
+#line 67 "a.y"
     {
 		stmtline = lineno;
 	}
     break;
 
   case 5:
-#line 73 "a.y"
+#line 74 "a.y"
     {
 		if((yyvsp[(1) - (2)].sym)->value != pc)
 			yyerror("redeclaration of %s", (yyvsp[(1) - (2)].sym)->name);
@@ -1697,7 +1702,7 @@ yyreduce:
     break;
 
   case 7:
-#line 80 "a.y"
+#line 81 "a.y"
     {
 		(yyvsp[(1) - (2)].sym)->type = LLAB;
 		(yyvsp[(1) - (2)].sym)->value = pc;
@@ -1705,7 +1710,7 @@ yyreduce:
     break;
 
   case 12:
-#line 91 "a.y"
+#line 92 "a.y"
     {
 		(yyvsp[(1) - (3)].sym)->type = LVAR;
 		(yyvsp[(1) - (3)].sym)->value = (yyvsp[(3) - (3)].lval);
@@ -1713,7 +1718,7 @@ yyreduce:
     break;
 
   case 13:
-#line 96 "a.y"
+#line 97 "a.y"
     {
 		if((yyvsp[(1) - (3)].sym)->value != (yyvsp[(3) - (3)].lval))
 			yyerror("redeclaration of %s", (yyvsp[(1) - (3)].sym)->name);
@@ -1722,185 +1727,190 @@ yyreduce:
     break;
 
   case 14:
-#line 101 "a.y"
+#line 102 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 15:
-#line 102 "a.y"
+#line 103 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 16:
-#line 103 "a.y"
+#line 104 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 17:
-#line 104 "a.y"
+#line 105 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 18:
-#line 105 "a.y"
+#line 106 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 19:
-#line 106 "a.y"
+#line 107 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 20:
-#line 107 "a.y"
+#line 108 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 21:
-#line 108 "a.y"
+#line 109 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 22:
-#line 109 "a.y"
+#line 110 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 23:
-#line 110 "a.y"
+#line 111 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 24:
-#line 111 "a.y"
+#line 112 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 25:
-#line 112 "a.y"
+#line 113 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 26:
-#line 113 "a.y"
+#line 114 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 27:
-#line 114 "a.y"
+#line 115 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 28:
-#line 115 "a.y"
+#line 116 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 29:
-#line 116 "a.y"
+#line 117 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 30:
-#line 117 "a.y"
+#line 118 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 31:
-#line 118 "a.y"
+#line 119 "a.y"
     { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
     break;
 
   case 32:
-#line 121 "a.y"
+#line 120 "a.y"
+    { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
+    break;
+
+  case 33:
+#line 123 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 33:
-#line 126 "a.y"
+  case 34:
+#line 128 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 34:
-#line 133 "a.y"
+  case 35:
+#line 135 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 35:
-#line 140 "a.y"
+  case 36:
+#line 142 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 36:
-#line 147 "a.y"
+  case 37:
+#line 149 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (2)].gen);
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 37:
-#line 152 "a.y"
+  case 38:
+#line 154 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (1)].gen);
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 38:
-#line 159 "a.y"
+  case 39:
+#line 161 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 39:
-#line 164 "a.y"
+  case 40:
+#line 166 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(1) - (1)].gen);
 	}
     break;
 
-  case 40:
-#line 171 "a.y"
+  case 41:
+#line 173 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 41:
-#line 176 "a.y"
+  case 42:
+#line 178 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(1) - (1)].gen);
 	}
     break;
 
-  case 42:
-#line 181 "a.y"
+  case 43:
+#line 183 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 43:
-#line 188 "a.y"
+  case 44:
+#line 190 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).from.scale = (yyvsp[(3) - (5)].lval);
@@ -1908,16 +1918,16 @@ yyreduce:
 	}
     break;
 
-  case 44:
-#line 196 "a.y"
+  case 45:
+#line 198 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 45:
-#line 201 "a.y"
+  case 46:
+#line 203 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).from.scale = (yyvsp[(3) - (5)].lval);
@@ -1925,32 +1935,32 @@ yyreduce:
 	}
     break;
 
-  case 46:
-#line 209 "a.y"
+  case 47:
+#line 211 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 47:
-#line 214 "a.y"
+  case 48:
+#line 216 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(1) - (1)].gen);
 	}
     break;
 
-  case 50:
-#line 225 "a.y"
+  case 51:
+#line 227 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 51:
-#line 230 "a.y"
+  case 52:
+#line 232 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (5)].gen);
@@ -1960,16 +1970,16 @@ yyreduce:
 	}
     break;
 
-  case 52:
-#line 240 "a.y"
+  case 53:
+#line 242 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 53:
-#line 245 "a.y"
+  case 54:
+#line 247 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (5)].gen);
@@ -1979,32 +1989,32 @@ yyreduce:
 	}
     break;
 
-  case 54:
-#line 255 "a.y"
+  case 55:
+#line 257 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (2)].gen);
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 55:
-#line 260 "a.y"
+  case 56:
+#line 262 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (1)].gen);
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 56:
-#line 265 "a.y"
+  case 57:
+#line 267 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 57:
-#line 272 "a.y"
+  case 58:
+#line 274 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (5)].gen);
@@ -2012,8 +2022,8 @@ yyreduce:
 	}
     break;
 
-  case 58:
-#line 280 "a.y"
+  case 59:
+#line 282 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(3) - (5)].gen);
 		(yyval.gen2).to = (yyvsp[(5) - (5)].gen);
@@ -2023,32 +2033,32 @@ yyreduce:
 	}
     break;
 
-  case 59:
-#line 289 "a.y"
+  case 60:
+#line 291 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 60:
-#line 294 "a.y"
+  case 61:
+#line 296 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (1)].gen);
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 61:
-#line 301 "a.y"
+  case 62:
+#line 303 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 62:
-#line 306 "a.y"
+  case 63:
+#line 308 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).from.scale = (yyvsp[(3) - (5)].lval);
@@ -2056,30 +2066,44 @@ yyreduce:
 	}
     break;
 
-  case 63:
-#line 314 "a.y"
+  case 64:
+#line 316 "a.y"
     {
+		if((yyvsp[(1) - (3)].gen).type != D_CONST || (yyvsp[(3) - (3)].gen).type != D_CONST)
+			yyerror("arguments to PCDATA must be integer constants");
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 68:
-#line 327 "a.y"
+  case 65:
+#line 325 "a.y"
+    {
+		if((yyvsp[(1) - (3)].gen).type != D_CONST)
+			yyerror("index for FUNCDATA must be integer constant");
+		if((yyvsp[(3) - (3)].gen).type != D_EXTERN)
+			yyerror("value for FUNCDATA must be symbol reference");
+		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
+		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
+	}
+    break;
+
+  case 70:
+#line 342 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 69:
-#line 331 "a.y"
+  case 71:
+#line 346 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 74:
-#line 343 "a.y"
+  case 76:
+#line 358 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_BRANCH;
@@ -2087,8 +2111,8 @@ yyreduce:
 	}
     break;
 
-  case 75:
-#line 349 "a.y"
+  case 77:
+#line 364 "a.y"
     {
 		(yyval.gen) = nullgen;
 		if(pass == 2)
@@ -2099,8 +2123,8 @@ yyreduce:
 	}
     break;
 
-  case 76:
-#line 358 "a.y"
+  case 78:
+#line 373 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_BRANCH;
@@ -2109,64 +2133,64 @@ yyreduce:
 	}
     break;
 
-  case 77:
-#line 367 "a.y"
+  case 79:
+#line 382 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 78:
-#line 372 "a.y"
+  case 80:
+#line 387 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 79:
-#line 377 "a.y"
+  case 81:
+#line 392 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 80:
-#line 382 "a.y"
+  case 82:
+#line 397 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 81:
-#line 387 "a.y"
+  case 83:
+#line 402 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_SP;
 	}
     break;
 
-  case 82:
-#line 392 "a.y"
+  case 84:
+#line 407 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 83:
-#line 397 "a.y"
+  case 85:
+#line 412 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 84:
-#line 403 "a.y"
+  case 86:
+#line 418 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_CONST;
@@ -2174,8 +2198,8 @@ yyreduce:
 	}
     break;
 
-  case 85:
-#line 411 "a.y"
+  case 87:
+#line 426 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_CONST;
@@ -2183,8 +2207,8 @@ yyreduce:
 	}
     break;
 
-  case 86:
-#line 417 "a.y"
+  case 88:
+#line 432 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
 		(yyval.gen).index = (yyvsp[(2) - (2)].gen).type;
@@ -2197,8 +2221,8 @@ yyreduce:
 	}
     break;
 
-  case 87:
-#line 428 "a.y"
+  case 89:
+#line 443 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_SCONST;
@@ -2206,8 +2230,8 @@ yyreduce:
 	}
     break;
 
-  case 88:
-#line 434 "a.y"
+  case 90:
+#line 449 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2215,8 +2239,8 @@ yyreduce:
 	}
     break;
 
-  case 89:
-#line 440 "a.y"
+  case 91:
+#line 455 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2224,8 +2248,8 @@ yyreduce:
 	}
     break;
 
-  case 90:
-#line 446 "a.y"
+  case 92:
+#line 461 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2233,8 +2257,8 @@ yyreduce:
 	}
     break;
 
-  case 91:
-#line 452 "a.y"
+  case 93:
+#line 467 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2242,8 +2266,8 @@ yyreduce:
 	}
     break;
 
-  case 94:
-#line 464 "a.y"
+  case 96:
+#line 479 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_NONE;
@@ -2251,8 +2275,8 @@ yyreduce:
 	}
     break;
 
-  case 95:
-#line 470 "a.y"
+  case 97:
+#line 485 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(3) - (4)].lval);
@@ -2260,8 +2284,8 @@ yyreduce:
 	}
     break;
 
-  case 96:
-#line 476 "a.y"
+  case 98:
+#line 491 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_SP;
@@ -2269,8 +2293,8 @@ yyreduce:
 	}
     break;
 
-  case 97:
-#line 482 "a.y"
+  case 99:
+#line 497 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(3) - (4)].lval);
@@ -2278,8 +2302,8 @@ yyreduce:
 	}
     break;
 
-  case 98:
-#line 488 "a.y"
+  case 100:
+#line 503 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_NONE;
@@ -2290,8 +2314,8 @@ yyreduce:
 	}
     break;
 
-  case 99:
-#line 497 "a.y"
+  case 101:
+#line 512 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(3) - (9)].lval);
@@ -2302,24 +2326,24 @@ yyreduce:
 	}
     break;
 
-  case 100:
-#line 506 "a.y"
+  case 102:
+#line 521 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(2) - (3)].lval);
 	}
     break;
 
-  case 101:
-#line 511 "a.y"
+  case 103:
+#line 526 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_SP;
 	}
     break;
 
-  case 102:
-#line 516 "a.y"
+  case 104:
+#line 531 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_NONE;
@@ -2329,8 +2353,8 @@ yyreduce:
 	}
     break;
 
-  case 103:
-#line 524 "a.y"
+  case 105:
+#line 539 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(2) - (8)].lval);
@@ -2340,15 +2364,15 @@ yyreduce:
 	}
     break;
 
-  case 104:
-#line 534 "a.y"
+  case 106:
+#line 549 "a.y"
     {
 		(yyval.gen) = (yyvsp[(1) - (1)].gen);
 	}
     break;
 
-  case 105:
-#line 538 "a.y"
+  case 107:
+#line 553 "a.y"
     {
 		(yyval.gen) = (yyvsp[(1) - (6)].gen);
 		(yyval.gen).index = (yyvsp[(3) - (6)].lval);
@@ -2357,8 +2381,8 @@ yyreduce:
 	}
     break;
 
-  case 106:
-#line 547 "a.y"
+  case 108:
+#line 562 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(4) - (5)].lval);
@@ -2367,8 +2391,8 @@ yyreduce:
 	}
     break;
 
-  case 107:
-#line 554 "a.y"
+  case 109:
+#line 569 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_STATIC;
@@ -2377,164 +2401,172 @@ yyreduce:
 	}
     break;
 
-  case 108:
-#line 562 "a.y"
+  case 110:
+#line 577 "a.y"
     {
 		(yyval.lval) = 0;
 	}
     break;
 
-  case 109:
-#line 566 "a.y"
+  case 111:
+#line 581 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 110:
-#line 570 "a.y"
+  case 112:
+#line 585 "a.y"
     {
 		(yyval.lval) = -(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 112:
-#line 577 "a.y"
+  case 114:
+#line 592 "a.y"
     {
 		(yyval.lval) = D_AUTO;
 	}
     break;
 
-  case 115:
-#line 585 "a.y"
+  case 117:
+#line 600 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (1)].sym)->value;
 	}
     break;
 
-  case 116:
-#line 589 "a.y"
+  case 118:
+#line 604 "a.y"
     {
 		(yyval.lval) = -(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 117:
-#line 593 "a.y"
+  case 119:
+#line 608 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 118:
-#line 597 "a.y"
+  case 120:
+#line 612 "a.y"
     {
 		(yyval.lval) = ~(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 119:
-#line 601 "a.y"
+  case 121:
+#line 616 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (3)].lval);
 	}
     break;
 
-  case 120:
-#line 607 "a.y"
+  case 122:
+#line 622 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (1)].lval) & 0xffffffffLL;
 	}
     break;
 
-  case 121:
-#line 611 "a.y"
+  case 123:
+#line 626 "a.y"
     {
 		(yyval.lval) = -(yyvsp[(2) - (2)].lval) & 0xffffffffLL;
 	}
     break;
 
-  case 122:
-#line 615 "a.y"
+  case 124:
+#line 630 "a.y"
     {
+		// Change explicit 0 argument size to 1
+		// so that we can distinguish it from missing.
+		if((yyvsp[(3) - (3)].lval) == 0)
+			(yyvsp[(3) - (3)].lval) = 1;
 		(yyval.lval) = ((yyvsp[(1) - (3)].lval) & 0xffffffffLL) +
 			(((yyvsp[(3) - (3)].lval) & 0xffffLL) << 32);
 	}
     break;
 
-  case 123:
-#line 620 "a.y"
+  case 125:
+#line 639 "a.y"
     {
+		// Change explicit 0 argument size to 1
+		// so that we can distinguish it from missing.
+		if((yyvsp[(4) - (4)].lval) == 0)
+			(yyvsp[(4) - (4)].lval) = 1;
 		(yyval.lval) = (-(yyvsp[(2) - (4)].lval) & 0xffffffffLL) +
 			(((yyvsp[(4) - (4)].lval) & 0xffffLL) << 32);
 	}
     break;
 
-  case 125:
-#line 628 "a.y"
+  case 127:
+#line 651 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) + (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 126:
-#line 632 "a.y"
+  case 128:
+#line 655 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) - (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 127:
-#line 636 "a.y"
+  case 129:
+#line 659 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) * (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 128:
-#line 640 "a.y"
+  case 130:
+#line 663 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) / (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 129:
-#line 644 "a.y"
+  case 131:
+#line 667 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) % (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 130:
-#line 648 "a.y"
+  case 132:
+#line 671 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (4)].lval) << (yyvsp[(4) - (4)].lval);
 	}
     break;
 
-  case 131:
-#line 652 "a.y"
+  case 133:
+#line 675 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (4)].lval) >> (yyvsp[(4) - (4)].lval);
 	}
     break;
 
-  case 132:
-#line 656 "a.y"
+  case 134:
+#line 679 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) & (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 133:
-#line 660 "a.y"
+  case 135:
+#line 683 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) ^ (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 134:
-#line 664 "a.y"
+  case 136:
+#line 687 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) | (yyvsp[(3) - (3)].lval);
 	}
@@ -2542,7 +2574,7 @@ yyreduce:
 
 
 /* Line 1267 of yacc.c.  */
-#line 2546 "y.tab.c"
+#line 2578 "y.tab.c"
       default: break;
     }
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
diff --git a/src/cmd/6a/y.tab.h b/src/cmd/6a/y.tab.h
index bb529b8281..fed7efde06 100644
--- a/src/cmd/6a/y.tab.h
+++ b/src/cmd/6a/y.tab.h
@@ -57,22 +57,23 @@
      LTYPEXC = 273,
      LTYPEX = 274,
      LTYPERT = 275,
-     LCONST = 276,
-     LFP = 277,
-     LPC = 278,
-     LSB = 279,
-     LBREG = 280,
-     LLREG = 281,
-     LSREG = 282,
-     LFREG = 283,
-     LMREG = 284,
-     LXREG = 285,
-     LFCONST = 286,
-     LSCONST = 287,
-     LSP = 288,
-     LNAME = 289,
-     LLAB = 290,
-     LVAR = 291
+     LTYPEF = 276,
+     LCONST = 277,
+     LFP = 278,
+     LPC = 279,
+     LSB = 280,
+     LBREG = 281,
+     LLREG = 282,
+     LSREG = 283,
+     LFREG = 284,
+     LMREG = 285,
+     LXREG = 286,
+     LFCONST = 287,
+     LSCONST = 288,
+     LSP = 289,
+     LNAME = 290,
+     LLAB = 291,
+     LVAR = 292
    };
 #endif
 /* Tokens.  */
@@ -94,22 +95,23 @@
 #define LTYPEXC 273
 #define LTYPEX 274
 #define LTYPERT 275
-#define LCONST 276
-#define LFP 277
-#define LPC 278
-#define LSB 279
-#define LBREG 280
-#define LLREG 281
-#define LSREG 282
-#define LFREG 283
-#define LMREG 284
-#define LXREG 285
-#define LFCONST 286
-#define LSCONST 287
-#define LSP 288
-#define LNAME 289
-#define LLAB 290
-#define LVAR 291
+#define LTYPEF 276
+#define LCONST 277
+#define LFP 278
+#define LPC 279
+#define LSB 280
+#define LBREG 281
+#define LLREG 282
+#define LSREG 283
+#define LFREG 284
+#define LMREG 285
+#define LXREG 286
+#define LFCONST 287
+#define LSCONST 288
+#define LSP 289
+#define LNAME 290
+#define LLAB 291
+#define LVAR 292
 
 
 
@@ -126,7 +128,7 @@ typedef union YYSTYPE
 	Gen2	gen2;
 }
 /* Line 1529 of yacc.c.  */
-#line 130 "y.tab.h"
+#line 132 "y.tab.h"
 	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
diff --git a/src/cmd/8a/a.y b/src/cmd/8a/a.y
index a9c92af03b..0feadcd089 100644
--- a/src/cmd/8a/a.y
+++ b/src/cmd/8a/a.y
@@ -54,7 +54,7 @@
 %left	'*' '/' '%'
 %token	<lval>	LTYPE0 LTYPE1 LTYPE2 LTYPE3 LTYPE4
 %token	<lval>	LTYPEC LTYPED LTYPEN LTYPER LTYPET LTYPES LTYPEM LTYPEI LTYPEG LTYPEXC
-%token	<lval>	LTYPEX LTYPEPC LCONST LFP LPC LSB
+%token	<lval>	LTYPEX LTYPEPC LTYPEF LCONST LFP LPC LSB
 %token	<lval>	LBREG LLREG LSREG LFREG LXREG
 %token	<dval>	LFCONST
 %token	<sval>	LSCONST LSP
@@ -63,7 +63,7 @@
 %type	<con2>	con2
 %type	<gen>	mem imm imm2 reg nam rel rem rim rom omem nmem
 %type	<gen2>	nonnon nonrel nonrem rimnon rimrem remrim
-%type	<gen2>	spec1 spec2 spec3 spec4 spec5 spec6 spec7 spec8 spec9 spec10 spec11
+%type	<gen2>	spec1 spec2 spec3 spec4 spec5 spec6 spec7 spec8 spec9 spec10 spec11 spec12
 %%
 prog:
 |	prog
@@ -119,6 +119,7 @@ inst:
 |	LTYPEXC spec9	{ outcode($1, &$2); }
 |	LTYPEX spec10	{ outcode($1, &$2); }
 |	LTYPEPC spec11	{ outcode($1, &$2); }
+|	LTYPEF spec12	{ outcode($1, &$2); }
 
 nonnon:
 	{
@@ -309,12 +310,25 @@ spec10:	/* PINSRD */
 	}
 
 spec11:	/* PCDATA */
-	imm ',' imm
+	rim ',' rim
 	{
+		if($1.type != D_CONST || $3.type != D_CONST)
+			yyerror("arguments to PCDATA must be integer constants");
 		$$.from = $1;
 		$$.to = $3;
 	}
 
+spec12:	/* FUNCDATA */
+	rim ',' rim
+	{
+		if($1.type != D_CONST)
+			yyerror("index for FUNCDATA must be integer constant");
+		if($3.type != D_EXTERN && $3.type != D_STATIC)
+			yyerror("value for FUNCDATA must be symbol reference");
+ 		$$.from = $1;
+ 		$$.to = $3;
+ 	}
+
 rem:
 	reg
 |	mem
diff --git a/src/cmd/8a/lex.c b/src/cmd/8a/lex.c
index 45ba555928..474f965b35 100644
--- a/src/cmd/8a/lex.c
+++ b/src/cmd/8a/lex.c
@@ -800,6 +800,7 @@ struct
 	"XORPS",	LTYPE3,	AXORPS,
 	"USEFIELD",	LTYPEN, AUSEFIELD,
 	"PCDATA",	LTYPEPC,	APCDATA,
+	"FUNCDATA",	LTYPEF,	AFUNCDATA,
 	0
 };
 
diff --git a/src/cmd/8a/y.tab.c b/src/cmd/8a/y.tab.c
index 96a362f198..72086ec588 100644
--- a/src/cmd/8a/y.tab.c
+++ b/src/cmd/8a/y.tab.c
@@ -83,21 +83,22 @@
      LTYPEXC = 272,
      LTYPEX = 273,
      LTYPEPC = 274,
-     LCONST = 275,
-     LFP = 276,
-     LPC = 277,
-     LSB = 278,
-     LBREG = 279,
-     LLREG = 280,
-     LSREG = 281,
-     LFREG = 282,
-     LXREG = 283,
-     LFCONST = 284,
-     LSCONST = 285,
-     LSP = 286,
-     LNAME = 287,
-     LLAB = 288,
-     LVAR = 289
+     LTYPEF = 275,
+     LCONST = 276,
+     LFP = 277,
+     LPC = 278,
+     LSB = 279,
+     LBREG = 280,
+     LLREG = 281,
+     LSREG = 282,
+     LFREG = 283,
+     LXREG = 284,
+     LFCONST = 285,
+     LSCONST = 286,
+     LSP = 287,
+     LNAME = 288,
+     LLAB = 289,
+     LVAR = 290
    };
 #endif
 /* Tokens.  */
@@ -118,21 +119,22 @@
 #define LTYPEXC 272
 #define LTYPEX 273
 #define LTYPEPC 274
-#define LCONST 275
-#define LFP 276
-#define LPC 277
-#define LSB 278
-#define LBREG 279
-#define LLREG 280
-#define LSREG 281
-#define LFREG 282
-#define LXREG 283
-#define LFCONST 284
-#define LSCONST 285
-#define LSP 286
-#define LNAME 287
-#define LLAB 288
-#define LVAR 289
+#define LTYPEF 275
+#define LCONST 276
+#define LFP 277
+#define LPC 278
+#define LSB 279
+#define LBREG 280
+#define LLREG 281
+#define LSREG 282
+#define LFREG 283
+#define LXREG 284
+#define LFCONST 285
+#define LSCONST 286
+#define LSP 287
+#define LNAME 288
+#define LLAB 289
+#define LVAR 290
 
 
 
@@ -180,7 +182,7 @@ typedef union YYSTYPE
 	Gen2	gen2;
 }
 /* Line 193 of yacc.c.  */
-#line 184 "y.tab.c"
+#line 186 "y.tab.c"
 	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
@@ -193,7 +195,7 @@ typedef union YYSTYPE
 
 
 /* Line 216 of yacc.c.  */
-#line 197 "y.tab.c"
+#line 199 "y.tab.c"
 
 #ifdef short
 # undef short
@@ -408,20 +410,20 @@ union yyalloc
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  2
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   525
+#define YYLAST   546
 
 /* YYNTOKENS -- Number of terminals.  */
-#define YYNTOKENS  53
+#define YYNTOKENS  54
 /* YYNNTS -- Number of nonterminals.  */
-#define YYNNTS  40
+#define YYNNTS  41
 /* YYNRULES -- Number of rules.  */
-#define YYNRULES  133
+#define YYNRULES  135
 /* YYNRULES -- Number of states.  */
-#define YYNSTATES  271
+#define YYNSTATES  276
 
 /* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
 #define YYUNDEFTOK  2
-#define YYMAXUTOK   289
+#define YYMAXUTOK   290
 
 #define YYTRANSLATE(YYX)						\
   ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
@@ -432,16 +434,16 @@ static const yytype_uint8 yytranslate[] =
        0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,     2,     2,     2,    51,    12,     5,     2,
-      49,    50,    10,     8,    48,     9,     2,    11,     2,     2,
-       2,     2,     2,     2,     2,     2,     2,     2,    45,    46,
-       6,    47,     7,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,    52,    12,     5,     2,
+      50,    51,    10,     8,    49,     9,     2,    11,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,    46,    47,
+       6,    48,     7,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     4,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,     2,     3,     2,    52,     2,     2,     2,
+       2,     2,     2,     2,     3,     2,    53,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
@@ -457,7 +459,8 @@ static const yytype_uint8 yytranslate[] =
        2,     2,     2,     2,     2,     2,     1,     2,    13,    14,
       15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
       25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
-      35,    36,    37,    38,    39,    40,    41,    42,    43,    44
+      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
+      45
 };
 
 #if YYDEBUG
@@ -468,68 +471,69 @@ static const yytype_uint16 yyprhs[] =
        0,     0,     3,     4,     5,     9,    10,    15,    16,    21,
       23,    26,    29,    33,    37,    40,    43,    46,    49,    52,
       55,    58,    61,    64,    67,    70,    73,    76,    79,    82,
-      85,    88,    89,    91,    95,    99,   102,   104,   107,   109,
-     112,   114,   118,   124,   128,   134,   137,   139,   142,   144,
-     146,   150,   156,   160,   166,   169,   171,   175,   179,   185,
-     191,   197,   201,   203,   205,   207,   209,   212,   215,   217,
-     219,   221,   223,   225,   230,   233,   236,   238,   240,   242,
-     244,   246,   248,   251,   254,   257,   260,   265,   271,   275,
-     278,   280,   283,   287,   292,   294,   296,   298,   303,   308,
-     315,   325,   335,   339,   343,   348,   354,   363,   365,   372,
-     378,   386,   387,   390,   393,   395,   397,   399,   401,   403,
-     406,   409,   412,   416,   418,   422,   426,   430,   434,   438,
-     443,   448,   452,   456
+      85,    88,    91,    92,    94,    98,   102,   105,   107,   110,
+     112,   115,   117,   121,   127,   131,   137,   140,   142,   145,
+     147,   149,   153,   159,   163,   169,   172,   174,   178,   182,
+     188,   194,   200,   204,   208,   210,   212,   214,   216,   219,
+     222,   224,   226,   228,   230,   232,   237,   240,   243,   245,
+     247,   249,   251,   253,   255,   258,   261,   264,   267,   272,
+     278,   282,   285,   287,   290,   294,   299,   301,   303,   305,
+     310,   315,   322,   332,   342,   346,   350,   355,   361,   370,
+     372,   379,   385,   393,   394,   397,   400,   402,   404,   406,
+     408,   410,   413,   416,   419,   423,   425,   429,   433,   437,
+     441,   445,   450,   455,   459,   463
 };
 
 /* YYRHS -- A `-1'-separated list of the rules' RHS.  */
 static const yytype_int8 yyrhs[] =
 {
-      54,     0,    -1,    -1,    -1,    54,    55,    56,    -1,    -1,
-      43,    45,    57,    56,    -1,    -1,    42,    45,    58,    56,
-      -1,    46,    -1,    59,    46,    -1,     1,    46,    -1,    42,
-      47,    92,    -1,    44,    47,    92,    -1,    13,    60,    -1,
-      14,    64,    -1,    15,    63,    -1,    16,    61,    -1,    17,
-      62,    -1,    21,    65,    -1,    19,    66,    -1,    22,    67,
-      -1,    18,    68,    -1,    20,    69,    -1,    23,    70,    -1,
-      24,    71,    -1,    25,    72,    -1,    26,    73,    -1,    27,
-      74,    -1,    28,    75,    -1,    29,    76,    -1,    -1,    48,
-      -1,    79,    48,    77,    -1,    77,    48,    79,    -1,    79,
-      48,    -1,    79,    -1,    48,    77,    -1,    77,    -1,    48,
-      80,    -1,    80,    -1,    82,    48,    80,    -1,    88,    11,
-      91,    48,    82,    -1,    85,    48,    83,    -1,    85,    48,
-      91,    48,    83,    -1,    48,    78,    -1,    78,    -1,    10,
-      88,    -1,    60,    -1,    64,    -1,    79,    48,    77,    -1,
-      79,    48,    77,    45,    35,    -1,    79,    48,    77,    -1,
-      79,    48,    77,    45,    36,    -1,    79,    48,    -1,    79,
-      -1,    79,    48,    77,    -1,    85,    48,    82,    -1,    85,
-      48,    91,    48,    82,    -1,    81,    48,    77,    48,    91,
-      -1,    82,    48,    77,    48,    81,    -1,    82,    48,    82,
-      -1,    81,    -1,    85,    -1,    80,    -1,    87,    -1,    10,
-      81,    -1,    10,    86,    -1,    81,    -1,    86,    -1,    82,
-      -1,    77,    -1,    82,    -1,    91,    49,    32,    50,    -1,
-      42,    89,    -1,    43,    89,    -1,    34,    -1,    37,    -1,
-      35,    -1,    38,    -1,    41,    -1,    36,    -1,    51,    91,
-      -1,    51,    88,    -1,    51,    40,    -1,    51,    39,    -1,
-      51,    49,    39,    50,    -1,    51,    49,     9,    39,    50,
-      -1,    51,     9,    39,    -1,    51,    84,    -1,    30,    -1,
-       9,    30,    -1,    30,     9,    30,    -1,     9,    30,     9,
-      30,    -1,    86,    -1,    87,    -1,    91,    -1,    91,    49,
-      35,    50,    -1,    91,    49,    41,    50,    -1,    91,    49,
-      35,    10,    91,    50,    -1,    91,    49,    35,    50,    49,
-      35,    10,    91,    50,    -1,    91,    49,    35,    50,    49,
-      36,    10,    91,    50,    -1,    49,    35,    50,    -1,    49,
-      41,    50,    -1,    91,    49,    36,    50,    -1,    49,    35,
-      10,    91,    50,    -1,    49,    35,    50,    49,    35,    10,
-      91,    50,    -1,    88,    -1,    88,    49,    35,    10,    91,
-      50,    -1,    42,    89,    49,    90,    50,    -1,    42,     6,
-       7,    89,    49,    33,    50,    -1,    -1,     8,    91,    -1,
-       9,    91,    -1,    33,    -1,    41,    -1,    31,    -1,    30,
-      -1,    44,    -1,     9,    91,    -1,     8,    91,    -1,    52,
-      91,    -1,    49,    92,    50,    -1,    91,    -1,    92,     8,
-      92,    -1,    92,     9,    92,    -1,    92,    10,    92,    -1,
-      92,    11,    92,    -1,    92,    12,    92,    -1,    92,     6,
-       6,    92,    -1,    92,     7,     7,    92,    -1,    92,     5,
-      92,    -1,    92,     4,    92,    -1,    92,     3,    92,    -1
+      55,     0,    -1,    -1,    -1,    55,    56,    57,    -1,    -1,
+      44,    46,    58,    57,    -1,    -1,    43,    46,    59,    57,
+      -1,    47,    -1,    60,    47,    -1,     1,    47,    -1,    43,
+      48,    94,    -1,    45,    48,    94,    -1,    13,    61,    -1,
+      14,    65,    -1,    15,    64,    -1,    16,    62,    -1,    17,
+      63,    -1,    21,    66,    -1,    19,    67,    -1,    22,    68,
+      -1,    18,    69,    -1,    20,    70,    -1,    23,    71,    -1,
+      24,    72,    -1,    25,    73,    -1,    26,    74,    -1,    27,
+      75,    -1,    28,    76,    -1,    29,    77,    -1,    30,    78,
+      -1,    -1,    49,    -1,    81,    49,    79,    -1,    79,    49,
+      81,    -1,    81,    49,    -1,    81,    -1,    49,    79,    -1,
+      79,    -1,    49,    82,    -1,    82,    -1,    84,    49,    82,
+      -1,    90,    11,    93,    49,    84,    -1,    87,    49,    85,
+      -1,    87,    49,    93,    49,    85,    -1,    49,    80,    -1,
+      80,    -1,    10,    90,    -1,    61,    -1,    65,    -1,    81,
+      49,    79,    -1,    81,    49,    79,    46,    36,    -1,    81,
+      49,    79,    -1,    81,    49,    79,    46,    37,    -1,    81,
+      49,    -1,    81,    -1,    81,    49,    79,    -1,    87,    49,
+      84,    -1,    87,    49,    93,    49,    84,    -1,    83,    49,
+      79,    49,    93,    -1,    84,    49,    79,    49,    83,    -1,
+      81,    49,    81,    -1,    81,    49,    81,    -1,    83,    -1,
+      87,    -1,    82,    -1,    89,    -1,    10,    83,    -1,    10,
+      88,    -1,    83,    -1,    88,    -1,    84,    -1,    79,    -1,
+      84,    -1,    93,    50,    33,    51,    -1,    43,    91,    -1,
+      44,    91,    -1,    35,    -1,    38,    -1,    36,    -1,    39,
+      -1,    42,    -1,    37,    -1,    52,    93,    -1,    52,    90,
+      -1,    52,    41,    -1,    52,    40,    -1,    52,    50,    40,
+      51,    -1,    52,    50,     9,    40,    51,    -1,    52,     9,
+      40,    -1,    52,    86,    -1,    31,    -1,     9,    31,    -1,
+      31,     9,    31,    -1,     9,    31,     9,    31,    -1,    88,
+      -1,    89,    -1,    93,    -1,    93,    50,    36,    51,    -1,
+      93,    50,    42,    51,    -1,    93,    50,    36,    10,    93,
+      51,    -1,    93,    50,    36,    51,    50,    36,    10,    93,
+      51,    -1,    93,    50,    36,    51,    50,    37,    10,    93,
+      51,    -1,    50,    36,    51,    -1,    50,    42,    51,    -1,
+      93,    50,    37,    51,    -1,    50,    36,    10,    93,    51,
+      -1,    50,    36,    51,    50,    36,    10,    93,    51,    -1,
+      90,    -1,    90,    50,    36,    10,    93,    51,    -1,    43,
+      91,    50,    92,    51,    -1,    43,     6,     7,    91,    50,
+      34,    51,    -1,    -1,     8,    93,    -1,     9,    93,    -1,
+      34,    -1,    42,    -1,    32,    -1,    31,    -1,    45,    -1,
+       9,    93,    -1,     8,    93,    -1,    53,    93,    -1,    50,
+      94,    51,    -1,    93,    -1,    94,     8,    94,    -1,    94,
+       9,    94,    -1,    94,    10,    94,    -1,    94,    11,    94,
+      -1,    94,    12,    94,    -1,    94,     6,     6,    94,    -1,
+      94,     7,     7,    94,    -1,    94,     5,    94,    -1,    94,
+       4,    94,    -1,    94,     3,    94,    -1
 };
 
 /* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
@@ -538,17 +542,17 @@ static const yytype_uint16 yyrline[] =
        0,    68,    68,    70,    69,    77,    76,    84,    83,    89,
       90,    91,    94,    99,   105,   106,   107,   108,   109,   110,
      111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
-     121,   124,   128,   135,   142,   149,   154,   161,   166,   173,
-     178,   183,   190,   198,   203,   211,   216,   221,   230,   231,
-     234,   239,   249,   254,   264,   269,   274,   281,   286,   294,
-     302,   312,   319,   320,   323,   324,   325,   329,   333,   334,
-     335,   338,   339,   342,   348,   357,   366,   371,   376,   381,
-     386,   391,   398,   404,   415,   421,   427,   433,   439,   447,
-     456,   461,   466,   475,   486,   487,   490,   496,   502,   508,
-     517,   526,   535,   540,   545,   551,   559,   569,   573,   582,
-     589,   598,   601,   605,   611,   612,   616,   619,   620,   624,
-     628,   632,   636,   642,   643,   647,   651,   655,   659,   663,
-     667,   671,   675,   679
+     121,   122,   125,   129,   136,   143,   150,   155,   162,   167,
+     174,   179,   184,   191,   199,   204,   212,   217,   222,   231,
+     232,   235,   240,   250,   255,   265,   270,   275,   282,   287,
+     295,   303,   313,   322,   333,   334,   337,   338,   339,   343,
+     347,   348,   349,   352,   353,   356,   362,   371,   380,   385,
+     390,   395,   400,   405,   412,   418,   429,   435,   441,   447,
+     453,   461,   470,   475,   480,   489,   500,   501,   504,   510,
+     516,   522,   531,   540,   549,   554,   559,   565,   573,   583,
+     587,   596,   603,   612,   615,   619,   625,   626,   630,   633,
+     634,   638,   642,   646,   650,   656,   657,   661,   665,   669,
+     673,   677,   681,   685,   689,   693
 };
 #endif
 
@@ -560,14 +564,14 @@ static const char *const yytname[] =
   "$end", "error", "$undefined", "'|'", "'^'", "'&'", "'<'", "'>'", "'+'",
   "'-'", "'*'", "'/'", "'%'", "LTYPE0", "LTYPE1", "LTYPE2", "LTYPE3",
   "LTYPE4", "LTYPEC", "LTYPED", "LTYPEN", "LTYPER", "LTYPET", "LTYPES",
-  "LTYPEM", "LTYPEI", "LTYPEG", "LTYPEXC", "LTYPEX", "LTYPEPC", "LCONST",
-  "LFP", "LPC", "LSB", "LBREG", "LLREG", "LSREG", "LFREG", "LXREG",
-  "LFCONST", "LSCONST", "LSP", "LNAME", "LLAB", "LVAR", "':'", "';'",
-  "'='", "','", "'('", "')'", "'$'", "'~'", "$accept", "prog", "@1",
+  "LTYPEM", "LTYPEI", "LTYPEG", "LTYPEXC", "LTYPEX", "LTYPEPC", "LTYPEF",
+  "LCONST", "LFP", "LPC", "LSB", "LBREG", "LLREG", "LSREG", "LFREG",
+  "LXREG", "LFCONST", "LSCONST", "LSP", "LNAME", "LLAB", "LVAR", "':'",
+  "';'", "'='", "','", "'('", "')'", "'$'", "'~'", "$accept", "prog", "@1",
   "line", "@2", "@3", "inst", "nonnon", "rimrem", "remrim", "rimnon",
   "nonrem", "nonrel", "spec1", "spec2", "spec3", "spec4", "spec5", "spec6",
-  "spec7", "spec8", "spec9", "spec10", "spec11", "rem", "rom", "rim",
-  "rel", "reg", "imm", "imm2", "con2", "mem", "omem", "nmem", "nam",
+  "spec7", "spec8", "spec9", "spec10", "spec11", "spec12", "rem", "rom",
+  "rim", "rel", "reg", "imm", "imm2", "con2", "mem", "omem", "nmem", "nam",
   "offset", "pointer", "con", "expr", 0
 };
 #endif
@@ -581,28 +585,28 @@ static const yytype_uint16 yytoknum[] =
       42,    47,    37,   258,   259,   260,   261,   262,   263,   264,
      265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
      275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,   288,   289,    58,    59,    61,    44,    40,
-      41,    36,   126
+     285,   286,   287,   288,   289,   290,    58,    59,    61,    44,
+      40,    41,    36,   126
 };
 # endif
 
 /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
 static const yytype_uint8 yyr1[] =
 {
-       0,    53,    54,    55,    54,    57,    56,    58,    56,    56,
-      56,    56,    59,    59,    59,    59,    59,    59,    59,    59,
-      59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
-      59,    60,    60,    61,    62,    63,    63,    64,    64,    65,
-      65,    65,    66,    67,    67,    68,    68,    68,    69,    69,
-      70,    70,    71,    71,    72,    72,    72,    73,    73,    74,
-      75,    76,    77,    77,    78,    78,    78,    78,    78,    78,
-      78,    79,    79,    80,    80,    80,    81,    81,    81,    81,
-      81,    81,    82,    82,    82,    82,    82,    82,    82,    83,
-      84,    84,    84,    84,    85,    85,    86,    86,    86,    86,
-      86,    86,    86,    86,    86,    86,    86,    87,    87,    88,
-      88,    89,    89,    89,    90,    90,    90,    91,    91,    91,
-      91,    91,    91,    92,    92,    92,    92,    92,    92,    92,
-      92,    92,    92,    92
+       0,    54,    55,    56,    55,    58,    57,    59,    57,    57,
+      57,    57,    60,    60,    60,    60,    60,    60,    60,    60,
+      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
+      60,    60,    61,    61,    62,    63,    64,    64,    65,    65,
+      66,    66,    66,    67,    68,    68,    69,    69,    69,    70,
+      70,    71,    71,    72,    72,    73,    73,    73,    74,    74,
+      75,    76,    77,    78,    79,    79,    80,    80,    80,    80,
+      80,    80,    80,    81,    81,    82,    82,    82,    83,    83,
+      83,    83,    83,    83,    84,    84,    84,    84,    84,    84,
+      84,    85,    86,    86,    86,    86,    87,    87,    88,    88,
+      88,    88,    88,    88,    88,    88,    88,    88,    88,    89,
+      89,    90,    90,    91,    91,    91,    92,    92,    92,    93,
+      93,    93,    93,    93,    93,    94,    94,    94,    94,    94,
+      94,    94,    94,    94,    94,    94
 };
 
 /* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
@@ -611,17 +615,17 @@ static const yytype_uint8 yyr2[] =
        0,     2,     0,     0,     3,     0,     4,     0,     4,     1,
        2,     2,     3,     3,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     0,     1,     3,     3,     2,     1,     2,     1,     2,
-       1,     3,     5,     3,     5,     2,     1,     2,     1,     1,
-       3,     5,     3,     5,     2,     1,     3,     3,     5,     5,
-       5,     3,     1,     1,     1,     1,     2,     2,     1,     1,
-       1,     1,     1,     4,     2,     2,     1,     1,     1,     1,
-       1,     1,     2,     2,     2,     2,     4,     5,     3,     2,
-       1,     2,     3,     4,     1,     1,     1,     4,     4,     6,
-       9,     9,     3,     3,     4,     5,     8,     1,     6,     5,
-       7,     0,     2,     2,     1,     1,     1,     1,     1,     2,
-       2,     2,     3,     1,     3,     3,     3,     3,     3,     4,
-       4,     3,     3,     3
+       2,     2,     0,     1,     3,     3,     2,     1,     2,     1,
+       2,     1,     3,     5,     3,     5,     2,     1,     2,     1,
+       1,     3,     5,     3,     5,     2,     1,     3,     3,     5,
+       5,     5,     3,     3,     1,     1,     1,     1,     2,     2,
+       1,     1,     1,     1,     1,     4,     2,     2,     1,     1,
+       1,     1,     1,     1,     2,     2,     2,     2,     4,     5,
+       3,     2,     1,     2,     3,     4,     1,     1,     1,     4,
+       4,     6,     9,     9,     3,     3,     4,     5,     8,     1,
+       6,     5,     7,     0,     2,     2,     1,     1,     1,     1,
+       1,     2,     2,     2,     3,     1,     3,     3,     3,     3,
+       3,     4,     4,     3,     3,     3
 };
 
 /* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
@@ -629,87 +633,89 @@ static const yytype_uint8 yyr2[] =
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
-       2,     3,     1,     0,     0,    31,     0,     0,     0,     0,
-       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     9,     4,     0,    11,    32,
-      14,     0,     0,   117,    76,    78,    81,    77,    79,    80,
-     111,   118,     0,     0,     0,    15,    38,    62,    63,    94,
-      95,   107,    96,     0,    16,    71,    36,    72,    17,     0,
-      18,     0,     0,   111,   111,     0,    22,    46,    64,    68,
-      70,    69,    65,    96,    20,     0,    32,    48,    49,    23,
-     111,     0,     0,    19,    40,     0,     0,    21,     0,    24,
-       0,    25,     0,    26,    55,    27,     0,    28,     0,    29,
-       0,    30,     0,     7,     0,     5,     0,    10,   120,   119,
-       0,     0,     0,     0,    37,     0,     0,   123,     0,   121,
-       0,     0,     0,    85,    84,     0,    83,    82,    35,     0,
-       0,    66,    67,    47,    74,    75,     0,    45,     0,     0,
-      74,    39,     0,     0,     0,     0,     0,    54,     0,     0,
-       0,     0,     0,    12,     0,    13,   111,   112,   113,     0,
-       0,   102,   103,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,   122,     0,     0,     0,     0,    88,     0,
-       0,    33,    34,     0,     0,    41,     0,    43,     0,    50,
-      52,    56,    57,     0,     0,     0,    61,     8,     6,     0,
-     116,   114,   115,     0,     0,     0,   133,   132,   131,     0,
-       0,   124,   125,   126,   127,   128,     0,     0,    97,   104,
-      98,     0,    86,    73,     0,     0,    90,    89,     0,     0,
-       0,     0,     0,     0,     0,   109,   105,     0,   129,   130,
-       0,     0,     0,    87,    42,    91,     0,    44,    51,    53,
-      58,    59,    60,     0,     0,   108,    99,     0,     0,     0,
-      92,   110,     0,     0,     0,    93,   106,     0,     0,   100,
-     101
+       2,     3,     1,     0,     0,    32,     0,     0,     0,     0,
+       0,     0,    32,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     9,     4,     0,    11,
+      33,    14,     0,     0,   119,    78,    80,    83,    79,    81,
+      82,   113,   120,     0,     0,     0,    15,    39,    64,    65,
+      96,    97,   109,    98,     0,    16,    73,    37,    74,    17,
+       0,    18,     0,     0,   113,   113,     0,    22,    47,    66,
+      70,    72,    71,    67,    98,    20,     0,    33,    49,    50,
+      23,   113,     0,     0,    19,    41,     0,     0,    21,     0,
+      24,     0,    25,     0,    26,    56,    27,     0,    28,     0,
+      29,     0,    30,     0,    31,     0,     7,     0,     5,     0,
+      10,   122,   121,     0,     0,     0,     0,    38,     0,     0,
+     125,     0,   123,     0,     0,     0,    87,    86,     0,    85,
+      84,    36,     0,     0,    68,    69,    48,    76,    77,     0,
+      46,     0,     0,    76,    40,     0,     0,     0,     0,     0,
+      55,     0,     0,     0,     0,     0,     0,    12,     0,    13,
+     113,   114,   115,     0,     0,   104,   105,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,   124,     0,     0,
+       0,     0,    90,     0,     0,    34,    35,     0,     0,    42,
+       0,    44,     0,    51,    53,    57,    58,     0,     0,     0,
+      62,    63,     8,     6,     0,   118,   116,   117,     0,     0,
+       0,   135,   134,   133,     0,     0,   126,   127,   128,   129,
+     130,     0,     0,    99,   106,   100,     0,    88,    75,     0,
+       0,    92,    91,     0,     0,     0,     0,     0,     0,     0,
+     111,   107,     0,   131,   132,     0,     0,     0,    89,    43,
+      93,     0,    45,    52,    54,    59,    60,    61,     0,     0,
+     110,   101,     0,     0,     0,    94,   112,     0,     0,     0,
+      95,   108,     0,     0,   102,   103
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
-      -1,     1,     3,    26,   154,   152,    27,    30,    58,    60,
-      54,    45,    83,    74,    87,    66,    79,    89,    91,    93,
-      95,    97,    99,   101,    55,    67,    56,    68,    47,    57,
-     187,   227,    48,    49,    50,    51,   113,   203,    52,   118
+      -1,     1,     3,    27,   158,   156,    28,    31,    59,    61,
+      55,    46,    84,    75,    88,    67,    80,    90,    92,    94,
+      96,    98,   100,   102,   104,    56,    68,    57,    69,    48,
+      58,   191,   232,    49,    50,    51,    52,   116,   208,    53,
+     121
 };
 
 /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
    STATE-NUM.  */
-#define YYPACT_NINF -89
+#define YYPACT_NINF -104
 static const yytype_int16 yypact[] =
 {
-     -89,    35,   -89,   213,   -42,    21,   283,   306,   306,   352,
-     237,    12,   329,   390,   159,   306,   306,   306,   159,     4,
-       7,     7,    46,     5,    32,   -89,   -89,    51,   -89,   -89,
-     -89,   455,   455,   -89,   -89,   -89,   -89,   -89,   -89,   -89,
-      40,   -89,   352,   421,   455,   -89,   -89,   -89,   -89,   -89,
-     -89,    55,    60,   406,   -89,   -89,    72,   -89,   -89,    76,
-     -89,    77,   352,    40,    57,   260,   -89,   -89,   -89,   -89,
-     -89,   -89,   -89,    79,   -89,   115,   352,   -89,   -89,   -89,
-      57,    43,   455,   -89,   -89,    82,    87,   -89,    89,   -89,
-      93,   -89,    94,   -89,    98,   -89,   108,   -89,   109,   -89,
-     116,   -89,   117,   -89,   455,   -89,   455,   -89,   -89,   -89,
-     156,   455,   455,   132,   -89,    10,   133,   -89,   167,   -89,
-     147,    64,    59,   -89,   -89,   444,   -89,   -89,   -89,   352,
-     306,   -89,   -89,   -89,   132,   -89,   375,   -89,    78,   455,
-     -89,   -89,    43,   152,   136,   352,   352,   352,   417,   352,
-     352,     7,   213,   505,   213,   505,    57,   -89,   -89,    -4,
-     455,   137,   -89,   455,   455,   455,   196,   197,   455,   455,
-     455,   455,   455,   -89,   195,    13,   160,   162,   -89,   451,
-     163,   -89,   -89,   165,   161,   -89,     6,   -89,   170,   174,
-     175,   -89,   -89,   173,   177,   210,   -89,   -89,   -89,   194,
-     -89,   -89,   -89,   226,   227,   247,   186,   513,   254,   455,
-     455,   106,   106,   -89,   -89,   -89,   455,   455,   234,   -89,
-     -89,   243,   -89,   -89,     7,   257,   275,   -89,   248,   265,
-     269,     7,   455,     4,   273,   -89,   -89,   297,   240,   240,
-     258,   266,    71,   -89,   -89,   301,   292,   -89,   -89,   -89,
-     -89,   -89,   -89,   276,   455,   -89,   -89,   313,   318,   299,
-     -89,   -89,   280,   455,   455,   -89,   -89,   284,   289,   -89,
-     -89
+    -104,     4,  -104,   173,   -26,   -25,   277,   297,   297,   349,
+     225,   -14,   329,   396,    18,   297,   297,   297,    18,   171,
+     -20,   297,   297,     2,    -4,    26,  -104,  -104,    43,  -104,
+    -104,  -104,   478,   478,  -104,  -104,  -104,  -104,  -104,  -104,
+    -104,   111,  -104,   349,   402,   478,  -104,  -104,  -104,  -104,
+    -104,  -104,   -12,    -5,    83,  -104,  -104,    44,  -104,  -104,
+      46,  -104,    49,   349,   111,   113,   245,  -104,  -104,  -104,
+    -104,  -104,  -104,  -104,    50,  -104,   100,   349,  -104,  -104,
+    -104,   113,   420,   478,  -104,  -104,    64,    66,  -104,    78,
+    -104,    80,  -104,    85,  -104,    89,  -104,    93,  -104,    98,
+    -104,   101,  -104,   112,  -104,   121,  -104,   478,  -104,   478,
+    -104,  -104,  -104,   153,   478,   478,   135,  -104,     8,   163,
+    -104,    74,  -104,   179,    52,   427,  -104,  -104,   445,  -104,
+    -104,  -104,   349,   297,  -104,  -104,  -104,   135,  -104,   381,
+    -104,    33,   478,  -104,  -104,   420,   186,   451,   349,   349,
+     349,   460,   349,   349,   297,   297,   173,   172,   173,   172,
+     113,  -104,  -104,     5,   478,   180,  -104,   478,   478,   478,
+     226,   224,   478,   478,   478,   478,   478,  -104,   235,    36,
+     195,   196,  -104,   466,   197,  -104,  -104,   199,   202,  -104,
+      21,  -104,   203,   211,   219,  -104,  -104,   217,   222,   223,
+    -104,  -104,  -104,  -104,   229,  -104,  -104,  -104,   240,   241,
+     237,   232,   527,   534,   478,   478,   134,   134,  -104,  -104,
+    -104,   478,   478,   243,  -104,  -104,   248,  -104,  -104,   -20,
+     263,   287,  -104,   249,   264,   265,   -20,   478,   171,   269,
+    -104,  -104,   294,   214,   214,   256,   258,   119,  -104,  -104,
+     301,   280,  -104,  -104,  -104,  -104,  -104,  -104,   266,   478,
+    -104,  -104,   308,   311,   292,  -104,  -104,   273,   478,   478,
+    -104,  -104,   274,   278,  -104,  -104
 };
 
 /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
-     -89,   -89,   -89,   -64,   -89,   -89,   -89,   321,   -89,   -89,
-     -89,   333,   -89,   -89,   -89,   -89,   -89,   -89,   -89,   -89,
-     -89,   -89,   -89,   -89,     2,   281,     9,    -7,    -9,    -8,
-     121,   -89,    14,    -3,    -1,     8,   -33,   -89,   -10,   -88
+    -104,  -104,  -104,  -103,  -104,  -104,  -104,   319,  -104,  -104,
+    -104,   331,  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,
+    -104,  -104,  -104,  -104,  -104,    19,   275,    -2,    -6,    -9,
+      -8,   115,  -104,    22,     1,    -1,    -3,   -48,  -104,   -10,
+     -66
 };
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
@@ -719,150 +725,154 @@ static const yytype_int16 yypgoto[] =
 #define YYTABLE_NINF -1
 static const yytype_uint16 yytable[] =
 {
-      73,    69,    70,    86,    28,    85,    84,    71,    46,    72,
-      98,    61,   100,   102,    46,   225,   153,    59,   155,    75,
-     160,   108,   109,   217,    90,    92,    94,   200,    88,   201,
-     134,   135,    96,   117,   119,     2,   226,   202,    34,    35,
-      36,    37,    38,   127,   114,    39,   110,   140,   111,   112,
-     105,    31,    32,   131,    40,    73,    69,    70,    53,   132,
-     161,   126,    71,   218,    72,   111,   112,    31,    32,    29,
-     133,    86,   117,    33,   141,   206,   207,   208,   114,   106,
-     211,   212,   213,   214,   215,    80,    64,    41,   197,    33,
-     198,   103,    82,   104,   117,    44,   117,   107,   178,   175,
-     176,   157,   158,    41,   120,   177,   257,   258,    82,   121,
-     183,    44,   109,   175,   176,   117,   170,   171,   172,   177,
-     128,   238,   239,   199,   129,   130,   139,   131,   138,   184,
-     142,   181,    86,   132,   188,   185,   143,   144,   193,   182,
-     192,   145,   146,   196,    31,    32,   147,   189,   190,   191,
-     204,   194,   195,   117,   117,   117,   148,   149,   117,   117,
-     117,   117,   117,   156,   150,   151,    33,    31,    32,   109,
-     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
-      41,   159,   174,   162,   183,    82,   205,   186,    44,    33,
-     164,   165,   166,   167,   168,   169,   170,   171,   172,   117,
-     117,    40,   209,    41,   210,   216,   240,   241,    43,   224,
-     219,    44,   220,   222,     4,   223,   244,   173,   228,   229,
-     230,   231,   251,   250,   252,   232,     5,     6,     7,     8,
+      74,    70,    71,    87,     2,    86,    60,    85,    76,    73,
+      99,    72,   101,    91,    93,    95,   137,   138,   164,   103,
+     105,    29,   111,   112,    30,    47,    32,    33,    62,    41,
+     230,    47,    54,   143,   120,   122,    89,   205,   123,   206,
+      97,   157,   108,   159,   130,   124,   222,   207,   106,    34,
+     107,   129,   231,   202,   134,   203,    74,    70,    71,   165,
+     136,    41,   117,    42,   135,    73,   187,    72,    44,   179,
+     180,    45,    87,   120,   109,   181,   144,   167,   168,   169,
+     170,   171,   172,   173,   174,   175,   176,   223,   179,   180,
+     110,    32,   125,   131,   181,   132,   117,   120,   133,   120,
+     141,   211,   212,   213,   161,   162,   216,   217,   218,   219,
+     220,   142,   204,   145,    34,   112,   146,   113,   120,   114,
+     115,   114,   115,   126,   127,   177,    41,   147,    42,   148,
+     134,   186,   188,   128,   149,    87,    45,   192,   150,   189,
+     135,   197,   151,   196,   174,   175,   176,   152,   243,   244,
+     153,   185,   200,   201,   209,   262,   263,   120,   120,   120,
+     160,   154,   120,   120,   120,   120,   120,   193,   194,   195,
+     155,   198,   199,   112,     4,   167,   168,   169,   170,   171,
+     172,   173,   174,   175,   176,   163,     5,     6,     7,     8,
        9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
-      19,    20,    21,   234,   262,    31,    32,    62,   168,   169,
-     170,   171,   172,   267,   268,    22,    23,    24,   233,    25,
-     166,   167,   168,   169,   170,   171,   172,    33,    31,    32,
-     136,    34,    35,    36,    37,    38,   235,   236,    39,    63,
-      64,    41,   237,   242,   246,    65,    43,   245,    53,    44,
-      33,    31,    32,   243,    34,    35,    36,    37,    38,   186,
-     248,    39,    63,    64,    41,   249,   253,   254,   255,    43,
-     259,    53,    44,    33,    31,    32,   256,    34,    35,    36,
-      37,    38,   260,   263,    39,    40,   261,    41,   264,   265,
-     266,    42,    43,    77,   269,    44,    33,    31,    32,   270,
-      34,    35,    36,    37,    38,    78,   137,    39,    40,   247,
-      41,     0,     0,     0,     0,    43,     0,    53,    44,    33,
-      31,    32,     0,    34,    35,    36,    37,    38,     0,     0,
-      39,    40,     0,    41,     0,     0,     0,    76,    43,     0,
-       0,    44,    33,    31,    32,     0,    34,    35,    36,    37,
-      38,     0,     0,    39,    40,     0,    41,     0,    31,    32,
-       0,    43,     0,     0,    44,    33,     0,     0,     0,    34,
-      35,    36,    37,    38,    31,   122,    39,     0,     0,    41,
-      33,     0,     0,     0,    43,    31,    32,    44,     0,    31,
-      32,     0,    80,    64,    41,     0,    33,     0,    81,    82,
-       0,    53,    44,     0,     0,   123,   124,    33,    40,     0,
-      41,    33,    31,   179,     0,   125,   115,     0,    44,    31,
-      32,    41,   116,    31,    32,    41,    82,     0,    53,    44,
-      82,     0,     0,    44,    33,     0,     0,     0,     0,     0,
-       0,    33,     0,   180,     0,    33,     0,     0,    41,     0,
-     221,     0,     0,    82,     0,    41,    44,     0,     0,    41,
-      82,     0,     0,    44,    82,     0,     0,    44,   163,   164,
-     165,   166,   167,   168,   169,   170,   171,   172,   165,   166,
-     167,   168,   169,   170,   171,   172
+      19,    20,    21,    22,   120,   120,    35,    36,    37,    38,
+      39,   245,   246,    40,   166,   178,    23,    24,    25,   187,
+      26,   249,   172,   173,   174,   175,   176,   256,   255,   257,
+     210,   215,   214,    32,    33,    63,   168,   169,   170,   171,
+     172,   173,   174,   175,   176,   221,   224,   225,   227,   267,
+     228,   229,   233,    32,    33,   139,    34,   234,   272,   273,
+      35,    36,    37,    38,    39,   235,   236,    40,    64,    65,
+      42,   237,   238,   242,    66,    44,    34,    54,    45,   239,
+      35,    36,    37,    38,    39,    32,    33,    40,    64,    65,
+      42,   240,   241,   247,   250,    44,   251,    54,    45,   248,
+     253,   190,   254,   258,   259,    32,    33,   260,    34,   261,
+     264,   265,    35,    36,    37,    38,    39,   266,   268,    40,
+      41,   269,    42,   270,   271,   274,    43,    44,    34,   275,
+      45,    78,    35,    36,    37,    38,    39,    32,    33,    40,
+      41,   140,    42,    79,     0,     0,     0,    44,   252,    54,
+      45,     0,     0,     0,     0,     0,     0,    32,    33,     0,
+      34,     0,     0,     0,    35,    36,    37,    38,    39,     0,
+       0,    40,    41,     0,    42,     0,     0,     0,    77,    44,
+      34,     0,    45,     0,    35,    36,    37,    38,    39,    32,
+      33,    40,    41,     0,    42,     0,     0,     0,     0,    44,
+       0,     0,    45,     0,    32,    33,     0,     0,     0,     0,
+      32,    33,    34,     0,     0,     0,    35,    36,    37,    38,
+      39,     0,     0,    40,     0,     0,    42,    34,    32,    33,
+       0,    44,     0,    34,    45,    32,    33,     0,   118,    81,
+      65,    42,     0,     0,   119,    82,    83,    42,    54,    45,
+       0,    34,    83,    32,   183,    45,     0,     0,    34,    32,
+      33,     0,     0,    81,    65,    42,     0,   182,    32,    33,
+      83,     0,    42,    45,    32,    33,    34,    83,     0,     0,
+      45,     0,    34,     0,     0,   184,    32,    33,     0,     0,
+      42,    34,     0,     0,     0,    83,    42,    34,    45,     0,
+       0,    83,     0,   190,    45,    42,   226,     0,     0,    34,
+      83,    42,    54,    45,     0,     0,    83,     0,     0,    45,
+       0,     0,     0,    42,     0,     0,     0,     0,    83,     0,
+       0,    45,   169,   170,   171,   172,   173,   174,   175,   176,
+     170,   171,   172,   173,   174,   175,   176
 };
 
 static const yytype_int16 yycheck[] =
 {
-      10,    10,    10,    13,    46,    13,    13,    10,     6,    10,
-      19,     9,    20,    21,    12,     9,   104,     8,   106,    11,
-      10,    31,    32,    10,    15,    16,    17,    31,    14,    33,
-      63,    64,    18,    43,    44,     0,    30,    41,    34,    35,
-      36,    37,    38,    53,    42,    41,     6,    80,     8,     9,
-      45,     8,     9,    62,    42,    65,    65,    65,    51,    62,
-      50,    53,    65,    50,    65,     8,     9,     8,     9,    48,
-      62,    81,    82,    30,    81,   163,   164,   165,    76,    47,
-     168,   169,   170,   171,   172,    42,    43,    44,   152,    30,
-     154,    45,    49,    47,   104,    52,   106,    46,    39,    35,
-      36,   111,   112,    44,    49,    41,    35,    36,    49,    49,
-      32,    52,   122,    35,    36,   125,    10,    11,    12,    41,
-      48,   209,   210,   156,    48,    48,    11,   136,    49,   139,
-      48,   129,   142,   136,   144,   142,    49,    48,   148,   130,
-     148,    48,    48,   151,     8,     9,    48,   145,   146,   147,
-     160,   149,   150,   163,   164,   165,    48,    48,   168,   169,
-     170,   171,   172,     7,    48,    48,    30,     8,     9,   179,
-       3,     4,     5,     6,     7,     8,     9,    10,    11,    12,
-      44,    49,    35,    50,    32,    49,    49,    51,    52,    30,
-       4,     5,     6,     7,     8,     9,    10,    11,    12,   209,
-     210,    42,     6,    44,     7,    10,   216,   217,    49,    48,
-      50,    52,    50,    50,     1,    50,   224,    50,    48,    45,
-      45,    48,   232,   231,   233,    48,    13,    14,    15,    16,
+      10,    10,    10,    13,     0,    13,     8,    13,    11,    10,
+      19,    10,    20,    15,    16,    17,    64,    65,    10,    21,
+      22,    47,    32,    33,    49,     6,     8,     9,     9,    43,
+       9,    12,    52,    81,    44,    45,    14,    32,    50,    34,
+      18,   107,    46,   109,    54,    50,    10,    42,    46,    31,
+      48,    54,    31,   156,    63,   158,    66,    66,    66,    51,
+      63,    43,    43,    45,    63,    66,    33,    66,    50,    36,
+      37,    53,    82,    83,    48,    42,    82,     3,     4,     5,
+       6,     7,     8,     9,    10,    11,    12,    51,    36,    37,
+      47,     8,     9,    49,    42,    49,    77,   107,    49,   109,
+      50,   167,   168,   169,   114,   115,   172,   173,   174,   175,
+     176,    11,   160,    49,    31,   125,    50,     6,   128,     8,
+       9,     8,     9,    40,    41,    51,    43,    49,    45,    49,
+     139,   133,   142,    50,    49,   145,    53,   147,    49,   145,
+     139,   151,    49,   151,    10,    11,    12,    49,   214,   215,
+      49,   132,   154,   155,   164,    36,    37,   167,   168,   169,
+       7,    49,   172,   173,   174,   175,   176,   148,   149,   150,
+      49,   152,   153,   183,     1,     3,     4,     5,     6,     7,
+       8,     9,    10,    11,    12,    50,    13,    14,    15,    16,
       17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
-      27,    28,    29,    49,   254,     8,     9,    10,     8,     9,
-      10,    11,    12,   263,   264,    42,    43,    44,    48,    46,
-       6,     7,     8,     9,    10,    11,    12,    30,     8,     9,
-      10,    34,    35,    36,    37,    38,    50,    50,    41,    42,
-      43,    44,    35,    49,     9,    48,    49,    30,    51,    52,
-      30,     8,     9,    50,    34,    35,    36,    37,    38,    51,
-      35,    41,    42,    43,    44,    36,    33,    10,    50,    49,
-       9,    51,    52,    30,     8,     9,    50,    34,    35,    36,
-      37,    38,    30,    10,    41,    42,    50,    44,    10,    30,
-      50,    48,    49,    12,    50,    52,    30,     8,     9,    50,
-      34,    35,    36,    37,    38,    12,    65,    41,    42,   228,
-      44,    -1,    -1,    -1,    -1,    49,    -1,    51,    52,    30,
-       8,     9,    -1,    34,    35,    36,    37,    38,    -1,    -1,
-      41,    42,    -1,    44,    -1,    -1,    -1,    48,    49,    -1,
-      -1,    52,    30,     8,     9,    -1,    34,    35,    36,    37,
-      38,    -1,    -1,    41,    42,    -1,    44,    -1,     8,     9,
-      -1,    49,    -1,    -1,    52,    30,    -1,    -1,    -1,    34,
-      35,    36,    37,    38,     8,     9,    41,    -1,    -1,    44,
-      30,    -1,    -1,    -1,    49,     8,     9,    52,    -1,     8,
-       9,    -1,    42,    43,    44,    -1,    30,    -1,    48,    49,
-      -1,    51,    52,    -1,    -1,    39,    40,    30,    42,    -1,
-      44,    30,     8,     9,    -1,    49,    35,    -1,    52,     8,
-       9,    44,    41,     8,     9,    44,    49,    -1,    51,    52,
-      49,    -1,    -1,    52,    30,    -1,    -1,    -1,    -1,    -1,
-      -1,    30,    -1,    39,    -1,    30,    -1,    -1,    44,    -1,
-      39,    -1,    -1,    49,    -1,    44,    52,    -1,    -1,    44,
-      49,    -1,    -1,    52,    49,    -1,    -1,    52,     3,     4,
-       5,     6,     7,     8,     9,    10,    11,    12,     5,     6,
-       7,     8,     9,    10,    11,    12
+      27,    28,    29,    30,   214,   215,    35,    36,    37,    38,
+      39,   221,   222,    42,    51,    36,    43,    44,    45,    33,
+      47,   229,     8,     9,    10,    11,    12,   237,   236,   238,
+      50,     7,     6,     8,     9,    10,     4,     5,     6,     7,
+       8,     9,    10,    11,    12,    10,    51,    51,    51,   259,
+      51,    49,    49,     8,     9,    10,    31,    46,   268,   269,
+      35,    36,    37,    38,    39,    46,    49,    42,    43,    44,
+      45,    49,    49,    36,    49,    50,    31,    52,    53,    50,
+      35,    36,    37,    38,    39,     8,     9,    42,    43,    44,
+      45,    51,    51,    50,    31,    50,     9,    52,    53,    51,
+      36,    52,    37,    34,    10,     8,     9,    51,    31,    51,
+       9,    31,    35,    36,    37,    38,    39,    51,    10,    42,
+      43,    10,    45,    31,    51,    51,    49,    50,    31,    51,
+      53,    12,    35,    36,    37,    38,    39,     8,     9,    42,
+      43,    66,    45,    12,    -1,    -1,    -1,    50,   233,    52,
+      53,    -1,    -1,    -1,    -1,    -1,    -1,     8,     9,    -1,
+      31,    -1,    -1,    -1,    35,    36,    37,    38,    39,    -1,
+      -1,    42,    43,    -1,    45,    -1,    -1,    -1,    49,    50,
+      31,    -1,    53,    -1,    35,    36,    37,    38,    39,     8,
+       9,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,    50,
+      -1,    -1,    53,    -1,     8,     9,    -1,    -1,    -1,    -1,
+       8,     9,    31,    -1,    -1,    -1,    35,    36,    37,    38,
+      39,    -1,    -1,    42,    -1,    -1,    45,    31,     8,     9,
+      -1,    50,    -1,    31,    53,     8,     9,    -1,    36,    43,
+      44,    45,    -1,    -1,    42,    49,    50,    45,    52,    53,
+      -1,    31,    50,     8,     9,    53,    -1,    -1,    31,     8,
+       9,    -1,    -1,    43,    44,    45,    -1,    40,     8,     9,
+      50,    -1,    45,    53,     8,     9,    31,    50,    -1,    -1,
+      53,    -1,    31,    -1,    -1,    40,     8,     9,    -1,    -1,
+      45,    31,    -1,    -1,    -1,    50,    45,    31,    53,    -1,
+      -1,    50,    -1,    52,    53,    45,    40,    -1,    -1,    31,
+      50,    45,    52,    53,    -1,    -1,    50,    -1,    -1,    53,
+      -1,    -1,    -1,    45,    -1,    -1,    -1,    -1,    50,    -1,
+      -1,    53,     5,     6,     7,     8,     9,    10,    11,    12,
+       6,     7,     8,     9,    10,    11,    12
 };
 
 /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
    symbol of state STATE-NUM.  */
 static const yytype_uint8 yystos[] =
 {
-       0,    54,     0,    55,     1,    13,    14,    15,    16,    17,
+       0,    55,     0,    56,     1,    13,    14,    15,    16,    17,
       18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
-      28,    29,    42,    43,    44,    46,    56,    59,    46,    48,
-      60,     8,     9,    30,    34,    35,    36,    37,    38,    41,
-      42,    44,    48,    49,    52,    64,    77,    81,    85,    86,
-      87,    88,    91,    51,    63,    77,    79,    82,    61,    79,
-      62,    77,    10,    42,    43,    48,    68,    78,    80,    81,
-      82,    86,    87,    91,    66,    88,    48,    60,    64,    69,
-      42,    48,    49,    65,    80,    82,    91,    67,    85,    70,
-      79,    71,    79,    72,    79,    73,    85,    74,    81,    75,
-      82,    76,    82,    45,    47,    45,    47,    46,    91,    91,
-       6,     8,     9,    89,    77,    35,    41,    91,    92,    91,
-      49,    49,     9,    39,    40,    49,    88,    91,    48,    48,
-      48,    81,    86,    88,    89,    89,    10,    78,    49,    11,
-      89,    80,    48,    49,    48,    48,    48,    48,    48,    48,
-      48,    48,    58,    92,    57,    92,     7,    91,    91,    49,
-      10,    50,    50,     3,     4,     5,     6,     7,     8,     9,
-      10,    11,    12,    50,    35,    35,    36,    41,    39,     9,
-      39,    77,    79,    32,    91,    80,    51,    83,    91,    77,
-      77,    77,    82,    91,    77,    77,    82,    56,    56,    89,
-      31,    33,    41,    90,    91,    49,    92,    92,    92,     6,
-       7,    92,    92,    92,    92,    92,    10,    10,    50,    50,
-      50,    39,    50,    50,    48,     9,    30,    84,    48,    45,
-      45,    48,    48,    48,    49,    50,    50,    35,    92,    92,
-      91,    91,    49,    50,    82,    30,     9,    83,    35,    36,
-      82,    91,    81,    33,    10,    50,    50,    35,    36,     9,
-      30,    50,    91,    10,    10,    30,    50,    91,    91,    50,
-      50
+      28,    29,    30,    43,    44,    45,    47,    57,    60,    47,
+      49,    61,     8,     9,    31,    35,    36,    37,    38,    39,
+      42,    43,    45,    49,    50,    53,    65,    79,    83,    87,
+      88,    89,    90,    93,    52,    64,    79,    81,    84,    62,
+      81,    63,    79,    10,    43,    44,    49,    69,    80,    82,
+      83,    84,    88,    89,    93,    67,    90,    49,    61,    65,
+      70,    43,    49,    50,    66,    82,    84,    93,    68,    87,
+      71,    81,    72,    81,    73,    81,    74,    87,    75,    83,
+      76,    84,    77,    81,    78,    81,    46,    48,    46,    48,
+      47,    93,    93,     6,     8,     9,    91,    79,    36,    42,
+      93,    94,    93,    50,    50,     9,    40,    41,    50,    90,
+      93,    49,    49,    49,    83,    88,    90,    91,    91,    10,
+      80,    50,    11,    91,    82,    49,    50,    49,    49,    49,
+      49,    49,    49,    49,    49,    49,    59,    94,    58,    94,
+       7,    93,    93,    50,    10,    51,    51,     3,     4,     5,
+       6,     7,     8,     9,    10,    11,    12,    51,    36,    36,
+      37,    42,    40,     9,    40,    79,    81,    33,    93,    82,
+      52,    85,    93,    79,    79,    79,    84,    93,    79,    79,
+      81,    81,    57,    57,    91,    32,    34,    42,    92,    93,
+      50,    94,    94,    94,     6,     7,    94,    94,    94,    94,
+      94,    10,    10,    51,    51,    51,    40,    51,    51,    49,
+       9,    31,    86,    49,    46,    46,    49,    49,    49,    50,
+      51,    51,    36,    94,    94,    93,    93,    50,    51,    84,
+      31,     9,    85,    36,    37,    84,    93,    83,    34,    10,
+      51,    51,    36,    37,     9,    31,    51,    93,    10,    10,
+      31,    51,    93,    93,    51,    51
 };
 
 #define yyerrok		(yyerrstatus = 0)
@@ -1803,95 +1813,100 @@ yyreduce:
     break;
 
   case 31:
-#line 124 "a.y"
+#line 122 "a.y"
+    { outcode((yyvsp[(1) - (2)].lval), &(yyvsp[(2) - (2)].gen2)); }
+    break;
+
+  case 32:
+#line 125 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 32:
-#line 129 "a.y"
+  case 33:
+#line 130 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 33:
-#line 136 "a.y"
+  case 34:
+#line 137 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 34:
-#line 143 "a.y"
+  case 35:
+#line 144 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 35:
-#line 150 "a.y"
+  case 36:
+#line 151 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (2)].gen);
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 36:
-#line 155 "a.y"
+  case 37:
+#line 156 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (1)].gen);
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 37:
-#line 162 "a.y"
+  case 38:
+#line 163 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 38:
-#line 167 "a.y"
+  case 39:
+#line 168 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(1) - (1)].gen);
 	}
     break;
 
-  case 39:
-#line 174 "a.y"
+  case 40:
+#line 175 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 40:
-#line 179 "a.y"
+  case 41:
+#line 180 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(1) - (1)].gen);
 	}
     break;
 
-  case 41:
-#line 184 "a.y"
+  case 42:
+#line 185 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 42:
-#line 191 "a.y"
+  case 43:
+#line 192 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).from.scale = (yyvsp[(3) - (5)].lval);
@@ -1899,16 +1914,16 @@ yyreduce:
 	}
     break;
 
-  case 43:
-#line 199 "a.y"
+  case 44:
+#line 200 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 44:
-#line 204 "a.y"
+  case 45:
+#line 205 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).from.scale = (yyvsp[(3) - (5)].lval);
@@ -1916,24 +1931,24 @@ yyreduce:
 	}
     break;
 
-  case 45:
-#line 212 "a.y"
+  case 46:
+#line 213 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 46:
-#line 217 "a.y"
+  case 47:
+#line 218 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(1) - (1)].gen);
 	}
     break;
 
-  case 47:
-#line 222 "a.y"
+  case 48:
+#line 223 "a.y"
     {
 		(yyval.gen2).from = nullgen;
 		(yyval.gen2).to = (yyvsp[(2) - (2)].gen);
@@ -1942,16 +1957,16 @@ yyreduce:
 	}
     break;
 
-  case 50:
-#line 235 "a.y"
+  case 51:
+#line 236 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 51:
-#line 240 "a.y"
+  case 52:
+#line 241 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (5)].gen);
@@ -1961,16 +1976,16 @@ yyreduce:
 	}
     break;
 
-  case 52:
-#line 250 "a.y"
+  case 53:
+#line 251 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 53:
-#line 255 "a.y"
+  case 54:
+#line 256 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (5)].gen);
@@ -1980,40 +1995,40 @@ yyreduce:
 	}
     break;
 
-  case 54:
-#line 265 "a.y"
+  case 55:
+#line 266 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (2)].gen);
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 55:
-#line 270 "a.y"
+  case 56:
+#line 271 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (1)].gen);
 		(yyval.gen2).to = nullgen;
 	}
     break;
 
-  case 56:
-#line 275 "a.y"
+  case 57:
+#line 276 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 57:
-#line 282 "a.y"
+  case 58:
+#line 283 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 58:
-#line 287 "a.y"
+  case 59:
+#line 288 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).from.scale = (yyvsp[(3) - (5)].lval);
@@ -2021,8 +2036,8 @@ yyreduce:
 	}
     break;
 
-  case 59:
-#line 295 "a.y"
+  case 60:
+#line 296 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(1) - (5)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (5)].gen);
@@ -2030,8 +2045,8 @@ yyreduce:
 	}
     break;
 
-  case 60:
-#line 303 "a.y"
+  case 61:
+#line 304 "a.y"
     {
 		(yyval.gen2).from = (yyvsp[(3) - (5)].gen);
 		(yyval.gen2).to = (yyvsp[(5) - (5)].gen);
@@ -2041,30 +2056,44 @@ yyreduce:
 	}
     break;
 
-  case 61:
-#line 313 "a.y"
+  case 62:
+#line 314 "a.y"
     {
+		if((yyvsp[(1) - (3)].gen).type != D_CONST || (yyvsp[(3) - (3)].gen).type != D_CONST)
+			yyerror("arguments to PCDATA must be integer constants");
 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
 	}
     break;
 
-  case 66:
-#line 326 "a.y"
+  case 63:
+#line 323 "a.y"
+    {
+		if((yyvsp[(1) - (3)].gen).type != D_CONST)
+			yyerror("index for FUNCDATA must be integer constant");
+		if((yyvsp[(3) - (3)].gen).type != D_EXTERN && (yyvsp[(3) - (3)].gen).type != D_STATIC)
+			yyerror("value for FUNCDATA must be symbol reference");
+ 		(yyval.gen2).from = (yyvsp[(1) - (3)].gen);
+ 		(yyval.gen2).to = (yyvsp[(3) - (3)].gen);
+ 	}
+    break;
+
+  case 68:
+#line 340 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 67:
-#line 330 "a.y"
+  case 69:
+#line 344 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
 	}
     break;
 
-  case 73:
-#line 343 "a.y"
+  case 75:
+#line 357 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_BRANCH;
@@ -2072,8 +2101,8 @@ yyreduce:
 	}
     break;
 
-  case 74:
-#line 349 "a.y"
+  case 76:
+#line 363 "a.y"
     {
 		(yyval.gen) = nullgen;
 		if(pass == 2)
@@ -2084,8 +2113,8 @@ yyreduce:
 	}
     break;
 
-  case 75:
-#line 358 "a.y"
+  case 77:
+#line 372 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_BRANCH;
@@ -2094,56 +2123,56 @@ yyreduce:
 	}
     break;
 
-  case 76:
-#line 367 "a.y"
+  case 78:
+#line 381 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 77:
-#line 372 "a.y"
+  case 79:
+#line 386 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 78:
-#line 377 "a.y"
+  case 80:
+#line 391 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 79:
-#line 382 "a.y"
+  case 81:
+#line 396 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 80:
-#line 387 "a.y"
+  case 82:
+#line 401 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_SP;
 	}
     break;
 
-  case 81:
-#line 392 "a.y"
+  case 83:
+#line 406 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(1) - (1)].lval);
 	}
     break;
 
-  case 82:
-#line 399 "a.y"
+  case 84:
+#line 413 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_CONST;
@@ -2151,8 +2180,8 @@ yyreduce:
 	}
     break;
 
-  case 83:
-#line 405 "a.y"
+  case 85:
+#line 419 "a.y"
     {
 		(yyval.gen) = (yyvsp[(2) - (2)].gen);
 		(yyval.gen).index = (yyvsp[(2) - (2)].gen).type;
@@ -2165,8 +2194,8 @@ yyreduce:
 	}
     break;
 
-  case 84:
-#line 416 "a.y"
+  case 86:
+#line 430 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_SCONST;
@@ -2174,8 +2203,8 @@ yyreduce:
 	}
     break;
 
-  case 85:
-#line 422 "a.y"
+  case 87:
+#line 436 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2183,8 +2212,8 @@ yyreduce:
 	}
     break;
 
-  case 86:
-#line 428 "a.y"
+  case 88:
+#line 442 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2192,8 +2221,8 @@ yyreduce:
 	}
     break;
 
-  case 87:
-#line 434 "a.y"
+  case 89:
+#line 448 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2201,8 +2230,8 @@ yyreduce:
 	}
     break;
 
-  case 88:
-#line 440 "a.y"
+  case 90:
+#line 454 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_FCONST;
@@ -2210,8 +2239,8 @@ yyreduce:
 	}
     break;
 
-  case 89:
-#line 448 "a.y"
+  case 91:
+#line 462 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_CONST2;
@@ -2220,24 +2249,24 @@ yyreduce:
 	}
     break;
 
-  case 90:
-#line 457 "a.y"
+  case 92:
+#line 471 "a.y"
     {
 		(yyval.con2).v1 = (yyvsp[(1) - (1)].lval);
 		(yyval.con2).v2 = 0;
 	}
     break;
 
-  case 91:
-#line 462 "a.y"
+  case 93:
+#line 476 "a.y"
     {
 		(yyval.con2).v1 = -(yyvsp[(2) - (2)].lval);
 		(yyval.con2).v2 = 0;
 	}
     break;
 
-  case 92:
-#line 467 "a.y"
+  case 94:
+#line 481 "a.y"
     {
 		// Change explicit 0 argument size to 1
 		// so that we can distinguish it from missing.
@@ -2248,8 +2277,8 @@ yyreduce:
 	}
     break;
 
-  case 93:
-#line 476 "a.y"
+  case 95:
+#line 490 "a.y"
     {
 		// Change explicit 0 argument size to 1
 		// so that we can distinguish it from missing.
@@ -2260,8 +2289,8 @@ yyreduce:
 	}
     break;
 
-  case 96:
-#line 491 "a.y"
+  case 98:
+#line 505 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_NONE;
@@ -2269,8 +2298,8 @@ yyreduce:
 	}
     break;
 
-  case 97:
-#line 497 "a.y"
+  case 99:
+#line 511 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(3) - (4)].lval);
@@ -2278,8 +2307,8 @@ yyreduce:
 	}
     break;
 
-  case 98:
-#line 503 "a.y"
+  case 100:
+#line 517 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_SP;
@@ -2287,8 +2316,8 @@ yyreduce:
 	}
     break;
 
-  case 99:
-#line 509 "a.y"
+  case 101:
+#line 523 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_NONE;
@@ -2299,8 +2328,8 @@ yyreduce:
 	}
     break;
 
-  case 100:
-#line 518 "a.y"
+  case 102:
+#line 532 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(3) - (9)].lval);
@@ -2311,8 +2340,8 @@ yyreduce:
 	}
     break;
 
-  case 101:
-#line 527 "a.y"
+  case 103:
+#line 541 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(3) - (9)].lval);
@@ -2323,24 +2352,24 @@ yyreduce:
 	}
     break;
 
-  case 102:
-#line 536 "a.y"
+  case 104:
+#line 550 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(2) - (3)].lval);
 	}
     break;
 
-  case 103:
-#line 541 "a.y"
+  case 105:
+#line 555 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_SP;
 	}
     break;
 
-  case 104:
-#line 546 "a.y"
+  case 106:
+#line 560 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(3) - (4)].lval);
@@ -2348,8 +2377,8 @@ yyreduce:
 	}
     break;
 
-  case 105:
-#line 552 "a.y"
+  case 107:
+#line 566 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+D_NONE;
@@ -2359,8 +2388,8 @@ yyreduce:
 	}
     break;
 
-  case 106:
-#line 560 "a.y"
+  case 108:
+#line 574 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_INDIR+(yyvsp[(2) - (8)].lval);
@@ -2370,15 +2399,15 @@ yyreduce:
 	}
     break;
 
-  case 107:
-#line 570 "a.y"
+  case 109:
+#line 584 "a.y"
     {
 		(yyval.gen) = (yyvsp[(1) - (1)].gen);
 	}
     break;
 
-  case 108:
-#line 574 "a.y"
+  case 110:
+#line 588 "a.y"
     {
 		(yyval.gen) = (yyvsp[(1) - (6)].gen);
 		(yyval.gen).index = (yyvsp[(3) - (6)].lval);
@@ -2387,8 +2416,8 @@ yyreduce:
 	}
     break;
 
-  case 109:
-#line 583 "a.y"
+  case 111:
+#line 597 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = (yyvsp[(4) - (5)].lval);
@@ -2397,8 +2426,8 @@ yyreduce:
 	}
     break;
 
-  case 110:
-#line 590 "a.y"
+  case 112:
+#line 604 "a.y"
     {
 		(yyval.gen) = nullgen;
 		(yyval.gen).type = D_STATIC;
@@ -2407,134 +2436,134 @@ yyreduce:
 	}
     break;
 
-  case 111:
-#line 598 "a.y"
+  case 113:
+#line 612 "a.y"
     {
 		(yyval.lval) = 0;
 	}
     break;
 
-  case 112:
-#line 602 "a.y"
+  case 114:
+#line 616 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 113:
-#line 606 "a.y"
+  case 115:
+#line 620 "a.y"
     {
 		(yyval.lval) = -(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 115:
-#line 613 "a.y"
+  case 117:
+#line 627 "a.y"
     {
 		(yyval.lval) = D_AUTO;
 	}
     break;
 
-  case 118:
-#line 621 "a.y"
+  case 120:
+#line 635 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (1)].sym)->value;
 	}
     break;
 
-  case 119:
-#line 625 "a.y"
+  case 121:
+#line 639 "a.y"
     {
 		(yyval.lval) = -(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 120:
-#line 629 "a.y"
+  case 122:
+#line 643 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 121:
-#line 633 "a.y"
+  case 123:
+#line 647 "a.y"
     {
 		(yyval.lval) = ~(yyvsp[(2) - (2)].lval);
 	}
     break;
 
-  case 122:
-#line 637 "a.y"
+  case 124:
+#line 651 "a.y"
     {
 		(yyval.lval) = (yyvsp[(2) - (3)].lval);
 	}
     break;
 
-  case 124:
-#line 644 "a.y"
+  case 126:
+#line 658 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) + (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 125:
-#line 648 "a.y"
+  case 127:
+#line 662 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) - (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 126:
-#line 652 "a.y"
+  case 128:
+#line 666 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) * (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 127:
-#line 656 "a.y"
+  case 129:
+#line 670 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) / (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 128:
-#line 660 "a.y"
+  case 130:
+#line 674 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) % (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 129:
-#line 664 "a.y"
+  case 131:
+#line 678 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (4)].lval) << (yyvsp[(4) - (4)].lval);
 	}
     break;
 
-  case 130:
-#line 668 "a.y"
+  case 132:
+#line 682 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (4)].lval) >> (yyvsp[(4) - (4)].lval);
 	}
     break;
 
-  case 131:
-#line 672 "a.y"
+  case 133:
+#line 686 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) & (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 132:
-#line 676 "a.y"
+  case 134:
+#line 690 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) ^ (yyvsp[(3) - (3)].lval);
 	}
     break;
 
-  case 133:
-#line 680 "a.y"
+  case 135:
+#line 694 "a.y"
     {
 		(yyval.lval) = (yyvsp[(1) - (3)].lval) | (yyvsp[(3) - (3)].lval);
 	}
@@ -2542,7 +2571,7 @@ yyreduce:
 
 
 /* Line 1267 of yacc.c.  */
-#line 2546 "y.tab.c"
+#line 2575 "y.tab.c"
       default: break;
     }
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
diff --git a/src/cmd/8a/y.tab.h b/src/cmd/8a/y.tab.h
index cb572f7b38..8ed61a9f80 100644
--- a/src/cmd/8a/y.tab.h
+++ b/src/cmd/8a/y.tab.h
@@ -56,21 +56,22 @@
      LTYPEXC = 272,
      LTYPEX = 273,
      LTYPEPC = 274,
-     LCONST = 275,
-     LFP = 276,
-     LPC = 277,
-     LSB = 278,
-     LBREG = 279,
-     LLREG = 280,
-     LSREG = 281,
-     LFREG = 282,
-     LXREG = 283,
-     LFCONST = 284,
-     LSCONST = 285,
-     LSP = 286,
-     LNAME = 287,
-     LLAB = 288,
-     LVAR = 289
+     LTYPEF = 275,
+     LCONST = 276,
+     LFP = 277,
+     LPC = 278,
+     LSB = 279,
+     LBREG = 280,
+     LLREG = 281,
+     LSREG = 282,
+     LFREG = 283,
+     LXREG = 284,
+     LFCONST = 285,
+     LSCONST = 286,
+     LSP = 287,
+     LNAME = 288,
+     LLAB = 289,
+     LVAR = 290
    };
 #endif
 /* Tokens.  */
@@ -91,21 +92,22 @@
 #define LTYPEXC 272
 #define LTYPEX 273
 #define LTYPEPC 274
-#define LCONST 275
-#define LFP 276
-#define LPC 277
-#define LSB 278
-#define LBREG 279
-#define LLREG 280
-#define LSREG 281
-#define LFREG 282
-#define LXREG 283
-#define LFCONST 284
-#define LSCONST 285
-#define LSP 286
-#define LNAME 287
-#define LLAB 288
-#define LVAR 289
+#define LTYPEF 275
+#define LCONST 276
+#define LFP 277
+#define LPC 278
+#define LSB 279
+#define LBREG 280
+#define LLREG 281
+#define LSREG 282
+#define LFREG 283
+#define LXREG 284
+#define LFCONST 285
+#define LSCONST 286
+#define LSP 287
+#define LNAME 288
+#define LLAB 289
+#define LVAR 290
 
 
 
@@ -126,7 +128,7 @@ typedef union YYSTYPE
 	Gen2	gen2;
 }
 /* Line 1529 of yacc.c.  */
-#line 130 "y.tab.h"
+#line 132 "y.tab.h"
 	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
