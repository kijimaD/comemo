commit b2b6be71f27ef74510394dad822cfe8d5e56f4f4
Author: Jay Conrod <jayconrod@google.com>
Date:   Wed Mar 10 11:11:59 2021 -0500

    [dev.fuzz] testing: support T.Parallel in fuzz functions
    
    While running the seed corpus, T.Parallel acts like it does in
    subtests started with T.Run: it blocks until all other non-parallel
    subtests have finished, then unblocks when the barrier chan is
    closed. A semaphore (t.context.waitParallel) limits the number of
    tests that run concurrently (determined by -test.parallel).
    
    While fuzzing, T.Parallel has no effect, other than asserting that it
    can't be called multiple times. We already run different inputs in
    concurrent processes, but we can't run inputs concurrently in the same
    process if we want to attribute crashes to specific inputs.
    
    Change-Id: I2bac08e647e1d92ea410c83c3f3558a033fe3dd1
    Reviewed-on: https://go-review.googlesource.com/c/go/+/300449
    Trust: Jay Conrod <jayconrod@google.com>
    Run-TryBot: Jay Conrod <jayconrod@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Katie Hockman <katie@golang.org>

 src/cmd/go/testdata/script/test_fuzz_parallel.txt | 61 +++++++++++++++++
 src/internal/fuzz/worker.go                       | 10 +--
 src/testing/fuzz.go                               | 82 +++++++++++++++++------
 src/testing/sub_test.go                           |  7 +-
 src/testing/testing.go                            |  6 ++
 5 files changed, 139 insertions(+), 27 deletions(-)
