commit 756fd56bbf4f965cfab29cc71e0853f0c48a331f
Author: Than McIntosh <thanm@google.com>
Date:   Wed Apr 28 18:10:22 2021 -0400

    cmd/compile: remove an unused function
    
    Remove unused function AddrForParamSlot.
    
    Change-Id: I8e3ed8cc6607d30ad6da7bc6ccbaa87b7e001e79
    Reviewed-on: https://go-review.googlesource.com/c/go/+/314909
    Trust: Than McIntosh <thanm@google.com>
    Run-TryBot: Than McIntosh <thanm@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Cherry Zhang <cherryyz@google.com>
---
 src/cmd/compile/internal/ssagen/ssa.go | 18 +-----------------
 1 file changed, 1 insertion(+), 17 deletions(-)

diff --git a/src/cmd/compile/internal/ssagen/ssa.go b/src/cmd/compile/internal/ssagen/ssa.go
index 891047f56d..c49350005e 100644
--- a/src/cmd/compile/internal/ssagen/ssa.go
+++ b/src/cmd/compile/internal/ssagen/ssa.go
@@ -400,7 +400,7 @@ func buildssa(fn *ir.Func, worker int) *ssa.Func {
 	name := ir.FuncName(fn)
 	printssa := false
 	if ssaDump != "" { // match either a simple name e.g. "(*Reader).Reset", package.name e.g. "compress/gzip.(*Reader).Reset", or subpackage name "gzip.(*Reader).Reset"
-		pkgDotName := base.Ctxt.Pkgpath+"."+name
+		pkgDotName := base.Ctxt.Pkgpath + "." + name
 		printssa = name == ssaDump ||
 			strings.HasSuffix(pkgDotName, ssaDump) && (pkgDotName == ssaDump || strings.HasSuffix(pkgDotName, "/"+ssaDump))
 	}
@@ -7779,22 +7779,6 @@ func SpillSlotAddr(spill ssa.Spill, baseReg int16, extraOffset int64) obj.Addr {
 	}
 }
 
-// AddrForParamSlot fills in an Addr appropriately for a Spill,
-// Restore, or VARLIVE.
-func AddrForParamSlot(slot *ssa.LocalSlot, addr *obj.Addr) {
-	// TODO replace this boilerplate in a couple of places.
-	n, off := slot.N, slot.Off
-	addr.Type = obj.TYPE_MEM
-	addr.Sym = n.Linksym()
-	addr.Offset = off
-	if n.Class == ir.PPARAM || (n.Class == ir.PPARAMOUT && !n.IsOutputParamInRegisters()) {
-		addr.Name = obj.NAME_PARAM
-		addr.Offset += n.FrameOffset()
-	} else { // out parameters in registers allocate stack slots like autos.
-		addr.Name = obj.NAME_AUTO
-	}
-}
-
 var (
 	BoundsCheckFunc [ssa.BoundsKindCount]*obj.LSym
 	ExtendCheckFunc [ssa.BoundsKindCount]*obj.LSym
