commit 4f97afcdf2d6914a1989afd2cbbcaf6a5b1342af
Author: Ian Lance Taylor <iant@golang.org>
Date:   Thu Mar 5 19:58:27 2015 -0800

    misc/swig/callback: fix test for SWIG -cgo support
    
    The test used to import ../callback.  I forget why that ever worked,
    but it probably had something to do with the shared libraries we used
    to use with SWIG.  It doesn't work today.
    
    Change-Id: Ib83d6c398aa46bf2fc66320b47b6e6d9897ee0b7
    Reviewed-on: https://go-review.googlesource.com/7004
    Reviewed-by: David Crawshaw <crawshaw@golang.org>
---
 misc/swig/callback/callback_test.go | 13 ++++++-------
 1 file changed, 6 insertions(+), 7 deletions(-)

diff --git a/misc/swig/callback/callback_test.go b/misc/swig/callback/callback_test.go
index cf008fb540..dbbbab5760 100644
--- a/misc/swig/callback/callback_test.go
+++ b/misc/swig/callback/callback_test.go
@@ -2,16 +2,15 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-package callback_test
+package callback
 
 import (
-	"../callback"
 	"testing"
 )
 
 func TestCall(t *testing.T) {
-	c := callback.NewCaller()
-	cb := callback.NewCallback()
+	c := NewCaller()
+	cb := NewCallback()
 
 	c.SetCallback(cb)
 	s := c.Call()
@@ -22,13 +21,13 @@ func TestCall(t *testing.T) {
 }
 
 func TestCallback(t *testing.T) {
-	c := callback.NewCaller()
-	cb := callback.NewDirectorCallback(&callback.GoCallback{})
+	c := NewCaller()
+	cb := NewDirectorCallback(&GoCallback{})
 	c.SetCallback(cb)
 	s := c.Call()
 	if s != "GoCallback.Run" {
 		t.Errorf("unexpected string from Call with callback: %q", s)
 	}
 	c.DelCallback()
-	callback.DeleteDirectorCallback(cb)
+	DeleteDirectorCallback(cb)
 }
