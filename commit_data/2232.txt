commit 49fceff6af48269e35e39de99861c68263c85ebe
Author: Ian Lance Taylor <iant@golang.org>
Date:   Sat May 16 23:12:28 2009 -0700

    Don't bother to import "os" just so that we can call
    os.Exit(0) at the end of main.
    
    R=rsc
    DELTA=6  (0 added, 6 deleted, 0 changed)
    OCL=28967
    CL=28969
---
 test/235.go        | 3 ---
 test/chan/sieve.go | 3 ---
 2 files changed, 6 deletions(-)

diff --git a/test/235.go b/test/235.go
index b8621cc7e5..fe3024c613 100644
--- a/test/235.go
+++ b/test/235.go
@@ -6,8 +6,6 @@
 
 package main
 
-import "os"
-
 type T chan uint64;
 
 func M(f uint64) (in, out T) {
@@ -67,5 +65,4 @@ func main() {
 		x = min(xs);
 		if x != OUT[i] { panic("bad: ", x, " should be ", OUT[i]); }
 	}
-	os.Exit(0);
 }
diff --git a/test/chan/sieve.go b/test/chan/sieve.go
index 49f1c105e2..b47615f2f5 100644
--- a/test/chan/sieve.go
+++ b/test/chan/sieve.go
@@ -9,8 +9,6 @@
 
 package main
 
-import "os"
-
 // Send the sequence 2, 3, 4, ... to channel 'ch'.
 func Generate(ch chan<- int) {
 	for i := 2; ; i++ {
@@ -49,5 +47,4 @@ func main() {
 	for i := 0; i < len(a); i++ {
 		if x := <-primes; x != a[i] { panic(x, " != ", a[i]) }
 	}
-	os.Exit(0);
 }
