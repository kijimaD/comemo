commit 639f6f7e789ffbafd3d6f4327dbc10586e8163db
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Aug 17 14:18:06 2023 -0700

    cmd/compile/internal/ssagen: fix race added in CL 510539
    
    The ssagen pass runs concurrently, so it's not safe to mutate global
    variables like this.
    
    Instead, turn it into a constant and add an assertion that the
    constant has the correct value.
    
    Fixes #62095.
    
    Change-Id: Ia7f07e33582564892d194153ac3d8759429fc9ac
    Reviewed-on: https://go-review.googlesource.com/c/go/+/520598
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    Reviewed-by: Bryan Mills <bcmills@google.com>
    Reviewed-by: Keith Randall <khr@golang.org>
    Auto-Submit: Matthew Dempsky <mdempsky@google.com>
---
 src/cmd/compile/internal/ssagen/ssa.go | 12 +++---------
 1 file changed, 3 insertions(+), 9 deletions(-)

diff --git a/src/cmd/compile/internal/ssagen/ssa.go b/src/cmd/compile/internal/ssagen/ssa.go
index 25e93b531d..fe4a242002 100644
--- a/src/cmd/compile/internal/ssagen/ssa.go
+++ b/src/cmd/compile/internal/ssagen/ssa.go
@@ -8086,7 +8086,7 @@ func max8(a, b int8) int8 {
 	return b
 }
 
-var deferStructFnField = -1
+const deferStructFnField = 4
 
 // deferstruct makes a runtime._defer structure.
 func deferstruct() *types.Type {
@@ -8111,14 +8111,8 @@ func deferstruct() *types.Type {
 		makefield("link", types.Types[types.TUINTPTR]),
 		makefield("head", types.Types[types.TUINTPTR]),
 	}
-	for i, f := range fields {
-		if f.Sym.Name == "fn" {
-			deferStructFnField = i
-			break
-		}
-	}
-	if deferStructFnField < 0 {
-		base.Fatalf("deferstruct has no fn field")
+	if name := fields[deferStructFnField].Sym.Name; name != "fn" {
+		base.Fatalf("deferStructFnField is %q, not fn", name)
 	}
 
 	// build struct holding the above fields
