commit a8197456b1ac5802ff6c73e54e52aefd9e28a387
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Wed Apr 4 07:24:13 2012 -0700

    cmd/go: in go get, don't try to perform discovery on non-hosts
    
    Before, "go get -v foo/bar" was assuming "foo" was a hostname
    and trying to perform discovery on it. Now, require a dot in
    the first path component (the hostname).
    
    R=golang-dev, rsc
    CC=golang-dev
    https://golang.org/cl/5981057
---
 src/cmd/go/vcs.go | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/src/cmd/go/vcs.go b/src/cmd/go/vcs.go
index 5f63f8b568..1c121672f9 100644
--- a/src/cmd/go/vcs.go
+++ b/src/cmd/go/vcs.go
@@ -422,11 +422,15 @@ func repoRootForImportPathStatic(importPath, scheme string) (*repoRoot, error) {
 func repoRootForImportDynamic(importPath string) (*repoRoot, error) {
 	slash := strings.Index(importPath, "/")
 	if slash < 0 {
-		return nil, fmt.Errorf("missing / in import %q", importPath)
+		return nil, errors.New("import path doesn't contain a slash")
+	}
+	host := importPath[:slash]
+	if !strings.Contains(host, ".") {
+		return nil, errors.New("import path doesn't contain a hostname")
 	}
 	urlStr, body, err := httpsOrHTTP(importPath)
 	if err != nil {
-		return nil, fmt.Errorf("http/https fetch for import %q: %v", importPath, err)
+		return nil, fmt.Errorf("http/https fetch: %v", err)
 	}
 	defer body.Close()
 	metaImport, err := matchGoImport(parseMetaGoImports(body), importPath)
