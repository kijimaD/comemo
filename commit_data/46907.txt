commit 8331f25e96d6120bb0ec212bd03abcae53282769
Author: Keith Randall <khr@golang.org>
Date:   Wed Sep 15 09:56:09 2021 -0700

    reflect: make Elem panic on bad notinheap pointers
    
    This CL fixes the subtle issue that Elem can promote a
    not-in-heap pointer, which could be any bit pattern, into an
    unsafe.Pointer, which the garbage collector can see. If that
    resulting value is bad, it can crash the GC.
    
    Make sure that we don't introduce bad pointers that way. We can
    make Elem() panic, because any such bad pointers are in the Go heap,
    and not-in-heap pointers are not allowed to point into the Go heap.
    
    Update #48399
    
    Change-Id: Ieaf35a611b16b4dfb5e907e229ed4a2aed30e18c
    Reviewed-on: https://go-review.googlesource.com/c/go/+/350153
    Trust: Keith Randall <khr@golang.org>
    Trust: Ian Lance Taylor <iant@golang.org>
    Run-TryBot: Keith Randall <khr@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>

 src/reflect/all_test.go | 20 ++++++++++++++++++++
 src/reflect/value.go    | 17 +++++++++++++++++
 src/runtime/mbitmap.go  |  9 +++++++++
 3 files changed, 46 insertions(+)
