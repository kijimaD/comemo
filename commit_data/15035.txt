commit e57939590518b3af48dcddee0394339ef9ede1cc
Author: Andrey Mirtchovski <mirtchovski@gmail.com>
Date:   Wed Jan 30 09:10:32 2013 -0800

    encoding/json: properly unmarshal empty arrays.
    
    The JSON unmarshaller failed to allocate an array when there
    are no values for the input causing the `[]` unmarshalled
    to []interface{} to generate []interface{}(nil) rather than
    []interface{}{}. This wasn't caught in the tests because Decode()
    works correctly and because jsonBig never generated zero-sized
    arrays. The modification to scanner_test.go quickly triggers
    the error:
    
    without the change to decoder.go, but with the change to scanner_test.go:
    
    $ go test
    --- FAIL: TestUnmarshalMarshal (0.10 seconds)
    decode_test.go:446:             Marshal jsonBig
    scanner_test.go:206:    diverge at 70: «03c1OL6$":null},{"[=» vs «03c1OL6$":[]},{"[=^\»
    FAIL
    exit status 1
    FAIL    encoding/json   0.266s
    
    Also added a simple regression to decode_test.go.
    
    R=adg, dave, rsc
    CC=golang-dev
    https://golang.org/cl/7196050
---
 src/pkg/encoding/json/decode.go       | 2 +-
 src/pkg/encoding/json/decode_test.go  | 6 ++++++
 src/pkg/encoding/json/scanner_test.go | 3 ---
 3 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/src/pkg/encoding/json/decode.go b/src/pkg/encoding/json/decode.go
index 95e9120918..e6e15b00d6 100644
--- a/src/pkg/encoding/json/decode.go
+++ b/src/pkg/encoding/json/decode.go
@@ -742,7 +742,7 @@ func (d *decodeState) valueInterface() interface{} {
 
 // arrayInterface is like array but returns []interface{}.
 func (d *decodeState) arrayInterface() []interface{} {
-	var v []interface{}
+	var v = make([]interface{}, 0)
 	for {
 		// Look ahead for ] - can only happen on first iteration.
 		op := d.scanWhile(scanSkipSpace)
diff --git a/src/pkg/encoding/json/decode_test.go b/src/pkg/encoding/json/decode_test.go
index a91c6da01d..b65687e4a4 100644
--- a/src/pkg/encoding/json/decode_test.go
+++ b/src/pkg/encoding/json/decode_test.go
@@ -239,6 +239,12 @@ var unmarshalTests = []unmarshalTest{
 	{in: `[1, 2, 3]`, ptr: new([1]int), out: [1]int{1}},
 	{in: `[1, 2, 3]`, ptr: new([5]int), out: [5]int{1, 2, 3, 0, 0}},
 
+	// empty array to interface test
+	{in: `[]`, ptr: new([]interface{}), out: []interface{}{}},
+	{in: `null`, ptr: new([]interface{}), out: []interface{}(nil)},
+	{in: `{"T":[]}`, ptr: new(map[string]interface{}), out: map[string]interface{}{"T": []interface{}{}}},
+	{in: `{"T":null}`, ptr: new(map[string]interface{}), out: map[string]interface{}{"T": interface{}(nil)}},
+
 	// composite tests
 	{in: allValueIndent, ptr: new(All), out: allValue},
 	{in: allValueCompact, ptr: new(All), out: allValue},
diff --git a/src/pkg/encoding/json/scanner_test.go b/src/pkg/encoding/json/scanner_test.go
index adb35715b9..77d3455d30 100644
--- a/src/pkg/encoding/json/scanner_test.go
+++ b/src/pkg/encoding/json/scanner_test.go
@@ -277,9 +277,6 @@ func genArray(n int) []interface{} {
 	if f > n {
 		f = n
 	}
-	if n > 0 && f == 0 {
-		f = 1
-	}
 	x := make([]interface{}, f)
 	for i := range x {
 		x[i] = genValue(((i+1)*n)/f - (i*n)/f)
