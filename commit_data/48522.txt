commit 1ec056244e1a058ea3a21f0abd1165d710398416
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Mon May 24 04:41:58 2021 -0700

    [dev.typeparams] cmd/compile: inlining tweaks for toolstash
    
    This CL makes to minor changes motivated by making it easier to make
    large-scale changes to the inliner while satisfying toolstash -cmp:
    
    1. When creating inlining variables, make sure to preserve the
    AutoTemp flag. This is necessary so that temporary variables
    introduced by rewriting f(g()) calls during typecheck stay autotemp
    after inlining and are (correctly) omitted from DWARF debugging
    information.
    
    2. When sorting variables for stack frame layout, use a stable
    sort. This ensures that layout is insensitive to whether deadcode
    elimination happens before or after inlining.
    
    Change-Id: I672e752a873c7e16749b9873fd6573607e074309
    Reviewed-on: https://go-review.googlesource.com/c/go/+/323011
    Trust: Matthew Dempsky <mdempsky@google.com>
    Trust: Dan Scales <danscales@google.com>
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Dan Scales <danscales@google.com>
---
 src/cmd/compile/internal/inline/inl.go  | 1 +
 src/cmd/compile/internal/ssagen/pgen.go | 5 ++++-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/cmd/compile/internal/inline/inl.go b/src/cmd/compile/internal/inline/inl.go
index 00f8447f05..042e3f2332 100644
--- a/src/cmd/compile/internal/inline/inl.go
+++ b/src/cmd/compile/internal/inline/inl.go
@@ -1029,6 +1029,7 @@ func inlvar(var_ *ir.Name) *ir.Name {
 	n.SetType(var_.Type())
 	n.Class = ir.PAUTO
 	n.SetUsed(true)
+	n.SetAutoTemp(var_.AutoTemp())
 	n.Curfn = ir.CurFunc // the calling function, not the called one
 	n.SetAddrtaken(var_.Addrtaken())
 
diff --git a/src/cmd/compile/internal/ssagen/pgen.go b/src/cmd/compile/internal/ssagen/pgen.go
index 62567535d7..93157bfa11 100644
--- a/src/cmd/compile/internal/ssagen/pgen.go
+++ b/src/cmd/compile/internal/ssagen/pgen.go
@@ -114,7 +114,10 @@ func (s *ssafn) AllocFrame(f *ssa.Func) {
 		}
 	}
 
-	sort.Sort(byStackVar(fn.Dcl))
+	// Use sort.Stable instead of sort.Sort so stack layout (and thus
+	// compiler output) is less sensitive to frontend changes that
+	// introduce or remove unused variables.
+	sort.Stable(byStackVar(fn.Dcl))
 
 	// Reassign stack offsets of the locals that are used.
 	lastHasPtr := false
