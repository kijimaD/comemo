commit 16205a3534a2787cef0bd048547211e1de350fef
Author: Russ Cox <rsc@golang.org>
Date:   Mon Jan 18 15:59:14 2010 -0800

    spec: mention Inf and NaN are supported at run time.
    add hyperlink at mention of package reflect.
    
    Fixes #438.
    
    R=r
    CC=golang-dev
    https://golang.org/cl/190042
---
 doc/go_spec.html | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index 5243db37da..79376dc46d 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -507,6 +507,16 @@ can be given the types <code>float32</code>, <code>float64</code>, or <code>uint
 not <code>int32</code> or <code>string</code>.
 </p>
 
+<p>
+There are no constants denoting the IEEE-754 infinity and not-a-number values,
+but the <a href="/pkg/math/"><code>math</code> package</a>'s
+<a href="/pkg/math/#Inf">Inf</a>,
+<a href="/pkg/math/#NaN">NaN</a>,
+<a href="/pkg/math/#IsInf">IsInf</a>, and
+<a href="/pkg/math/#IsNaN">IsNaN</a>
+functions return and test for those values at run time.
+</p>
+
 <p>
 Implementation restriction: A compiler may implement numeric constants by choosing
 an internal representation with at least twice as many bits as any machine type;
@@ -4681,7 +4691,7 @@ value and returns both the type and the address of the copy.
 <code>Unreflect</code> inverts <code>Reflect</code>,
 creating an
 interface value from a type and address.
-The <code>reflect</code> package built on these primitives
+The <a href="/pkg/reflect/"><code>reflect</code> package</a> built on these primitives
 provides a safe, more convenient way to inspect interface values.
 </p>
 
