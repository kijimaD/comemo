commit 96a5780db882b4bd4a1f4b69e185833e5bedffcb
Author: Andrew Gerrand <adg@golang.org>
Date:   Sat Dec 17 13:14:18 2011 +1100

    go/build: remove 'go/build' from error messages
    
    This leads to really confusing messages in goinstall.
    
    R=golang-dev, r
    CC=golang-dev
    https://golang.org/cl/5495074
---
 src/pkg/go/build/path.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/pkg/go/build/path.go b/src/pkg/go/build/path.go
index 91d6c430a9..5b4d9243e6 100644
--- a/src/pkg/go/build/path.go
+++ b/src/pkg/go/build/path.go
@@ -85,8 +85,8 @@ func (t *Tree) HasPkg(pkg string) bool {
 }
 
 var (
-	ErrNotFound     = errors.New("go/build: package could not be found locally")
-	ErrTreeNotFound = errors.New("go/build: no valid GOROOT or GOPATH could be found")
+	ErrNotFound     = errors.New("package could not be found locally")
+	ErrTreeNotFound = errors.New("no valid GOROOT or GOPATH could be found")
 )
 
 // FindTree takes an import or filesystem path and returns the
@@ -151,7 +151,7 @@ func init() {
 	root := runtime.GOROOT()
 	t, err := newTree(root)
 	if err != nil {
-		log.Printf("go/build: invalid GOROOT %q: %v", root, err)
+		log.Printf("invalid GOROOT %q: %v", root, err)
 	} else {
 		t.Goroot = true
 		Path = []*Tree{t}
@@ -163,7 +163,7 @@ func init() {
 		}
 		t, err := newTree(p)
 		if err != nil {
-			log.Printf("go/build: invalid GOPATH %q: %v", p, err)
+			log.Printf("invalid GOPATH %q: %v", p, err)
 			continue
 		}
 		Path = append(Path, t)
