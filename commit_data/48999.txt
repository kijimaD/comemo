commit cd00499c6125692d704ac8a04b07825ee1648207
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Sat Jul 3 11:55:31 2021 -0700

    [dev.typeparams] cmd/compile: better Call constructor
    
    Historically, it's been tedious to create and typecheck ir.OCALL
    nodes, except by handing them off entirely to typecheck. This is
    because typecheck needed context on whether the call is an expression
    or statement, and to set flags like Func.ClosureCalled and
    CallExpr.Use.
    
    However, those flags have now been removed entirely by recent CLs, so
    we can instead just provide a better typecheck.Call function for
    constructing and typechecking arbitrary call nodes. Notably, this
    simplifies things for unified IR, which can now incrementally
    typecheck call expressions as it goes without worrying about context.
    
    Change-Id: Icbdc55c3bd8be84a242323bc45006f9dec09fdcd
    Reviewed-on: https://go-review.googlesource.com/c/go/+/332692
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    Trust: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Cuong Manh Le <cuong.manhle.vn@gmail.com>

 src/cmd/compile/internal/noder/reader.go        |  8 +++-----
 src/cmd/compile/internal/reflectdata/alg.go     |  6 ++----
 src/cmd/compile/internal/typecheck/typecheck.go | 17 +++++------------
 src/cmd/compile/internal/walk/walk.go           |  3 +--
 4 files changed, 11 insertions(+), 23 deletions(-)
