commit 0ae6084fefd3707766e98e20e775b2fb4c0c4dc7
Author: Shenghou Ma <minux.ma@gmail.com>
Date:   Tue Jan 24 15:03:41 2012 -0500

    build: do not build all C compilers
            In order to allow buildscript.sh to generate buildscripts for all
            $GOOS/$GOARCH combinations, we have to generate dummy files for cmd/go.
            Fixes #2586.
    
    R=rsc, golang-dev
    CC=golang-dev
    https://golang.org/cl/5557050
---
 src/cmd/Makefile            | 5 +----
 src/pkg/runtime/mkasmh.sh   | 6 +++++-
 src/pkg/runtime/mkgodefs.sh | 9 ++++++++-
 3 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/src/cmd/Makefile b/src/cmd/Makefile
index c2f817a916..40d2778420 100644
--- a/src/cmd/Makefile
+++ b/src/cmd/Makefile
@@ -8,12 +8,9 @@ all: install
 
 # Only build tools for current architecture, and only tools written in C.
 # The tools written in Go are managed by ../pkg/Makefile.
-# We need all the C compilers for rebuilding generated files in runtime.
 DIRS=\
 	$(O)a\
-	5c\
-	6c\
-	8c\
+	$(O)c\
 	$(O)g\
 	$(O)l\
 	cc\
diff --git a/src/pkg/runtime/mkasmh.sh b/src/pkg/runtime/mkasmh.sh
index ba48d0a137..26a1263bed 100755
--- a/src/pkg/runtime/mkasmh.sh
+++ b/src/pkg/runtime/mkasmh.sh
@@ -29,6 +29,10 @@ cat <<'EOF'
 // AUTO-GENERATED by autogen.sh; DO NOT EDIT
 
 EOF
+if [ ! -x "${GOBIN:=$GOROOT/bin}/$CC" ]; then
+	echo "// dummy file for cmd/go to correctly generate buildscript"
+	exit
+fi
 
 case "$GOARCH" in
 386)
@@ -110,7 +114,7 @@ arm)
 esac
 echo
 
-$CC $CFLAGS -a proc.c |
+$GOBIN/$CC $CFLAGS -a proc.c |
 awk '
 { gsub(/\r/, ""); }
 /^aggr G$/ { aggr="g" }
diff --git a/src/pkg/runtime/mkgodefs.sh b/src/pkg/runtime/mkgodefs.sh
index 1f9feac4e1..b7cd229b78 100755
--- a/src/pkg/runtime/mkgodefs.sh
+++ b/src/pkg/runtime/mkgodefs.sh
@@ -27,7 +27,14 @@ cp signals_$GOOS.h signals_GOOS.h
 cat <<EOF
 // Go definitions for C variables and types.
 // AUTO-GENERATED by autogen.sh; DO NOT EDIT
+EOF
+if [ ! -x "${GOBIN:=$GOROOT/bin}/$CC" ]; then
+	echo "// dummy file for cmd/go to correctly generate buildscript"
+	echo "package runtime"
+	exit
+fi
 
+cat <<EOF
 package runtime
 import "unsafe"
 var _ unsafe.Pointer
@@ -35,7 +42,7 @@ var _ unsafe.Pointer
 EOF
 
 for i in "$@"; do
-	$CC $CFLAGS -q $i
+	$GOBIN/$CC $CFLAGS -q $i
 done | awk '
 /^func/ { next }
 /^const/ { next }
