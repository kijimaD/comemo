commit 8c74139cada0b7da5a0914ee0afd75837b6f682d
Author: Adam Langley <agl@golang.org>
Date:   Tue Oct 11 14:45:29 2016 -0700

    crypto/tls: fix printing of OpenSSL output when updating a test fails.
    
    When updating the test data against OpenSSL, the handshake can fail and
    the stdout/stderr output of OpenSSL is very useful in finding out why.
    
    However, printing that output has been broken for some time because its
    no longer sent to a byte.Buffer. This change fixes that.
    
    Change-Id: I6f846c7dc80f1ccee9fa1be36f0b579b3754e05f
    Reviewed-on: https://go-review.googlesource.com/30823
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/crypto/tls/handshake_client_test.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/crypto/tls/handshake_client_test.go b/src/crypto/tls/handshake_client_test.go
index 23bf236ddf..165ed4b864 100644
--- a/src/crypto/tls/handshake_client_test.go
+++ b/src/crypto/tls/handshake_client_test.go
@@ -412,7 +412,7 @@ func (test *clientTest) run(t *testing.T, write bool) {
 		childProcess.Process.Kill()
 		childProcess.Wait()
 		if len(recordingConn.flows) < 3 {
-			childProcess.Stdout.(*bytes.Buffer).WriteTo(os.Stdout)
+			os.Stdout.Write(childProcess.Stdout.(*opensslOutputSink).all)
 			t.Fatalf("Client connection didn't work")
 		}
 		recordingConn.WriteTo(out)
