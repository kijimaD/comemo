commit 2063d5d903718962de58a86a692626fe89919a4d
Author: Rick Hudson <rlh@golang.org>
Date:   Mon Mar 14 12:17:48 2016 -0400

    [dev.garbage] runtime: restructure alloc and mark bits
    
    Two changes are included here that are dependent on the other.
    The first is that allocBits and gcamrkBits are changed to
    a *uint8 which points to the first byte of that span's
    mark and alloc bits. Several places were altered to
    perform pointer arithmetic to locate the byte corresponding
    to an object in the span. The actual bit corresponding
    to an object is indexed in the byte by using the lower three
    bits of the objects index.
    
    The second change avoids the redundant calculation of an
    object's index. The index is returned from heapBitsForObject
    and then used by the functions indexing allocBits
    and gcmarkBits.
    
    Finally we no longer allocate the gc bits in the span
    structures. Instead we use an arena based allocation scheme
    that allows for a more compact bit map as well as recycling
    and bulk clearing of the mark bits.
    
    Change-Id: If4d04b2021c092ec39a4caef5937a8182c64dfef
    Reviewed-on: https://go-review.googlesource.com/20705
    Reviewed-by: Austin Clements <austin@google.com>

 src/runtime/cgocall.go  |   2 +-
 src/runtime/malloc.go   |   2 +-
 src/runtime/mbitmap.go  |  86 +++++++++++++-------------
 src/runtime/mgcmark.go  |  21 ++++---
 src/runtime/mgcsweep.go |  16 ++---
 src/runtime/mheap.go    | 159 ++++++++++++++++++++++++++++++++++++++++++------
 6 files changed, 204 insertions(+), 82 deletions(-)
