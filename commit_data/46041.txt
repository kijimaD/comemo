commit 5d4569197eeef42862b8ea87a7e8ccda1cd061a0
Author: Bryan C. Mills <bcmills@google.com>
Date:   Thu Dec 3 16:14:07 2020 -0500

    cmd/go/internal/modload: fix minor errors in comments
    
    Change-Id: I38848e7bcd5dfa9f7feb415e1c54921768bf1ab8
    Reviewed-on: https://go-review.googlesource.com/c/go/+/275295
    Trust: Bryan C. Mills <bcmills@google.com>
    Run-TryBot: Bryan C. Mills <bcmills@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Jay Conrod <jayconrod@google.com>
---
 src/cmd/go/internal/modload/load.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/cmd/go/internal/modload/load.go b/src/cmd/go/internal/modload/load.go
index 732c4af92b..a0f93d028a 100644
--- a/src/cmd/go/internal/modload/load.go
+++ b/src/cmd/go/internal/modload/load.go
@@ -61,8 +61,8 @@ package modload
 // Similarly, if the LoadTests flag is set but the "all" pattern does not close
 // over test dependencies, then when we load the test of a package that is in
 // "all" but outside the main module, the dependencies of that test will not
-// necessarily themselves be in "all". That configuration does not arise in Go
-// 1.11–1.15, but it will be possible with lazy loading in Go 1.16+.
+// necessarily themselves be in "all". (That configuration does not arise in Go
+// 1.11–1.15, but it will be possible in Go 1.16+.)
 //
 // Loading proceeds from the roots, using a parallel work-queue with a limit on
 // the amount of active work (to avoid saturating disks, CPU cores, and/or
@@ -158,8 +158,8 @@ type PackageOpts struct {
 	// UseVendorAll causes the "all" package pattern to be interpreted as if
 	// running "go mod vendor" (or building with "-mod=vendor").
 	//
-	// Once lazy loading is implemented, this will be a no-op for modules that
-	// declare 'go 1.16' or higher.
+	// This is a no-op for modules that declare 'go 1.16' or higher, for which this
+	// is the default (and only) interpretation of the "all" pattern in module mode.
 	UseVendorAll bool
 
 	// AllowErrors indicates that LoadPackages should not terminate the process if
