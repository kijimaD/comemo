commit b2e9221089f37400f309637b205f21af7dcb063b
Author: Russ Cox <rsc@golang.org>
Date:   Tue Mar 12 22:00:22 2024 -0400

    runtime: fix another lock ordering problem
    
    https://logs.chromium.org/logs/golang/buildbucket/cr-buildbucket/8753622336585847105/+/u/step/11/log/2
    shows a staticlockranking crash with pollcache (defaulted to LEAF)
    being held during a write barrier, which got unlucky and acquired
    wbufSpans, triggering a lock ordering throw.
    
    My change in https://go-review.googlesource.com/c/go/+/570335/13/src/runtime/netpoll.go
    around line 700 caused batching of many write barriers on the first
    call rather than having just a few write barriers on each call,
    making the crash much more likely, but the ordering problem
    appears to have always existed. We just never allocated enough
    pollDescs to trigger it.
    
    Change-Id: Icb5e8340a5027dd4f7535a5ef02b2868476539e5
    Reviewed-on: https://go-review.googlesource.com/c/go/+/571195
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Auto-Submit: Russ Cox <rsc@golang.org>
    Reviewed-by: Austin Clements <austin@google.com>

 src/runtime/lockrank.go   | 15 +++++++++------
 src/runtime/mklockrank.go |  3 ++-
 src/runtime/netpoll.go    |  1 +
 3 files changed, 12 insertions(+), 7 deletions(-)
