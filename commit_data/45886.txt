commit 84e2bd611f9b62ec3b581f8a0d932dc4252ceb67
Author: Russ Cox <rsc@golang.org>
Date:   Thu Nov 19 21:09:22 2020 -0500

    [dev.regabi] cmd/compile: introduce cmd/compile/internal/ir [generated]
    
    If we want to break up package gc at all, we will need to move
    the compiler IR it defines into a separate package that can be
    imported by packages that gc itself imports. This CL does that.
    It also removes the TINT8 etc aliases so that all code is clear
    about which package things are coming from.
    
    This CL is automatically generated by the script below.
    See the comments in the script for details about the changes.
    
    [git-generate]
    cd src/cmd/compile/internal/gc
    
    rf '
            # These names were never fully qualified
            # when the types package was added.
            # Do it now, to avoid confusion about where they live.
            inline -rm \
                    Txxx \
                    TINT8 \
                    TUINT8 \
                    TINT16 \
                    TUINT16 \
                    TINT32 \
                    TUINT32 \
                    TINT64 \
                    TUINT64 \
                    TINT \
                    TUINT \
                    TUINTPTR \
                    TCOMPLEX64 \
                    TCOMPLEX128 \
                    TFLOAT32 \
                    TFLOAT64 \
                    TBOOL \
                    TPTR \
                    TFUNC \
                    TSLICE \
                    TARRAY \
                    TSTRUCT \
                    TCHAN \
                    TMAP \
                    TINTER \
                    TFORW \
                    TANY \
                    TSTRING \
                    TUNSAFEPTR \
                    TIDEAL \
                    TNIL \
                    TBLANK \
                    TFUNCARGS \
                    TCHANARGS \
                    NTYPE \
                    BADWIDTH
    
            # esc.go and escape.go do not need to be split.
            # Append esc.go onto the end of escape.go.
            mv esc.go escape.go
    
            # Pull out the type format installation from func Main,
            # so it can be carried into package ir.
            mv Main:/Sconv.=/-0,/TypeLinkSym/-1 InstallTypeFormats
    
            # Names that need to be exported for use by code left in gc.
            mv Isconst IsConst
            mv asNode AsNode
            mv asNodes AsNodes
            mv asTypesNode AsTypesNode
            mv basicnames BasicTypeNames
            mv builtinpkg BuiltinPkg
            mv consttype ConstType
            mv dumplist DumpList
            mv fdumplist FDumpList
            mv fmtMode FmtMode
            mv goopnames OpNames
            mv inspect Inspect
            mv inspectList InspectList
            mv localpkg LocalPkg
            mv nblank BlankNode
            mv numImport NumImport
            mv opprec OpPrec
            mv origSym OrigSym
            mv stmtwithinit StmtWithInit
            mv dump DumpAny
            mv fdump FDumpAny
            mv nod Nod
            mv nodl NodAt
            mv newname NewName
            mv newnamel NewNameAt
            mv assertRepresents AssertValidTypeForConst
            mv represents ValidTypeForConst
            mv nodlit NewLiteral
    
            # Types and fields that need to be exported for use by gc.
            mv nowritebarrierrecCallSym SymAndPos
            mv SymAndPos.lineno SymAndPos.Pos
            mv SymAndPos.target SymAndPos.Sym
    
            mv Func.lsym Func.LSym
            mv Func.setWBPos Func.SetWBPos
            mv Func.numReturns Func.NumReturns
            mv Func.numDefers Func.NumDefers
            mv Func.nwbrCalls Func.NWBRCalls
    
            # initLSym is an algorithm left behind in gc,
            # not an operation on Func itself.
            mv Func.initLSym initLSym
    
            mv nodeQueue NodeQueue
            mv NodeQueue.empty NodeQueue.Empty
            mv NodeQueue.popLeft NodeQueue.PopLeft
            mv NodeQueue.pushRight NodeQueue.PushRight
    
            # Many methods on Node are actually algorithms that
            # would apply to any node implementation.
            # Those become plain functions.
            mv Node.funcname FuncName
            mv Node.isBlank IsBlank
            mv Node.isGoConst isGoConst
            mv Node.isNil IsNil
            mv Node.isParamHeapCopy isParamHeapCopy
            mv Node.isParamStackCopy isParamStackCopy
            mv Node.isSimpleName isSimpleName
            mv Node.mayBeShared MayBeShared
            mv Node.pkgFuncName PkgFuncName
            mv Node.backingArrayPtrLen backingArrayPtrLen
            mv Node.isterminating isTermNode
            mv Node.labeledControl labeledControl
            mv Nodes.isterminating isTermNodes
            mv Nodes.sigerr fmtSignature
            mv Node.MethodName methodExprName
            mv Node.MethodFunc methodExprFunc
            mv Node.IsMethod IsMethod
    
            # Every node will need to implement RawCopy;
            # Copy and SepCopy algorithms will use it.
            mv Node.rawcopy Node.RawCopy
            mv Node.copy Copy
            mv Node.sepcopy SepCopy
    
            # Extract Node.Format method body into func FmtNode,
            # but leave method wrapper behind.
            mv Node.Format:0,$ FmtNode
    
            # Formatting helpers that will apply to all node implementations.
            mv Node.Line Line
            mv Node.exprfmt exprFmt
            mv Node.jconv jconvFmt
            mv Node.modeString modeString
            mv Node.nconv nconvFmt
            mv Node.nodedump nodeDumpFmt
            mv Node.nodefmt nodeFmt
            mv Node.stmtfmt stmtFmt
    
            # Constant support needed for code moving to ir.
            mv okforconst OKForConst
            mv vconv FmtConst
            mv int64Val Int64Val
            mv float64Val Float64Val
            mv Node.ValueInterface ConstValue
    
            # Organize code into files.
            mv LocalPkg BuiltinPkg ir.go
            mv NumImport InstallTypeFormats Line fmt.go
            mv syntax.go Nod NodAt NewNameAt Class Pxxx PragmaFlag Nointerface SymAndPos \
                    AsNode AsTypesNode BlankNode OrigSym \
                    Node.SliceBounds Node.SetSliceBounds Op.IsSlice3 \
                    IsConst Node.Int64Val Node.CanInt64 Node.Uint64Val Node.BoolVal Node.StringVal \
                    Node.RawCopy SepCopy Copy \
                    IsNil IsBlank IsMethod \
                    Node.Typ Node.StorageClass node.go
            mv ConstType ConstValue Int64Val Float64Val AssertValidTypeForConst ValidTypeForConst NewLiteral idealType OKForConst val.go
    
            # Move files to new ir package.
            mv bitset.go class_string.go dump.go fmt.go \
                    ir.go node.go op_string.go val.go \
                    sizeof_test.go cmd/compile/internal/ir
    '
    
    : # fix mkbuiltin.go to generate the changes made to builtin.go during rf
    sed -i '' '
            s/\[T/[types.T/g
            s/\*Node/*ir.Node/g
            /internal\/types/c \
                    fmt.Fprintln(&b, `import (`) \
                    fmt.Fprintln(&b, `      "cmd/compile/internal/ir"`) \
                    fmt.Fprintln(&b, `      "cmd/compile/internal/types"`) \
                    fmt.Fprintln(&b, `)`)
    ' mkbuiltin.go
    gofmt -w mkbuiltin.go
    
    : # update cmd/dist to add internal/ir
    cd ../../../dist
    sed -i '' '/compile.internal.gc/a\
            "cmd/compile/internal/ir",
    ' buildtool.go
    gofmt -w buildtool.go
    
    : # update cmd/compile TestFormats
    cd ../..
    go install std cmd
    cd cmd/compile
    go test -u || go test  # first one updates but fails; second passes
    
    Change-Id: I5f7caf6b20629b51970279e81231a3574d5b51db
    Reviewed-on: https://go-review.googlesource.com/c/go/+/273008
    Trust: Russ Cox <rsc@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>

 src/cmd/compile/fmtmap_test.go                     |   40 +-
 src/cmd/compile/internal/arm/ssa.go                |    3 +-
 src/cmd/compile/internal/arm64/ssa.go              |    3 +-
 src/cmd/compile/internal/gc/alg.go                 |  271 +--
 src/cmd/compile/internal/gc/align.go               |   57 +-
 src/cmd/compile/internal/gc/bexport.go             |   63 +-
 src/cmd/compile/internal/gc/bimport.go             |   13 +-
 src/cmd/compile/internal/gc/builtin.go             |  219 +--
 src/cmd/compile/internal/gc/closure.go             |  121 +-
 src/cmd/compile/internal/gc/const.go               |  432 ++---
 src/cmd/compile/internal/gc/dcl.go                 |  329 ++--
 src/cmd/compile/internal/gc/embed.go               |   29 +-
 src/cmd/compile/internal/gc/esc.go                 |  474 -----
 src/cmd/compile/internal/gc/escape.go              |  778 ++++++--
 src/cmd/compile/internal/gc/export.go              |   55 +-
 src/cmd/compile/internal/gc/gen.go                 |   25 +-
 src/cmd/compile/internal/gc/go.go                  |   80 +-
 src/cmd/compile/internal/gc/gsubr.go               |   45 +-
 src/cmd/compile/internal/gc/iexport.go             |  297 +--
 src/cmd/compile/internal/gc/iimport.go             |  225 +--
 src/cmd/compile/internal/gc/init.go                |   21 +-
 src/cmd/compile/internal/gc/initorder.go           |   90 +-
 src/cmd/compile/internal/gc/inl.go                 |  413 ++--
 src/cmd/compile/internal/gc/lex.go                 |   86 +-
 src/cmd/compile/internal/gc/main.go                |   76 +-
 src/cmd/compile/internal/gc/mkbuiltin.go           |   13 +-
 src/cmd/compile/internal/gc/noder.go               |  387 ++--
 src/cmd/compile/internal/gc/obj.go                 |   81 +-
 src/cmd/compile/internal/gc/order.go               |  429 ++---
 src/cmd/compile/internal/gc/pgen.go                |  147 +-
 src/cmd/compile/internal/gc/pgen_test.go           |  151 +-
 src/cmd/compile/internal/gc/phi.go                 |   35 +-
 src/cmd/compile/internal/gc/plive.go               |   77 +-
 src/cmd/compile/internal/gc/racewalk.go            |    9 +-
 src/cmd/compile/internal/gc/range.go               |  199 +-
 src/cmd/compile/internal/gc/reflect.go             |  321 ++--
 src/cmd/compile/internal/gc/scc.go                 |   40 +-
 src/cmd/compile/internal/gc/scope.go               |   11 +-
 src/cmd/compile/internal/gc/select.go              |  153 +-
 src/cmd/compile/internal/gc/sinit.go               |  393 ++--
 src/cmd/compile/internal/gc/ssa.go                 | 1976 ++++++++++----------
 src/cmd/compile/internal/gc/subr.go                |  594 +++---
 src/cmd/compile/internal/gc/swt.go                 |  203 +-
 src/cmd/compile/internal/gc/typecheck.go           | 1009 +++++-----
 src/cmd/compile/internal/gc/types.go               |   53 -
 src/cmd/compile/internal/gc/types_acc.go           |    8 -
 src/cmd/compile/internal/gc/universe.go            |  366 ++--
 src/cmd/compile/internal/gc/unsafe.go              |   25 +-
 src/cmd/compile/internal/gc/util.go                |    6 -
 src/cmd/compile/internal/gc/walk.go                | 1539 +++++++--------
 src/cmd/compile/internal/{gc => ir}/bitset.go      |    2 +-
 .../compile/internal/{gc => ir}/class_string.go    |    2 +-
 src/cmd/compile/internal/{gc => ir}/dump.go        |   17 +-
 src/cmd/compile/internal/{gc => ir}/fmt.go         |  269 +--
 src/cmd/compile/internal/ir/ir.go                  |   12 +
 .../compile/internal/{gc/syntax.go => ir/node.go}  |  396 +++-
 src/cmd/compile/internal/{gc => ir}/op_string.go   |    2 +-
 src/cmd/compile/internal/{gc => ir}/sizeof_test.go |    2 +-
 src/cmd/compile/internal/ir/val.go                 |  120 ++
 src/cmd/compile/internal/mips/ssa.go               |    3 +-
 src/cmd/compile/internal/mips64/ssa.go             |    3 +-
 src/cmd/compile/internal/ppc64/ssa.go              |    3 +-
 src/cmd/compile/internal/riscv64/ssa.go            |    3 +-
 src/cmd/compile/internal/wasm/ssa.go               |    3 +-
 src/cmd/dist/buildtool.go                          |    1 +
 65 files changed, 6666 insertions(+), 6642 deletions(-)
