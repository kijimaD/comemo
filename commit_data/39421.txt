commit 1413e94178748d369391cb700d76ff4abdd5cf63
Author: Bryan C. Mills <bcmills@google.com>
Date:   Wed Feb 27 13:02:04 2019 -0500

    cmd/dist: execute cgo_stdio and cgo_life as host tests
    
    Now that these tests are written in Go, they must be run in host mode
    in order to be able to exec `go run` as a subprocess.
    
    Updates #30228
    
    Change-Id: Ibedf86a8e18ae1b6f583c1bbdcb99d19c8e01744
    Reviewed-on: https://go-review.googlesource.com/c/164137
    Run-TryBot: Bryan C. Mills <bcmills@google.com>
    Reviewed-by: Elias Naur <mail@eliasnaur.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
---
 src/cmd/dist/test.go | 18 ++----------------
 1 file changed, 2 insertions(+), 16 deletions(-)

diff --git a/src/cmd/dist/test.go b/src/cmd/dist/test.go
index 025da74a15..68401e546b 100644
--- a/src/cmd/dist/test.go
+++ b/src/cmd/dist/test.go
@@ -606,22 +606,8 @@ func (t *tester) registerTests() {
 
 	if t.cgoEnabled && !t.iOS() {
 		// Disabled on iOS. golang.org/issue/15919
-		t.tests = append(t.tests, distTest{
-			name:    "cgo_stdio",
-			heading: "../misc/cgo/stdio",
-			fn: func(dt *distTest) error {
-				t.addCmd(dt, "misc/cgo/stdio", t.goTest(), t.timeout(120))
-				return nil
-			},
-		})
-		t.tests = append(t.tests, distTest{
-			name:    "cgo_life",
-			heading: "../misc/cgo/life",
-			fn: func(dt *distTest) error {
-				t.addCmd(dt, "misc/cgo/life", t.goTest(), t.timeout(120))
-				return nil
-			},
-		})
+		t.registerHostTest("cgo_stdio", "../misc/cgo/stdio", "misc/cgo/stdio", ".")
+		t.registerHostTest("cgo_life", "../misc/cgo/life", "misc/cgo/life", ".")
 		fortran := os.Getenv("FC")
 		if fortran == "" {
 			fortran, _ = exec.LookPath("gfortran")
