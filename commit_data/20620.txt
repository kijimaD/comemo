commit 665a4166650d088c067130eb41f8f95efb9c12ed
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Wed Sep 24 18:50:54 2014 -0400

    os: fix Args setup on Windows
    
    Should fix the Windows build. Untested.
    
    on Windows, args are made by src/os/exec_windows.go, not package runtime.
    runtimeÂ·goargs has if(Windows) return;
    
    The two init funcs in pkg os were conflicting, with the second
    overwriting Args back to an empty slice.
    
    LGTM=rsc
    R=rsc
    CC=golang-codereviews
    https://golang.org/cl/143540044
---
 src/os/proc.go | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/src/os/proc.go b/src/os/proc.go
index b63c85ad90..774f09900e 100644
--- a/src/os/proc.go
+++ b/src/os/proc.go
@@ -6,12 +6,19 @@
 
 package os
 
-import "syscall"
+import (
+	"runtime"
+	"syscall"
+)
 
 // Args hold the command-line arguments, starting with the program name.
 var Args []string
 
 func init() {
+	if runtime.GOOS == "windows" {
+		// Initialized in exec_windows.go.
+		return
+	}
 	Args = runtime_args()
 }
 
