commit e7a0a7595a7d895e40c0e067762a85bbe189b644
Author: Shenghou Ma <minux.ma@gmail.com>
Date:   Fri May 4 18:29:40 2012 +0800

    cmd/go: cgo for Linux/ARM
            Part 4 of CL 5601044 (cgo: Linux/ARM support)
    
    R=golang-dev, dave, rsc
    CC=golang-dev
    https://golang.org/cl/5989058
---
 src/cmd/go/build.go | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/cmd/go/build.go b/src/cmd/go/build.go
index 4bb83f1618..2b9995d1c6 100644
--- a/src/cmd/go/build.go
+++ b/src/cmd/go/build.go
@@ -1394,6 +1394,8 @@ func (b *builder) gccCmd(objdir string) []string {
 		a = append(a, "-m32")
 	case "6":
 		a = append(a, "-m64")
+	case "5":
+		a = append(a, "-marm") // not thumb
 	}
 	// gcc-4.5 and beyond require explicit "-pthread" flag
 	// for multithreading with pthread library.
@@ -1513,9 +1515,15 @@ func (b *builder) cgo(p *Package, cgoExe, obj string, gccfiles []string) (outGo,
 		outObj = append(outObj, ofile)
 	}
 	dynobj := obj + "_cgo_.o"
+	if goarch == "arm" && goos == "linux" { // we need to use -pie for Linux/ARM to get accurate imported sym
+		cgoLDFLAGS = append(cgoLDFLAGS, "-pie")
+	}
 	if err := b.gccld(p, dynobj, cgoLDFLAGS, linkobj); err != nil {
 		return nil, nil, err
 	}
+	if goarch == "arm" && goos == "linux" { // but we don't need -pie for normal cgo programs
+		cgoLDFLAGS = cgoLDFLAGS[0 : len(cgoLDFLAGS)-1]
+	}
 
 	if _, ok := buildToolchain.(gccgcToolchain); ok {
 		// we don't use dynimport when using gccgo.
