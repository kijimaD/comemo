commit 5f7a03e148b9a37f2c61f7d428abc6b360897a0c
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Fri Jul 21 17:32:32 2017 +0000

    sync: delete a sentence from the Map docs
    
    From Josh's comments on https://golang.org/cl/50310
    
    Once I removed the "from the Go standard library" bit, the beginning
    wasn't worth keeping. It also wasn't clear whether what it meant by
    "cache contention". Processor caches, or user-level caches built with
    sync.Map? It didn't seem worth clarifying and didn't convey any useful
    information, so deleted.
    
    Change-Id: Id1d76105a3081d0855f6a64540700932bb83d98e
    Reviewed-on: https://go-review.googlesource.com/50632
    Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
    Reviewed-by: Bryan Mills <bcmills@google.com>
---
 src/sync/map.go | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/src/sync/map.go b/src/sync/map.go
index c3c2d1cc86..083f4a563f 100644
--- a/src/sync/map.go
+++ b/src/sync/map.go
@@ -12,10 +12,9 @@ import (
 // Map is a concurrent map with amortized-constant-time loads, stores, and deletes.
 // It is safe for multiple goroutines to call a Map's methods concurrently.
 //
-// Map is designed to reduce cache contention in the Go standard library.
-// It is optimized for use in concurrent loops with keys that are stable
-// over time, and either few steady-state stores, or stores localized to
-// one goroutine per key.
+// It is optimized for use in concurrent loops with keys that are
+// stable over time, and either few steady-state stores, or stores
+// localized to one goroutine per key.
 //
 // For use cases that do not share these attributes, it will likely have
 // comparable or worse performance and worse type safety than an ordinary
