commit 4212a3c3d9a520c3124134c97bb48677c0c1203f
Author: Russ Cox <rsc@golang.org>
Date:   Thu May 7 22:40:54 2015 -0400

    runtime: use heap bitmap for typedmemmove
    
    The current implementation of typedmemmove walks the ptrmask
    in the type to find out where pointers are. This led to turning off
    GC programs for the Go 1.5 dev cycle, so that there would always
    be a ptrmask. Instead of also interpreting the GC programs,
    interpret the heap bitmap, which we know must be available and
    up to date. (There is no point to write barriers when writing outside
    the heap.)
    
    This CL is only about correctness. The next CL will optimize the code.
    
    Change-Id: Id1305c7c071fd2734ab96634b0e1c745b23fa793
    Reviewed-on: https://go-review.googlesource.com/9886
    Reviewed-by: Austin Clements <austin@google.com>

 src/runtime/mbarrier.go | 98 +++++++------------------------------------------
 src/runtime/mbitmap.go  | 61 +++++++++++++++---------------
 2 files changed, 45 insertions(+), 114 deletions(-)
