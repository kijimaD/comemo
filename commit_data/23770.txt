commit d5ad9ced1c82d4a1cb63d92f33552a064d7e8162
Author: Daniel Morsing <daniel.morsing@gmail.com>
Date:   Thu Jun 11 20:37:01 2015 +0100

    [dev.ssa] clarify ODCL todo, remove irrelevant colas todo
    
    ODCL nodes are used as the point where the variable is allocated in
    the old pass. colas is irrelevant at this point of the compile. All
    the checks on it happen at parse time and an ODCL node will have been
    inserted right before it.
    
    Change-Id: I1aca053aaa4363bacd12e1156de86fa7b6190a55
    Reviewed-on: https://go-review.googlesource.com/10901
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/cmd/compile/internal/gc/ssa.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/cmd/compile/internal/gc/ssa.go b/src/cmd/compile/internal/gc/ssa.go
index b97764e0cf..131e97ff48 100644
--- a/src/cmd/compile/internal/gc/ssa.go
+++ b/src/cmd/compile/internal/gc/ssa.go
@@ -206,7 +206,8 @@ func (s *state) stmt(n *Node) {
 		s.stmtList(n.List)
 
 	case ODCL:
-		// TODO: ???  Assign 0?
+		// TODO: old gen pass uses dcl node as the point where
+		// escaping variables' new functions are called. Do that here
 
 	case OLABEL, OGOTO:
 		// get block at label, or make one
@@ -225,7 +226,6 @@ func (s *state) stmt(n *Node) {
 		}
 
 	case OAS, OASWB:
-		// TODO(khr): colas?
 		// TODO: do write barrier
 		var val *ssa.Value
 		if n.Right == nil {
