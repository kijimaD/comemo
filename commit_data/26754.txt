commit 4accfe1be5d6324a31543a6bfd9eadfa00d90342
Author: Mikio Hara <mikioh.mikioh@gmail.com>
Date:   Fri Feb 19 17:39:27 2016 +0900

    net: re-enable TestDualStack{TCP,UDP}Listener on dragonfly
    
    It looks like the latest DragonFly BSD kernels, at least 4.4 and above,
    have finished working on handling of shared IP control blocks. Let's
    re-enbale test cases referring to IP control blocks and see what
    happens.
    
    Updates #13146.
    
    Change-Id: Icbe2250e788f6a445a648541272c99b598c3013d
    Reviewed-on: https://go-review.googlesource.com/19406
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/net/listen_test.go | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/src/net/listen_test.go b/src/net/listen_test.go
index 158a8ed598..0fc8889628 100644
--- a/src/net/listen_test.go
+++ b/src/net/listen_test.go
@@ -216,9 +216,12 @@ var dualStackTCPListenerTests = []struct {
 // TestDualStackTCPListener tests both single and double listen
 // to a test listener with various address families, different
 // listening address and same port.
+//
+// On DragonFly BSD, we expect the kernel version of node under test
+// to be greater than or equal to 4.4.
 func TestDualStackTCPListener(t *testing.T) {
 	switch runtime.GOOS {
-	case "dragonfly", "nacl", "plan9": // re-enable on dragonfly once the new IP control block management has landed
+	case "nacl", "plan9":
 		t.Skipf("not supported on %s", runtime.GOOS)
 	}
 	if !supportsIPv4 || !supportsIPv6 {
@@ -303,9 +306,12 @@ var dualStackUDPListenerTests = []struct {
 // TestDualStackUDPListener tests both single and double listen
 // to a test listener with various address families, different
 // listening address and same port.
+//
+// On DragonFly BSD, we expect the kernel version of node under test
+// to be greater than or equal to 4.4.
 func TestDualStackUDPListener(t *testing.T) {
 	switch runtime.GOOS {
-	case "dragonfly", "nacl", "plan9": // re-enable on dragonfly once the new IP control block management has landed
+	case "nacl", "plan9":
 		t.Skipf("not supported on %s", runtime.GOOS)
 	}
 	if !supportsIPv4 || !supportsIPv6 {
