commit acce8268b611613bef4c422a861bd4863e85b0f1
Author: Cherry Zhang <cherryyz@google.com>
Date:   Wed Dec 27 08:33:45 2017 -0500

    cmd/vendor/golang.org/x/arch: revendor at commit 98fd8d9
    
    Pick up CL 85476 to fix #23237.
    
    Updates #23237.
    
    Change-Id: I31a48ef39ce90bc1424334762452281ae706d273
    Reviewed-on: https://go-review.googlesource.com/85495
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 .../x/arch/arm64/arm64asm/objdumpext_test.go           |  8 ++++++++
 src/cmd/vendor/vendor.json                             | 18 ++++++++++++------
 2 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/src/cmd/vendor/golang.org/x/arch/arm64/arm64asm/objdumpext_test.go b/src/cmd/vendor/golang.org/x/arch/arm64/arm64asm/objdumpext_test.go
index d3a34809e6..533ef67d5e 100644
--- a/src/cmd/vendor/golang.org/x/arch/arm64/arm64asm/objdumpext_test.go
+++ b/src/cmd/vendor/golang.org/x/arch/arm64/arm64asm/objdumpext_test.go
@@ -172,6 +172,7 @@ func objdump(ext *ExtDis) error {
 var (
 	undefined     = []byte("undefined")
 	unpredictable = []byte("unpredictable")
+	slashslash    = []byte("//")
 )
 
 func parseLine(line []byte, encstart []byte) (addr uint64, enc []byte, text string) {
@@ -204,9 +205,16 @@ func parseLine(line []byte, encstart []byte) (addr uint64, enc []byte, text stri
 		text = "unpredictable"
 		return
 	}
+	// Strip trailing comment starting with ';'
+	//   e.g: "csinv x23, x2, x19, cc ; xxx"
 	if i := bytes.IndexByte(line, ';'); i >= 0 {
 		line = bytes.TrimSpace(line[:i])
 	}
+	// Strip trailing comment starting with "//"
+	//   e.g:  "fccmpe s2, s9, #0x7, ne // xxx"
+	if i := bytes.Index(line, slashslash); i >= 0 {
+		line = bytes.TrimSpace(line[:i])
+	}
 	text = string(fixSpace(line))
 	return
 }
diff --git a/src/cmd/vendor/vendor.json b/src/cmd/vendor/vendor.json
index 6db46dbfdc..506325a086 100644
--- a/src/cmd/vendor/vendor.json
+++ b/src/cmd/vendor/vendor.json
@@ -15,20 +15,26 @@
 		{
 			"canonical": "golang.org/x/arch/x86/x86asm",
 			"local": "golang.org/x/arch/x86/x86asm",
-			"revision": "58ea1a195b1a354bcd572b7ef6bbbd264dc63732",
-			"revisionTime": "2017-02-16T08:17:04Z"
+			"revision": "98fd8d9907002617e6000a77c0740a72947ca1c2"
+			"revisionTime": "2017-12-26T02:13:20Z"
 		},
 		{
 			"canonical": "golang.org/x/arch/arm/armasm",
 			"local": "golang.org/x/arch/arm/armasm",
-			"revision": "ad6a463afcf9bd5b38c81fa9ba612dae11859d40",
-			"revisionTime": "2015-08-28T15:42:14Z"
+			"revision": "98fd8d9907002617e6000a77c0740a72947ca1c2"
+			"revisionTime": "2017-12-26T02:13:20Z"
 		},
 		{
 			"canonical": "golang.org/x/arch/ppc64/ppc64asm",
 			"local": "golang.org/x/arch/ppc64/ppc64asm",
-			"revision": "4831b0a617f7a819d4bf3c877d8e827d0283542c",
-			"revisionTime": "2016-10-12T18:28:04Z"
+			"revision": "98fd8d9907002617e6000a77c0740a72947ca1c2"
+			"revisionTime": "2017-12-26T02:13:20Z"
+		},
+		{
+			"canonical": "golang.org/x/arch/arm64/arm6464asm",
+			"local": "golang.org/x/arch/arm64/arm64asm",
+			"revision": "98fd8d9907002617e6000a77c0740a72947ca1c2"
+			"revisionTime": "2017-12-26T02:13:20Z"
 		}
 	]
 }
