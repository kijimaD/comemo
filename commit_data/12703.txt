commit c5b45aa9913dbad6596a3fcaa001be0cca23c9e0
Author: Ian Lance Taylor <iant@golang.org>
Date:   Tue Mar 20 14:17:06 2012 -0700

    cmd/go: use .o, not .{5,6,8}, for gccgo created object files
    
    R=golang-dev, r
    CC=golang-dev
    https://golang.org/cl/5861044
---
 src/cmd/go/build.go | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/src/cmd/go/build.go b/src/cmd/go/build.go
index c1833e6075..16177c1277 100644
--- a/src/cmd/go/build.go
+++ b/src/cmd/go/build.go
@@ -1466,6 +1466,8 @@ func (b *builder) cgo(p *Package, cgoExe, obj string, gccfiles []string) (outGo,
 	cgoflags := []string{}
 	// TODO: make cgo not depend on $GOARCH?
 
+	objExt := archChar
+
 	if p.Standard && p.ImportPath == "runtime/cgo" {
 		cgoflags = append(cgoflags, "-import_runtime_cgo=false")
 	}
@@ -1474,6 +1476,7 @@ func (b *builder) cgo(p *Package, cgoExe, obj string, gccfiles []string) (outGo,
 		if prefix := gccgoPrefix(p); prefix != "" {
 			cgoflags = append(cgoflags, "-gccgoprefix="+gccgoPrefix(p))
 		}
+		objExt = "o"
 	}
 	if err := b.run(p.Dir, p.ImportPath, cgoExe, "-objdir", obj, cgoflags, "--", cgoCFLAGS, p.CgoFiles); err != nil {
 		return nil, nil, err
@@ -1481,7 +1484,7 @@ func (b *builder) cgo(p *Package, cgoExe, obj string, gccfiles []string) (outGo,
 	outGo = append(outGo, gofiles...)
 
 	// cc _cgo_defun.c
-	defunObj := obj + "_cgo_defun." + archChar
+	defunObj := obj + "_cgo_defun." + objExt
 	if err := buildToolchain.cc(b, p, obj, defunObj, defunC); err != nil {
 		return nil, nil, err
 	}
@@ -1524,7 +1527,7 @@ func (b *builder) cgo(p *Package, cgoExe, obj string, gccfiles []string) (outGo,
 	}
 
 	// cc _cgo_import.ARCH
-	importObj := obj + "_cgo_import." + archChar
+	importObj := obj + "_cgo_import." + objExt
 	if err := buildToolchain.cc(b, p, obj, importObj, importC); err != nil {
 		return nil, nil, err
 	}
