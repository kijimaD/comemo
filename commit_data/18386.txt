commit 502958ffa65440dd79a31f831114d51a610242ef
Author: RÃ©my Oudompheng <oudomphe@phare.normalesup.org>
Date:   Fri Jan 31 00:30:56 2014 +0100

    cmd/gc: do not consider length zero arrays as comparable.
    
    Array values are comparable if values of the array element type
    are comparable.
    
    Fixes #6526.
    
    LGTM=khr
    R=rsc, bradfitz, khr
    CC=golang-codereviews
    https://golang.org/cl/58580043
---
 src/cmd/gc/subr.c |  2 --
 test/cmp6.go      | 13 ++++++++++++-
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/src/cmd/gc/subr.c b/src/cmd/gc/subr.c
index 779580295f..f71165d456 100644
--- a/src/cmd/gc/subr.c
+++ b/src/cmd/gc/subr.c
@@ -590,8 +590,6 @@ algtype1(Type *t, Type **bad)
 				*bad = t;
 			return ANOEQ;
 		}
-		if(t->bound == 0)
-			return AMEM;
 		a = algtype1(t->type, bad);
 		if(a == ANOEQ || a == AMEM) {
 			if(a == ANOEQ && bad)
diff --git a/test/cmp6.go b/test/cmp6.go
index 839c274bcc..7cf76044ef 100644
--- a/test/cmp6.go
+++ b/test/cmp6.go
@@ -18,7 +18,10 @@ type T3 struct{ z []int }
 
 var t3 T3
 
-type T4 struct { _ []int; a float64 }
+type T4 struct {
+	_ []int
+	a float64
+}
 
 var t4 T4
 
@@ -51,6 +54,14 @@ func main() {
 	use(p3 == p1)
 	use(p3 == p2)
 
+	// Arrays are comparable if and only if their element type is comparable.
+	var a1 [1]int
+	var a2 [1]func()
+	var a3 [0]func()
+	use(a1 == a1)
+	use(a2 == a2) // ERROR "invalid operation|invalid comparison"
+	use(a3 == a3) // ERROR "invalid operation|invalid comparison"
+
 	// Comparison of structs should have a good message
 	use(t3 == t3) // ERROR "struct|expected"
 	use(t4 == t4) // ERROR "cannot be compared|non-comparable"
