commit dab16c1c90626ca6c9704959500f120fd09546e6
Author: Robert Griesemer <gri@golang.org>
Date:   Wed Sep 29 20:56:36 2021 -0700

    cmd/compile/internal/types2: accept constraint literals with elided interfaces
    
    When collecting type parameters, wrap constraint literals of the
    form ~T or A|B into interfaces so the type checker doesn't have
    to deal with these type set expressions syntactically anywhere
    else but in interfaces (i.e., union types continue to appear
    only as embedded elements in interfaces).
    
    Since a type constraint doesn't need to be an interface anymore,
    we can remove the respective restriction. Instead, when accessing
    the constraint interface via TypeParam.iface, wrap non-interface
    constraints at that point and update the constraint so it happens
    only once. By computing the types sets of all type parameters at
    before the end of type-checking, we ensure that type constraints
    are in their final form when accessed through the API.
    
    For #48424.
    
    Change-Id: I3a47a644ad4ab20f91d93ee39fcf3214bb5a81f9
    Reviewed-on: https://go-review.googlesource.com/c/go/+/353139
    Trust: Robert Griesemer <gri@golang.org>
    Run-TryBot: Robert Griesemer <gri@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Robert Findley <rfindley@google.com>

 src/cmd/compile/internal/types2/check_test.go      |  2 +-
 src/cmd/compile/internal/types2/decl.go            | 22 ++++++++--
 .../internal/types2/testdata/examples/typesets.go2 | 48 +++++++++++++++++++++
 .../types2/testdata/fixedbugs/issue39723.go2       |  2 +-
 src/cmd/compile/internal/types2/typeparam.go       | 49 +++++++++++++++-------
 test/typeparam/tparam1.go                          |  4 +-
 6 files changed, 106 insertions(+), 21 deletions(-)
