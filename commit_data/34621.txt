commit 2ff3e9c8d84b22bf88190e77014bbadb974b833c
Author: Russ Cox <rsc@golang.org>
Date:   Thu Nov 2 09:46:13 2017 -0400

    cmd/go: do not print "go install" in errors from other commands
    
    Fixes #20251.
    
    Change-Id: I312a9534248668c8b3b4cf979591ed1a49e509e1
    Reviewed-on: https://go-review.googlesource.com/75474
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: David Crawshaw <crawshaw@golang.org>
---
 src/cmd/go/internal/cfg/cfg.go    |  2 ++
 src/cmd/go/internal/work/build.go | 10 +++++-----
 src/cmd/go/internal/work/exec.go  |  2 +-
 src/cmd/go/main.go                |  1 +
 4 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/src/cmd/go/internal/cfg/cfg.go b/src/cmd/go/internal/cfg/cfg.go
index 3c7b918523..5f93f39f90 100644
--- a/src/cmd/go/internal/cfg/cfg.go
+++ b/src/cmd/go/internal/cfg/cfg.go
@@ -38,6 +38,8 @@ var (
 	BuildWork              bool // -work flag
 	BuildX                 bool // -x flag
 
+	CmdName string // "build", "install", "list", etc.
+
 	DebugActiongraph string // -debug-actiongraph flag (undocumented, unstable)
 )
 
diff --git a/src/cmd/go/internal/work/build.go b/src/cmd/go/internal/work/build.go
index 0e9c878556..694cf518c4 100644
--- a/src/cmd/go/internal/work/build.go
+++ b/src/cmd/go/internal/work/build.go
@@ -550,14 +550,14 @@ func InstallPackages(args []string, forGet bool) {
 		if p.Target == "" && (!p.Standard || p.ImportPath != "unsafe") {
 			switch {
 			case p.Internal.GobinSubdir:
-				base.Errorf("go install: cannot install cross-compiled binaries when GOBIN is set")
+				base.Errorf("go %s: cannot install cross-compiled binaries when GOBIN is set", cfg.CmdName)
 			case p.Internal.Cmdline:
-				base.Errorf("go install: no install location for .go files listed on command line (GOBIN not set)")
+				base.Errorf("go %s: no install location for .go files listed on command line (GOBIN not set)", cfg.CmdName)
 			case p.ConflictDir != "":
-				base.Errorf("go install: no install location for %s: hidden by %s", p.Dir, p.ConflictDir)
+				base.Errorf("go %s: no install location for %s: hidden by %s", cfg.CmdName, p.Dir, p.ConflictDir)
 			default:
-				base.Errorf("go install: no install location for directory %s outside GOPATH\n"+
-					"\tFor more details see: 'go help gopath'", p.Dir)
+				base.Errorf("go %s: no install location for directory %s outside GOPATH\n"+
+					"\tFor more details see: 'go help gopath'", cfg.CmdName, p.Dir)
 			}
 		}
 	}
diff --git a/src/cmd/go/internal/work/exec.go b/src/cmd/go/internal/work/exec.go
index ae69642e46..9daa585778 100644
--- a/src/cmd/go/internal/work/exec.go
+++ b/src/cmd/go/internal/work/exec.go
@@ -945,7 +945,7 @@ func BuildInstallFunc(b *Builder, a *Action) (err error) {
 			if a.Package != nil {
 				sep, path = " ", a.Package.ImportPath
 			}
-			err = fmt.Errorf("go install%s%s: %v", sep, path, err)
+			err = fmt.Errorf("go %s%s%s: %v", cfg.CmdName, sep, path, err)
 		}
 	}()
 
diff --git a/src/cmd/go/main.go b/src/cmd/go/main.go
index f5b64869ea..b7e4034152 100644
--- a/src/cmd/go/main.go
+++ b/src/cmd/go/main.go
@@ -77,6 +77,7 @@ func main() {
 		base.Usage()
 	}
 
+	cfg.CmdName = args[0] // for error messages
 	if args[0] == "help" {
 		help.Help(args[1:])
 		return
