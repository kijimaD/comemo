commit b064eb7e1bb1b138405b9c8da1d90c476a266ef5
Author: Michael Matloob <matloob@golang.org>
Date:   Thu Sep 24 11:26:23 2020 -0400

    cmd/go: update go_windows_test to use test go binary
    
    Most of the cmd/go tests build the cmd/go binary and run that binary to
    test it, but TestAbsolutePath used the GOROOT's cmd/go instead, which
    makes debugging confusing and means that make.bash has to be run in each
    iteration cycle. Update TestAbsolutePath to use the same go binary as
    the rest of the cmd/go tests.
    
    Change-Id: Ib4e8ae707b66f1f75ceb346b98358f5604fd28c1
    Reviewed-on: https://go-review.googlesource.com/c/go/+/256979
    Trust: Michael Matloob <matloob@golang.org>
    Run-TryBot: Michael Matloob <matloob@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Jay Conrod <jayconrod@google.com>
    Reviewed-by: Bryan C. Mills <bcmills@google.com>
---
 src/cmd/go/go_windows_test.go | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/src/cmd/go/go_windows_test.go b/src/cmd/go/go_windows_test.go
index 3999166ed9..02634f19f5 100644
--- a/src/cmd/go/go_windows_test.go
+++ b/src/cmd/go/go_windows_test.go
@@ -2,10 +2,9 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-package main
+package main_test
 
 import (
-	"internal/testenv"
 	"io/ioutil"
 	"os"
 	"os/exec"
@@ -17,7 +16,9 @@ import (
 )
 
 func TestAbsolutePath(t *testing.T) {
-	t.Parallel()
+	tg := testgo(t)
+	defer tg.cleanup()
+	tg.parallel()
 
 	tmp, err := ioutil.TempDir("", "TestAbsolutePath")
 	if err != nil {
@@ -38,7 +39,7 @@ func TestAbsolutePath(t *testing.T) {
 
 	noVolume := file[len(filepath.VolumeName(file)):]
 	wrongPath := filepath.Join(dir, noVolume)
-	cmd := exec.Command(testenv.GoToolPath(t), "build", noVolume)
+	cmd := exec.Command(tg.goTool(), "build", noVolume)
 	cmd.Dir = dir
 	output, err := cmd.CombinedOutput()
 	if err == nil {
