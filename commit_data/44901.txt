commit 5579ee169f12815660eb9ee66afd5f2abc77864f
Author: Cherry Zhang <cherryyz@google.com>
Date:   Thu Apr 1 14:21:12 2021 -0400

    cmd/compile: in expand calls, preserve pointer store type but decompose aggregate args
    
    In CL 305672 we preserve the pointer type of a store by just not
    decomposing it. But this can be problematic when the source of
    the store is a direct interface aggregate type (e.g.
    struct { x map[int]int }.
    
    In this CL we take a different approach: we preserve the store
    type when generating the new store, but also decompose the source.
    
    Fixes #45344.
    
    Change-Id: If5dd496458dee95aa649c6d106b96a6cdcf3e60d
    Reviewed-on: https://go-review.googlesource.com/c/go/+/306669
    Trust: Cherry Zhang <cherryyz@google.com>
    Run-TryBot: Cherry Zhang <cherryyz@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: David Chase <drchase@google.com>

 src/cmd/compile/internal/ssa/expand_calls.go | 11 ++++++++---
 test/fixedbugs/issue45344.go                 | 20 ++++++++++++++++++++
 2 files changed, 28 insertions(+), 3 deletions(-)
