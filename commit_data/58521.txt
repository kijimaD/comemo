commit 3f04f959d2d8bba0b636aa0c4ac705ae29e2c7b0
Author: Than McIntosh <thanm@google.com>
Date:   Tue Oct 31 13:21:41 2023 -0400

    cmd/compile/internal/inline: refactor AnalyzeFunc
    
    This patch reworks how inlheur.AnalyzeFunc is called by the top level
    inliner. Up until this point the strategy was to analyze a function at
    the point where CanInline is invoked on it, however it simplifies
    things to instead make the call outside of CanInline (for example, so
    that directly recursive functions can be analyzed).
    
    Also as part of this patch, change things so that we no longer run
    some of the more compile-time intensive analysis on functions that
    haven't been marked inlinable (so as to safe compile time), and add a
    teardown/cleanup hook in the inlheur package to be invoked by the
    inliner when we're done inlining.
    
    Change-Id: Id0772a285d891b0bed66dd86adaffa69d973c26a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/539318
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>

 src/cmd/compile/internal/inline/inl.go             |  46 +++----
 src/cmd/compile/internal/inline/inlheur/analyze.go | 132 +++++++++++++++------
 .../internal/inline/inlheur/analyze_func_params.go |  15 +--
 .../inline/inlheur/analyze_func_returns.go         |  25 ++--
 .../internal/inline/inlheur/funcprops_test.go      |   3 +
 src/cmd/compile/internal/inline/inlheur/scoring.go |   1 +
 .../inline/inlheur/testdata/props/acrosscall.go    |  36 +++---
 .../inline/inlheur/testdata/props/calls.go         |   2 +-
 .../inline/inlheur/testdata/props/returns.go       |   7 +-
 test/newinline.go                                  |   4 +-
 10 files changed, 160 insertions(+), 111 deletions(-)
