commit f570d9d7657edcccb52b2ec9a55cb90a28602d57
Author: Anthony Martin <ality@pbrane.org>
Date:   Mon May 16 22:14:56 2011 -0400

    8g: fix conversion from float to uint64
    
    The code for converting negative floats was
    incorrectly loading an FP control word from
    the stack without ever having stored it there.
    
    Thanks to Lars Pensj√∂ for reporting this bug.
    
    R=golang-dev, rsc
    CC=golang-dev
    https://golang.org/cl/4515091
---
 src/cmd/8g/gsubr.c       |  4 ++--
 test/fixedbugs/bug341.go | 22 ++++++++++++++++++++++
 2 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/src/cmd/8g/gsubr.c b/src/cmd/8g/gsubr.c
index e3f239d605..5ad35fdce7 100644
--- a/src/cmd/8g/gsubr.c
+++ b/src/cmd/8g/gsubr.c
@@ -1429,11 +1429,11 @@ gmove(Node *f, Node *t)
 		split64(t, &tlo, &thi);
 		gins(AXORL, ncon(0x80000000), &thi);	// + 2^63
 		patch(p3, pc);
-		patch(p1, pc);
 		splitclean();
-
 		// restore rounding mode
 		gins(AFLDCW, &t1, N);
+
+		patch(p1, pc);
 		return;
 
 	/*
diff --git a/test/fixedbugs/bug341.go b/test/fixedbugs/bug341.go
new file mode 100644
index 0000000000..8ee52e1ef0
--- /dev/null
+++ b/test/fixedbugs/bug341.go
@@ -0,0 +1,22 @@
+// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: bug341
+
+// Copyright 2011 The Go Authors.  All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Used to panic because 8g was generating incorrect
+// code for converting a negative float to a uint64.
+
+package main
+
+func main() {
+	var x float32 = -2.5
+
+	_ = uint64(x)
+	_ = float32(0)
+}
+/*
+panic: runtime error: floating point error
+
+[signal 0x8 code=0x6 addr=0x8048c64 pc=0x8048c64]
+*/
