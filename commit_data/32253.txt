commit 0e4824aacca9da713a7d43024ad2ab14ae27f0c6
Author: Josh Bleecher Snyder <josharian@gmail.com>
Date:   Sun Apr 16 05:47:24 2017 -0700

    cmd/compile: remove flag_largemodel
    
    It was added in 2013 in CL 7064048.
    All uses of it in the compiler disappeared with
    (or possibly before) the SSA backend.
    Several releases have gone by without it,
    from which I conclude that it is now not needed.
    
    Change-Id: I2095f4ac05d4d7ab998168993a7fd5d954aeee88
    Reviewed-on: https://go-review.googlesource.com/40856
    Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/cmd/compile/internal/gc/go.go   | 2 --
 src/cmd/compile/internal/gc/main.go | 6 ------
 2 files changed, 8 deletions(-)

diff --git a/src/cmd/compile/internal/gc/go.go b/src/cmd/compile/internal/gc/go.go
index 272b6c5b2c..72127b052f 100644
--- a/src/cmd/compile/internal/gc/go.go
+++ b/src/cmd/compile/internal/gc/go.go
@@ -201,8 +201,6 @@ var flag_race bool
 
 var flag_msan bool
 
-var flag_largemodel bool
-
 // Whether we are adding any sort of code instrumentation, such as
 // when the race detector is enabled.
 var instrumenting bool
diff --git a/src/cmd/compile/internal/gc/main.go b/src/cmd/compile/internal/gc/main.go
index f00ef6a3df..36ec651245 100644
--- a/src/cmd/compile/internal/gc/main.go
+++ b/src/cmd/compile/internal/gc/main.go
@@ -164,9 +164,6 @@ func Main(archInit func(*Arch)) {
 	mappkg.Prefix = "go.map"
 
 	Nacl = obj.GOOS == "nacl"
-	if Nacl {
-		flag_largemodel = true
-	}
 
 	flag.BoolVar(&compiling_runtime, "+", false, "compiling runtime")
 	obj.Flagcount("%", "debug non-static initializers", &Debug['%'])
@@ -215,9 +212,6 @@ func Main(archInit func(*Arch)) {
 		flag.BoolVar(&flag_shared, "shared", false, "generate code that can be linked into a shared library")
 		flag.BoolVar(&flag_dynlink, "dynlink", false, "support references to Go symbols defined in other shared libraries")
 	}
-	if thearch.LinkArch.Family == sys.AMD64 {
-		flag.BoolVar(&flag_largemodel, "largemodel", false, "generate code that assumes a large memory model")
-	}
 	flag.StringVar(&cpuprofile, "cpuprofile", "", "write cpu profile to `file`")
 	flag.StringVar(&memprofile, "memprofile", "", "write memory profile to `file`")
 	flag.Int64Var(&memprofilerate, "memprofilerate", 0, "set runtime.MemProfileRate to `rate`")
