commit af2a3193afde74fc6b653f31fb3c65f836f231d8
Author: Russ Cox <rsc@golang.org>
Date:   Fri Sep 6 16:49:11 2013 -0400

    cmd/5g, cmd/6g, cmd/8g: simplify for loop in bitmap generation
    
    Lucio De Re reports that the more complex
    loop miscompiles on Plan 9.
    
    R=ken2
    CC=golang-dev
    https://golang.org/cl/13602043
---
 src/cmd/5g/ggen.c | 4 +++-
 src/cmd/6g/ggen.c | 5 ++++-
 src/cmd/8g/ggen.c | 5 ++++-
 3 files changed, 11 insertions(+), 3 deletions(-)

diff --git a/src/cmd/5g/ggen.c b/src/cmd/5g/ggen.c
index f018c88aa8..9065a8dd37 100644
--- a/src/cmd/5g/ggen.c
+++ b/src/cmd/5g/ggen.c
@@ -49,7 +49,8 @@ defframe(Prog *ptxt, Bvec *bv)
 		patch(p, p1);
 	} else {
 		first = 1;
-		for(i=0, j=(stkptrsize-stkzerosize)/widthptr*2; i<stkzerosize; i+=widthptr, j+=2) {
+		j = (stkptrsize - stkzerosize)/widthptr * 2;
+		for(i=0; i<stkzerosize; i+=widthptr) {
 			if(bvget(bv, j) || bvget(bv, j+1)) {
 				if(first) {
 					p = appendp(p, AMOVW, D_CONST, NREG, 0, D_REG, 0, 0);
@@ -57,6 +58,7 @@ defframe(Prog *ptxt, Bvec *bv)
 				}
 				p = appendp(p, AMOVW, D_REG, 0, 0, D_OREG, REGSP, 4+frame-stkzerosize+i);
 			}
+			j += 2;
 		}
 	}
 }
diff --git a/src/cmd/6g/ggen.c b/src/cmd/6g/ggen.c
index 6e2f0fd69e..1e1790e122 100644
--- a/src/cmd/6g/ggen.c
+++ b/src/cmd/6g/ggen.c
@@ -37,9 +37,12 @@ defframe(Prog *ptxt, Bvec *bv)
 		p = appendp(p, AREP, D_NONE, 0, D_NONE, 0);
 		appendp(p, ASTOSQ, D_NONE, 0, D_NONE, 0);
 	} else {
-		for(i=0, j=(stkptrsize-stkzerosize)/widthptr*2; i<stkzerosize; i+=widthptr, j+=2)
+		j = (stkptrsize - stkzerosize)/widthptr * 2;
+		for(i=0; i<stkzerosize; i+=widthptr) {
 			if(bvget(bv, j) || bvget(bv, j+1))
 				p = appendp(p, AMOVQ, D_CONST, 0, D_SP+D_INDIR, frame-stkzerosize+i);
+			j += 2;
+		}
 	}
 }
 
diff --git a/src/cmd/8g/ggen.c b/src/cmd/8g/ggen.c
index 1f9e6e0593..9f2758c91e 100644
--- a/src/cmd/8g/ggen.c
+++ b/src/cmd/8g/ggen.c
@@ -39,9 +39,12 @@ defframe(Prog *ptxt, Bvec *bv)
 		p = appendp(p, AREP, D_NONE, 0, D_NONE, 0);
 		appendp(p, ASTOSL, D_NONE, 0, D_NONE, 0);
 	} else {
-		for(i=0, j=(stkptrsize-stkzerosize)/widthptr*2; i<stkzerosize; i+=widthptr, j+=2)
+		j = (stkptrsize - stkzerosize)/widthptr * 2;
+		for(i=0; i<stkzerosize; i+=widthptr) {
 			if(bvget(bv, j) || bvget(bv, j+1))
 				p = appendp(p, AMOVL, D_CONST, 0, D_SP+D_INDIR, frame-stkzerosize+i);
+			j += 2;
+		}
 	}
 }
 
