commit 101d14e3b315e6990f02bef2044a7021a9ca9ea0
Author: Robert Griesemer <gri@golang.org>
Date:   Thu Mar 17 14:04:37 2022 -0700

    go/types, types2: use new flag mechanims to handle importC test
    
    Change-Id: I6f0cb850ee23184380c03a53c12425c350aa16e3
    Reviewed-on: https://go-review.googlesource.com/c/go/+/393714
    Trust: Robert Griesemer <gri@golang.org>
    Reviewed-by: Robert Findley <rfindley@google.com>
---
 src/cmd/compile/internal/types2/check_test.go              |  5 +----
 src/cmd/compile/internal/types2/testdata/check/importC.src |  2 ++
 src/go/types/check_test.go                                 | 12 +++---------
 src/go/types/testdata/check/importC.src                    |  2 ++
 4 files changed, 8 insertions(+), 13 deletions(-)

diff --git a/src/cmd/compile/internal/types2/check_test.go b/src/cmd/compile/internal/types2/check_test.go
index 89d2cc644c..988983ee04 100644
--- a/src/cmd/compile/internal/types2/check_test.go
+++ b/src/cmd/compile/internal/types2/check_test.go
@@ -130,6 +130,7 @@ func testFiles(t *testing.T, filenames []string, colDelta uint, manual bool) {
 	var conf Config
 	flags := flag.NewFlagSet("", flag.PanicOnError)
 	flags.StringVar(&conf.GoVersion, "lang", "", "")
+	flags.BoolVar(&conf.FakeImportC, "fakeImportC", false, "")
 	if err := parseFlags(filenames[0], nil, flags); err != nil {
 		t.Fatal(err)
 	}
@@ -156,10 +157,6 @@ func testFiles(t *testing.T, filenames []string, colDelta uint, manual bool) {
 	}
 
 	// typecheck and collect typechecker errors
-	// special case for importC.src
-	if len(filenames) == 1 && strings.HasSuffix(filenames[0], "importC.src") {
-		conf.FakeImportC = true
-	}
 	conf.Trace = manual && testing.Verbose()
 	conf.Importer = defaultImporter()
 	conf.Error = func(err error) {
diff --git a/src/cmd/compile/internal/types2/testdata/check/importC.src b/src/cmd/compile/internal/types2/testdata/check/importC.src
index f55be2d5c5..807802199f 100644
--- a/src/cmd/compile/internal/types2/testdata/check/importC.src
+++ b/src/cmd/compile/internal/types2/testdata/check/importC.src
@@ -1,3 +1,5 @@
+// -fakeImportC
+
 // Copyright 2015 The Go Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
diff --git a/src/go/types/check_test.go b/src/go/types/check_test.go
index 6bee41d141..d962b0c405 100644
--- a/src/go/types/check_test.go
+++ b/src/go/types/check_test.go
@@ -233,6 +233,7 @@ func testFiles(t *testing.T, sizes Sizes, filenames []string, srcs [][]byte, man
 	conf.Sizes = sizes
 	flags := flag.NewFlagSet("", flag.PanicOnError)
 	flags.StringVar(&conf.GoVersion, "lang", "", "")
+	flags.BoolVar(&conf.FakeImportC, "fakeImportC", false, "")
 	if err := parseFlags(filenames[0], srcs[0], flags); err != nil {
 		t.Fatal(err)
 	}
@@ -265,17 +266,10 @@ func testFiles(t *testing.T, sizes Sizes, filenames []string, srcs [][]byte, man
 	}
 
 	// typecheck and collect typechecker errors
-	// special case for importC.src
-	if len(filenames) == 1 {
-		if strings.HasSuffix(filenames[0], "importC.src") {
-			conf.FakeImportC = true
-		}
-	}
-
-	conf.Importer = imp
 	if imp == nil {
-		conf.Importer = importer.Default()
+		imp = importer.Default()
 	}
+	conf.Importer = imp
 	conf.Error = func(err error) {
 		if *haltOnError {
 			defer panic(err)
diff --git a/src/go/types/testdata/check/importC.src b/src/go/types/testdata/check/importC.src
index f55be2d5c5..807802199f 100644
--- a/src/go/types/testdata/check/importC.src
+++ b/src/go/types/testdata/check/importC.src
@@ -1,3 +1,5 @@
+// -fakeImportC
+
 // Copyright 2015 The Go Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
