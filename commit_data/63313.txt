commit c6ac7362888c25dd1251adaa11e1503cf78ec26d
Author: Michael Anthony Knyszek <mknyszek@google.com>
Date:   Sat Jun 14 02:45:08 2025 +0000

    runtime: prevent mutual deadlock between GC stopTheWorld and suspendG
    
    Almost everywhere we stop the world we casGToWaitingForGC to prevent
    mutual deadlock with the GC trying to scan our stack. This historically
    was only necessary if we weren't stopping the world to change the GC
    phase, because what we were worried about was mutual deadlock with mark
    workers' use of suspendG. And, they were the only users of suspendG.
    
    In Go 1.22 this changed. The execution tracer began using suspendG, too.
    This leads to the possibility of mutual deadlock between the execution
    tracer and a goroutine trying to start or end the GC mark phase. The fix
    is simple: make the stop-the-world calls for the GC also call
    casGToWaitingForGC. This way, suspendG is guaranteed to make progress in
    this circumstance, and once it completes, the stop-the-world can
    complete as well.
    
    We can take this a step further, though, and move casGToWaitingForGC
    into stopTheWorldWithSema, since there's no longer really a place we can
    afford to skip this detail.
    
    While we're here, rename casGToWaitingForGC to casGToWaitingForSuspendG,
    since the GC is now not the only potential source of mutual deadlock.
    
    Fixes #72740.
    
    Change-Id: I5e3739a463ef3e8173ad33c531e696e46260692f
    Reviewed-on: https://go-review.googlesource.com/c/go/+/681501
    Reviewed-by: Carlos Amedee <carlos@golang.org>
    Auto-Submit: Michael Knyszek <mknyszek@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Cherry Mui <cherryyz@google.com>

 src/runtime/mgc.go         |  7 +++--
 src/runtime/mgcmark.go     |  4 +--
 src/runtime/proc.go        | 70 +++++++++++++++++++++++++++++-----------------
 src/runtime/runtime2.go    | 14 +++++-----
 src/runtime/stack.go       |  4 +--
 src/runtime/trace.go       |  2 +-
 src/runtime/tracestatus.go |  9 +++---
 7 files changed, 65 insertions(+), 45 deletions(-)
