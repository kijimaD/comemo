commit ecc06f0db79193a4fe16138148c7eb26d9af96f1
Author: David Chase <drchase@google.com>
Date:   Tue Apr 8 11:38:01 2025 +1000

    cmd/compile: fix the test for ABI specification so it works right w/ generics
    
    Change-Id: I09ef615bfe69a30fa8f7eef5f0a8ff94a244c920
    Reviewed-on: https://go-review.googlesource.com/c/go/+/663776
    Reviewed-by: Keith Randall <khr@golang.org>
    Reviewed-by: Keith Randall <khr@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
---
 src/cmd/compile/internal/ssagen/ssa.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/cmd/compile/internal/ssagen/ssa.go b/src/cmd/compile/internal/ssagen/ssa.go
index b7a9b7bea4..b0e0262d45 100644
--- a/src/cmd/compile/internal/ssagen/ssa.go
+++ b/src/cmd/compile/internal/ssagen/ssa.go
@@ -317,7 +317,7 @@ func buildssa(fn *ir.Func, worker int, isPgoHot bool) *ssa.Func {
 	// optionally allows an ABI suffix specification in the GOSSAHASH, e.g. "(*Reader).Reset<0>" etc
 	if strings.Contains(ssaDump, name) { // in all the cases the function name is entirely contained within the GOSSAFUNC string.
 		nameOptABI := name
-		if strings.Contains(ssaDump, ",") { // ABI specification
+		if l := len(ssaDump); l > 1 && ssaDump[l-2] == ',' { // ABI specification
 			nameOptABI = ssa.FuncNameABI(name, abiSelf.Which())
 		} else if strings.HasSuffix(ssaDump, ">") { // if they use the linker syntax instead....
 			l := len(ssaDump)
