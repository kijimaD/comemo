commit c75d19732d59514a97d869b9cb9d006d1d403c05
Author: cuiweixie <cuiweixie@gmail.com>
Date:   Sun Sep 4 18:48:51 2022 +0800

    reflect: use strings.Builder
    
    Change-Id: Ie100a2a6f272b84fa2da6ac7b64452985242d788
    Reviewed-on: https://go-review.googlesource.com/c/go/+/428275
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Run-TryBot: Ian Lance Taylor <iant@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Michael Knyszek <mknyszek@google.com>
---
 src/reflect/all_test.go | 4 ++--
 src/reflect/set_test.go | 3 ++-
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/reflect/all_test.go b/src/reflect/all_test.go
index 6cc1c9abad..e07180cd2f 100644
--- a/src/reflect/all_test.go
+++ b/src/reflect/all_test.go
@@ -2085,7 +2085,7 @@ func runSelect(cases []SelectCase, info []caseInfo) (chosen int, recv Value, rec
 
 // fmtSelect formats the information about a single select test.
 func fmtSelect(info []caseInfo) string {
-	var buf bytes.Buffer
+	var buf strings.Builder
 	fmt.Fprintf(&buf, "\nselect {\n")
 	for i, cas := range info {
 		fmt.Fprintf(&buf, "%d: %s", i, cas.desc)
@@ -3705,7 +3705,7 @@ func TestSetLenCap(t *testing.T) {
 }
 
 func TestVariadic(t *testing.T) {
-	var b bytes.Buffer
+	var b strings.Builder
 	V := ValueOf
 
 	b.Reset()
diff --git a/src/reflect/set_test.go b/src/reflect/set_test.go
index 9ce0e09b82..028c051cfb 100644
--- a/src/reflect/set_test.go
+++ b/src/reflect/set_test.go
@@ -10,6 +10,7 @@ import (
 	"go/token"
 	"io"
 	. "reflect"
+	"strings"
 	"testing"
 	"unsafe"
 )
@@ -141,7 +142,7 @@ func TestImplicitSendConversion(t *testing.T) {
 func TestImplicitCallConversion(t *testing.T) {
 	// Arguments must be assignable to parameter types.
 	fv := ValueOf(io.WriteString)
-	b := new(bytes.Buffer)
+	b := new(strings.Builder)
 	fv.Call([]Value{ValueOf(b), ValueOf("hello world")})
 	if b.String() != "hello world" {
 		t.Errorf("After call: string=%q want %q", b.String(), "hello world")
