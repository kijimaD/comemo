commit 8e6dfe1b315ca0ef6497b28e16523c2dc4019503
Author: Dan Scales <danscales@google.com>
Date:   Mon May 17 15:00:39 2021 -0700

    [dev.typeparams] cmd/compile: export/import of recursive generic types.
    
    Deal with export/import of recursive generic types. This includes
    typeparams which have bounds that reference the typeparam.
    
    There are three main changes:
    
      - Change export/import of typeparams to have an implicit "declaration"
        (doDecl). We need to do a declaration of typeparams (via the
        typeparam's package and unique name), because it may be referenced
        within its bound during its own definition.
    
      - We delay most of the processing of the Instantiate call until we
        finish the creation of the top-most type (similar to the way we
        delay CheckSize). This is because we can't do the full instantiation
        properly until the base type is fully defined (with methods). The
        functions delayDoInst() and resumeDoInst() delay and resume the
        processing of the instantiations.
    
      - To do the full needed type substitutions for type instantiations
        during import, I had to separate out the type subster in stencil.go
        and move it to subr.go in the typecheck package. The subster in
        stencil.go now does node substitution and makes use of the type
        subster to do type substitutions.
    
    Notable other changes:
     - In types/builtins.go, put the newly defined typeparam for a union type
       (related to use of real/imag, etc.) in the current package, rather
       than the builtin package, so exports/imports work properly.
    
     - In types2, allowed NewTypeParam() to be called with a nil bound, and
       allow setting the bound later. (Needed to import a typeparam whose
       bound refers to the typeparam itself.)
    
     - During import of typeparams in types2 (importer/import.go), we need
       to keep an index of the typeparams by their package and unique name
       (with id). Use a new map typParamIndex[] for that. Again, this is
       needed to deal with typeparams whose bounds refer to the typeparam
       itself.
    
     - Added several new tests absdiffimp.go and orderedmapsimp.go. Some of
       the orderemapsimp tests are commented out for now, because there are
       some issues with closures inside instantiations (relating to unexported
       names of closure structs).
    
     - Renamed some typeparams in test value.go to make them all T (to make
       typeparam uniqueness is working fine).
    
    Change-Id: Ib47ed9471c19ee8e9fbb34e8506907dad3021e5a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/323029
    Trust: Dan Scales <danscales@google.com>
    Trust: Robert Griesemer <gri@golang.org>
    Reviewed-by: Robert Griesemer <gri@golang.org>

 src/cmd/compile/internal/importer/iimport.go  |  92 ++++---
 src/cmd/compile/internal/noder/stencil.go     | 335 ++-----------------------
 src/cmd/compile/internal/noder/types.go       |  13 +-
 src/cmd/compile/internal/typecheck/iexport.go |  74 +++---
 src/cmd/compile/internal/typecheck/iimport.go | 172 ++++++++++---
 src/cmd/compile/internal/typecheck/subr.go    | 336 +++++++++++++++++++++++++-
 src/cmd/compile/internal/types2/builtins.go   |   6 +-
 src/cmd/compile/internal/types2/type.go       |  22 +-
 test/typeparam/absdiff.go                     |   3 +-
 test/typeparam/absdiffimp.dir/a.go            |  75 ++++++
 test/typeparam/absdiffimp.dir/main.go         |  29 +++
 test/typeparam/absdiffimp.go                  |   7 +
 test/typeparam/orderedmapsimp.dir/a.go        | 226 +++++++++++++++++
 test/typeparam/orderedmapsimp.dir/main.go     |  67 +++++
 test/typeparam/orderedmapsimp.go              |   7 +
 test/typeparam/value.go                       |   6 +-
 16 files changed, 1035 insertions(+), 435 deletions(-)
