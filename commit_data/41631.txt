commit 80a6fedea05dbdab2e55b2ba922faeaf4155a981
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Tue Feb 12 19:40:42 2019 -0800

    cmd/compile: add -d=checkptr to validate unsafe.Pointer rules
    
    This CL adds -d=checkptr as a compile-time option for adding
    instrumentation to check that Go code is following unsafe.Pointer
    safety rules dynamically. In particular, it currently checks two
    things:
    
    1. When converting unsafe.Pointer to *T, make sure the resulting
    pointer is aligned appropriately for T.
    
    2. When performing pointer arithmetic, if the result points to a Go
    heap object, make sure we can find an unsafe.Pointer-typed operand
    that pointed into the same object.
    
    These checks are currently disabled for the runtime, and can also be
    disabled through a new //go:nocheckptr annotation. The latter is
    necessary for functions like strings.noescape, which intentionally
    violate safety rules to workaround escape analysis limitations.
    
    Fixes #22218.
    
    Change-Id: If5a51273881d93048f74bcff10a3275c9c91da6a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/162237
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>

 src/cmd/compile/internal/gc/builtin.go         |  7 ++-
 src/cmd/compile/internal/gc/builtin/runtime.go |  3 ++
 src/cmd/compile/internal/gc/inl.go             |  6 +++
 src/cmd/compile/internal/gc/lex.go             |  3 ++
 src/cmd/compile/internal/gc/main.go            |  7 +++
 src/cmd/compile/internal/gc/walk.go            | 73 ++++++++++++++++++++++++++
 src/reflect/value.go                           | 10 ++++
 src/runtime/checkptr.go                        | 50 ++++++++++++++++++
 src/strings/builder.go                         |  1 +
 9 files changed, 159 insertions(+), 1 deletion(-)
