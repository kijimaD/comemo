commit 5201bf7ad184cac07466016a78b80aed5e472be4
Author: Russ Cox <rsc@golang.org>
Date:   Mon Jul 20 22:16:29 2015 -0400

    net: do not look up abc by default
    
    Fixes #11665.
    
    Change-Id: I0897e8cf695434e77d14dcb1d96f21747edfe37c
    Reviewed-on: https://go-review.googlesource.com/12523
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/net/ip_test.go | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/src/net/ip_test.go b/src/net/ip_test.go
index 554bb1eaa0..3d95a73c09 100644
--- a/src/net/ip_test.go
+++ b/src/net/ip_test.go
@@ -65,26 +65,28 @@ func TestLookupWithIP(t *testing.T) {
 	// Test that LookupHost and LookupIP, which normally
 	// expect host names, work with IP addresses.
 	for _, tt := range parseIPTests {
-		addrs, err := LookupHost(tt.in)
 		if tt.out != nil {
+			addrs, err := LookupHost(tt.in)
 			if len(addrs) != 1 || addrs[0] != tt.in || err != nil {
 				t.Errorf("LookupHost(%q) = %v, %v, want %v, nil", tt.in, addrs, err, []string{tt.in})
 			}
-		} else {
+		} else if !testing.Short() {
 			// We can't control what the host resolver does; if it can resolve, say,
 			// 127.0.0.256 or fe80::1%911 or a host named 'abc', who are we to judge?
 			// Warn about these discrepancies but don't fail the test.
+			addrs, err := LookupHost(tt.in)
 			if err == nil {
 				t.Logf("warning: LookupHost(%q) = %v, want error", tt.in, addrs)
 			}
 		}
 
-		ips, err := LookupIP(tt.in)
 		if tt.out != nil {
+			ips, err := LookupIP(tt.in)
 			if len(ips) != 1 || !reflect.DeepEqual(ips[0], tt.out) || err != nil {
 				t.Errorf("LookupIP(%q) = %v, %v, want %v, nil", tt.in, ips, err, []IP{tt.out})
 			}
-		} else {
+		} else if !testing.Short() {
+			ips, err := LookupIP(tt.in)
 			// We can't control what the host resolver does. See above.
 			if err == nil {
 				t.Logf("warning: LookupIP(%q) = %v, want error", tt.in, ips)
