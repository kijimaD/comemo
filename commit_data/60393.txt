commit dfaaa91f0537f806a02ff2dd71b79844cd16cc4e
Author: Diogo Pinela <diogoid7400@gmail.com>
Date:   Thu Mar 28 20:35:28 2019 +0000

    os: clarify that IsNotExist, IsExist, IsPermission and IsTimeout work with nil errors
    
    Referring to these functions' parameter as "*the* error" could be taken
    to imply that a non-nil error from elsewhere is expected; referring to
    it as "its argument" avoids that ambiguity.
    
    Fixes #31065
    
    Change-Id: I117892dd53fff6f92d11a416e4abedee5d2f9337
    Reviewed-on: https://go-review.googlesource.com/c/go/+/170077
    Reviewed-by: Rob Pike <r@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Jonathan Amsterdam <jba@google.com>
---
 src/os/error.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/os/error.go b/src/os/error.go
index 5a824a9e0e..284b9e992c 100644
--- a/src/os/error.go
+++ b/src/os/error.go
@@ -71,7 +71,7 @@ func NewSyscallError(syscall string, err error) error {
 	return &SyscallError{syscall, err}
 }
 
-// IsExist returns a boolean indicating whether the error is known to report
+// IsExist returns a boolean indicating whether its argument is known to report
 // that a file or directory already exists. It is satisfied by [ErrExist] as
 // well as some syscall errors.
 //
@@ -81,7 +81,7 @@ func IsExist(err error) bool {
 	return underlyingErrorIs(err, ErrExist)
 }
 
-// IsNotExist returns a boolean indicating whether the error is known to
+// IsNotExist returns a boolean indicating whether its argument is known to
 // report that a file or directory does not exist. It is satisfied by
 // [ErrNotExist] as well as some syscall errors.
 //
@@ -91,7 +91,7 @@ func IsNotExist(err error) bool {
 	return underlyingErrorIs(err, ErrNotExist)
 }
 
-// IsPermission returns a boolean indicating whether the error is known to
+// IsPermission returns a boolean indicating whether its argument is known to
 // report that permission is denied. It is satisfied by [ErrPermission] as well
 // as some syscall errors.
 //
@@ -101,7 +101,7 @@ func IsPermission(err error) bool {
 	return underlyingErrorIs(err, ErrPermission)
 }
 
-// IsTimeout returns a boolean indicating whether the error is known
+// IsTimeout returns a boolean indicating whether its argument is known
 // to report that a timeout occurred.
 //
 // This function predates [errors.Is], and the notion of whether an
