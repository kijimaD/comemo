commit 337662f7caef76abd0122edffdc1f7f8102f19f8
Author: Derek Phan <derekphan94@gmail.com>
Date:   Sun Jan 13 06:07:33 2019 +0000

    io: align style of test comments in multi_test.go
    
    Change-Id: Ic93a084311de46461ed3b30f4ac2fe11311e74d7
    GitHub-Last-Rev: 32fbd63b10d0fa489406333ff6f8b6708974a73c
    GitHub-Pull-Request: golang/go#29705
    Reviewed-on: https://go-review.googlesource.com/c/157642
    Run-TryBot: Daniel Mart√≠ <mvdan@mvdan.cc>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Matt Layher <mdlayher@gmail.com>
---
 src/io/multi_test.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/io/multi_test.go b/src/io/multi_test.go
index 9cbab4d211..d34794a367 100644
--- a/src/io/multi_test.go
+++ b/src/io/multi_test.go
@@ -77,7 +77,7 @@ func TestMultiWriter_String(t *testing.T) {
 	testMultiWriter(t, new(bytes.Buffer))
 }
 
-// test that a multiWriter.WriteString calls results in at most 1 allocation,
+// Test that a multiWriter.WriteString calls results in at most 1 allocation,
 // even if multiple targets don't support WriteString.
 func TestMultiWriter_WriteStringSingleAlloc(t *testing.T) {
 	var sink1, sink2 bytes.Buffer
@@ -149,7 +149,7 @@ func (f writerFunc) Write(p []byte) (int, error) {
 	return f(p)
 }
 
-// Test that MultiWriter properly flattens chained multiWriters,
+// Test that MultiWriter properly flattens chained multiWriters.
 func TestMultiWriterSingleChainFlatten(t *testing.T) {
 	pc := make([]uintptr, 1000) // 1000 should fit the full stack
 	n := runtime.Callers(0, pc)
