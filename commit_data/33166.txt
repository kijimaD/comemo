commit 37b7880d157111a796eda7f59ca73af7621489b8
Author: Austin Clements <austin@google.com>
Date:   Thu Jul 20 11:12:37 2017 -0400

    runtime: use SIGKILL if SIGQUIT is blocked; skip tests that need SIGQUIT
    
    The runtime tests may be invoked from a parent that has SIGQUIT
    blocked. For example, Java invokes subprocesses this way. In this
    situation, TestCrashDumpsAllThreads and TestPanicSystemstack will fail
    because they depend on SIGQUIT to get tracebacks, and any subprocess
    test that times out will fail to kill the subprocess.
    
    Fix this by detecting if SIGQUIT is blocked and, if so, skipping tests
    that depend on it and using SIGKILL to kill timed-out subprocesses.
    
    Based on a fix by Carl Henrik Lunde in
    https://golang.org/issue/19196#issuecomment-316145733
    
    Fixes #19196.
    
    Change-Id: Ia20bf15b96086487d0ef6b75239dcc260c21714c
    Reviewed-on: https://go-review.googlesource.com/50330
    Run-TryBot: Austin Clements <austin@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>

 src/runtime/crash_unix_test.go  | 17 +++++++++++++++++
 src/runtime/export_unix_test.go | 19 +++++++++++++++++++
 2 files changed, 36 insertions(+)
