commit 95d7ce9ab1dea5dface92736305470965a41f61e
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Wed Jun 29 17:16:46 2022 -0700

    [dev.unified] test: break escape_iface.go into unified/nounified variants
    
    The assignment `sink, *(&ok) = y.(int)` should (and does) escape a
    value to the heap, but this detail is missed because the implicit
    conversion of the multi-value expression `y.(int)` isn't visible to
    escape analysis (because it's not inserted until desugaring during
    walk).
    
    For Unified IR, I plan to apply this desugaring earlier (because it's
    necessary for correct dictionary handling), which means we'll
    now (correctly) report the heap escape.
    
    Due to limitations of the $GOROOT/test harness, the easiest way to
    handle that GOEXPERIMENT=unified gets this right while
    GOEXPERIMENT=nounified does not is to split the test case into
    separate files. Hence this CL.
    
    Change-Id: I91f3a6c015cbc646ab018747e152cac2874cf24c
    Reviewed-on: https://go-review.googlesource.com/c/go/+/415241
    Reviewed-by: Cuong Manh Le <cuong.manhle.vn@gmail.com>
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: David Chase <drchase@google.com>

 test/escape_iface.go           | 10 ----------
 test/escape_iface_nounified.go | 25 +++++++++++++++++++++++++
 test/escape_iface_unified.go   | 25 +++++++++++++++++++++++++
 3 files changed, 50 insertions(+), 10 deletions(-)
