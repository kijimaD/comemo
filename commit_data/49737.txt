commit 65f0d24f73fa5386bf921393cbd26bb8f9cead03
Author: Michael Matloob <matloob@golang.org>
Date:   Fri Sep 3 18:11:00 2021 -0400

    cmd/go: print offending -mod value in workspace mode
    
    Workspace mode only allows -mod to be set to 'readonly'. When returning
    the error for other values of -mod, specify the the value in the error
    so it's easier to see what's going on when the go command is invoked
    through another tool.
    
    For #45713, #48186
    
    Change-Id: I3ba206a71c7a20c18aeccfa48f3c9dc935a180a4
    Reviewed-on: https://go-review.googlesource.com/c/go/+/347593
    Trust: Michael Matloob <matloob@golang.org>
    Trust: Daniel Martí <mvdan@mvdan.cc>
    Run-TryBot: Michael Matloob <matloob@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Jay Conrod <jayconrod@google.com>
    Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
    Reviewed-by: Bryan C. Mills <bcmills@google.com>
---
 src/cmd/go/internal/modload/init.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/cmd/go/internal/modload/init.go b/src/cmd/go/internal/modload/init.go
index a1016ec5a3..a855e6c851 100644
--- a/src/cmd/go/internal/modload/init.go
+++ b/src/cmd/go/internal/modload/init.go
@@ -976,9 +976,9 @@ func requirementsFromModFiles(ctx context.Context, modFiles []*modfile.File) *Re
 func setDefaultBuildMod() {
 	if cfg.BuildModExplicit {
 		if inWorkspaceMode() && cfg.BuildMod != "readonly" {
-			base.Fatalf("go: -mod may only be set to readonly when in workspace mode." +
-				"\n\tRemove the -mod flag to use the default readonly value," +
-				"\n\tor set -workfile=off to disable workspace mode.")
+			base.Fatalf("go: -mod may only be set to readonly when in workspace mode, but it is set to %q"+
+				"\n\tRemove the -mod flag to use the default readonly value,"+
+				"\n\tor set -workfile=off to disable workspace mode.", cfg.BuildMod)
 		}
 		// Don't override an explicit '-mod=' argument.
 		return
