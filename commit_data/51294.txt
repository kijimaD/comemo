commit 2bb7f6b4f1e5ffd90d7ea00a653d7407f496d639
Author: Robert Griesemer <gri@golang.org>
Date:   Fri Dec 17 17:17:41 2021 -0800

    doc/go1.18: point to spec in same directory for release notes
    
    The release notes explicitly refer to sections updated
    for generics in the spec but then point to the old spec
    which is very confusing for beta users.
    
    For #47694
    
    Change-Id: I5b555db3543cc32f088a8b267ec3f1195a52a812
    Reviewed-on: https://go-review.googlesource.com/c/go/+/373174
    Trust: Robert Griesemer <gri@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 doc/go1.18.html | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/doc/go1.18.html b/doc/go1.18.html
index 0f313ee454..06a75643fc 100644
--- a/doc/go1.18.html
+++ b/doc/go1.18.html
@@ -48,16 +48,16 @@ Do not send CLs removing the interior tags from such phrases.
 <p>
   The following is a list of the most visible changes. For a more comprehensive overview, see the
   <a href="https://go.googlesource.com/proposal/+/refs/heads/master/design/43651-type-parameters.md">proposal</a>.
-  For details see the <a href="https://golang.org/ref/spec">language spec</a>.
+  For details see the <a href="/ref/spec">language spec</a>.
 </p>
 
 <ul>
   <li>
     The syntax for
-    <a href="https://golang.org/ref/spec#Function_declarations">Function</a> and
-    <a href="https://golang.org/ref/spec#Type_declarations">type declarations</a>
+    <a href="/ref/spec#Function_declarations">function</a> and
+    <a href="/ref/spec#Type_declarations">type declarations</a>
     now accepts
-    <a href="https://golang.org/ref/spec#Type_parameters">type parameters</a>.
+    <a href="/ref/spec#Type_parameters">type parameters</a>.
   </li>
   <li>
     Parameterized functions and types can be instantiated by following them with a list of
@@ -65,11 +65,11 @@ Do not send CLs removing the interior tags from such phrases.
   </li>
   <li>
     The new token <code>~</code> has been added to the set of
-    <a href="https://golang.org/ref/spec#Operators_and_punctuation">operators and punctuation</a>.
+    <a href="/ref/spec#Operators_and_punctuation">operators and punctuation</a>.
   </li>
   <li>
     The syntax for
-    <a href="https://golang.org/ref/spec#Interface_types">Interface types</a>
+    <a href="/ref/spec#Interface_types">Interface types</a>
     now permits the embedding of arbitrary types (not just type names of interfaces)
     as well as union and <code>~T</code> type elements. Such interfaces may only be used
     as type constraints.
@@ -77,13 +77,13 @@ Do not send CLs removing the interior tags from such phrases.
   </li>
   <li>
     The new
-    <a href="https://golang.org/ref/spec#Predeclared_identifiers">predeclared identifier</a>
+    <a href="/ref/spec#Predeclared_identifiers">predeclared identifier</a>
     <code>any</code> is an alias for the empty interface. It may be used instead of
     <code>interface{}</code>.
   </li>
   <li>
     The new
-    <a href="https://golang.org/ref/spec#Predeclared_identifiers">predeclared identifier</a>
+    <a href="/ref/spec#Predeclared_identifiers">predeclared identifier</a>
     <code>comparable</code> is an interface the denotes the set of all types which can be
     compared using <code>==</code> or <code>!=</code>. It may only be used as (or embedded in)
     a type constraint.
