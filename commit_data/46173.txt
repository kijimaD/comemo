commit 267975dc4732b6f6a62a7d33a85de34efef180b7
Merge: 63bc23b545 6c64b6db68
Author: Alexander Rakoczy <alex@golang.org>
Date:   Mon Dec 14 11:42:42 2020 -0500

    Merge branch 'master' into dev.regabi
    
    Change-Id: I098acdbc5e2676aeb8700d935e796a9c29d04b88

 doc/go1.16.html                                    | 385 +++++++++++-----
 misc/cgo/testsanitizers/msan_test.go               |   1 +
 misc/cgo/testsanitizers/testdata/msan7.go          |  38 ++
 src/archive/tar/reader_test.go                     |   3 +-
 src/archive/tar/tar_test.go                        |   3 +-
 src/archive/tar/writer_test.go                     |   3 +-
 src/archive/zip/reader_test.go                     |  11 +-
 src/archive/zip/writer_test.go                     |   4 +-
 src/cmd/addr2line/addr2line_test.go                |   7 +-
 src/cmd/api/goapi.go                               |   3 +-
 src/cmd/api/goapi_test.go                          |   3 +-
 src/cmd/compile/internal/gc/builtin.go             |  42 +-
 src/cmd/compile/internal/gc/builtin/runtime.go     |   1 +
 src/cmd/compile/internal/gc/go.go                  |   1 +
 src/cmd/compile/internal/gc/ssa.go                 |  85 +++-
 src/cmd/compile/internal/logopt/logopt_test.go     |   2 +-
 src/cmd/compile/internal/ssa/gen/386.rules         |   1 +
 src/cmd/compile/internal/ssa/gen/ARM.rules         |   4 +-
 src/cmd/compile/internal/ssa/gen/ARM64.rules       |  16 +-
 src/cmd/compile/internal/ssa/gen/MIPS.rules        |   8 +-
 src/cmd/compile/internal/ssa/gen/MIPS64.rules      |   8 +-
 src/cmd/compile/internal/ssa/gen/PPC64.rules       |   1 +
 src/cmd/compile/internal/ssa/gen/Wasm.rules        |   1 +
 src/cmd/compile/internal/ssa/rewrite386.go         |  13 +
 src/cmd/compile/internal/ssa/rewriteARM.go         |   8 +
 src/cmd/compile/internal/ssa/rewriteARM64.go       |  32 ++
 src/cmd/compile/internal/ssa/rewriteMIPS.go        |  16 +
 src/cmd/compile/internal/ssa/rewriteMIPS64.go      |  16 +
 src/cmd/compile/internal/ssa/rewritePPC64.go       |  14 +
 src/cmd/compile/internal/ssa/rewriteWasm.go        |  14 +
 src/cmd/compile/internal/wasm/ssa.go               |   6 +
 src/cmd/cover/cover.go                             |   3 +-
 src/cmd/cover/cover_test.go                        |  31 +-
 src/cmd/cover/html.go                              |   5 +-
 src/cmd/fix/main.go                                |   3 +-
 src/cmd/fix/typecheck.go                           |   7 +-
 src/cmd/go.mod                                     |   7 +-
 src/cmd/go.sum                                     |  17 +-
 src/cmd/go/go_test.go                              |  19 +-
 src/cmd/go/go_windows_test.go                      |   5 +-
 src/cmd/go/help_test.go                            |   4 +-
 src/cmd/go/internal/auth/netrc.go                  |   3 +-
 src/cmd/go/internal/bug/bug.go                     |   5 +-
 src/cmd/go/internal/cache/cache.go                 |   5 +-
 src/cmd/go/internal/cache/cache_test.go            |  13 +-
 src/cmd/go/internal/cache/default.go               |   3 +-
 src/cmd/go/internal/cache/hash_test.go             |   3 +-
 src/cmd/go/internal/cfg/cfg.go                     |   3 +-
 src/cmd/go/internal/clean/clean.go                 |   3 +-
 src/cmd/go/internal/envcmd/env.go                  |   7 +-
 src/cmd/go/internal/fsys/fsys.go                   |   2 +-
 src/cmd/go/internal/fsys/fsys_test.go              |   3 +-
 src/cmd/go/internal/generate/generate.go           |   3 +-
 src/cmd/go/internal/imports/scan_test.go           |   8 +-
 src/cmd/go/internal/load/pkg.go                    |  28 +-
 .../lockedfile/internal/filelock/filelock_test.go  |   5 +-
 src/cmd/go/internal/lockedfile/lockedfile_test.go  |   9 +-
 src/cmd/go/internal/modcmd/vendor.go               |  13 +-
 src/cmd/go/internal/modcmd/verify.go               |   3 +-
 src/cmd/go/internal/modconv/convert_test.go        |   5 +-
 src/cmd/go/internal/modconv/modconv_test.go        |   6 +-
 src/cmd/go/internal/modfetch/cache.go              |   3 +-
 src/cmd/go/internal/modfetch/cache_test.go         |   3 +-
 src/cmd/go/internal/modfetch/codehost/codehost.go  |   5 +-
 src/cmd/go/internal/modfetch/codehost/git_test.go  |   3 +-
 src/cmd/go/internal/modfetch/codehost/shell.go     |   3 +-
 src/cmd/go/internal/modfetch/codehost/vcs.go       |   3 +-
 src/cmd/go/internal/modfetch/coderepo.go           |   3 +-
 src/cmd/go/internal/modfetch/coderepo_test.go      |  13 +-
 src/cmd/go/internal/modfetch/fetch.go              |   5 +-
 .../internal/modfetch/zip_sum_test/zip_sum_test.go |   3 +-
 src/cmd/go/internal/modload/init.go                |  25 +-
 src/cmd/go/internal/modload/load.go                |   8 +-
 src/cmd/go/internal/modload/modfile.go             |  13 +-
 src/cmd/go/internal/modload/query_test.go          |   3 +-
 src/cmd/go/internal/modload/vendor.go              |   4 +-
 src/cmd/go/internal/renameio/renameio.go           |   4 +-
 src/cmd/go/internal/renameio/renameio_test.go      |   3 +-
 src/cmd/go/internal/renameio/umask_test.go         |   3 +-
 src/cmd/go/internal/robustio/robustio.go           |   2 +-
 src/cmd/go/internal/robustio/robustio_flaky.go     |   5 +-
 src/cmd/go/internal/robustio/robustio_other.go     |   3 +-
 src/cmd/go/internal/test/test.go                   |  16 +-
 src/cmd/go/internal/txtar/archive.go               |   4 +-
 src/cmd/go/internal/vcs/vcs_test.go                |   3 +-
 src/cmd/go/internal/web/file_test.go               |   3 +-
 src/cmd/go/internal/work/action.go                 |   3 +-
 src/cmd/go/internal/work/build_test.go             |   9 +-
 src/cmd/go/internal/work/buildid.go                |   3 +-
 src/cmd/go/internal/work/exec.go                   |  17 +-
 src/cmd/go/internal/work/gc.go                     |   7 +-
 src/cmd/go/internal/work/gccgo.go                  |   3 +-
 src/cmd/go/proxy_test.go                           |   7 +-
 src/cmd/go/script_test.go                          |  23 +-
 src/cmd/go/testdata/addmod.go                      |  13 +-
 src/cmd/go/testdata/savedir.go                     |   3 +-
 src/cmd/go/testdata/script/build_issue6480.txt     |   5 +-
 src/cmd/go/testdata/script/build_trimpath.txt      |   3 +-
 src/cmd/go/testdata/script/cover_error.txt         |   5 +-
 src/cmd/go/testdata/script/gopath_moved_repo.txt   |   5 +-
 .../script/mod_download_concurrent_read.txt        |   3 +-
 src/cmd/go/testdata/script/mod_modinfo.txt         |   3 +-
 src/cmd/go/testdata/script/mod_test_cached.txt     |   7 +-
 .../go/testdata/script/test_compile_tempfile.txt   |   2 +-
 src/cmd/go/testdata/script/test_generated_main.txt |   3 +-
 .../go/testdata/script/test_race_install_cgo.txt   |   8 +-
 src/cmd/gofmt/gofmt.go                             |   5 +-
 src/cmd/gofmt/gofmt_test.go                        |  13 +-
 src/cmd/nm/nm_test.go                              |   9 +-
 src/cmd/objdump/objdump_test.go                    |   5 +-
 src/cmd/pack/pack_test.go                          |  13 +-
 src/cmd/trace/annotations_test.go                  |   4 +-
 src/cmd/trace/pprof.go                             |   3 +-
 .../google/pprof/internal/graph/dotgraph.go        |  24 +-
 .../google/pprof/internal/graph/graph.go           |  17 +-
 .../github.com/ianlancetaylor/demangle/ast.go      | 378 ++++++++++++++--
 .../github.com/ianlancetaylor/demangle/demangle.go | 501 +++++++++++++++++----
 .../vendor/golang.org/x/sys/unix/asm_aix_ppc64.s   |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_darwin_386.s  |   2 +-
 .../golang.org/x/sys/unix/asm_darwin_amd64.s       |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_darwin_arm.s  |   2 +-
 .../golang.org/x/sys/unix/asm_darwin_arm64.s       |   2 +-
 .../golang.org/x/sys/unix/asm_dragonfly_amd64.s    |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_freebsd_386.s |   2 +-
 .../golang.org/x/sys/unix/asm_freebsd_amd64.s      |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_freebsd_arm.s |   2 +-
 .../golang.org/x/sys/unix/asm_freebsd_arm64.s      |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_linux_386.s   |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_linux_amd64.s |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_linux_arm.s   |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_linux_arm64.s |   2 +-
 .../golang.org/x/sys/unix/asm_linux_mips64x.s      |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_linux_mipsx.s |   2 +-
 .../golang.org/x/sys/unix/asm_linux_ppc64x.s       |   2 +-
 .../golang.org/x/sys/unix/asm_linux_riscv64.s      |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_linux_s390x.s |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_netbsd_386.s  |   2 +-
 .../golang.org/x/sys/unix/asm_netbsd_amd64.s       |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_netbsd_arm.s  |   2 +-
 .../golang.org/x/sys/unix/asm_netbsd_arm64.s       |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_openbsd_386.s |   2 +-
 .../golang.org/x/sys/unix/asm_openbsd_amd64.s      |   2 +-
 .../vendor/golang.org/x/sys/unix/asm_openbsd_arm.s |   2 +-
 .../golang.org/x/sys/unix/asm_openbsd_arm64.s      |   2 +-
 .../golang.org/x/sys/unix/asm_openbsd_mips64.s     |   2 +-
 .../golang.org/x/sys/unix/asm_solaris_amd64.s      |   2 +-
 src/cmd/vendor/golang.org/x/sys/unix/endian_big.go |   2 +-
 .../vendor/golang.org/x/sys/unix/endian_little.go  |   2 +-
 src/cmd/vendor/golang.org/x/sys/unix/mkerrors.sh   |   2 +
 .../golang.org/x/sys/unix/syscall_darwin.1_13.go   |   1 -
 .../golang.org/x/sys/unix/syscall_dragonfly.go     |  13 +
 .../vendor/golang.org/x/sys/unix/syscall_linux.go  |  87 +++-
 .../x/sys/unix/syscall_linux_amd64_gc.go           |   2 +-
 .../golang.org/x/sys/unix/syscall_linux_gc.go      |   2 +-
 .../golang.org/x/sys/unix/syscall_linux_gc_386.go  |   2 +-
 .../golang.org/x/sys/unix/syscall_linux_gc_arm.go  |   2 +-
 .../golang.org/x/sys/unix/syscall_unix_gc.go       |   2 +-
 .../x/sys/unix/syscall_unix_gc_ppc64x.go           |   2 +-
 .../vendor/golang.org/x/sys/unix/zerrors_linux.go  |   6 +
 .../golang.org/x/sys/unix/zsyscall_aix_ppc64_gc.go |   2 +-
 .../x/sys/unix/zsyscall_darwin_386.1_13.go         |   2 -
 .../golang.org/x/sys/unix/zsyscall_darwin_386.go   | 142 ------
 .../x/sys/unix/zsyscall_darwin_amd64.1_13.go       |   2 -
 .../golang.org/x/sys/unix/zsyscall_darwin_amd64.go | 142 ------
 .../x/sys/unix/zsyscall_darwin_arm.1_13.go         |   2 -
 .../golang.org/x/sys/unix/zsyscall_darwin_arm.go   | 141 ------
 .../x/sys/unix/zsyscall_darwin_arm64.1_13.go       |   2 -
 .../golang.org/x/sys/unix/zsyscall_darwin_arm64.go | 142 ------
 .../x/sys/unix/zsyscall_dragonfly_amd64.go         |  10 +
 .../golang.org/x/sys/unix/ztypes_darwin_386.go     |   1 +
 .../golang.org/x/sys/unix/ztypes_darwin_amd64.go   |   1 +
 .../golang.org/x/sys/unix/ztypes_darwin_arm.go     |   1 +
 .../golang.org/x/sys/unix/ztypes_darwin_arm64.go   |   1 +
 .../vendor/golang.org/x/sys/unix/ztypes_linux.go   |  18 +
 .../vendor/golang.org/x/sys/windows/dll_windows.go |   3 +-
 .../golang.org/x/sys/windows/security_windows.go   |  14 +-
 src/cmd/vendor/golang.org/x/sys/windows/service.go |   6 +
 .../x/sys/windows/setupapierrors_windows.go        | 100 ++++
 .../golang.org/x/sys/windows/syscall_windows.go    |   8 +-
 .../golang.org/x/sys/windows/types_windows.go      |  48 ++
 .../golang.org/x/sys/windows/zsyscall_windows.go   | 103 ++++-
 .../analysis/passes/framepointer/framepointer.go   |  91 ++++
 .../go/analysis/passes/ifaceassert/ifaceassert.go  |   4 +
 src/cmd/vendor/modules.txt                         |  10 +-
 src/cmd/vet/main.go                                |   2 +
 src/cmd/vet/vet_test.go                            |   5 +-
 src/compress/bzip2/bzip2_test.go                   |   4 +-
 src/compress/flate/deflate_test.go                 |   6 +-
 src/compress/flate/huffman_bit_writer_test.go      |  29 +-
 src/compress/flate/reader_test.go                  |   4 +-
 src/compress/lzw/reader_test.go                    |   4 +-
 src/compress/lzw/writer_test.go                    |   3 +-
 src/compress/zlib/writer_test.go                   |   3 +-
 src/crypto/md5/gen.go                              |   4 +-
 src/crypto/tls/handshake_test.go                   |   3 +-
 src/crypto/tls/link_test.go                        |   3 +-
 src/crypto/tls/tls.go                              |   6 +-
 src/crypto/x509/name_constraints_test.go           |   3 +-
 src/crypto/x509/root_ios_gen.go                    |   4 +-
 src/crypto/x509/root_plan9.go                      |   3 +-
 src/crypto/x509/root_unix.go                       |  25 +-
 src/crypto/x509/root_unix_test.go                  |   5 +-
 src/debug/dwarf/dwarf5ranges_test.go               |   4 +-
 src/debug/gosym/pclntab_test.go                    |   5 +-
 src/debug/pe/file_test.go                          |  13 +-
 src/embed/embed.go                                 |   5 +-
 src/embed/internal/embedtest/embed_test.go         |  23 +-
 src/embed/internal/embedtest/embedx_test.go        |   4 +-
 .../embedtest/testdata/.hidden/.more/tip.txt       |   1 +
 .../embedtest/testdata/.hidden/_more/tip.txt       |   1 +
 .../embedtest/testdata/.hidden/fortune.txt         |   2 +
 .../embedtest/testdata/.hidden/more/tip.txt        |   1 +
 .../embedtest/testdata/_hidden/fortune.txt         |   2 +
 src/go.mod                                         |   2 +-
 src/go.sum                                         |   4 +-
 src/go/build/build_test.go                         |  11 +-
 src/go/build/deps_test.go                          |   3 +-
 src/go/doc/doc_test.go                             |   6 +-
 src/go/format/benchmark_test.go                    |   4 +-
 src/go/format/format_test.go                       |   6 +-
 src/go/importer/importer_test.go                   |   3 +-
 src/go/internal/gccgoimporter/importer_test.go     |   5 +-
 src/go/internal/gcimporter/gcimporter_test.go      |  11 +-
 src/go/internal/srcimporter/srcimporter.go         |   3 +-
 src/go/internal/srcimporter/srcimporter_test.go    |   3 +-
 src/go/parser/error_test.go                        |  10 +-
 src/go/parser/interface.go                         |  44 +-
 src/go/parser/performance_test.go                  |   4 +-
 src/go/printer/performance_test.go                 |   4 +-
 src/go/printer/printer_test.go                     |  12 +-
 src/go/scanner/scanner_test.go                     |   3 +-
 src/go/types/check.go                              |   1 +
 src/go/types/check_test.go                         |  14 +-
 src/go/types/decl.go                               |  35 +-
 src/go/types/errors.go                             |  20 +-
 src/go/types/hilbert_test.go                       |   4 +-
 src/go/types/issues_test.go                        |  26 ++
 src/go/types/predicates.go                         |  16 +-
 src/go/types/resolver.go                           |  15 +-
 src/go/types/stdlib_test.go                        |  11 +-
 src/go/types/testdata/constdecl.src                |  31 ++
 src/hash/crc32/gen_const_ppc64le.go                |   4 +-
 src/html/template/examplefiles_test.go             |   3 +-
 src/html/template/template.go                      |   4 +-
 src/image/color/palette/gen.go                     |   4 +-
 src/image/gif/reader_test.go                       |   4 +-
 src/image/internal/imageutil/gen.go                |   3 +-
 src/image/jpeg/reader_test.go                      |   7 +-
 src/image/png/reader_test.go                       |   3 +-
 src/index/suffixarray/gen.go                       |   6 +-
 src/index/suffixarray/suffixarray_test.go          |   6 +-
 src/internal/cpu/cpu_arm64.go                      |  97 +---
 .../cpu/{cpu_linux.go => cpu_arm64_android.go}     |   6 +-
 src/internal/cpu/cpu_arm64_darwin.go               |  34 ++
 src/internal/cpu/cpu_arm64_freebsd.go              |  45 ++
 src/internal/cpu/cpu_arm64_hwcap.go                |  63 +++
 .../cpu/{cpu_other.go => cpu_arm64_linux.go}       |   8 +-
 src/internal/cpu/cpu_arm64_other.go                |  17 +
 src/internal/cpu/cpu_s390x_test.go                 |   4 +-
 src/internal/cpu/cpu_test.go                       |   7 +-
 src/internal/cpu/cpu_x86.go                        |  11 +-
 src/internal/obscuretestdata/obscuretestdata.go    |   3 +-
 src/internal/poll/read_test.go                     |   3 +-
 src/internal/testenv/testenv_windows.go            |   3 +-
 src/internal/trace/gc_test.go                      |   6 +-
 src/internal/trace/parser_test.go                  |   9 +-
 src/io/fs/readdir_test.go                          |  12 +-
 src/io/fs/readfile_test.go                         |  16 +
 src/io/fs/sub.go                                   | 127 ++++++
 src/io/fs/sub_test.go                              |  57 +++
 src/log/syslog/syslog_test.go                      |   5 +-
 src/math/big/arith_s390x.s                         | 192 +-------
 src/math/big/arith_test.go                         |  55 ++-
 src/math/big/link_test.go                          |   4 +-
 src/math/bits/make_examples.go                     |   4 +-
 src/math/bits/make_tables.go                       |   4 +-
 src/mime/multipart/formdata.go                     |  11 +-
 src/mime/multipart/formdata_test.go                |  14 +-
 src/net/dnsclient_unix_test.go                     |   3 +-
 src/net/error_test.go                              |   3 +-
 src/net/http/filetransport_test.go                 |   5 +-
 src/net/http/fs_test.go                            |   8 +-
 src/net/http/request_test.go                       |   5 +-
 src/net/http/transfer_test.go                      |   3 +-
 src/net/http/transport.go                          |  22 +-
 src/net/http/transport_test.go                     |   3 +-
 src/net/mockserver_test.go                         |   5 +-
 src/net/net_windows_test.go                        |   7 +-
 src/net/unixsock_test.go                           |   3 +-
 src/os/error_test.go                               |   9 +-
 src/os/exec/exec_test.go                           |   5 +-
 src/os/exec/lp_unix_test.go                        |   3 +-
 src/os/exec/lp_windows_test.go                     |   7 +-
 src/os/fifo_test.go                                |   3 +-
 src/os/file.go                                     |   7 +
 src/os/os_test.go                                  |  42 +-
 src/os/os_unix_test.go                             |   4 +-
 src/os/os_windows_test.go                          |  29 +-
 src/os/path_test.go                                |   4 +-
 src/os/path_windows_test.go                        |   3 +-
 src/os/pipe_test.go                                |   3 +-
 src/os/readfrom_linux_test.go                      |   4 +-
 src/os/removeall_test.go                           |  20 +-
 src/os/signal/signal_test.go                       |   3 +-
 src/os/signal/signal_windows_test.go               |   3 +-
 src/os/stat_test.go                                |   9 +-
 src/os/timeout_test.go                             |   3 +-
 src/os/user/lookup_plan9.go                        |   3 +-
 src/path/filepath/example_unix_walk_test.go        |   3 +-
 src/path/filepath/match_test.go                    |   7 +-
 src/path/filepath/path_test.go                     |  33 +-
 src/path/filepath/path_windows_test.go             |  19 +-
 src/reflect/type.go                                |  16 +-
 src/runtime/cgo/linux_syscall.c                    |   2 +-
 src/runtime/crash_test.go                          |   3 +-
 src/runtime/crash_unix_test.go                     |   5 +-
 src/runtime/debug/heapdump_test.go                 |   5 +-
 src/runtime/debug_test.go                          |   4 +-
 src/runtime/env_plan9.go                           |   4 +-
 src/runtime/internal/sys/gengoos.go                |   8 +-
 src/runtime/memmove_linux_amd64_test.go            |   3 +-
 src/runtime/metrics/description_test.go            |  16 +-
 src/runtime/mkduff.go                              |   4 +-
 src/runtime/mkfastlog2table.go                     |   4 +-
 src/runtime/mksizeclasses.go                       |   3 +-
 src/runtime/msan.go                                |   6 +-
 src/runtime/msan_amd64.s                           |   9 +
 src/runtime/msan_arm64.s                           |  10 +
 src/runtime/os_darwin.go                           |  12 +
 src/runtime/os_linux_be64.go                       |   1 +
 src/runtime/os_linux_generic.go                    |   1 +
 src/runtime/os_linux_mips64x.go                    |   1 +
 src/runtime/os_linux_mipsx.go                      |   1 +
 src/runtime/pprof/pprof_test.go                    |   5 +-
 src/runtime/pprof/proto.go                         |   4 +-
 src/runtime/pprof/proto_test.go                    |   3 +-
 src/runtime/proc.go                                |   4 +-
 src/runtime/race/output_test.go                    |   5 +-
 src/runtime/race/testdata/io_test.go               |   3 +-
 src/runtime/runtime-gdb_test.go                    |  25 +-
 src/runtime/runtime-lldb_test.go                   |   9 +-
 src/runtime/signal_unix.go                         |  10 +-
 src/runtime/signal_windows_test.go                 |   5 +-
 src/runtime/sys_darwin.go                          |  10 +-
 src/runtime/sys_darwin_amd64.s                     |  20 +-
 src/runtime/sys_darwin_arm64.s                     |  18 +-
 src/runtime/sys_openbsd_mips64.s                   |   4 +-
 src/runtime/syscall_windows_test.go                |  25 +-
 src/runtime/testdata/testprog/memprof.go           |   3 +-
 src/runtime/testdata/testprog/syscalls_linux.go    |   3 +-
 src/runtime/testdata/testprog/timeprof.go          |   3 +-
 src/runtime/testdata/testprog/vdso.go              |   3 +-
 src/runtime/testdata/testprogcgo/pprof.go          |   3 +-
 src/runtime/testdata/testprogcgo/threadpprof.go    |   3 +-
 src/runtime/time.go                                |  33 +-
 src/runtime/trace/trace_test.go                    |   3 +-
 src/runtime/wincallback.go                         |   7 +-
 src/sort/genzfunc.go                               |   4 +-
 src/strconv/makeisprint.go                         |   4 +-
 src/syscall/dirent_test.go                         |   9 +-
 src/syscall/exec_linux_test.go                     |  15 +-
 src/syscall/getdirentries_test.go                  |   5 +-
 src/syscall/mkasm_darwin.go                        |   9 +-
 src/syscall/syscall_linux_test.go                  |  11 +-
 src/syscall/syscall_unix_test.go                   |   7 +-
 src/syscall/syscall_windows.go                     |   2 +-
 src/syscall/syscall_windows_test.go                |   3 +-
 src/syscall/zsyscall_windows.go                    |   2 +-
 src/testing/fstest/mapfs.go                        |  10 +
 src/testing/fstest/testfs.go                       |  42 ++
 src/testing/testing.go                             |   5 +-
 src/testing/testing_test.go                        |   7 +-
 src/text/template/examplefiles_test.go             |   3 +-
 src/text/template/helper.go                        |   4 +-
 src/text/template/link_test.go                     |   7 +-
 src/time/genzabbrs.go                              |   4 +-
 src/time/internal_test.go                          |  52 +--
 src/time/sleep.go                                  |   2 +
 src/time/sleep_test.go                             |  23 +-
 src/time/tzdata/generate_zipdata.go                |   3 +-
 src/time/zoneinfo_read.go                          |   2 +-
 src/vendor/golang.org/x/sys/cpu/asm_aix_ppc64.s    |   2 +-
 src/vendor/golang.org/x/sys/cpu/cpu_arm64.s        |   2 +-
 src/vendor/golang.org/x/sys/cpu/cpu_gc_arm64.go    |   2 +-
 src/vendor/golang.org/x/sys/cpu/cpu_gc_s390x.go    |   2 +-
 src/vendor/golang.org/x/sys/cpu/cpu_gc_x86.go      |   2 +-
 src/vendor/golang.org/x/sys/cpu/cpu_s390x.s        |   2 +-
 src/vendor/golang.org/x/sys/cpu/cpu_x86.s          |   2 +-
 .../golang.org/x/sys/cpu/syscall_aix_ppc64_gc.go   |   2 +-
 src/vendor/modules.txt                             |   2 +-
 test/assign.go                                     |   4 +-
 test/fixedbugs/bug487.go                           |   4 +-
 test/fixedbugs/bug510.dir/a.go                     |  13 +
 .../fixedbugs/bug510.dir/b.go                      |  11 +-
 .../cpu/cpu_android.go => test/fixedbugs/bug510.go |   6 +-
 test/fixedbugs/issue42944.go                       |  24 +
 test/fixedbugs/issue43099.go                       |  34 ++
 test/fixedbugs/issue6977.go                        |   8 +-
 test/method2.go                                    |   4 +-
 399 files changed, 3511 insertions(+), 2228 deletions(-)

diff --cc src/cmd/compile/internal/gc/builtin.go
index 07e864dd2e,e04f23e229..d3e3f9ade6
--- a/src/cmd/compile/internal/gc/builtin.go
+++ b/src/cmd/compile/internal/gc/builtin.go
@@@ -205,137 -203,138 +206,138 @@@ var runtimeDecls = [...]struct 
  }
  
  func runtimeTypes() []*types.Type {
- 	var typs [131]*types.Type
+ 	var typs [132]*types.Type
 -	typs[0] = types.Bytetype
 +	typs[0] = types.ByteType
  	typs[1] = types.NewPtr(typs[0])
 -	typs[2] = types.Types[TANY]
 +	typs[2] = types.Types[types.TANY]
  	typs[3] = types.NewPtr(typs[2])
 -	typs[4] = functype(nil, []*Node{anonfield(typs[1])}, []*Node{anonfield(typs[3])})
 -	typs[5] = types.Types[TUINTPTR]
 -	typs[6] = types.Types[TBOOL]
 -	typs[7] = types.Types[TUNSAFEPTR]
 -	typs[8] = functype(nil, []*Node{anonfield(typs[5]), anonfield(typs[1]), anonfield(typs[6])}, []*Node{anonfield(typs[7])})
 +	typs[4] = functype(nil, []*ir.Field{anonfield(typs[1])}, []*ir.Field{anonfield(typs[3])})
 +	typs[5] = types.Types[types.TUINTPTR]
 +	typs[6] = types.Types[types.TBOOL]
 +	typs[7] = types.Types[types.TUNSAFEPTR]
 +	typs[8] = functype(nil, []*ir.Field{anonfield(typs[5]), anonfield(typs[1]), anonfield(typs[6])}, []*ir.Field{anonfield(typs[7])})
  	typs[9] = functype(nil, nil, nil)
 -	typs[10] = types.Types[TINTER]
 -	typs[11] = functype(nil, []*Node{anonfield(typs[10])}, nil)
 -	typs[12] = types.Types[TINT32]
 +	typs[10] = types.Types[types.TINTER]
 +	typs[11] = functype(nil, []*ir.Field{anonfield(typs[10])}, nil)
 +	typs[12] = types.Types[types.TINT32]
  	typs[13] = types.NewPtr(typs[12])
 -	typs[14] = functype(nil, []*Node{anonfield(typs[13])}, []*Node{anonfield(typs[10])})
 -	typs[15] = types.Types[TINT]
 -	typs[16] = functype(nil, []*Node{anonfield(typs[15]), anonfield(typs[15])}, nil)
 -	typs[17] = types.Types[TUINT]
 -	typs[18] = functype(nil, []*Node{anonfield(typs[17]), anonfield(typs[15])}, nil)
 -	typs[19] = functype(nil, []*Node{anonfield(typs[6])}, nil)
 -	typs[20] = types.Types[TFLOAT64]
 -	typs[21] = functype(nil, []*Node{anonfield(typs[20])}, nil)
 -	typs[22] = types.Types[TINT64]
 -	typs[23] = functype(nil, []*Node{anonfield(typs[22])}, nil)
 -	typs[24] = types.Types[TUINT64]
 -	typs[25] = functype(nil, []*Node{anonfield(typs[24])}, nil)
 -	typs[26] = types.Types[TCOMPLEX128]
 -	typs[27] = functype(nil, []*Node{anonfield(typs[26])}, nil)
 -	typs[28] = types.Types[TSTRING]
 -	typs[29] = functype(nil, []*Node{anonfield(typs[28])}, nil)
 -	typs[30] = functype(nil, []*Node{anonfield(typs[2])}, nil)
 -	typs[31] = functype(nil, []*Node{anonfield(typs[5])}, nil)
 +	typs[14] = functype(nil, []*ir.Field{anonfield(typs[13])}, []*ir.Field{anonfield(typs[10])})
 +	typs[15] = types.Types[types.TINT]
 +	typs[16] = functype(nil, []*ir.Field{anonfield(typs[15]), anonfield(typs[15])}, nil)
 +	typs[17] = types.Types[types.TUINT]
 +	typs[18] = functype(nil, []*ir.Field{anonfield(typs[17]), anonfield(typs[15])}, nil)
 +	typs[19] = functype(nil, []*ir.Field{anonfield(typs[6])}, nil)
 +	typs[20] = types.Types[types.TFLOAT64]
 +	typs[21] = functype(nil, []*ir.Field{anonfield(typs[20])}, nil)
 +	typs[22] = types.Types[types.TINT64]
 +	typs[23] = functype(nil, []*ir.Field{anonfield(typs[22])}, nil)
 +	typs[24] = types.Types[types.TUINT64]
 +	typs[25] = functype(nil, []*ir.Field{anonfield(typs[24])}, nil)
 +	typs[26] = types.Types[types.TCOMPLEX128]
 +	typs[27] = functype(nil, []*ir.Field{anonfield(typs[26])}, nil)
 +	typs[28] = types.Types[types.TSTRING]
 +	typs[29] = functype(nil, []*ir.Field{anonfield(typs[28])}, nil)
 +	typs[30] = functype(nil, []*ir.Field{anonfield(typs[2])}, nil)
 +	typs[31] = functype(nil, []*ir.Field{anonfield(typs[5])}, nil)
  	typs[32] = types.NewArray(typs[0], 32)
  	typs[33] = types.NewPtr(typs[32])
 -	typs[34] = functype(nil, []*Node{anonfield(typs[33]), anonfield(typs[28]), anonfield(typs[28])}, []*Node{anonfield(typs[28])})
 -	typs[35] = functype(nil, []*Node{anonfield(typs[33]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28])}, []*Node{anonfield(typs[28])})
 -	typs[36] = functype(nil, []*Node{anonfield(typs[33]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28])}, []*Node{anonfield(typs[28])})
 -	typs[37] = functype(nil, []*Node{anonfield(typs[33]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28])}, []*Node{anonfield(typs[28])})
 +	typs[34] = functype(nil, []*ir.Field{anonfield(typs[33]), anonfield(typs[28]), anonfield(typs[28])}, []*ir.Field{anonfield(typs[28])})
 +	typs[35] = functype(nil, []*ir.Field{anonfield(typs[33]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28])}, []*ir.Field{anonfield(typs[28])})
 +	typs[36] = functype(nil, []*ir.Field{anonfield(typs[33]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28])}, []*ir.Field{anonfield(typs[28])})
 +	typs[37] = functype(nil, []*ir.Field{anonfield(typs[33]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28]), anonfield(typs[28])}, []*ir.Field{anonfield(typs[28])})
  	typs[38] = types.NewSlice(typs[28])
 -	typs[39] = functype(nil, []*Node{anonfield(typs[33]), anonfield(typs[38])}, []*Node{anonfield(typs[28])})
 -	typs[40] = functype(nil, []*Node{anonfield(typs[28]), anonfield(typs[28])}, []*Node{anonfield(typs[15])})
 +	typs[39] = functype(nil, []*ir.Field{anonfield(typs[33]), anonfield(typs[38])}, []*ir.Field{anonfield(typs[28])})
 +	typs[40] = functype(nil, []*ir.Field{anonfield(typs[28]), anonfield(typs[28])}, []*ir.Field{anonfield(typs[15])})
  	typs[41] = types.NewArray(typs[0], 4)
  	typs[42] = types.NewPtr(typs[41])
 -	typs[43] = functype(nil, []*Node{anonfield(typs[42]), anonfield(typs[22])}, []*Node{anonfield(typs[28])})
 -	typs[44] = functype(nil, []*Node{anonfield(typs[33]), anonfield(typs[1]), anonfield(typs[15])}, []*Node{anonfield(typs[28])})
 -	typs[45] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[15])}, []*Node{anonfield(typs[28])})
 -	typs[46] = types.Runetype
 +	typs[43] = functype(nil, []*ir.Field{anonfield(typs[42]), anonfield(typs[22])}, []*ir.Field{anonfield(typs[28])})
 +	typs[44] = functype(nil, []*ir.Field{anonfield(typs[33]), anonfield(typs[1]), anonfield(typs[15])}, []*ir.Field{anonfield(typs[28])})
 +	typs[45] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[15])}, []*ir.Field{anonfield(typs[28])})
 +	typs[46] = types.RuneType
  	typs[47] = types.NewSlice(typs[46])
 -	typs[48] = functype(nil, []*Node{anonfield(typs[33]), anonfield(typs[47])}, []*Node{anonfield(typs[28])})
 +	typs[48] = functype(nil, []*ir.Field{anonfield(typs[33]), anonfield(typs[47])}, []*ir.Field{anonfield(typs[28])})
  	typs[49] = types.NewSlice(typs[0])
 -	typs[50] = functype(nil, []*Node{anonfield(typs[33]), anonfield(typs[28])}, []*Node{anonfield(typs[49])})
 +	typs[50] = functype(nil, []*ir.Field{anonfield(typs[33]), anonfield(typs[28])}, []*ir.Field{anonfield(typs[49])})
  	typs[51] = types.NewArray(typs[46], 32)
  	typs[52] = types.NewPtr(typs[51])
 -	typs[53] = functype(nil, []*Node{anonfield(typs[52]), anonfield(typs[28])}, []*Node{anonfield(typs[47])})
 -	typs[54] = functype(nil, []*Node{anonfield(typs[3]), anonfield(typs[15]), anonfield(typs[3]), anonfield(typs[15]), anonfield(typs[5])}, []*Node{anonfield(typs[15])})
 -	typs[55] = functype(nil, []*Node{anonfield(typs[28]), anonfield(typs[15])}, []*Node{anonfield(typs[46]), anonfield(typs[15])})
 -	typs[56] = functype(nil, []*Node{anonfield(typs[28])}, []*Node{anonfield(typs[15])})
 -	typs[57] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[2])}, []*Node{anonfield(typs[2])})
 -	typs[58] = functype(nil, []*Node{anonfield(typs[2])}, []*Node{anonfield(typs[7])})
 -	typs[59] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[3])}, []*Node{anonfield(typs[2])})
 -	typs[60] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[2])}, []*Node{anonfield(typs[2]), anonfield(typs[6])})
 -	typs[61] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[1]), anonfield(typs[1])}, nil)
 -	typs[62] = functype(nil, []*Node{anonfield(typs[1])}, nil)
 +	typs[53] = functype(nil, []*ir.Field{anonfield(typs[52]), anonfield(typs[28])}, []*ir.Field{anonfield(typs[47])})
 +	typs[54] = functype(nil, []*ir.Field{anonfield(typs[3]), anonfield(typs[15]), anonfield(typs[3]), anonfield(typs[15]), anonfield(typs[5])}, []*ir.Field{anonfield(typs[15])})
 +	typs[55] = functype(nil, []*ir.Field{anonfield(typs[28]), anonfield(typs[15])}, []*ir.Field{anonfield(typs[46]), anonfield(typs[15])})
 +	typs[56] = functype(nil, []*ir.Field{anonfield(typs[28])}, []*ir.Field{anonfield(typs[15])})
 +	typs[57] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[2])}, []*ir.Field{anonfield(typs[2])})
 +	typs[58] = functype(nil, []*ir.Field{anonfield(typs[2])}, []*ir.Field{anonfield(typs[7])})
 +	typs[59] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[3])}, []*ir.Field{anonfield(typs[2])})
 +	typs[60] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[2])}, []*ir.Field{anonfield(typs[2]), anonfield(typs[6])})
 +	typs[61] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[1]), anonfield(typs[1])}, nil)
 +	typs[62] = functype(nil, []*ir.Field{anonfield(typs[1])}, nil)
  	typs[63] = types.NewPtr(typs[5])
 -	typs[64] = functype(nil, []*Node{anonfield(typs[63]), anonfield(typs[7]), anonfield(typs[7])}, []*Node{anonfield(typs[6])})
 -	typs[65] = types.Types[TUINT32]
 -	typs[66] = functype(nil, nil, []*Node{anonfield(typs[65])})
 +	typs[64] = functype(nil, []*ir.Field{anonfield(typs[63]), anonfield(typs[7]), anonfield(typs[7])}, []*ir.Field{anonfield(typs[6])})
 +	typs[65] = types.Types[types.TUINT32]
 +	typs[66] = functype(nil, nil, []*ir.Field{anonfield(typs[65])})
  	typs[67] = types.NewMap(typs[2], typs[2])
 -	typs[68] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[22]), anonfield(typs[3])}, []*Node{anonfield(typs[67])})
 -	typs[69] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[15]), anonfield(typs[3])}, []*Node{anonfield(typs[67])})
 -	typs[70] = functype(nil, nil, []*Node{anonfield(typs[67])})
 -	typs[71] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3])}, []*Node{anonfield(typs[3])})
 -	typs[72] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[2])}, []*Node{anonfield(typs[3])})
 -	typs[73] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3]), anonfield(typs[1])}, []*Node{anonfield(typs[3])})
 -	typs[74] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3])}, []*Node{anonfield(typs[3]), anonfield(typs[6])})
 -	typs[75] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[2])}, []*Node{anonfield(typs[3]), anonfield(typs[6])})
 -	typs[76] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3]), anonfield(typs[1])}, []*Node{anonfield(typs[3]), anonfield(typs[6])})
 -	typs[77] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3])}, nil)
 -	typs[78] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[2])}, nil)
 -	typs[79] = functype(nil, []*Node{anonfield(typs[3])}, nil)
 -	typs[80] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[67])}, nil)
 +	typs[68] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[22]), anonfield(typs[3])}, []*ir.Field{anonfield(typs[67])})
 +	typs[69] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[15]), anonfield(typs[3])}, []*ir.Field{anonfield(typs[67])})
 +	typs[70] = functype(nil, nil, []*ir.Field{anonfield(typs[67])})
 +	typs[71] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3])}, []*ir.Field{anonfield(typs[3])})
 +	typs[72] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[2])}, []*ir.Field{anonfield(typs[3])})
 +	typs[73] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3]), anonfield(typs[1])}, []*ir.Field{anonfield(typs[3])})
 +	typs[74] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3])}, []*ir.Field{anonfield(typs[3]), anonfield(typs[6])})
 +	typs[75] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[2])}, []*ir.Field{anonfield(typs[3]), anonfield(typs[6])})
 +	typs[76] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3]), anonfield(typs[1])}, []*ir.Field{anonfield(typs[3]), anonfield(typs[6])})
 +	typs[77] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[3])}, nil)
 +	typs[78] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[67]), anonfield(typs[2])}, nil)
 +	typs[79] = functype(nil, []*ir.Field{anonfield(typs[3])}, nil)
 +	typs[80] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[67])}, nil)
  	typs[81] = types.NewChan(typs[2], types.Cboth)
 -	typs[82] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[22])}, []*Node{anonfield(typs[81])})
 -	typs[83] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[15])}, []*Node{anonfield(typs[81])})
 +	typs[82] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[22])}, []*ir.Field{anonfield(typs[81])})
 +	typs[83] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[15])}, []*ir.Field{anonfield(typs[81])})
  	typs[84] = types.NewChan(typs[2], types.Crecv)
 -	typs[85] = functype(nil, []*Node{anonfield(typs[84]), anonfield(typs[3])}, nil)
 -	typs[86] = functype(nil, []*Node{anonfield(typs[84]), anonfield(typs[3])}, []*Node{anonfield(typs[6])})
 +	typs[85] = functype(nil, []*ir.Field{anonfield(typs[84]), anonfield(typs[3])}, nil)
 +	typs[86] = functype(nil, []*ir.Field{anonfield(typs[84]), anonfield(typs[3])}, []*ir.Field{anonfield(typs[6])})
  	typs[87] = types.NewChan(typs[2], types.Csend)
 -	typs[88] = functype(nil, []*Node{anonfield(typs[87]), anonfield(typs[3])}, nil)
 +	typs[88] = functype(nil, []*ir.Field{anonfield(typs[87]), anonfield(typs[3])}, nil)
  	typs[89] = types.NewArray(typs[0], 3)
 -	typs[90] = tostruct([]*Node{namedfield("enabled", typs[6]), namedfield("pad", typs[89]), namedfield("needed", typs[6]), namedfield("cgo", typs[6]), namedfield("alignme", typs[24])})
 -	typs[91] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[3]), anonfield(typs[3])}, nil)
 -	typs[92] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[3])}, nil)
 -	typs[93] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[3]), anonfield(typs[15]), anonfield(typs[3]), anonfield(typs[15])}, []*Node{anonfield(typs[15])})
 -	typs[94] = functype(nil, []*Node{anonfield(typs[87]), anonfield(typs[3])}, []*Node{anonfield(typs[6])})
 -	typs[95] = functype(nil, []*Node{anonfield(typs[3]), anonfield(typs[84])}, []*Node{anonfield(typs[6])})
 +	typs[90] = tostruct([]*ir.Field{namedfield("enabled", typs[6]), namedfield("pad", typs[89]), namedfield("needed", typs[6]), namedfield("cgo", typs[6]), namedfield("alignme", typs[24])})
 +	typs[91] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[3]), anonfield(typs[3])}, nil)
 +	typs[92] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[3])}, nil)
 +	typs[93] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[3]), anonfield(typs[15]), anonfield(typs[3]), anonfield(typs[15])}, []*ir.Field{anonfield(typs[15])})
 +	typs[94] = functype(nil, []*ir.Field{anonfield(typs[87]), anonfield(typs[3])}, []*ir.Field{anonfield(typs[6])})
 +	typs[95] = functype(nil, []*ir.Field{anonfield(typs[3]), anonfield(typs[84])}, []*ir.Field{anonfield(typs[6])})
  	typs[96] = types.NewPtr(typs[6])
 -	typs[97] = functype(nil, []*Node{anonfield(typs[3]), anonfield(typs[96]), anonfield(typs[84])}, []*Node{anonfield(typs[6])})
 -	typs[98] = functype(nil, []*Node{anonfield(typs[63])}, nil)
 -	typs[99] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[1]), anonfield(typs[63]), anonfield(typs[15]), anonfield(typs[15]), anonfield(typs[6])}, []*Node{anonfield(typs[15]), anonfield(typs[6])})
 -	typs[100] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[15]), anonfield(typs[15])}, []*Node{anonfield(typs[7])})
 -	typs[101] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[22]), anonfield(typs[22])}, []*Node{anonfield(typs[7])})
 -	typs[102] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[15]), anonfield(typs[15]), anonfield(typs[7])}, []*Node{anonfield(typs[7])})
 +	typs[97] = functype(nil, []*ir.Field{anonfield(typs[3]), anonfield(typs[96]), anonfield(typs[84])}, []*ir.Field{anonfield(typs[6])})
 +	typs[98] = functype(nil, []*ir.Field{anonfield(typs[63])}, nil)
 +	typs[99] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[1]), anonfield(typs[63]), anonfield(typs[15]), anonfield(typs[15]), anonfield(typs[6])}, []*ir.Field{anonfield(typs[15]), anonfield(typs[6])})
 +	typs[100] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[15]), anonfield(typs[15])}, []*ir.Field{anonfield(typs[7])})
 +	typs[101] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[22]), anonfield(typs[22])}, []*ir.Field{anonfield(typs[7])})
 +	typs[102] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[15]), anonfield(typs[15]), anonfield(typs[7])}, []*ir.Field{anonfield(typs[7])})
  	typs[103] = types.NewSlice(typs[2])
 -	typs[104] = functype(nil, []*Node{anonfield(typs[1]), anonfield(typs[103]), anonfield(typs[15])}, []*Node{anonfield(typs[103])})
 -	typs[105] = functype(nil, []*Node{anonfield(typs[3]), anonfield(typs[3]), anonfield(typs[5])}, nil)
 -	typs[106] = functype(nil, []*Node{anonfield(typs[7]), anonfield(typs[5])}, nil)
 -	typs[107] = functype(nil, []*Node{anonfield(typs[3]), anonfield(typs[3]), anonfield(typs[5])}, []*Node{anonfield(typs[6])})
 -	typs[108] = functype(nil, []*Node{anonfield(typs[3]), anonfield(typs[3])}, []*Node{anonfield(typs[6])})
 -	typs[109] = functype(nil, []*Node{anonfield(typs[7]), anonfield(typs[7])}, []*Node{anonfield(typs[6])})
 -	typs[110] = functype(nil, []*Node{anonfield(typs[7]), anonfield(typs[5]), anonfield(typs[5])}, []*Node{anonfield(typs[5])})
 -	typs[111] = functype(nil, []*Node{anonfield(typs[7]), anonfield(typs[5])}, []*Node{anonfield(typs[5])})
 -	typs[112] = functype(nil, []*Node{anonfield(typs[22]), anonfield(typs[22])}, []*Node{anonfield(typs[22])})
 -	typs[113] = functype(nil, []*Node{anonfield(typs[24]), anonfield(typs[24])}, []*Node{anonfield(typs[24])})
 -	typs[114] = functype(nil, []*Node{anonfield(typs[20])}, []*Node{anonfield(typs[22])})
 -	typs[115] = functype(nil, []*Node{anonfield(typs[20])}, []*Node{anonfield(typs[24])})
 -	typs[116] = functype(nil, []*Node{anonfield(typs[20])}, []*Node{anonfield(typs[65])})
 -	typs[117] = functype(nil, []*Node{anonfield(typs[22])}, []*Node{anonfield(typs[20])})
 -	typs[118] = functype(nil, []*Node{anonfield(typs[24])}, []*Node{anonfield(typs[20])})
 -	typs[119] = functype(nil, []*Node{anonfield(typs[65])}, []*Node{anonfield(typs[20])})
 -	typs[120] = functype(nil, []*Node{anonfield(typs[26]), anonfield(typs[26])}, []*Node{anonfield(typs[26])})
 -	typs[121] = functype(nil, []*Node{anonfield(typs[5]), anonfield(typs[5])}, nil)
 -	typs[122] = functype(nil, []*Node{anonfield(typs[5]), anonfield(typs[5]), anonfield(typs[5])}, nil)
 -	typs[123] = functype(nil, []*Node{anonfield(typs[7]), anonfield(typs[1]), anonfield(typs[5])}, nil)
 +	typs[104] = functype(nil, []*ir.Field{anonfield(typs[1]), anonfield(typs[103]), anonfield(typs[15])}, []*ir.Field{anonfield(typs[103])})
 +	typs[105] = functype(nil, []*ir.Field{anonfield(typs[3]), anonfield(typs[3]), anonfield(typs[5])}, nil)
 +	typs[106] = functype(nil, []*ir.Field{anonfield(typs[7]), anonfield(typs[5])}, nil)
 +	typs[107] = functype(nil, []*ir.Field{anonfield(typs[3]), anonfield(typs[3]), anonfield(typs[5])}, []*ir.Field{anonfield(typs[6])})
 +	typs[108] = functype(nil, []*ir.Field{anonfield(typs[3]), anonfield(typs[3])}, []*ir.Field{anonfield(typs[6])})
 +	typs[109] = functype(nil, []*ir.Field{anonfield(typs[7]), anonfield(typs[7])}, []*ir.Field{anonfield(typs[6])})
 +	typs[110] = functype(nil, []*ir.Field{anonfield(typs[7]), anonfield(typs[5]), anonfield(typs[5])}, []*ir.Field{anonfield(typs[5])})
 +	typs[111] = functype(nil, []*ir.Field{anonfield(typs[7]), anonfield(typs[5])}, []*ir.Field{anonfield(typs[5])})
 +	typs[112] = functype(nil, []*ir.Field{anonfield(typs[22]), anonfield(typs[22])}, []*ir.Field{anonfield(typs[22])})
 +	typs[113] = functype(nil, []*ir.Field{anonfield(typs[24]), anonfield(typs[24])}, []*ir.Field{anonfield(typs[24])})
 +	typs[114] = functype(nil, []*ir.Field{anonfield(typs[20])}, []*ir.Field{anonfield(typs[22])})
 +	typs[115] = functype(nil, []*ir.Field{anonfield(typs[20])}, []*ir.Field{anonfield(typs[24])})
 +	typs[116] = functype(nil, []*ir.Field{anonfield(typs[20])}, []*ir.Field{anonfield(typs[65])})
 +	typs[117] = functype(nil, []*ir.Field{anonfield(typs[22])}, []*ir.Field{anonfield(typs[20])})
 +	typs[118] = functype(nil, []*ir.Field{anonfield(typs[24])}, []*ir.Field{anonfield(typs[20])})
 +	typs[119] = functype(nil, []*ir.Field{anonfield(typs[65])}, []*ir.Field{anonfield(typs[20])})
 +	typs[120] = functype(nil, []*ir.Field{anonfield(typs[26]), anonfield(typs[26])}, []*ir.Field{anonfield(typs[26])})
 +	typs[121] = functype(nil, []*ir.Field{anonfield(typs[5]), anonfield(typs[5])}, nil)
- 	typs[122] = functype(nil, []*ir.Field{anonfield(typs[7]), anonfield(typs[1]), anonfield(typs[5])}, nil)
- 	typs[123] = types.NewSlice(typs[7])
- 	typs[124] = functype(nil, []*ir.Field{anonfield(typs[7]), anonfield(typs[123])}, nil)
- 	typs[125] = types.Types[types.TUINT8]
- 	typs[126] = functype(nil, []*ir.Field{anonfield(typs[125]), anonfield(typs[125])}, nil)
- 	typs[127] = types.Types[types.TUINT16]
- 	typs[128] = functype(nil, []*ir.Field{anonfield(typs[127]), anonfield(typs[127])}, nil)
- 	typs[129] = functype(nil, []*ir.Field{anonfield(typs[65]), anonfield(typs[65])}, nil)
- 	typs[130] = functype(nil, []*ir.Field{anonfield(typs[24]), anonfield(typs[24])}, nil)
++	typs[122] = functype(nil, []*ir.Field{anonfield(typs[5]), anonfield(typs[5]), anonfield(typs[5])}, nil)
++	typs[123] = functype(nil, []*ir.Field{anonfield(typs[7]), anonfield(typs[1]), anonfield(typs[5])}, nil)
+ 	typs[124] = types.NewSlice(typs[7])
 -	typs[125] = functype(nil, []*Node{anonfield(typs[7]), anonfield(typs[124])}, nil)
 -	typs[126] = types.Types[TUINT8]
 -	typs[127] = functype(nil, []*Node{anonfield(typs[126]), anonfield(typs[126])}, nil)
 -	typs[128] = types.Types[TUINT16]
 -	typs[129] = functype(nil, []*Node{anonfield(typs[128]), anonfield(typs[128])}, nil)
 -	typs[130] = functype(nil, []*Node{anonfield(typs[65]), anonfield(typs[65])}, nil)
 -	typs[131] = functype(nil, []*Node{anonfield(typs[24]), anonfield(typs[24])}, nil)
++	typs[125] = functype(nil, []*ir.Field{anonfield(typs[7]), anonfield(typs[124])}, nil)
++	typs[126] = types.Types[types.TUINT8]
++	typs[127] = functype(nil, []*ir.Field{anonfield(typs[126]), anonfield(typs[126])}, nil)
++	typs[128] = types.Types[types.TUINT16]
++	typs[129] = functype(nil, []*ir.Field{anonfield(typs[128]), anonfield(typs[128])}, nil)
++	typs[130] = functype(nil, []*ir.Field{anonfield(typs[65]), anonfield(typs[65])}, nil)
++	typs[131] = functype(nil, []*ir.Field{anonfield(typs[24]), anonfield(typs[24])}, nil)
  	return typs[:]
  }
diff --cc src/cmd/compile/internal/gc/ssa.go
index 9539e9cc8a,65b9291b76..f13c45c2a6
--- a/src/cmd/compile/internal/gc/ssa.go
+++ b/src/cmd/compile/internal/gc/ssa.go
@@@ -965,8 -967,46 +966,46 @@@ func (s *state) newValueOrSfCall2(op ss
  	return s.newValue2(op, t, arg0, arg1)
  }
  
- func (s *state) instrument(t *types.Type, addr *ssa.Value, wr bool) {
- 	if !s.curfn.InstrumentBody() {
+ type instrumentKind uint8
+ 
+ const (
+ 	instrumentRead = iota
+ 	instrumentWrite
+ 	instrumentMove
+ )
+ 
+ func (s *state) instrument(t *types.Type, addr *ssa.Value, kind instrumentKind) {
+ 	s.instrument2(t, addr, nil, kind)
+ }
+ 
+ // instrumentFields instruments a read/write operation on addr.
+ // If it is instrumenting for MSAN and t is a struct type, it instruments
+ // operation for each field, instead of for the whole struct.
+ func (s *state) instrumentFields(t *types.Type, addr *ssa.Value, kind instrumentKind) {
 -	if !flag_msan || !t.IsStruct() {
++	if !base.Flag.MSan || !t.IsStruct() {
+ 		s.instrument(t, addr, kind)
+ 		return
+ 	}
+ 	for _, f := range t.Fields().Slice() {
+ 		if f.Sym.IsBlank() {
+ 			continue
+ 		}
+ 		offptr := s.newValue1I(ssa.OpOffPtr, types.NewPtr(f.Type), f.Offset, addr)
+ 		s.instrumentFields(f.Type, offptr, kind)
+ 	}
+ }
+ 
+ func (s *state) instrumentMove(t *types.Type, dst, src *ssa.Value) {
 -	if flag_msan {
++	if base.Flag.MSan {
+ 		s.instrument2(t, dst, src, instrumentMove)
+ 	} else {
+ 		s.instrument(t, src, instrumentRead)
+ 		s.instrument(t, dst, instrumentWrite)
+ 	}
+ }
+ 
+ func (s *state) instrument2(t *types.Type, addr, addr2 *ssa.Value, kind instrumentKind) {
 -	if !s.curfn.Func.InstrumentBody() {
++	if !s.curfn.Func().InstrumentBody() {
  		return
  	}
  
@@@ -982,35 -1022,56 +1021,56 @@@
  	var fn *obj.LSym
  	needWidth := false
  
+ 	if addr2 != nil && kind != instrumentMove {
+ 		panic("instrument2: non-nil addr2 for non-move instrumentation")
+ 	}
+ 
 -	if flag_msan {
 +	if base.Flag.MSan {
- 		fn = msanread
- 		if wr {
+ 		switch kind {
+ 		case instrumentRead:
+ 			fn = msanread
+ 		case instrumentWrite:
  			fn = msanwrite
+ 		case instrumentMove:
+ 			fn = msanmove
+ 		default:
+ 			panic("unreachable")
  		}
  		needWidth = true
 -	} else if flag_race && t.NumComponents(types.CountBlankFields) > 1 {
 +	} else if base.Flag.Race && t.NumComponents(types.CountBlankFields) > 1 {
  		// for composite objects we have to write every address
  		// because a write might happen to any subobject.
  		// composites with only one element don't have subobjects, though.
- 		fn = racereadrange
- 		if wr {
+ 		switch kind {
+ 		case instrumentRead:
+ 			fn = racereadrange
+ 		case instrumentWrite:
  			fn = racewriterange
+ 		default:
+ 			panic("unreachable")
  		}
  		needWidth = true
 -	} else if flag_race {
 +	} else if base.Flag.Race {
  		// for non-composite objects we can write just the start
  		// address, as any write must write the first byte.
- 		fn = raceread
- 		if wr {
+ 		switch kind {
+ 		case instrumentRead:
+ 			fn = raceread
+ 		case instrumentWrite:
  			fn = racewrite
+ 		default:
+ 			panic("unreachable")
  		}
  	} else {
  		panic("unreachable")
  	}
  
  	args := []*ssa.Value{addr}
+ 	if addr2 != nil {
+ 		args = append(args, addr2)
+ 	}
  	if needWidth {
 -		args = append(args, s.constInt(types.Types[TUINTPTR], w))
 +		args = append(args, s.constInt(types.Types[types.TUINTPTR], w))
  	}
  	s.rtcall(fn, true, nil, args...)
  }
@@@ -1029,18 -1090,17 +1089,17 @@@ func (s *state) store(t *types.Type, ds
  }
  
  func (s *state) zero(t *types.Type, dst *ssa.Value) {
- 	s.instrument(t, dst, true)
+ 	s.instrument(t, dst, instrumentWrite)
  	store := s.newValue2I(ssa.OpZero, types.TypeMem, t.Size(), dst, s.mem())
  	store.Aux = t
 -	s.vars[&memVar] = store
 +	s.vars[memVar] = store
  }
  
  func (s *state) move(t *types.Type, dst, src *ssa.Value) {
- 	s.instrument(t, src, false)
- 	s.instrument(t, dst, true)
+ 	s.instrumentMove(t, dst, src)
  	store := s.newValue3I(ssa.OpMove, types.TypeMem, t.Size(), dst, src, s.mem())
  	store.Aux = t
 -	s.vars[&memVar] = store
 +	s.vars[memVar] = store
  }
  
  // stmtList converts the statement list n to SSA and adds it to s.
