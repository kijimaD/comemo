commit 946167906ed8646c433c257b074a10e01f0a7dab
Author: Paul E. Murphy <murp@ibm.com>
Date:   Tue Mar 22 11:52:02 2022 -0500

    runtime: make static/dynamic startup detection work with musl on ppc64le
    
    The glibc loader explicitly sets the first doubleword on the stack (R1)
    to $0 to indicate it was dynamically loaded.
    
    An ELFv2 ABI compliant loader will set R3/R4 to argc/argv when starting
    the process, and R13 to TLS. musl is not compliant. Instead it passes
    argc/argv like the kernel, but R3/R4 are in an undefined state and R13
    is valid.
    
    With the knowledge above, the startup code can be modified to
    dynamically handle all three cases when linked internally.
    
    Fixes #51787
    
    Change-Id: I5de33862c161900d9161817388bbc13a65fdc69c
    Reviewed-on: https://go-review.googlesource.com/c/go/+/394654
    Reviewed-by: Cherry Mui <cherryyz@google.com>
    Run-TryBot: Paul Murphy <murp@ibm.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Trust: Paul Murphy <murp@ibm.com>
    Trust: Lynn Boger <laboger@linux.vnet.ibm.com>

 src/runtime/rt0_linux_ppc64le.s | 32 +++++++++++++++++++++-----------
 1 file changed, 21 insertions(+), 11 deletions(-)
