commit a291e998c1c629af5a17ff431bd9380cb1530ba0
Author: Robert Griesemer <gri@golang.org>
Date:   Thu Mar 25 10:01:51 2010 -0700

    bug264: test case for issue 692
    
    R=r
    CC=golang-dev
    https://golang.org/cl/715042
---
 test/bugs/bug264.go | 49 +++++++++++++++++++++++++++++++++++++++++++++++++
 test/golden.out     |  9 +++++++++
 2 files changed, 58 insertions(+)

diff --git a/test/bugs/bug264.go b/test/bugs/bug264.go
new file mode 100644
index 0000000000..110f42e20e
--- /dev/null
+++ b/test/bugs/bug264.go
@@ -0,0 +1,49 @@
+// $G $D/$F.go && $L $F.$A && ./$A.out
+
+// Copyright 2010 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Test case for http://code.google.com/p/go/issues/detail?id=692
+
+package main
+
+import "fmt"
+
+var fooCount = 0
+var barCount = 0
+var balCount = 0
+
+func foo() (int, int) {
+	fooCount++
+	fmt.Println("foo")
+	return 0, 0
+}
+
+func bar() (int, int) {
+	barCount++
+	fmt.Println("bar")
+	return 0, 0
+}
+
+func bal() (int, int) {
+	balCount++
+	fmt.Println("bal")
+	return 0, 0
+}
+
+var a, b = foo() // foo is called once
+var c, _ = bar() // bar is called twice
+var _, _ = bal() // bal is called twice
+
+func main() {
+	if fooCount != 1 {
+		panic("BUG: fooCount != 1")
+	}
+	if barCount != 1 {
+		panic("BUG: barCount != 1")
+	}
+	if balCount != 1 {
+		panic("BUG: balCount != 1")
+	}
+}
diff --git a/test/golden.out b/test/golden.out
index 036519de70..a370e06ba7 100644
--- a/test/golden.out
+++ b/test/golden.out
@@ -182,3 +182,12 @@ panic PC=xxx
 =========== bugs/bug260.go
 FAIL
 BUG: bug260 failed
+
+=========== bugs/bug264.go
+foo
+bar
+bar
+bal
+bal
+BUG: barCount != 1
+panic PC=xxx
