commit e1db508ffdcfbb78a73c6df7e3d0a6b0cb6f001a
Author: Austin Clements <austin@google.com>
Date:   Fri Oct 31 16:58:12 2014 -0400

    [dev.power64] runtime: fix gcinfo_test on power64x
    
    The GC info masks for slices and strings were changed in
    commit caab29a25f68, but the reference masks used by
    gcinfo_test for power64x hadn't caught up.  Now they're
    identical to amd64, so this CL fixes this test by combining
    the reference masks for these platforms.
    
    LGTM=rsc
    R=rsc, dave
    CC=golang-codereviews
    https://golang.org/cl/162620044
---
 src/runtime/gcinfo_test.go | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

diff --git a/src/runtime/gcinfo_test.go b/src/runtime/gcinfo_test.go
index 7d432983b1..2c6d4d662f 100644
--- a/src/runtime/gcinfo_test.go
+++ b/src/runtime/gcinfo_test.go
@@ -137,7 +137,7 @@ func infoBigStruct() []byte {
 			BitsScalar, BitsScalar, BitsScalar, BitsScalar, // t int; y uint16; u uint64
 			BitsPointer, BitsDead, // i string
 		}
-	case "amd64":
+	case "amd64", "power64", "power64le":
 		return []byte{
 			BitsPointer,                        // q *int
 			BitsScalar, BitsScalar, BitsScalar, // w byte; e [17]byte
@@ -153,12 +153,6 @@ func infoBigStruct() []byte {
 			BitsScalar, BitsScalar, BitsDead, BitsScalar, BitsScalar, // t int; y uint16; u uint64
 			BitsPointer, BitsDead, // i string
 		}
-	case "power64", "power64le":
-		return []byte{
-			BitsPointer, BitsScalar, BitsScalar, BitsScalar,
-			BitsMultiWord, BitsSlice, BitsScalar, BitsScalar,
-			BitsScalar, BitsScalar, BitsMultiWord, BitsString,
-		}
 	default:
 		panic("unknown arch")
 	}
