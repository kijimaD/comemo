commit a59cb5109d49ac0dc09337449b9c7760ecc66c0e
Author: Robert Griesemer <gri@golang.org>
Date:   Thu Jan 28 14:29:25 2021 -0800

    [dev.typeparams] cmd/compile/internal/types2: handle untyped constant arithmetic overflow
    
    Factor out the existing "constant representation" check after
    untyped constant arithmetic and combine with an overflow check.
    
    Use a better heuristic for determining the error position if we
    know the error is for a constant operand that is the result of an
    arithmetic expression.
    
    Related cleanups.
    
    With this change, untyped constant arithmetic reports an error
    when (integer) constants become too large (> 2048 bits). Before,
    such arithmetic was only limited by space and time.
    
    Change-Id: Id3cea66c8ba697ff4c7fd1e848f350d9713e3c75
    Reviewed-on: https://go-review.googlesource.com/c/go/+/287832
    Trust: Robert Griesemer <gri@golang.org>
    Run-TryBot: Robert Griesemer <gri@golang.org>
    Reviewed-by: Robert Findley <rfindley@google.com>

 src/cmd/compile/internal/types2/expr.go            | 145 +++++++++++++--------
 .../internal/types2/fixedbugs/issue20583.src       |   2 +-
 src/cmd/compile/internal/types2/stdlib_test.go     |   1 -
 src/cmd/compile/internal/types2/stmt.go            |   2 +-
 .../compile/internal/types2/testdata/const0.src    |   8 ++
 test/run.go                                        |   2 +-
 6 files changed, 99 insertions(+), 61 deletions(-)
