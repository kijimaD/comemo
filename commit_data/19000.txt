commit 2f3776ac2765a6d9cede9894efafb980c670ddb1
Author: Andrew Gerrand <adg@golang.org>
Date:   Wed Apr 2 08:23:35 2014 +1100

    time: increase timeout in negative sleep duration test
    
    There's enough jitter in the scheduler on overloaded machines
    that 25ms is not enough.
    
    LGTM=dave
    R=golang-codereviews, gobot, rsc, dave
    CC=golang-codereviews
    https://golang.org/cl/83300044
---
 src/pkg/time/sleep_test.go | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/src/pkg/time/sleep_test.go b/src/pkg/time/sleep_test.go
index ce2dc36322..03f8e732c9 100644
--- a/src/pkg/time/sleep_test.go
+++ b/src/pkg/time/sleep_test.go
@@ -347,19 +347,18 @@ func TestReset(t *testing.T) {
 // Test that sleeping for an interval so large it overflows does not
 // result in a short sleep duration.
 func TestOverflowSleep(t *testing.T) {
-	const timeout = 25 * Millisecond
 	const big = Duration(int64(1<<63 - 1))
 	select {
 	case <-After(big):
 		t.Fatalf("big timeout fired")
-	case <-After(timeout):
+	case <-After(25 * Millisecond):
 		// OK
 	}
 	const neg = Duration(-1 << 63)
 	select {
 	case <-After(neg):
 		// OK
-	case <-After(timeout):
+	case <-After(1 * Second):
 		t.Fatalf("negative timeout didn't fire")
 	}
 }
