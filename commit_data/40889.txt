commit 0ca4f6be35d2abf54128b57c3aa1a1fcbd5adfe3
Author: David Finkel <david.finkel@gmail.com>
Date:   Wed Jul 31 09:10:28 2019 -0400

    runtime/pprof: Mention goroutine label heritability
    
    Document goroutine label inheritance. Goroutine labels are copied upon
    goroutine creation and there is a test enforcing this, but it was not
    mentioned in the docstrings for `Do` or `SetGoroutineLabels`.
    
    Add notes to both of those functions' docstrings so it's clear that one
    does not need to set labels as soon as a new goroutine is spawned if
    they want to propagate tags.
    
    Updates #32223
    Updates #23458
    
    Change-Id: Idfa33031af0104b884b03ca855ac82b98500c8b4
    Reviewed-on: https://go-review.googlesource.com/c/go/+/189317
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/runtime/pprof/runtime.go | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/runtime/pprof/runtime.go b/src/runtime/pprof/runtime.go
index e6aace83e2..b71bbad9a6 100644
--- a/src/runtime/pprof/runtime.go
+++ b/src/runtime/pprof/runtime.go
@@ -16,6 +16,7 @@ func runtime_setProfLabel(labels unsafe.Pointer)
 func runtime_getProfLabel() unsafe.Pointer
 
 // SetGoroutineLabels sets the current goroutine's labels to match ctx.
+// A new goroutine inherits the labels of the goroutine that created it.
 // This is a lower-level API than Do, which should be used instead when possible.
 func SetGoroutineLabels(ctx context.Context) {
 	ctxLabels, _ := ctx.Value(labelContextKey{}).(*labelMap)
@@ -24,6 +25,7 @@ func SetGoroutineLabels(ctx context.Context) {
 
 // Do calls f with a copy of the parent context with the
 // given labels added to the parent's label map.
+// Goroutines spawned while executing f will inherit the augmented label-set.
 // Each key/value pair in labels is inserted into the label map in the
 // order provided, overriding any previous value for the same key.
 // The augmented label map will be set for the duration of the call to f
