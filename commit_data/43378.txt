commit fde6868ac3f3f049247084f2c76efec3555a2395
Author: Bryan C. Mills <bcmills@google.com>
Date:   Mon Mar 30 15:01:33 2020 -0400

    os/signal: in TestStop, skip the final "unexpected signal" check for SIGUSR1 on Android
    
    In CL 226138, I updated TestStop to have more uniform behavior for its signals.
    However, that test seems to always fail for SIGUSR1 on the Android ARM builders.
    
    I'm not sure what's special about Android for this particular case,
    but let's skip the test to unbreak the builders while I investigate.
    
    For #38165
    Updates #33174
    
    Change-Id: I35a70346cd9757a92acd505a020bf95e6871405c
    Reviewed-on: https://go-review.googlesource.com/c/go/+/226458
    Run-TryBot: Bryan C. Mills <bcmills@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/os/signal/signal_test.go | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/os/signal/signal_test.go b/src/os/signal/signal_test.go
index a85d7606c8..bec5c1599e 100644
--- a/src/os/signal/signal_test.go
+++ b/src/os/signal/signal_test.go
@@ -355,6 +355,9 @@ func TestStop(t *testing.T) {
 			quiesce()
 			select {
 			case s := <-c:
+				if sig == syscall.SIGUSR1 && s == syscall.SIGUSR1 && runtime.GOOS == "android" {
+					testenv.SkipFlaky(t, 38165)
+				}
 				t.Fatalf("unexpected signal %v", s)
 			default:
 				// nothing to read - good
