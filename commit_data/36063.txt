commit 45ce10fa3a95cd949458c012d44f4e50b72acabd
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Sat Mar 31 20:18:01 2018 -0700

    cmd/compile: use newfuncname in dclfunc
    
    Eliminates an inconsistency between user functions and generated
    functions.
    
    Passes toolstash-check.
    
    Change-Id: I946b511ca81d88a0024b5932cb50f3d8b9e808f4
    Reviewed-on: https://go-review.googlesource.com/103863
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Robert Griesemer <gri@golang.org>
---
 src/cmd/compile/internal/gc/bexport.go | 2 +-
 src/cmd/compile/internal/gc/dcl.go     | 2 +-
 src/cmd/compile/internal/gc/inl.go     | 4 ----
 3 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/src/cmd/compile/internal/gc/bexport.go b/src/cmd/compile/internal/gc/bexport.go
index 92dc06fc35..a1bb7f84d3 100644
--- a/src/cmd/compile/internal/gc/bexport.go
+++ b/src/cmd/compile/internal/gc/bexport.go
@@ -676,7 +676,7 @@ func fileLine(n *Node) (file string, line int) {
 }
 
 func isInlineable(n *Node) bool {
-	if exportInlined && n != nil && n.Func != nil {
+	if exportInlined && n != nil {
 		// When lazily typechecking inlined bodies, some
 		// re-exported ones may not have been typechecked yet.
 		// Currently that can leave unresolved ONONAMEs in
diff --git a/src/cmd/compile/internal/gc/dcl.go b/src/cmd/compile/internal/gc/dcl.go
index 1fa68e9f4a..147664e8dd 100644
--- a/src/cmd/compile/internal/gc/dcl.go
+++ b/src/cmd/compile/internal/gc/dcl.go
@@ -1060,7 +1060,7 @@ func dclfunc(sym *types.Sym, tfn *Node) *Node {
 	}
 
 	fn := nod(ODCLFUNC, nil, nil)
-	fn.Func.Nname = newname(sym)
+	fn.Func.Nname = newfuncname(sym)
 	fn.Func.Nname.Name.Defn = fn
 	fn.Func.Nname.Name.Param.Ntype = tfn
 	declare(fn.Func.Nname, PFUNC)
diff --git a/src/cmd/compile/internal/gc/inl.go b/src/cmd/compile/internal/gc/inl.go
index d622307c63..cab33f17f4 100644
--- a/src/cmd/compile/internal/gc/inl.go
+++ b/src/cmd/compile/internal/gc/inl.go
@@ -198,10 +198,6 @@ func inlFlood(n *Node) {
 		Fatalf("inlFlood: unexpected %v, %v, %v", n, n.Op, n.Class())
 	}
 	if n.Func == nil {
-		// TODO(mdempsky): Should init have a Func too?
-		if n.Sym.Name == "init" {
-			return
-		}
 		Fatalf("inlFlood: missing Func on %v", n)
 	}
 	if n.Func.Inl.Len() == 0 {
