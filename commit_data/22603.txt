commit 181e26b9fa3c85ca5a512a51278b3f22f6e64dc9
Author: Russ Cox <rsc@golang.org>
Date:   Fri Apr 17 00:21:30 2015 -0400

    runtime: replace func-based write barrier skipping with type-based
    
    This CL revises CL 7504 to use explicitly uintptr types for the
    struct fields that are going to be updated sometimes without
    write barriers. The result is that the fields are now updated *always*
    without write barriers.
    
    This approach has two important properties:
    
    1) Now the GC never looks at the field, so if the missing reference
    could cause a problem, it will do so all the time, not just when the
    write barrier is missed at just the right moment.
    
    2) Now a write barrier never happens for the field, avoiding the
    (correct) detection of inconsistent write barriers when GODEBUG=wbshadow=1.
    
    Change-Id: Iebd3962c727c0046495cc08914a8dc0808460e0e
    Reviewed-on: https://go-review.googlesource.com/9019
    Reviewed-by: Austin Clements <austin@google.com>
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>

 src/runtime/malloc.go          |   4 +-
 src/runtime/mbarrier.go        |   6 +-
 src/runtime/netpoll.go         |  22 ++-
 src/runtime/netpoll_epoll.go   |  12 +-
 src/runtime/netpoll_kqueue.go  |  11 +-
 src/runtime/netpoll_solaris.go |  12 +-
 src/runtime/netpoll_windows.go |  11 +-
 src/runtime/os1_windows.go     |   3 +-
 src/runtime/os3_plan9.go       |   2 +-
 src/runtime/panic.go           |   4 +-
 src/runtime/proc.go            |   4 +-
 src/runtime/proc1.go           | 315 ++++++++++++++++++++---------------------
 src/runtime/runtime2.go        | 101 +++++++------
 src/runtime/signal_386.go      |   2 +-
 src/runtime/signal_amd64x.go   |   2 +-
 src/runtime/signal_arm.go      |   2 +-
 src/runtime/signal_arm64.go    |   2 +-
 src/runtime/signal_ppc64x.go   |   2 +-
 src/runtime/stack1.go          |   4 +-
 src/runtime/trace.go           |   6 +-
 src/runtime/traceback.go       |   2 +-
 21 files changed, 257 insertions(+), 272 deletions(-)
