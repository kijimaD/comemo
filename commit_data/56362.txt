commit 5e349aca4e3990500c960f7cc24334b54bd0d49a
Author: Bryan C. Mills <bcmills@google.com>
Date:   Mon May 1 17:05:05 2023 -0400

    runtime: add test skips for ios
    
    For #59912.
    For #59913.
    Updates #49182.
    
    Change-Id: I3fcdfaca3a4f7120404e7a36b4fb5f0e57dd8114
    Reviewed-on: https://go-review.googlesource.com/c/go/+/491095
    TryBot-Bypass: Bryan Mills <bcmills@google.com>
    Run-TryBot: Bryan Mills <bcmills@google.com>
    Auto-Submit: Bryan Mills <bcmills@google.com>
    Reviewed-by: Austin Clements <austin@google.com>
---
 src/runtime/crash_cgo_test.go | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/runtime/crash_cgo_test.go b/src/runtime/crash_cgo_test.go
index 258c0ffc17..f771493b1a 100644
--- a/src/runtime/crash_cgo_test.go
+++ b/src/runtime/crash_cgo_test.go
@@ -112,6 +112,9 @@ func TestCgoExternalThreadSignal(t *testing.T) {
 
 	got := runTestProg(t, "testprogcgo", "CgoExternalThreadSignal")
 	if want := "OK\n"; got != want {
+		if runtime.GOOS == "ios" && strings.Contains(got, "C signal did not crash as expected") {
+			testenv.SkipFlaky(t, 59913)
+		}
 		t.Fatalf("expected %q, but got:\n%s", want, got)
 	}
 }
@@ -528,6 +531,9 @@ func TestCgoTracebackSigpanic(t *testing.T) {
 		// than injecting a sigpanic.
 		t.Skip("no sigpanic in C on windows")
 	}
+	if runtime.GOOS == "ios" {
+		testenv.SkipFlaky(t, 59912)
+	}
 	t.Parallel()
 	got := runTestProg(t, "testprogcgo", "TracebackSigpanic")
 	t.Log(got)
@@ -650,7 +656,7 @@ func TestSegv(t *testing.T) {
 
 			// No runtime errors like "runtime: unknown pc".
 			switch runtime.GOOS {
-			case "darwin", "illumos", "solaris":
+			case "darwin", "ios", "illumos", "solaris":
 				// Runtime sometimes throws when generating the traceback.
 				testenv.SkipFlaky(t, 49182)
 			case "linux":
