commit aae64f8c8134409c99a3e7a90f963e4ca116df7c
Author: Robert Griesemer <gri@golang.org>
Date:   Sun Nov 8 23:42:00 2009 -0800

    - exit godoc w/o crashing if negative tabwidth is provided
    - minor related cleanups
    
    R=rsc
    http://go/go-review/1025026
---
 src/cmd/godoc/main.go | 19 +++++++++----------
 1 file changed, 9 insertions(+), 10 deletions(-)

diff --git a/src/cmd/godoc/main.go b/src/cmd/godoc/main.go
index 8c0ae7b658..83a05a12f6 100644
--- a/src/cmd/godoc/main.go
+++ b/src/cmd/godoc/main.go
@@ -143,16 +143,13 @@ func main() {
 	flag.Usage = usage;
 	flag.Parse();
 
-	// Check usage first; get usage message out early.
-	switch {
-	case *httpaddr != "":
-		if flag.NArg() != 0 {
-			usage();
-		}
-	default:
-		if flag.NArg() == 0 {
-			usage();
-		}
+	// Check usage: either server and no args, or command line and args
+	if (*httpaddr != "") != (flag.NArg() == 0) {
+		usage();
+	}
+
+	if *tabwidth < 0 {
+		log.Exitf("negative tabwidth %d", *tabwidth);
 	}
 
 	if err := os.Chdir(goroot); err != nil {
@@ -168,8 +165,10 @@ func main() {
 			log.Stderrf("Go Documentation Server\n");
 			log.Stderrf("address = %s\n", *httpaddr);
 			log.Stderrf("goroot = %s\n", goroot);
+			log.Stderrf("cmdroot = %s\n", *cmdroot);
 			log.Stderrf("pkgroot = %s\n", *pkgroot);
 			log.Stderrf("tmplroot = %s\n", *tmplroot);
+			log.Stderrf("tabwidth = %d\n", *tabwidth);
 			handler = loggingHandler(handler);
 		}
 
