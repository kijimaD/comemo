commit a8f8d550e8d221e8bbe290e098e30b660c364ee7
Author: Alex Brainman <alex.brainman@gmail.com>
Date:   Mon Dec 21 17:44:58 2015 +1100

    internal/syscall/windows/registry: adjust TestGetMUIStringValue
    
    Do not check DaylightName if DynamicDaylightTimeDisabled is false.
    
    Fixes #13502
    
    Change-Id: I03e01ec0afdeb0037a5d3ee243674e5a6b559da5
    Reviewed-on: https://go-review.googlesource.com/17998
    Reviewed-by: Yasuhiro MATSUMOTO <mattn.jp@gmail.com>
    Reviewed-by: Russ Cox <rsc@golang.org>
---
 src/internal/syscall/windows/registry/registry_test.go | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/src/internal/syscall/windows/registry/registry_test.go b/src/internal/syscall/windows/registry/registry_test.go
index f63248cc3a..a63c42022d 100644
--- a/src/internal/syscall/windows/registry/registry_test.go
+++ b/src/internal/syscall/windows/registry/registry_test.go
@@ -697,17 +697,19 @@ func TestGetMUIStringValue(t *testing.T) {
 	}
 	defer timezoneK.Close()
 
-	var tests = []struct {
-		key  registry.Key
+	type testType struct {
 		name string
 		want string
-	}{
-		{key: timezoneK, name: "MUI_Std", want: syscall.UTF16ToString(dtzi.StandardName[:])},
-		{key: timezoneK, name: "MUI_Dlt", want: syscall.UTF16ToString(dtzi.DaylightName[:])},
+	}
+	var tests = []testType{
+		{"MUI_Std", syscall.UTF16ToString(dtzi.StandardName[:])},
+	}
+	if dtzi.DynamicDaylightTimeDisabled == 0 {
+		tests = append(tests, testType{"MUI_Dlt", syscall.UTF16ToString(dtzi.DaylightName[:])})
 	}
 
 	for _, test := range tests {
-		got, err := test.key.GetMUIStringValue(test.name)
+		got, err := timezoneK.GetMUIStringValue(test.name)
 		if err != nil {
 			t.Error("GetMUIStringValue:", err)
 		}
