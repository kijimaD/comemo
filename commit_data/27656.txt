commit d636d7907c46b728b07b58669ec1fa1158105579
Author: Rob Pike <r@golang.org>
Date:   Tue Apr 5 15:43:07 2016 -0700

    bytes: add ContainsAny
    
    This function is present in the strings package but missing from bytes,
    and we would like to keep the two packages consistent.
    
    Add it to bytes, and copy the test over as well.
    
    Fixes #15140
    
    Change-Id: I5dbd28da83a9fe741885794ed15f2af2f826cb3c
    Reviewed-on: https://go-review.googlesource.com/21562
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/bytes/bytes.go      |  5 +++++
 src/bytes/bytes_test.go | 27 +++++++++++++++++++++++++++
 2 files changed, 32 insertions(+)

diff --git a/src/bytes/bytes.go b/src/bytes/bytes.go
index 8a4409cb6b..698d881c9d 100644
--- a/src/bytes/bytes.go
+++ b/src/bytes/bytes.go
@@ -83,6 +83,11 @@ func Contains(b, subslice []byte) bool {
 	return Index(b, subslice) != -1
 }
 
+// ContainsAny reports whether any of the UTF-8-encoded Unicode code points in chars are within b.
+func ContainsAny(b []byte, chars string) bool {
+	return IndexAny(b, chars) >= 0
+}
+
 // Index returns the index of the first instance of sep in s, or -1 if sep is not present in s.
 func Index(s, sep []byte) int {
 	n := len(sep)
diff --git a/src/bytes/bytes_test.go b/src/bytes/bytes_test.go
index 1be29d6cc6..40e8d09b59 100644
--- a/src/bytes/bytes_test.go
+++ b/src/bytes/bytes_test.go
@@ -1218,6 +1218,33 @@ func TestContains(t *testing.T) {
 	}
 }
 
+var ContainsAnyTests = []struct {
+	b        []byte
+	substr   string
+	expected bool
+}{
+	{[]byte(""), "", false},
+	{[]byte(""), "a", false},
+	{[]byte(""), "abc", false},
+	{[]byte("a"), "", false},
+	{[]byte("a"), "a", true},
+	{[]byte("aaa"), "a", true},
+	{[]byte("abc"), "xyz", false},
+	{[]byte("abc"), "xcz", true},
+	{[]byte("a☺b☻c☹d"), "uvw☻xyz", true},
+	{[]byte("aRegExp*"), ".(|)*+?^$[]", true},
+	{[]byte(dots + dots + dots), " ", false},
+}
+
+func TestContainsAny(t *testing.T) {
+	for _, ct := range ContainsAnyTests {
+		if ContainsAny(ct.b, ct.substr) != ct.expected {
+			t.Errorf("ContainsAny(%s, %s) = %v, want %v",
+				ct.b, ct.substr, !ct.expected, ct.expected)
+		}
+	}
+}
+
 var makeFieldsInput = func() []byte {
 	x := make([]byte, 1<<20)
 	// Input is ~10% space, ~10% 2-byte UTF-8, rest ASCII non-space.
