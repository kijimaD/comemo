commit 47db3bb443774c0b0df2cab188aa3d76b361dca2
Author: Ian Lance Taylor <iant@golang.org>
Date:   Tue Nov 23 16:30:17 2021 -0800

    runtime: skip TestTimePprof if nanotime calls libc
    
    Fixes #43118
    
    Change-Id: I499bf335904e2b72a2a8876d0368fff5e69aa7fa
    Reviewed-on: https://go-review.googlesource.com/c/go/+/366759
    Trust: Ian Lance Taylor <iant@golang.org>
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Bryan C. Mills <bcmills@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
---
 src/runtime/crash_test.go | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/src/runtime/crash_test.go b/src/runtime/crash_test.go
index 91a1a41ed5..1c28e47ac3 100644
--- a/src/runtime/crash_test.go
+++ b/src/runtime/crash_test.go
@@ -714,6 +714,13 @@ func TestBadTraceback(t *testing.T) {
 }
 
 func TestTimePprof(t *testing.T) {
+	// This test is unreliable on any system in which nanotime
+	// calls into libc.
+	switch runtime.GOOS {
+	case "aix", "darwin", "openbsd", "solaris":
+		t.Skipf("skipping on %s because nanotime calls libc", runtime.GOOS)
+	}
+
 	// Pass GOTRACEBACK for issue #41120 to try to get more
 	// information on timeout.
 	fn := runTestProg(t, "testprog", "TimeProf", "GOTRACEBACK=crash")
