commit 5766553380e958f867a2ea4d75ecfa4514714b6e
Author: Rob Pike <r@golang.org>
Date:   Tue Jun 23 15:20:40 2009 -0700

    fix io.Bytebuffer.Read for new EOF semantics
    
    R=rsc
    DELTA=7  (5 added, 0 deleted, 2 changed)
    OCL=30657
    CL=30659
---
 src/pkg/io/bytebuffer.go | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/pkg/io/bytebuffer.go b/src/pkg/io/bytebuffer.go
index 11c8a1a87d..2c356192e1 100644
--- a/src/pkg/io/bytebuffer.go
+++ b/src/pkg/io/bytebuffer.go
@@ -87,8 +87,13 @@ func (b *ByteBuffer) WriteByte(c byte) os.Error {
 }
 
 // Read reads the next len(p) bytes from the buffer or until the buffer
-// is drained.  The return value n is the number of bytes read; err is always nil.
+// is drained.  The return value n is the number of bytes read.  If the
+// buffer has no data to return, err is os.EOF even if len(p) is zero;
+// otherwise it is nil.
 func (b *ByteBuffer) Read(p []byte) (n int, err os.Error) {
+	if b.off >= len(b.buf) {
+		return 0, os.EOF
+	}
 	m := b.Len();
 	n = len(p);
 
@@ -99,7 +104,7 @@ func (b *ByteBuffer) Read(p []byte) (n int, err os.Error) {
 
 	bytecopy(p, 0, b.buf, b.off, n);
 	b.off += n;
-	return n, nil
+	return n, err
 }
 
 // ReadByte reads and returns the next byte from the buffer.
