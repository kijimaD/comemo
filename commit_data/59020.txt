commit 117164f9e35e34f3d78cf635dd3c8352b2110ca1
Author: Michael Matloob <matloob@golang.org>
Date:   Tue Jan 30 16:47:34 2024 -0500

    cmd/go: add telemetry counters for flag names and subcommand
    
    For #58894
    
    Change-Id: I6b5d5b14be9858f5855eeac0110aa44e762cee03
    Cq-Include-Trybots: luci.golang.try:gotip-linux-amd64-longtest
    Reviewed-on: https://go-review.googlesource.com/c/go/+/559519
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Bryan Mills <bcmills@google.com>
---
 src/cmd/go/main.go | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/cmd/go/main.go b/src/cmd/go/main.go
index 2065c9a157..f62477a839 100644
--- a/src/cmd/go/main.go
+++ b/src/cmd/go/main.go
@@ -97,6 +97,7 @@ func main() {
 
 	flag.Usage = base.Usage
 	flag.Parse()
+	counter.CountFlags("cmd/go:flag-", *flag.CommandLine)
 
 	args := flag.Args()
 	if len(args) < 1 {
@@ -152,6 +153,7 @@ func main() {
 
 	cmd, used := lookupCmd(args)
 	cfg.CmdName = strings.Join(args[:used], " ")
+	counter.Inc("cmd/go:subcommand-" + strings.ReplaceAll(cfg.CmdName, " ", "-"))
 	if len(cmd.Commands) > 0 {
 		if used >= len(args) {
 			help.PrintUsage(os.Stderr, cmd)
@@ -239,6 +241,7 @@ func invoke(cmd *base.Command, args []string) {
 	} else {
 		base.SetFromGOFLAGS(&cmd.Flag)
 		cmd.Flag.Parse(args[1:])
+		counter.CountFlags("cmd/go/"+cmd.Name()+":flag-", cmd.Flag)
 		args = cmd.Flag.Args()
 	}
 
@@ -323,6 +326,7 @@ func handleChdirFlag() {
 		_, dir, _ = strings.Cut(a, "=")
 		os.Args = slices.Delete(os.Args, used, used+1)
 	}
+	counter.Inc("cmd/go:flag-C")
 
 	if err := os.Chdir(dir); err != nil {
 		base.Fatalf("go: %v", err)
