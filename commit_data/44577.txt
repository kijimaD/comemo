commit c2e73fb446bffd02c651e51c6641cc90fd065b70
Author: Than McIntosh <thanm@google.com>
Date:   Tue Jun 23 08:46:36 2020 -0400

    cmd/compile: remove AttrSeenGlobl (use AttrOnList instead)
    
    Minor cleanup: remove the symbol attribute AttrSeenGlobal, since it is
    redundant with the existing attribute AttrOnList (no need to have what
    amounts to a separate flag for checking the same property).
    
    Change-Id: Ia269b64de37c2bb4a2314bbecf3d2091c6d57424
    Reviewed-on: https://go-review.googlesource.com/c/go/+/239477
    Run-TryBot: Than McIntosh <thanm@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/cmd/compile/internal/gc/obj.go | 2 +-
 src/cmd/internal/obj/link.go       | 3 ---
 src/cmd/internal/obj/plist.go      | 4 ----
 3 files changed, 1 insertion(+), 8 deletions(-)

diff --git a/src/cmd/compile/internal/gc/obj.go b/src/cmd/compile/internal/gc/obj.go
index 0826b04e33..af5037c5a8 100644
--- a/src/cmd/compile/internal/gc/obj.go
+++ b/src/cmd/compile/internal/gc/obj.go
@@ -352,7 +352,7 @@ func stringsym(pos src.XPos, s string) (data *obj.LSym) {
 
 	symdata := Ctxt.Lookup(symdataname)
 
-	if !symdata.SeenGlobl() {
+	if !symdata.OnList() {
 		// string data
 		off := dsname(symdata, 0, s, pos, "string")
 		ggloblsym(symdata, int32(off), obj.DUPOK|obj.RODATA|obj.LOCAL)
diff --git a/src/cmd/internal/obj/link.go b/src/cmd/internal/obj/link.go
index dc47e51be9..311e5ae2e8 100644
--- a/src/cmd/internal/obj/link.go
+++ b/src/cmd/internal/obj/link.go
@@ -480,7 +480,6 @@ const (
 	AttrWrapper
 	AttrNeedCtxt
 	AttrNoFrame
-	AttrSeenGlobl
 	AttrOnList
 	AttrStatic
 
@@ -537,7 +536,6 @@ func (a Attribute) MakeTypelink() bool       { return a&AttrMakeTypelink != 0 }
 func (a Attribute) CFunc() bool              { return a&AttrCFunc != 0 }
 func (a Attribute) NoSplit() bool            { return a&AttrNoSplit != 0 }
 func (a Attribute) Leaf() bool               { return a&AttrLeaf != 0 }
-func (a Attribute) SeenGlobl() bool          { return a&AttrSeenGlobl != 0 }
 func (a Attribute) OnList() bool             { return a&AttrOnList != 0 }
 func (a Attribute) ReflectMethod() bool      { return a&AttrReflectMethod != 0 }
 func (a Attribute) Local() bool              { return a&AttrLocal != 0 }
@@ -574,7 +572,6 @@ var textAttrStrings = [...]struct {
 	{bit: AttrCFunc, s: "CFUNC"},
 	{bit: AttrNoSplit, s: "NOSPLIT"},
 	{bit: AttrLeaf, s: "LEAF"},
-	{bit: AttrSeenGlobl, s: ""},
 	{bit: AttrOnList, s: ""},
 	{bit: AttrReflectMethod, s: "REFLECTMETHOD"},
 	{bit: AttrLocal, s: "LOCAL"},
diff --git a/src/cmd/internal/obj/plist.go b/src/cmd/internal/obj/plist.go
index afe0ee4ee0..6e33f29959 100644
--- a/src/cmd/internal/obj/plist.go
+++ b/src/cmd/internal/obj/plist.go
@@ -145,10 +145,6 @@ func (ctxt *Link) InitTextSym(s *LSym, flag int) {
 }
 
 func (ctxt *Link) Globl(s *LSym, size int64, flag int) {
-	if s.SeenGlobl() {
-		fmt.Printf("duplicate %v\n", s)
-	}
-	s.Set(AttrSeenGlobl, true)
 	if s.OnList() {
 		ctxt.Diag("symbol %s listed multiple times", s.Name)
 	}
