commit ecc2d6179898a3d24a8bb0a91aca6ff84ca843d8
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Sep 26 10:59:11 2019 -0700

    cmd/compile: remove redundant anylit calls in walkcompare
    
    walkcompare already called walkexpr on n.Left and n.Right, which in
    turn calls anylit when appropriate.
    
    Passes toolstash-check.
    
    Change-Id: I6912ac5a42b977c04db9d85cb2e7295e275e083d
    Reviewed-on: https://go-review.googlesource.com/c/go/+/197600
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/cmd/compile/internal/gc/walk.go | 12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

diff --git a/src/cmd/compile/internal/gc/walk.go b/src/cmd/compile/internal/gc/walk.go
index 7f73d416e8..e19b6329ba 100644
--- a/src/cmd/compile/internal/gc/walk.go
+++ b/src/cmd/compile/internal/gc/walk.go
@@ -3125,21 +3125,11 @@ func walkcompare(n *Node, init *Nodes) *Node {
 
 	// Chose not to inline. Call equality function directly.
 	if !inline {
-		if isvaluelit(cmpl) {
-			var_ := temp(cmpl.Type)
-			anylit(cmpl, var_, init)
-			cmpl = var_
-		}
-		if isvaluelit(cmpr) {
-			var_ := temp(cmpr.Type)
-			anylit(cmpr, var_, init)
-			cmpr = var_
-		}
+		// eq algs take pointers; cmpl and cmpr must be addressable
 		if !islvalue(cmpl) || !islvalue(cmpr) {
 			Fatalf("arguments of comparison must be lvalues - %v %v", cmpl, cmpr)
 		}
 
-		// eq algs take pointers
 		pl := temp(types.NewPtr(t))
 		al := nod(OAS, pl, nod(OADDR, cmpl, nil))
 		al = typecheck(al, ctxStmt)
