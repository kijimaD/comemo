commit af7bc070490fb2024102ac9a2c8f598bcb481bc7
Author: Kevin Burke <kev@inburke.com>
Date:   Mon Jan 2 13:19:31 2017 -0800

    database/sql: fix typo and wording
    
    Clean up the phrasing a little bit, make the comment fit in 80
    characters, and fix the spelling of "guard."
    
    Change-Id: I688a3e760b8d67ea83830635f64dff04dd9a5911
    Reviewed-on: https://go-review.googlesource.com/34792
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/database/sql/sql_test.go | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/database/sql/sql_test.go b/src/database/sql/sql_test.go
index 9d2ee97009..63e1292cb1 100644
--- a/src/database/sql/sql_test.go
+++ b/src/database/sql/sql_test.go
@@ -2607,13 +2607,13 @@ func TestIssue6081(t *testing.T) {
 	}
 }
 
-// TestIssue18429 attempts to stress rolling back the transaction from a context
-// cancel while simultaneously calling Tx.Rollback. Rolling back from a context
-// happens concurrently so tx.rollback and tx.Commit must gaurded to not
-// be entered twice.
+// TestIssue18429 attempts to stress rolling back the transaction from a
+// context cancel while simultaneously calling Tx.Rollback. Rolling back from a
+// context happens concurrently so tx.rollback and tx.Commit must guard against
+// double entry.
 //
-// The test is composed of a context that is canceled while the query is in process
-// so the internal rollback will run concurrently with the explicitly called
+// In the test, a context is canceled while the query is in process so
+// the internal rollback will run concurrently with the explicitly called
 // Tx.Rollback.
 func TestIssue18429(t *testing.T) {
 	db := newTestDB(t, "people")
