commit f2ed30c31edf67bd753a10891dfeb5aeb65c95dd
Author: Robert Griesemer <gri@golang.org>
Date:   Thu Jul 8 19:57:24 2021 -0700

    [dev.typeparams] cmd/compile/internal/types2: recursive substitution must terminate (bug fix)
    
    When types2.Instantiate is called externally, no *Checker is provided and
    substitution doesn't have access to Checker.typMap; and instantiation of
    recursive generic types leads to an infinite recursion in subst.
    
    There was a local subster.cache but it was only set and never used.
    Replaced subster.cache with subster.typMap, which is set to the global
    Checker.typMap if available, and set to a local map otherwise. This
    prevents such infinite recursions. Added a simple test.
    
    More generally, because we don't have a global type map for external
    instantiations, instantiating the same type twice, independently but
    with the same type arguments, will result in two different types. This
    is not correct. We need to provide some form of context for external
    instantiations (which means the importers). This is a separate but
    related issue which is not yet addressed (filed #47103).
    
    Change-Id: I541556c677db54f7396fd0c88c7467894dfcf2e7
    Reviewed-on: https://go-review.googlesource.com/c/go/+/333383
    Trust: Robert Griesemer <gri@golang.org>
    Run-TryBot: Robert Griesemer <gri@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Robert Findley <rfindley@google.com>

 src/cmd/compile/internal/types2/api_test.go | 23 +++++++++++++++++
 src/cmd/compile/internal/types2/subst.go    | 38 +++++++++++++++++------------
 2 files changed, 45 insertions(+), 16 deletions(-)
