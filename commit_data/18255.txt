commit 227fe5f64e22d98e62e4e5165bffc3d6f8ec80b9
Author: Rob Pike <r@golang.org>
Date:   Tue Jan 14 15:16:01 2014 -0800

    spec: tighten the wording around . imports
    Make it clear that if you do a . import, you cannot use a qualified identifier.
    
    R=gri
    CC=golang-codereviews
    https://golang.org/cl/52390043
---
 doc/go_spec.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index 06f0fec83a..3b6769d740 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -1,6 +1,6 @@
 <!--{
 	"Title": "The Go Programming Language Specification",
-	"Subtitle": "Version of Jan 2, 2014",
+	"Subtitle": "Version of Jan 14, 2014",
 	"Path": "/ref/spec"
 }-->
 
@@ -5669,7 +5669,7 @@ If the PackageName is omitted, it defaults to the identifier specified in the
 If an explicit period (<code>.</code>) appears instead of a name, all the
 package's exported identifiers declared in that package's
 <a href="#Blocks">package block</a> will be declared in the importing source
-file's file block and can be accessed without a qualifier.
+file's file block and must be accessed without a qualifier.
 </p>
 
 <p>
@@ -5693,7 +5693,7 @@ Assume we have compiled a package containing the package clause
 <code>package math</code>, which exports function <code>Sin</code>, and
 installed the compiled package in the file identified by
 <code>"lib/math"</code>.
-This table illustrates how <code>Sin</code> may be accessed in files
+This table illustrates how <code>Sin</code> is accessed in files
 that import the package after the
 various types of import declaration.
 </p>
