commit a444458112e4059e73c9a5a2bc5867f53bf9faa2
Author: Cherry Zhang <cherryyz@google.com>
Date:   Fri Nov 6 22:46:18 2020 -0500

    cmd/compile: make sure linkname'd symbol is non-package
    
    When a variable symbol is both imported (possibly through
    inlining) and linkname'd, make sure its LSym is marked as
    non-package for symbol indexing in the object file, so it is
    resolved by name and dedup'd with the original definition.
    
    Fixes #42401.
    
    Change-Id: I8e90c0418c6f46a048945c5fdc06c022b77ed68d
    Reviewed-on: https://go-review.googlesource.com/c/go/+/268178
    Trust: Cherry Zhang <cherryyz@google.com>
    Run-TryBot: Cherry Zhang <cherryyz@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Than McIntosh <thanm@google.com>
    Reviewed-by: Jeremy Faller <jeremy@golang.org>
---
 src/cmd/compile/internal/gc/gsubr.go |  6 ++++++
 test/fixedbugs/issue42401.dir/a.go   | 11 +++++++++++
 test/fixedbugs/issue42401.dir/b.go   | 24 ++++++++++++++++++++++++
 test/fixedbugs/issue42401.go         | 10 ++++++++++
 4 files changed, 51 insertions(+)

diff --git a/src/cmd/compile/internal/gc/gsubr.go b/src/cmd/compile/internal/gc/gsubr.go
index 864ada1d3c..d599a383e7 100644
--- a/src/cmd/compile/internal/gc/gsubr.go
+++ b/src/cmd/compile/internal/gc/gsubr.go
@@ -302,6 +302,12 @@ func ggloblnod(nam *Node) {
 	if nam.Name.LibfuzzerExtraCounter() {
 		s.Type = objabi.SLIBFUZZER_EXTRA_COUNTER
 	}
+	if nam.Sym.Linkname != "" {
+		// Make sure linkname'd symbol is non-package. When a symbol is
+		// both imported and linkname'd, s.Pkg may not set to "_" in
+		// types.Sym.Linksym because LSym already exists. Set it here.
+		s.Pkg = "_"
+	}
 }
 
 func ggloblsym(s *obj.LSym, width int32, flags int16) {
diff --git a/test/fixedbugs/issue42401.dir/a.go b/test/fixedbugs/issue42401.dir/a.go
new file mode 100644
index 0000000000..75f8e7f91f
--- /dev/null
+++ b/test/fixedbugs/issue42401.dir/a.go
@@ -0,0 +1,11 @@
+// Copyright 2020 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package a
+
+var s string
+
+func init() { s = "a" }
+
+func Get() string { return s }
diff --git a/test/fixedbugs/issue42401.dir/b.go b/test/fixedbugs/issue42401.dir/b.go
new file mode 100644
index 0000000000..a834f4efe8
--- /dev/null
+++ b/test/fixedbugs/issue42401.dir/b.go
@@ -0,0 +1,24 @@
+// Copyright 2020 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package main
+
+import (
+	"./a"
+	_ "unsafe"
+)
+
+//go:linkname s a.s
+var s string
+
+func main() {
+	if a.Get() != "a" {
+		panic("FAIL")
+	}
+
+	s = "b"
+	if a.Get() != "b" {
+		panic("FAIL")
+	}
+}
diff --git a/test/fixedbugs/issue42401.go b/test/fixedbugs/issue42401.go
new file mode 100644
index 0000000000..794d5b01b5
--- /dev/null
+++ b/test/fixedbugs/issue42401.go
@@ -0,0 +1,10 @@
+// rundir
+
+// Copyright 2020 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Issue 42401: linkname doesn't work correctly when a variable symbol
+// is both imported (possibly through inlining) and linkname'd.
+
+package ignored
