commit f46320849da89bea3e23bae985ad753d30bbc5da
Author: Than McIntosh <thanm@google.com>
Date:   Mon Apr 3 14:09:03 2023 -0400

    cmd/compile/internal/test: skip testpoint due to revert of CL 479095
    
    Skip one of the testpoints that verifies inlining, since it
    no longer passes as a result of reverting CL 479095. Once we
    roll forward with a new version of CL 479095 we can re-enable
    this testpoint.
    
    Change-Id: I41f6fb3fce78f31e60c5f0ed2856be0e66865149
    Reviewed-on: https://go-review.googlesource.com/c/go/+/481755
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Run-TryBot: Than McIntosh <thanm@google.com>
    Reviewed-by: Bryan Mills <bcmills@google.com>
---
 src/cmd/compile/internal/test/inl_test.go | 22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

diff --git a/src/cmd/compile/internal/test/inl_test.go b/src/cmd/compile/internal/test/inl_test.go
index 205b746dd8..2a16b21cef 100644
--- a/src/cmd/compile/internal/test/inl_test.go
+++ b/src/cmd/compile/internal/test/inl_test.go
@@ -180,15 +180,19 @@ func TestIntendedInlining(t *testing.T) {
 		"net": {
 			"(*UDPConn).ReadFromUDP",
 		},
-		"sync": {
-			// Both OnceFunc and its returned closure need to be inlinable so
-			// that the returned closure can be inlined into the caller of OnceFunc.
-			"OnceFunc",
-			"OnceFunc.func2", // The returned closure.
-			// TODO(austin): It would be good to check OnceValue and OnceValues,
-			// too, but currently they aren't reported because they have type
-			// parameters and aren't instantiated in sync.
-		},
+		// These testpoints commented out for now, since CL 479095
+		// had to be reverted. We can re-enable this once we roll
+		// forward with a new version of 479095.
+		/*
+			"sync": {
+				// Both OnceFunc and its returned closure need to be inlinable so
+				// that the returned closure can be inlined into the caller of OnceFunc.
+				"OnceFunc",
+				"OnceFunc.func2", // The returned closure.
+				// TODO(austin): It would be good to check OnceValue and OnceValues,
+				// too, but currently they aren't reported because they have type
+				// parameters and aren't instantiated in sync.
+			}, */
 		"sync/atomic": {
 			// (*Bool).CompareAndSwap handled below.
 			"(*Bool).Load",
