commit 020c6558d9de2f9b5a5a5f67dfc6e342d43c819a
Author: Russ Cox <rsc@golang.org>
Date:   Fri Aug 31 13:49:57 2012 -0400

    runtime/pprof: restore articles in type doc comments
    
    Reverts part of CL 6460082.
    
    If a doc comment describes a type by explaining the
    meaning of one instance of the type, a leading article
    is fine and makes the text less awkward.
    
    Compare:
    // A dog is a kind of animal.
    // Dog is a kind of animal.
    
    R=golang-dev, dsymonds, dvyukov, r
    CC=golang-dev
    https://golang.org/cl/6494066
---
 src/pkg/runtime/pprof/pprof.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/pkg/runtime/pprof/pprof.go b/src/pkg/runtime/pprof/pprof.go
index 5a07b9421b..189500adbb 100644
--- a/src/pkg/runtime/pprof/pprof.go
+++ b/src/pkg/runtime/pprof/pprof.go
@@ -23,7 +23,7 @@ import (
 // BUG(rsc): A bug in the OS X Snow Leopard 64-bit kernel prevents
 // CPU profiling from giving accurate results on that system.
 
-// Profile is a collection of stack traces showing the call sequences
+// A Profile is a collection of stack traces showing the call sequences
 // that led to instances of a particular event, such as allocation.
 // Packages can create and maintain their own profiles; the most common
 // use is for tracking resources that must be explicitly closed, such as files
@@ -250,7 +250,7 @@ func (x stackProfile) Less(i, j int) bool {
 	return len(t) < len(u)
 }
 
-// countProfile is a set of stack traces to be printed as counts
+// A countProfile is a set of stack traces to be printed as counts
 // grouped by stack trace.  There are multiple implementations:
 // all that matters is that we can find out how many traces there are
 // and obtain each trace in turn.
