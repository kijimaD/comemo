commit ada655759393e30ae25296b94c5cc07b27a4d683
Author: griesemer <gri@golang.org>
Date:   Tue Oct 17 15:30:12 2017 -0700

    spec: simplify paragraph on certain range expressions over arrays
    
    Fixes #22258.
    
    Change-Id: I43e68f1cf3163e1a041ebff2734ff2cb7943f695
    Reviewed-on: https://go-review.googlesource.com/71431
    Reviewed-by: Rob Pike <r@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 doc/go_spec.html | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/doc/go_spec.html b/doc/go_spec.html
index 6189db5ee6..fd3830dcf0 100644
--- a/doc/go_spec.html
+++ b/doc/go_spec.html
@@ -5028,12 +5028,10 @@ the range clause is equivalent to the same clause without that identifier.
 </p>
 
 <p>
-The range expression is evaluated once before beginning the loop,
-with one exception: if the range expression is an array or a pointer to an array
-and at most one iteration variable is present, only the range expression's
-length is evaluated; if that length is constant,
-<a href="#Length_and_capacity">by definition</a>
-the range expression itself will not be evaluated.
+The range expression <code>x</code> is evaluated once before beginning the loop,
+with one exception: if at most one iteration variable is present and
+<code>len(x)</code> is <a href="#Length_and_capacity">constant</a>,
+the range expression is not evaluated.
 </p>
 
 <p>
