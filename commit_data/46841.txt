commit 52078fa477a0a8a8440ca40d64850730e2cf27f8
Author: Dan Scales <danscales@google.com>
Date:   Mon Oct 11 09:15:02 2021 -0700

    cmd/compile: deal with TODO related to generic wrappers with embedded fields
    
    It turns out there is no real TODO here - things are working fine. If we
    are generating a wrapper for a method on a generic type that is actually
    the method on embedded type, then we should just just generate the
    normal embedded wrapper, which calls the wrapper for the real receiver
    type on that method. There is no need to do the generic path where we
    add in the dictionary argument. So, just updated that TODO comment with
    this explanation.
    
    Added a new test case embedded.go, which specifically tests various
    situations involving converting to empty and non-empty interfaces.
    issue44688.go already tests a bunch of these situations as well.
    
    Also made some other cleanups in reflect.go:
    
     - The shape test (that I had added) at the top of imethods is useless
       (never true), since it is always an interface type, so removed it.
    
     - Added usual helper function deref() to make code clearer in several
       places.
    
     - The shape test in methodWrapper() doesn't have to check HasShape() on
       each targ - it can just check HasShape() on the whole receiver.
    
     - The comment about disabling the tail call optimization for RegABI is
       no longer true.
    
     - Simplified code in several places by using the value of existing
       variable 'methodrcvr'.
    
    Change-Id: I8b1a5dc518dad37585824a1f73ceebb7627a9f82
    Reviewed-on: https://go-review.googlesource.com/c/go/+/355129
    Trust: Dan Scales <danscales@google.com>
    Reviewed-by: Keith Randall <khr@golang.org>

 src/cmd/compile/internal/reflectdata/reflect.go | 58 ++++++++++---------------
 1 file changed, 22 insertions(+), 36 deletions(-)
