commit 44275b8569085e405bd50f6373f201167c1850ee
Author: Russ Cox <rsc@golang.org>
Date:   Thu Jul 6 14:46:45 2017 -0400

    doc/go1.9: eliminate <code> spaces
    
    Per note at top of doc, we don't use fixed-width spaces
    in fixed-width phrases like "go doc".
    
    Also ASN.1 NULL is not code so it's not <code> at all.
    
    Change-Id: I791e4e6030b8b8d42f4621d2f4bf32fef93cf343
    Reviewed-on: https://go-review.googlesource.com/47693
    Run-TryBot: Russ Cox <rsc@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 doc/go1.9.html | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/doc/go1.9.html b/doc/go1.9.html
index cab7be2f85..be0ceefcd5 100644
--- a/doc/go1.9.html
+++ b/doc/go1.9.html
@@ -77,9 +77,9 @@ type T1 = T2
   <a href="/ref/spec#Floating_point_operators">language specification
   now states</a> when implementations are allowed to fuse floating
   point operations together, such as by using an architecture's "fused
-  multiply and add" (FMA) instruction to compute <code>x*y + z</code>
+  multiply and add" (FMA) instruction to compute <code>x*y</code>&nbsp;<code>+</code>&nbsp;<code>z</code>
   without rounding the intermediate result <code>x*y</code>.
-  To force the intermediate rounding, write <code>float64(x*y) + z</code>.
+  To force the intermediate rounding, write <code>float64(x*y)</code>&nbsp;<code>+</code>&nbsp;<code>z</code>.
 </p>
 
 <h2 id="ports">Ports</h2>
@@ -204,7 +204,7 @@ type T1 = T2
 
 <p><!-- CL 36031 -->
   Long lists of arguments are now truncated. This improves the readability
-  of <code>go doc</code> on some generated code.
+  of <code>go</code> <code>doc</code> on some generated code.
 </p>
 
 <p><!-- CL 38438 -->
@@ -494,8 +494,8 @@ version of gccgo.
 
     <p><!-- CL 39031 -->
       <a href="/pkg/database/sql/#Rows.Scan"><code>Rows.Scan</code></a> can now scan user-defined string types.
-      Previously the package supported scanning into numeric types like <code>type Int int64</code>. It now also supports
-      scanning into string types like <code>type String string</code>.
+      Previously the package supported scanning into numeric types like <code>type</code> <code>Int</code> <code>int64</code>. It now also supports
+      scanning into string types like <code>type</code> <code>String</code> <code>string</code>.
     </p>
 
     <p><!-- CL 40694 -->
@@ -516,7 +516,7 @@ version of gccgo.
 	  <a href="/pkg/encoding/asn1/#NullBytes"><code>NullBytes</code></a>
 	  and
 	  <a href="/pkg/encoding/asn1/#NullRawValue"><code>NullRawValue</code></a>
-	  represent the <code>ASN.1 NULL</code> type.
+	  represent the ASN.1 NULL type.
     </p>
 
 </dl><!-- encoding/asn1 -->
