commit 936498e5dcd8a329a5da8cd743f60bdb820e6c22
Author: Dmitriy Vyukov <dvyukov@google.com>
Date:   Thu Nov 1 22:59:53 2012 +0400

    cmd/gc: fix build
    
    R=golang-dev
    CC=golang-dev
    https://golang.org/cl/6826047
---
 src/cmd/gc/racewalk.c | 10 +---------
 1 file changed, 1 insertion(+), 9 deletions(-)

diff --git a/src/cmd/gc/racewalk.c b/src/cmd/gc/racewalk.c
index a09b7adf43..9e942498ba 100644
--- a/src/cmd/gc/racewalk.c
+++ b/src/cmd/gc/racewalk.c
@@ -43,13 +43,6 @@ racewalk(Node *fn)
 		}
 	}
 
-<<<<<<< local
-	// TODO(dvyukov): ideally this should be:
-	// racefuncenter(getreturnaddress())
-	// because it's much more costly to obtain from runtime library.
-	nd = mkcall("racefuncenter", T, nil);
-	fn->enter = concat(list1(nd), fn->enter);
-=======
 	// nodpc is the PC of the caller as extracted by
 	// getcallerpc. We use -widthptr(FP) for x86.
 	// BUG: this will not work on arm.
@@ -58,8 +51,7 @@ racewalk(Node *fn)
 	nodpc->type = types[TUINTPTR];
 	nodpc->xoffset = -widthptr;
 	nd = mkcall("racefuncenter", T, nil, nodpc);
-	fn->enter = list(fn->enter, nd);
->>>>>>> other
+	fn->enter = concat(list1(nd), fn->enter);
 	nd = mkcall("racefuncexit", T, nil);
 	fn->exit = list(fn->exit, nd);
 	racewalklist(curfn->nbody, nil);
