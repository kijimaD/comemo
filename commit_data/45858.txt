commit fd11a32c92a2621c6f52edec2a0339f4b7d794e8
Author: Russ Cox <rsc@golang.org>
Date:   Mon Nov 16 17:00:10 2020 -0500

    [dev.regabi] cmd/compile: clean up Node.Func
    
    The original meaning of type Func was "extra fields factored out
    of a few cases of type Node having to do with functions",
    but those specific cases didn't necessarily have any relation.
    A typical declared function is represented by an ODCLFUNC Node
    at its declaration and an ONAME node at its uses, and both those
    have a .Func field, but they are *different* Funcs.
    Similarly, a closure is represented both by an OCLOSURE Node for
    the value itself and an ODCLFUNC Node for the underlying function
    implementing the closure. Those too have *different* Funcs,
    and the Func.Closure field in one points to the other and vice versa.
    This has led to no end of confusion over the years.
    
    This CL elevates type Func to be the canonical identifier for
    a given Go function.
    
    This looks like a trivial CL but in fact is the result of a lot of
    scaffolding and rewriting, discarded once the result was achieved, to
    separate out the three different kinds of Func nodes into three
    separate fields, limited in use to each specific Node type, to
    understand which Func fields are used by which Node types and what the
    possible overlaps are. There were a few overlaps, most notably around
    closures, which led to more fields being added to type Func to keep
    them separate even though there is now a single Func instead of two
    different ones for each function.
    
    A future CL can and should change Curfn to be a *Func instead of
    a *Node, finally eliminating the confusion about whether Curfn
    is an ODCLFUNC node (as it is most of the time) or an ONAME node
    (as it is when type-checking an inlined function body).
    
    Although sizeof_test.go makes it look like Func is growing by two
    words, there are now half as many Funcs in a running compilation,
    so the memory footprint has actually been reduced substantially.
    
    Change-Id: I598bd96c95728093dc769a835d48f2154a406a61
    Reviewed-on: https://go-review.googlesource.com/c/go/+/272253
    Trust: Russ Cox <rsc@golang.org>
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>

 src/cmd/compile/internal/gc/closure.go     | 155 ++++++++++++++---------------
 src/cmd/compile/internal/gc/dcl.go         |  20 ++--
 src/cmd/compile/internal/gc/esc.go         |   5 +-
 src/cmd/compile/internal/gc/escape.go      |   6 +-
 src/cmd/compile/internal/gc/fmt.go         |  12 +--
 src/cmd/compile/internal/gc/gen.go         |   2 +-
 src/cmd/compile/internal/gc/iimport.go     |   2 +-
 src/cmd/compile/internal/gc/initorder.go   |   2 +-
 src/cmd/compile/internal/gc/inl.go         |  10 +-
 src/cmd/compile/internal/gc/main.go        |   6 +-
 src/cmd/compile/internal/gc/noder.go       |   2 +-
 src/cmd/compile/internal/gc/order.go       |   2 +-
 src/cmd/compile/internal/gc/pgen.go        |  65 ++++++++----
 src/cmd/compile/internal/gc/scc.go         |   2 +-
 src/cmd/compile/internal/gc/sinit.go       |   2 +-
 src/cmd/compile/internal/gc/sizeof_test.go |   2 +-
 src/cmd/compile/internal/gc/subr.go        |   3 +-
 src/cmd/compile/internal/gc/syntax.go      |  86 ++++++++--------
 src/cmd/compile/internal/gc/walk.go        |   7 +-
 19 files changed, 210 insertions(+), 181 deletions(-)
