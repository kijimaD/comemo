commit 4c7695126d881b4622ed74238d7ce5c4e6b3b259
Author: Rob Pike <r@golang.org>
Date:   Fri Feb 10 14:45:11 2012 +1100

    strings: delete method comments implied by interface satisfaction
    
    Fixes #2957.
    
    R=golang-dev, bradfitz
    CC=golang-dev
    https://golang.org/cl/5653053
---
 src/pkg/strings/reader.go | 11 -----------
 1 file changed, 11 deletions(-)

diff --git a/src/pkg/strings/reader.go b/src/pkg/strings/reader.go
index f27f9ac979..58f3b05431 100644
--- a/src/pkg/strings/reader.go
+++ b/src/pkg/strings/reader.go
@@ -50,9 +50,6 @@ func (r *Reader) ReadByte() (b byte, err error) {
 	return
 }
 
-// UnreadByte moves the reading position back by one byte.
-// It is an error to call UnreadByte if nothing has been
-// read yet.
 func (r *Reader) UnreadByte() error {
 	if r.i <= 0 {
 		return errors.New("strings.Reader: at beginning of string")
@@ -62,11 +59,6 @@ func (r *Reader) UnreadByte() error {
 	return nil
 }
 
-// ReadRune reads and returns the next UTF-8-encoded
-// Unicode code point from the buffer.
-// If no bytes are available, the error returned is io.EOF.
-// If the bytes are an erroneous UTF-8 encoding, it
-// consumes one byte and returns U+FFFD, 1.
 func (r *Reader) ReadRune() (ch rune, size int, err error) {
 	if r.i >= len(r.s) {
 		return 0, 0, io.EOF
@@ -81,9 +73,6 @@ func (r *Reader) ReadRune() (ch rune, size int, err error) {
 	return
 }
 
-// UnreadRune causes the next call to ReadRune to return the same rune
-// as the previous call to ReadRune.
-// The last method called on r must have been ReadRune.
 func (r *Reader) UnreadRune() error {
 	if r.prevRune < 0 {
 		return errors.New("strings.Reader: previous operation was not ReadRune")
