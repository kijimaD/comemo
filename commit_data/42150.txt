commit c9591d73ef7a661ffaea9495694dc737829bb088
Author: Josh Bleecher Snyder <josharian@gmail.com>
Date:   Sat Apr 25 18:14:42 2020 -0700

    cmd/compile: eliminate some array equality alg loops
    
    type T [3]string
    
    Prior to this change, we generated this equality alg for T:
    
    func eqT(p, q *T) (r bool) {
        for i := range *p {
            if len(p[i]) == len(q[i]) {
            } else {
                return
            }
        }
        for j := range *p {
            if runtime.memeq(p[j].ptr, q[j].ptr, len(p[j])) {
            } else {
                return
            }
        }
        return true
    }
    
    That first loop can be profitably eliminated;
    it's cheaper to spell out 3 length equality checks.
    
    We now generate:
    
    func eqT(p, q *T) (r bool) {
        if len(p[0]) == len(q[0]) &&
            len(p[1]) == len(q[1]) &&
            len(p[2]) == len(q[2]) {
        } else {
            return
        }
        for i := 0; i < len(p); i++ {
            if runtime.memeq(p[j].ptr, q[j].ptr, len(p[j])) {
            } else {
                return
            }
        }
        return true
    }
    
    We now also eliminate loops for small float arrays as well,
    and for any array of size 1.
    
    These cutoffs were selected to minimize code size on amd64
    at this moment, for lack of a more compelling methodology.
    Any smallish number would do.
    
    The switch from range loops to plain for loops allowed me
    to use a temp instead of a named var, which eliminated
    a pointless argument to checkAll.
    The code to construct them is also a bit clearer, in my opinion.
    
    Change-Id: I1bdd8ee4a2739d00806e66b17a4e76b46e71231a
    Reviewed-on: https://go-review.googlesource.com/c/go/+/230210
    Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>

 src/cmd/compile/internal/gc/alg.go | 108 ++++++++++++++++++++++++-------------
 1 file changed, 72 insertions(+), 36 deletions(-)
