commit bbd25d26c0a86660fb3968137f16e74837b7a9c6
Author: Tobias Klauser <tklauser@distanz.ch>
Date:   Fri Dec 20 23:34:23 2019 +0100

    internal/poll: use correct fcntl implementations
    
    Use the libc fcntl (via syscall.fcntl) on aix and solaris like it is
    already done for darwin.
    
    For the syscall-based fcntl implementation use FcntlSyscall from
    internal/syscall/unix in order to get fcntl64 on 32-bit Linux
    systems.
    
    On aix, fcntl with F_DUPFD_CLOEXEC is not supported. Thus, defined
    F_DUPFD_CLOEXEC = 0 in the syscall package and check its value before
    calling fcntl(fd, syscall.F_DUPFD_CLOEXEC, 0).
    
    On js/wasm, fcntl is not supported thus let its implementation return
    ENOSYS directly.
    
    Updates #36211
    
    Change-Id: I96a2ea79e5c4eed2fefd94d0aefd72c940825682
    Reviewed-on: https://go-review.googlesource.com/c/go/+/212278
    Run-TryBot: Tobias Klauser <tobias.klauser@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>

 src/internal/poll/fcntl_js.go        | 14 ++++++++++++++
 src/internal/poll/fcntl_libc.go      | 13 +++++++++++++
 src/internal/poll/fcntl_syscall.go   | 20 ++++++++++++++++++++
 src/internal/poll/fd_fsync_darwin.go |  9 +--------
 src/internal/poll/fd_fsync_posix.go  |  8 --------
 src/internal/poll/fd_unix.go         |  2 +-
 src/syscall/syscall_aix.go           |  2 +-
 7 files changed, 50 insertions(+), 18 deletions(-)
