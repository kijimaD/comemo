commit d97625ae9e7195a68d1c9f2b2ff54eb85545982e
Author: Austin Clements <austin@google.com>
Date:   Fri Apr 29 09:44:53 2016 -0400

    [dev.garbage] runtime: fix nfree accounting
    
    Commit 8dda1c4 changed the meaning of "nfree" in sweep from the number
    of newly freed objects to the total number of free objects in the
    span, but didn't update where sweep added nfree to c.local_nsmallfree.
    Hence, we're over-accounting the number of frees. This is causing
    TestArrayHash to fail with "too many allocs NNN - hash not balanced".
    
    Fix this by computing the number of newly freed objects and adding
    that to c.local_nsmallfree, so it behaves like it used to. Computing
    this requires a small tweak to mallocgc: apparently we've never set
    s.allocCount when allocating a large object; fix this by setting it to
    1 so sweep doesn't get confused.
    
    Change-Id: I31902ffd310110da4ffd807c5c06f1117b872dc8
    Reviewed-on: https://go-review.googlesource.com/22595
    Reviewed-by: Rick Hudson <rlh@golang.org>
    Run-TryBot: Austin Clements <austin@google.com>

 src/runtime/malloc.go   |  1 +
 src/runtime/mgcsweep.go | 10 ++++++++--
 2 files changed, 9 insertions(+), 2 deletions(-)
