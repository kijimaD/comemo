commit 72a857a2802a60ae99000efa2cf6e629d75deb4c
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Aug 11 10:20:09 2022 -0700

    test: relax fixedbugs/issue20250.go expectations
    
    With GOEXPERIMENT=unified, the order variables are printed in "live at
    entry to f.func1" is sensitive to whether regabi is enabled for some
    reason. The order shouldn't matter to correctness, but it is odd.
    
    For now, this CL just relaxes the test expectation order to unblock
    enabling GOEXPERIMENT=unified by default. I've filed #54402 to
    investigate further to confirm this a concern.
    
    Updates #54402.
    
    Change-Id: Iddfbb12c6cf7cc17b2aec8102b33761abd5f93ad
    Reviewed-on: https://go-review.googlesource.com/c/go/+/422975
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    Reviewed-by: David Chase <drchase@google.com>
    Reviewed-by: Cuong Manh Le <cuong.manhle.vn@gmail.com>
---
 test/fixedbugs/issue20250.go | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/test/fixedbugs/issue20250.go b/test/fixedbugs/issue20250.go
index aed7b25d1b..7c6e796e8e 100644
--- a/test/fixedbugs/issue20250.go
+++ b/test/fixedbugs/issue20250.go
@@ -16,7 +16,9 @@ type T struct {
 
 func f(a T) { // ERROR "live at entry to f: a"
 	var e interface{} // ERROR "stack object e interface \{\}$"
-	func() {          // ERROR "live at entry to f.func1: a &e"
+	// TODO(go.dev/issue/54402): Investigate why "live at entry to
+	// f.func1" is sensitive to regabi.
+	func() { // ERROR "live at entry to f.func1: (a &e|&e a)"
 		e = a.s // ERROR "live at call to convT: &e" "stack object a T$"
 	}()
 	// Before the fix, both a and e were live at the previous line.
