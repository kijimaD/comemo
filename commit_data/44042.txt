commit ee330385ca684f7c166913e10998f791d1be06e7
Author: Cherry Zhang <cherryyz@google.com>
Date:   Wed Nov 20 17:10:34 2019 -0500

    cmd/internal/obj, runtime: preempt & restart some instruction sequences
    
    On some architectures, for async preemption the injected call
    needs to clobber a register (usually REGTMP) in order to return
    to the preempted function. As a consequence, the PC ranges where
    REGTMP is live are not preemptible.
    
    The uses of REGTMP are usually generated by the assembler, where
    it needs to load or materialize a large constant or offset that
    doesn't fit into the instruction. In those cases, REGTMP is not
    live at the start of the instruction sequence. Instead of giving
    up preemption in those cases, we could preempt it and restart the
    sequence when resuming the execution. Basically, this is like
    reissuing an interrupted instruction, except that here the
    "instruction" is a Prog that consists of multiple machine
    instructions. For this to work, we need to generate PC data to
    mark the start of the Prog.
    
    Currently this is only done for ARM64.
    
    TODO: the split-stack function prologue is currently not async
    preemptible. We could use this mechanism, preempt it and restart
    at the function entry.
    
    Change-Id: I37cb282f8e606e7ab6f67b3edfdc6063097b4bd1
    Reviewed-on: https://go-review.googlesource.com/c/go/+/208126
    Run-TryBot: Cherry Zhang <cherryyz@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Austin Clements <austin@google.com>

 src/cmd/internal/obj/arm64/asm7.go  | 31 ++++++++++++-----
 src/cmd/internal/obj/mips/asm0.go   |  2 +-
 src/cmd/internal/obj/plist.go       | 66 ++++++++++++++++++++++++++++++-------
 src/cmd/internal/obj/riscv/obj.go   |  2 +-
 src/cmd/internal/obj/s390x/asmz.go  |  2 +-
 src/cmd/internal/obj/x86/asm6.go    |  2 +-
 src/cmd/internal/objabi/funcdata.go | 11 +++++++
 src/runtime/os_windows.go           | 33 ++++++++++---------
 src/runtime/preempt.go              | 53 +++++++++++++++++++++--------
 src/runtime/signal_386.go           |  9 +++--
 src/runtime/signal_amd64.go         |  9 +++--
 src/runtime/signal_arm.go           |  6 ++--
 src/runtime/signal_arm64.go         |  6 ++--
 src/runtime/signal_linux_s390x.go   |  6 ++--
 src/runtime/signal_mips64x.go       |  6 ++--
 src/runtime/signal_mipsx.go         |  6 ++--
 src/runtime/signal_ppc64x.go        |  6 ++--
 src/runtime/signal_riscv64.go       |  6 ++--
 src/runtime/signal_unix.go          |  8 +++--
 src/runtime/symtab.go               | 53 +++++++++++++++++++++--------
 20 files changed, 223 insertions(+), 100 deletions(-)
