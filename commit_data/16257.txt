commit 83feea5af85c18fdea9d4038026bb8e06eab1149
Author: Ian Lance Taylor <iant@golang.org>
Date:   Wed May 1 14:31:42 2013 -0700

    cmd/cgo: correct pragma name in comment
    
    R=rsc, alexb, minux.ma, bradfitz, i.caught.air
    CC=golang-dev
    https://golang.org/cl/9082043
---
 src/cmd/cgo/doc.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/cmd/cgo/doc.go b/src/cmd/cgo/doc.go
index efbeae9588..a1b02d4be5 100644
--- a/src/cmd/cgo/doc.go
+++ b/src/cmd/cgo/doc.go
@@ -463,7 +463,7 @@ The directives are:
 	#pragma cgo_import_dynamic puts puts#GLIBC_2.2.5
 	#pragma cgo_import_dynamic puts puts#GLIBC_2.2.5 "libc.so.6"
 
-	A side effect of the cgo_dynamic_import directive with a
+	A side effect of the cgo_import_dynamic directive with a
 	library is to make the final binary depend on that dynamic
 	library. To get the dependency without importing any specific
 	symbols, use _ for local and remote.
@@ -472,7 +472,7 @@ The directives are:
 	#pragma cgo_import_dynamic _ _ "libc.so.6"
 
 	For compatibility with current versions of SWIG,
-	#pragma dynimport is an alias for #pragma cgo_dynamic_import.
+	#pragma dynimport is an alias for #pragma cgo_import_dynamic.
 
 #pragma cgo_dynamic_linker "<path>"
 
@@ -573,7 +573,7 @@ The directives in the 6c-compiled file are used according to the kind
 of final link used.
 
 In internal mode, 6l itself processes all the host object files, in
-particular foo.cgo2.o. To do so, it uses the cgo_dynamic_import and
+particular foo.cgo2.o. To do so, it uses the cgo_import_dynamic and
 cgo_dynamic_linker directives to learn that the otherwise undefined
 reference to sin in foo.cgo2.o should be rewritten to refer to the
 symbol sin with version GLIBC_2.2.5 from the dynamic library
