commit 51ac0f0f4cb432204dee3d434335fd1e61ca8446
Author: Polina Osadcha <polliosa@google.com>
Date:   Thu Jun 18 16:17:13 2020 +0300

    strings: optimize Replace by using a strings.Builder
    
    name        old time/op    new time/op    delta
    ReplaceAll     162ns ±26%     134ns ±26%  -17.44%  (p=0.014 n=10+10)
    
    name        old alloc/op   new alloc/op   delta
    ReplaceAll     32.0B ± 0%     16.0B ± 0%  -50.00%  (p=0.000 n=10+10)
    
    name        old allocs/op  new allocs/op  delta
    ReplaceAll      2.00 ± 0%      1.00 ± 0%  -50.00%  (p=0.000 n=10+10)
    
    Change-Id: Ia8377141d3adb84c7bd94e511ac8f739915aeb40
    Reviewed-on: https://go-review.googlesource.com/c/go/+/245197
    Run-TryBot: Martin Möhrmann <moehrmann@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
---
 src/strings/strings.go      | 12 ++++++------
 src/strings/strings_test.go |  9 +++++++++
 2 files changed, 15 insertions(+), 6 deletions(-)

diff --git a/src/strings/strings.go b/src/strings/strings.go
index d6f5cea6e6..b429735fea 100644
--- a/src/strings/strings.go
+++ b/src/strings/strings.go
@@ -934,8 +934,8 @@ func Replace(s, old, new string, n int) string {
 	}
 
 	// Apply replacements to buffer.
-	t := make([]byte, len(s)+n*(len(new)-len(old)))
-	w := 0
+	var b Builder
+	b.Grow(len(s) + n*(len(new)-len(old)))
 	start := 0
 	for i := 0; i < n; i++ {
 		j := start
@@ -947,12 +947,12 @@ func Replace(s, old, new string, n int) string {
 		} else {
 			j += Index(s[start:], old)
 		}
-		w += copy(t[w:], s[start:j])
-		w += copy(t[w:], new)
+		b.WriteString(s[start:j])
+		b.WriteString(new)
 		start = j + len(old)
 	}
-	w += copy(t[w:], s[start:])
-	return string(t[0:w])
+	b.WriteString(s[start:])
+	return b.String()
 }
 
 // ReplaceAll returns a copy of the string s with all
diff --git a/src/strings/strings_test.go b/src/strings/strings_test.go
index c01c4dabc5..09e5b27cc3 100644
--- a/src/strings/strings_test.go
+++ b/src/strings/strings_test.go
@@ -1900,3 +1900,12 @@ func BenchmarkTrimSpace(b *testing.B) {
 		})
 	}
 }
+
+var stringSink string
+
+func BenchmarkReplaceAll(b *testing.B) {
+	b.ReportAllocs()
+	for i := 0; i < b.N; i++ {
+		stringSink = ReplaceAll("banana", "a", "<>")
+	}
+}
