commit fee3cd4250843a0a7c056fed3d3e6e1a423f3120
Author: Cuong Manh Le <cuong@orijtech.com>
Date:   Tue Mar 9 01:52:10 2021 +0700

    cmd/compile: fix width not calculated for imported type
    
    The compiler currently has problem that some imported type is missing
    size calculation. The problem is not triggered until CL 283313 merged,
    due to the compiler can compile the functions immediately when it sees
    them, so during SSA generation, size calculation is still ok.
    
    CL 283313 makes the compiler always push functions to compile queue,
    then drain from it for compiling function. During this process, the
    types calculation size is disabled, so calculating size during SSA now
    make the compiler crashes.
    
    To fix this, we can just always calculate type size during typechecking,
    when importing type from other packages.
    
    Fixes #44732
    
    Change-Id: I8d00ea0b5aadd432154908280e55d85c75f3ce92
    Reviewed-on: https://go-review.googlesource.com/c/go/+/299689
    Trust: Cuong Manh Le <cuong.manhle.vn@gmail.com>
    Run-TryBot: Cuong Manh Le <cuong.manhle.vn@gmail.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Dan Scales <danscales@google.com>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
---
 src/cmd/compile/internal/typecheck/iimport.go |  6 ++++++
 test/fixedbugs/issue44732.dir/bar/bar.go      | 11 +++++++++++
 test/fixedbugs/issue44732.dir/foo/foo.go      | 13 +++++++++++++
 test/fixedbugs/issue44732.dir/main.go         | 15 +++++++++++++++
 test/fixedbugs/issue44732.go                  |  7 +++++++
 5 files changed, 52 insertions(+)

diff --git a/src/cmd/compile/internal/typecheck/iimport.go b/src/cmd/compile/internal/typecheck/iimport.go
index 9355174da8..8df75b2285 100644
--- a/src/cmd/compile/internal/typecheck/iimport.go
+++ b/src/cmd/compile/internal/typecheck/iimport.go
@@ -508,6 +508,12 @@ func (p *iimporter) typAt(off uint64) *types.Type {
 			base.Fatalf("predeclared type missing from cache: %d", off)
 		}
 		t = p.newReader(off-predeclReserved, nil).typ1()
+		// Ensure size is calculated for imported types. Since CL 283313, the compiler
+		// does not compile the function immediately when it sees them. Instead, funtions
+		// are pushed to compile queue, then draining from the queue for compiling.
+		// During this process, the size calculation is disabled, so it is not safe for
+		// calculating size during SSA generation anymore. See issue #44732.
+		types.CheckSize(t)
 		p.typCache[off] = t
 	}
 	return t
diff --git a/test/fixedbugs/issue44732.dir/bar/bar.go b/test/fixedbugs/issue44732.dir/bar/bar.go
new file mode 100644
index 0000000000..fc14161610
--- /dev/null
+++ b/test/fixedbugs/issue44732.dir/bar/bar.go
@@ -0,0 +1,11 @@
+// Copyright 2021 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package bar
+
+import "issue44732.dir/foo"
+
+type Bar struct {
+	Foo *foo.Foo
+}
diff --git a/test/fixedbugs/issue44732.dir/foo/foo.go b/test/fixedbugs/issue44732.dir/foo/foo.go
new file mode 100644
index 0000000000..c8afb0e880
--- /dev/null
+++ b/test/fixedbugs/issue44732.dir/foo/foo.go
@@ -0,0 +1,13 @@
+// Copyright 2021 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package foo
+
+type Foo struct {
+	updatecb func()
+}
+
+func NewFoo() *Foo {
+	return &Foo{updatecb: nil}
+}
diff --git a/test/fixedbugs/issue44732.dir/main.go b/test/fixedbugs/issue44732.dir/main.go
new file mode 100644
index 0000000000..21208ecdd9
--- /dev/null
+++ b/test/fixedbugs/issue44732.dir/main.go
@@ -0,0 +1,15 @@
+// Copyright 2021 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package main
+
+import (
+	"issue44732.dir/bar"
+	"issue44732.dir/foo"
+)
+
+func main() {
+	_ = bar.Bar{}
+	_ = foo.NewFoo()
+}
diff --git a/test/fixedbugs/issue44732.go b/test/fixedbugs/issue44732.go
new file mode 100644
index 0000000000..4210671205
--- /dev/null
+++ b/test/fixedbugs/issue44732.go
@@ -0,0 +1,7 @@
+// runindir
+
+// Copyright 2021 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package ignored
