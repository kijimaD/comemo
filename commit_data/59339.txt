commit afb105056dc62b3f2f569341a9fff080023ee812
Author: Roland Shoemaker <bracewell@google.com>
Date:   Thu Jan 18 12:51:13 2024 -0800

    crypto/x509: make sure pub key is non-nil before interface conversion
    
    alreadyInChain assumes all keys fit a interface which contains the
    Equal method (which they do), but this ignores that certificates may
    have a nil key when PublicKeyAlgorithm is UnknownPublicKeyAlgorithm. In
    this case alreadyInChain panics.
    
    Check that the key is non-nil as part of considerCandidate (we are never
    going to build a chain containing UnknownPublicKeyAlgorithm anyway).
    
    Fixes #65390
    Fixes CVE-2024-24783
    
    Change-Id: Ibdccc0a487e3368b6812be35daad2512220243f3
    Reviewed-on: https://team-review.git.corp.google.com/c/golang/go-private/+/2137282
    Reviewed-by: Damien Neil <dneil@google.com>
    Run-TryBot: Roland Shoemaker <bracewell@google.com>
    Reviewed-by: Tatiana Bradley <tatianabradley@google.com>
    Reviewed-on: https://go-review.googlesource.com/c/go/+/569339
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Carlos Amedee <carlos@golang.org>
    Auto-Submit: Michael Knyszek <mknyszek@google.com>
---
 src/crypto/x509/verify.go      |  2 +-
 src/crypto/x509/verify_test.go | 19 +++++++++++++++++++
 2 files changed, 20 insertions(+), 1 deletion(-)

diff --git a/src/crypto/x509/verify.go b/src/crypto/x509/verify.go
index 9d3c3246d3..6efbff28bf 100644
--- a/src/crypto/x509/verify.go
+++ b/src/crypto/x509/verify.go
@@ -899,7 +899,7 @@ func (c *Certificate) buildChains(currentChain []*Certificate, sigChecks *int, o
 	)
 
 	considerCandidate := func(certType int, candidate potentialParent) {
-		if alreadyInChain(candidate.cert, currentChain) {
+		if candidate.cert.PublicKey == nil || alreadyInChain(candidate.cert, currentChain) {
 			return
 		}
 
diff --git a/src/crypto/x509/verify_test.go b/src/crypto/x509/verify_test.go
index 861d2b3890..8a7a5f6e2c 100644
--- a/src/crypto/x509/verify_test.go
+++ b/src/crypto/x509/verify_test.go
@@ -2792,3 +2792,22 @@ func TestVerifyEKURootAsLeaf(t *testing.T) {
 	}
 
 }
+
+func TestVerifyNilPubKey(t *testing.T) {
+	c := &Certificate{
+		RawIssuer:      []byte{1, 2, 3},
+		AuthorityKeyId: []byte{1, 2, 3},
+	}
+	opts := &VerifyOptions{}
+	opts.Roots = NewCertPool()
+	r := &Certificate{
+		RawSubject:   []byte{1, 2, 3},
+		SubjectKeyId: []byte{1, 2, 3},
+	}
+	opts.Roots.AddCert(r)
+
+	_, err := c.buildChains([]*Certificate{r}, nil, opts)
+	if _, ok := err.(UnknownAuthorityError); !ok {
+		t.Fatalf("buildChains returned unexpected error, got: %v, want %v", err, UnknownAuthorityError{})
+	}
+}
