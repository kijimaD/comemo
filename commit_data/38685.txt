commit 0007017f9631f4793f5699d77942c7224ad2b349
Merge: 3169778c15 106db71f37
Author: Filippo Valsorda <filippo@golang.org>
Date:   Wed Nov 14 15:30:58 2018 -0500

    [dev.boringcrypto] all: merge master into dev.boringcrypto
    
    Change-Id: I81b64fe503bf07b4d7bd823286b83e663b5c0f76

 doc/asm.html                                       |   1 +
 misc/cgo/test/cgo_test.go                          |   1 +
 misc/cgo/test/test27660.go                         |  54 ++
 misc/nacl/testzip.proto                            |   3 +
 misc/wasm/wasm_exec.js                             |  82 +-
 src/bufio/bufio_test.go                            |   2 +-
 src/bytes/bytes.go                                 |  19 +
 src/bytes/bytes_decl.go                            |  24 -
 src/cmd/addr2line/main.go                          |   1 +
 src/cmd/asm/internal/arch/arch.go                  |   3 +
 src/cmd/asm/internal/asm/operand_test.go           |   1 +
 src/cmd/asm/internal/asm/testdata/arm64.s          |  36 +-
 src/cmd/asm/internal/asm/testdata/arm64enc.s       |  54 +-
 src/cmd/asm/internal/lex/input.go                  |   2 +-
 src/cmd/cgo/doc.go                                 |   4 +
 src/cmd/cgo/out.go                                 |  17 +-
 src/cmd/compile/fmt_test.go                        |  62 +-
 src/cmd/compile/internal/gc/builtin.go             | 302 ++++---
 src/cmd/compile/internal/gc/builtin/runtime.go     |  22 +-
 src/cmd/compile/internal/gc/closure.go             |   2 +-
 src/cmd/compile/internal/gc/dwinl.go               |   2 +-
 src/cmd/compile/internal/gc/fmt.go                 |   7 +
 src/cmd/compile/internal/gc/go.go                  |   1 -
 src/cmd/compile/internal/gc/gsubr.go               |  18 -
 src/cmd/compile/internal/gc/iexport.go             |   2 +-
 src/cmd/compile/internal/gc/inl.go                 |  14 +-
 src/cmd/compile/internal/gc/inl_test.go            |   1 +
 src/cmd/compile/internal/gc/lex.go                 |   8 +
 src/cmd/compile/internal/gc/lex_test.go            |  56 +-
 src/cmd/compile/internal/gc/main.go                |  11 +-
 src/cmd/compile/internal/gc/obj.go                 |  16 +-
 src/cmd/compile/internal/gc/op_string.go           |   4 +-
 src/cmd/compile/internal/gc/plive.go               |  65 +-
 src/cmd/compile/internal/gc/reflect.go             |   4 +-
 src/cmd/compile/internal/gc/ssa.go                 |   2 +-
 src/cmd/compile/internal/gc/syntax.go              |   2 +-
 src/cmd/compile/internal/gc/typecheck.go           | 132 ++-
 src/cmd/compile/internal/gc/universe.go            |   2 -
 src/cmd/compile/internal/gc/walk.go                | 163 ++--
 src/cmd/compile/internal/ppc64/ssa.go              |   2 +-
 src/cmd/compile/internal/ssa/config.go             |   2 +-
 src/cmd/compile/internal/ssa/debug.go              |   2 +-
 src/cmd/compile/internal/ssa/func.go               |   2 +-
 src/cmd/compile/internal/ssa/gen/PPC64.rules       |   7 +
 src/cmd/compile/internal/ssa/gen/PPC64Ops.go       |  39 +-
 src/cmd/compile/internal/ssa/gen/generic.rules     |  20 +-
 src/cmd/compile/internal/ssa/gen/genericOps.go     |   2 +-
 src/cmd/compile/internal/ssa/gen/rulegen.go        |   8 +-
 src/cmd/compile/internal/ssa/opGen.go              |  48 +
 src/cmd/compile/internal/ssa/poset.go              |   8 +-
 src/cmd/compile/internal/ssa/rewrite.go            |  11 +-
 src/cmd/compile/internal/ssa/rewritePPC64.go       | 922 ++++++++++++++++++--
 src/cmd/compile/internal/ssa/rewritegeneric.go     |  53 +-
 .../internal/ssa/testdata/hist.dlv-opt.nexts       |   4 +
 .../internal/ssa/testdata/hist.gdb-opt.nexts       |   4 +
 src/cmd/compile/internal/ssa/trim.go               |   4 +-
 src/cmd/compile/internal/types/type.go             |  37 +-
 src/cmd/fix/fix.go                                 |   2 +-
 src/cmd/go/alldocs.go                              |  22 +-
 src/cmd/go/internal/cache/hash.go                  |   2 +-
 src/cmd/go/internal/cmdflag/flag.go                |   6 +-
 src/cmd/go/internal/modcmd/edit.go                 |  26 +-
 src/cmd/go/internal/modfile/rule.go                |  20 +-
 src/cmd/go/internal/modload/help.go                |  17 +-
 src/cmd/go/internal/modload/init.go                |  22 +
 src/cmd/go/internal/test/test.go                   |  36 +-
 src/cmd/go/internal/test/testflag.go               |   4 +-
 src/cmd/go/internal/vet/vet.go                     |   2 +-
 src/cmd/go/internal/vet/vetflag.go                 |  50 +-
 src/cmd/go/internal/work/buildid.go                |   3 +-
 src/cmd/go/internal/work/exec.go                   |  13 +-
 src/cmd/go/internal/work/gc.go                     |   3 +
 src/cmd/go/main.go                                 |  11 -
 src/cmd/go/script_test.go                          |  32 +
 src/cmd/go/testdata/script/README                  |   5 +
 src/cmd/go/testdata/script/help.txt                |   8 +-
 src/cmd/go/testdata/script/mod_edit.txt            |  45 +-
 src/cmd/go/testdata/script/mod_edit_go.txt         |  16 +
 src/cmd/go/testdata/script/mod_go_version.txt      |  16 +-
 src/cmd/go/testdata/script/mod_readonly.txt        |   2 +
 src/cmd/go/testdata/script/mod_tidy.txt            |   9 +
 src/cmd/internal/dwarf/dwarf.go                    |   2 +-
 src/cmd/internal/obj/arm64/a.out.go                |   2 +
 src/cmd/internal/obj/arm64/anames7.go              |   2 +
 src/cmd/internal/obj/arm64/asm7.go                 | 362 ++++++--
 src/cmd/internal/obj/arm64/doc.go                  |  10 +-
 src/cmd/internal/obj/arm64/obj7.go                 |   9 +-
 src/cmd/internal/obj/link.go                       |   6 +-
 src/cmd/internal/obj/objfile.go                    |  24 +-
 src/cmd/internal/obj/plist.go                      |  12 -
 src/cmd/internal/obj/wasm/a.out.go                 |   2 +-
 src/cmd/internal/obj/wasm/wasmobj.go               |  24 +-
 src/cmd/internal/obj/x86/asm6.go                   |   4 +-
 src/cmd/link/internal/arm64/asm.go                 |   2 +-
 src/cmd/link/internal/ld/dwarf.go                  |  28 +-
 src/cmd/link/internal/ld/lib.go                    |   2 +-
 src/cmd/link/internal/ld/pe.go                     |   2 +-
 src/cmd/link/internal/ld/symtab.go                 |   4 +-
 src/cmd/link/internal/sym/symbol.go                |   8 +
 src/cmd/link/internal/sym/symbols.go               |   9 +-
 src/cmd/link/internal/wasm/asm.go                  |  28 +-
 src/cmd/trace/annotations.go                       |   2 +-
 src/cmd/trace/main.go                              |   3 +-
 src/cmd/trace/mmu.go                               | 403 +++++++++
 src/cmd/trace/trace.go                             |  30 +-
 .../github.com/google/pprof/driver/driver.go       |  43 +-
 .../google/pprof/internal/binutils/binutils.go     | 109 ++-
 .../pprof/internal/binutils/binutils_test.go       |  29 +
 .../pprof/internal/binutils/testdata/malformed_elf |   1 +
 .../internal/binutils/testdata/malformed_macho     |   1 +
 .../github.com/google/pprof/internal/driver/cli.go |   7 +-
 .../google/pprof/internal/driver/commands.go       |  38 +-
 .../google/pprof/internal/driver/driver.go         |  64 +-
 .../google/pprof/internal/driver/driver_test.go    | 117 ++-
 .../google/pprof/internal/driver/fetch.go          |  60 +-
 .../google/pprof/internal/driver/fetch_test.go     | 165 +++-
 .../google/pprof/internal/driver/flags.go          |  78 ++
 .../google/pprof/internal/driver/flamegraph.go     |  18 +-
 .../pprof/internal/driver/flamegraph_test.go       |  46 -
 .../pprof/internal/driver/interactive_test.go      |  19 +-
 .../google/pprof/internal/driver/options.go        |  64 +-
 .../pprof.cpu.flat.addresses.noinlines.text        |   7 +
 .../pprof.cpu.flat.filefunctions.noinlines.text    |   5 +
 .../pprof.cpu.flat.functions.noinlines.text        |   5 +
 .../driver/testdata/pprof.cpu.lines.topproto       |   3 +
 .../driver/testdata/pprof.longNameFuncs.dot        |   9 +
 .../driver/testdata/pprof.longNameFuncs.text       |   5 +
 .../google/pprof/internal/driver/webhtml.go        |  84 +-
 .../google/pprof/internal/driver/webui.go          |  26 +-
 .../google/pprof/internal/elfexec/elfexec.go       |  28 +-
 .../google/pprof/internal/elfexec/elfexec_test.go  |  11 +-
 .../google/pprof/internal/graph/dotgraph.go        |   1 +
 .../google/pprof/internal/graph/graph.go           |  29 +-
 .../google/pprof/internal/graph/graph_test.go      | 157 ++++
 .../google/pprof/internal/plugin/plugin.go         |  15 +-
 .../google/pprof/internal/report/report.go         |  24 +-
 .../google/pprof/internal/report/report_test.go    |  21 +-
 .../google/pprof/internal/symbolizer/symbolizer.go |  31 +-
 .../pprof/internal/symbolizer/symbolizer_test.go   |   4 +-
 .../google/pprof/internal/symbolz/symbolz.go       |  35 +-
 .../google/pprof/internal/symbolz/symbolz_test.go  |  28 +
 .../google/pprof/internal/transport/transport.go   | 131 +++
 .../google/pprof/profile/legacy_java_profile.go    |   2 +-
 .../github.com/google/pprof/profile/profile.go     |   6 +
 .../google/pprof/profile/profile_test.go           |  53 ++
 .../pprof/profile/testdata/java.contention.string  |   2 +-
 src/cmd/vendor/golang.org/x/tools/LICENSE          |  27 +
 src/cmd/vendor/golang.org/x/tools/PATENTS          |  22 +
 .../golang.org/x/tools/go/analysis/analysis.go     | 192 ++++
 .../x/tools/go/analysis/cmd/vet-lite/main.go       |  83 ++
 .../vendor/golang.org/x/tools/go/analysis/doc.go   | 328 +++++++
 .../go/analysis/internal/analysisflags/flags.go    | 223 +++++
 .../x/tools/go/analysis/internal/facts/facts.go    | 299 +++++++
 .../x/tools/go/analysis/internal/facts/imports.go  |  88 ++
 .../analysis/internal/unitchecker/unitchecker.go   | 306 +++++++
 .../x/tools/go/analysis/passes/asmdecl/asmdecl.go  | 759 ++++++++++++++++
 .../x/tools/go/analysis/passes/assign/assign.go    |  68 ++
 .../x/tools/go/analysis/passes/atomic/atomic.go    |  96 ++
 .../x/tools/go/analysis/passes/bools/bools.go      | 214 +++++
 .../tools/go/analysis/passes/buildtag/buildtag.go  | 159 ++++
 .../x/tools/go/analysis/passes/cgocall/cgocall.go  | 226 +++++
 .../go/analysis/passes/composite/composite.go      | 108 +++
 .../go/analysis/passes/composite/whitelist.go      |  33 +
 .../tools/go/analysis/passes/copylock/copylock.go  | 300 +++++++
 .../tools/go/analysis/passes/ctrlflow/ctrlflow.go  | 225 +++++
 .../analysis/passes/httpresponse/httpresponse.go   | 177 ++++
 .../x/tools/go/analysis/passes/inspect/inspect.go  |  45 +
 .../analysis/passes/internal/analysisutil/util.go  | 106 +++
 .../go/analysis/passes/loopclosure/loopclosure.go  | 130 +++
 .../go/analysis/passes/lostcancel/lostcancel.go    | 304 +++++++
 .../x/tools/go/analysis/passes/nilfunc/nilfunc.go  |  74 ++
 .../x/tools/go/analysis/passes/pkgfact/pkgfact.go  | 127 +++
 .../x/tools/go/analysis/passes/printf/printf.go    | 964 +++++++++++++++++++++
 .../x/tools/go/analysis/passes/printf/types.go     | 223 +++++
 .../x/tools/go/analysis/passes/shift/dead.go       | 101 +++
 .../x/tools/go/analysis/passes/shift/shift.go      | 128 +++
 .../go/analysis/passes/stdmethods/stdmethods.go    | 211 +++++
 .../go/analysis/passes/structtag/structtag.go      | 260 ++++++
 .../x/tools/go/analysis/passes/tests/tests.go      | 175 ++++
 .../go/analysis/passes/unreachable/unreachable.go  | 314 +++++++
 .../go/analysis/passes/unsafeptr/unsafeptr.go      | 130 +++
 .../analysis/passes/unusedresult/unusedresult.go   | 131 +++
 .../golang.org/x/tools/go/analysis/validate.go     | 104 +++
 .../golang.org/x/tools/go/ast/astutil/enclosing.go | 627 ++++++++++++++
 .../golang.org/x/tools/go/ast/astutil/imports.go   | 471 ++++++++++
 .../golang.org/x/tools/go/ast/astutil/rewrite.go   | 477 ++++++++++
 .../golang.org/x/tools/go/ast/astutil/util.go      |  14 +
 .../x/tools/go/ast/inspector/inspector.go          | 182 ++++
 .../golang.org/x/tools/go/ast/inspector/typeof.go  | 216 +++++
 .../vendor/golang.org/x/tools/go/cfg/builder.go    | 510 +++++++++++
 src/cmd/vendor/golang.org/x/tools/go/cfg/cfg.go    | 150 ++++
 .../x/tools/go/types/objectpath/objectpath.go      | 523 +++++++++++
 .../golang.org/x/tools/go/types/typeutil/callee.go |  46 +
 .../x/tools/go/types/typeutil/imports.go           |  31 +
 .../golang.org/x/tools/go/types/typeutil/map.go    | 313 +++++++
 .../x/tools/go/types/typeutil/methodsetcache.go    |  72 ++
 .../golang.org/x/tools/go/types/typeutil/ui.go     |  52 ++
 src/cmd/vendor/vendor.json                         | 292 ++++++-
 src/cmd/vet/all/whitelist/386.txt                  |   4 -
 src/cmd/vet/all/whitelist/all.txt                  |   4 -
 src/cmd/vet/all/whitelist/amd64.txt                |   1 -
 src/cmd/vet/all/whitelist/arm.txt                  |   1 -
 src/cmd/vet/all/whitelist/arm64.txt                |   1 -
 src/cmd/vet/all/whitelist/mipsx.txt                |   1 -
 src/cmd/vet/all/whitelist/nacl_amd64p32.txt        |   1 -
 src/cmd/vet/all/whitelist/ppc64x.txt               |   1 -
 src/cmd/vet/all/whitelist/s390x.txt                |   1 -
 src/cmd/vet/all/whitelist/wasm.txt                 |   1 -
 src/cmd/vet/print.go                               |   2 +-
 src/cmd/vet/testdata/print.go                      |  36 +-
 src/cmd/vet/types.go                               |  22 +-
 src/cmd/vet/vet_test.go                            |   3 +-
 src/crypto/md5/md5block_decl.go                    |   2 +-
 src/crypto/md5/md5block_generic.go                 |   2 +-
 .../md5/{md5block_ppc64le.s => md5block_ppc64x.s}  |  37 +-
 src/crypto/tls/auth.go                             |  33 +
 src/crypto/tls/cipher_suites.go                    |  32 +-
 src/crypto/tls/common.go                           |  78 +-
 src/crypto/tls/conn.go                             | 247 +++---
 src/crypto/tls/handshake_client.go                 | 300 ++++---
 src/crypto/tls/handshake_client_test.go            | 267 +++++-
 src/crypto/tls/handshake_client_tls13.go           | 292 ++++++-
 src/crypto/tls/handshake_messages.go               | 199 ++++-
 src/crypto/tls/handshake_messages_test.go          |  28 +
 src/crypto/tls/handshake_server.go                 | 248 +++---
 src/crypto/tls/handshake_server_test.go            | 215 ++++-
 src/crypto/tls/handshake_server_tls13.go           | 827 ++++++++++++++++++
 src/crypto/tls/key_schedule.go                     |  11 +
 src/crypto/tls/prf_test.go                         |  17 +-
 .../tls/testdata/Client-TLSv13-AES128-SHA256       | 169 ++--
 .../tls/testdata/Client-TLSv13-AES256-SHA384       | 173 ++--
 src/crypto/tls/testdata/Client-TLSv13-ALPN         | 171 ++--
 .../tls/testdata/Client-TLSv13-CHACHA20-SHA256     | 169 ++--
 .../testdata/Client-TLSv13-ClientCert-ECDSA-RSA    | 236 +++++
 .../testdata/Client-TLSv13-ClientCert-RSA-ECDSA    | 228 +++++
 .../testdata/Client-TLSv13-ClientCert-RSA-RSAPSS   | 230 +++++
 src/crypto/tls/testdata/Client-TLSv13-ECDSA        | 159 ++--
 .../testdata/Client-TLSv13-ExportKeyingMaterial    | 169 ++--
 .../tls/testdata/Client-TLSv13-HelloRetryRequest   | 205 +++--
 src/crypto/tls/testdata/Client-TLSv13-KeyUpdate    | 132 +++
 src/crypto/tls/testdata/Client-TLSv13-P256-ECDHE   | 171 ++--
 .../testdata/Client-TLSv13-RenegotiationRejected   | 107 ---
 src/crypto/tls/testdata/Client-TLSv13-X25519-ECDHE | 167 ++--
 src/crypto/tls/testdata/Server-TLSv12-P256         |  85 ++
 ...5519-ECDHE-RSA-AES-GCM => Server-TLSv12-X25519} |   0
 .../tls/testdata/Server-TLSv13-AES128-SHA256       | 100 +++
 .../tls/testdata/Server-TLSv13-AES256-SHA384       | 103 +++
 src/crypto/tls/testdata/Server-TLSv13-ALPN         | 104 +++
 src/crypto/tls/testdata/Server-TLSv13-ALPN-NoMatch | 104 +++
 .../tls/testdata/Server-TLSv13-CHACHA20-SHA256     | 100 +++
 .../Server-TLSv13-ClientAuthRequestedAndECDSAGiven | 184 ++++
 .../Server-TLSv13-ClientAuthRequestedAndGiven      | 180 ++++
 .../Server-TLSv13-ClientAuthRequestedNotGiven      | 109 +++
 .../tls/testdata/Server-TLSv13-ECDHE-ECDSA-AES     |  96 ++
 .../testdata/Server-TLSv13-ExportKeyingMaterial    | 103 +++
 .../tls/testdata/Server-TLSv13-HelloRetryRequest   | 129 +++
 src/crypto/tls/testdata/Server-TLSv13-IssueTicket  | 103 +++
 .../testdata/Server-TLSv13-IssueTicketPreDisable   | 103 +++
 src/crypto/tls/testdata/Server-TLSv13-P256         | 106 +++
 src/crypto/tls/testdata/Server-TLSv13-RSA-RSAPSS   | 101 +++
 src/crypto/tls/testdata/Server-TLSv13-Resume       |  66 ++
 .../Server-TLSv13-Resume-HelloRetryRequest         | 106 +++
 .../tls/testdata/Server-TLSv13-ResumeDisabled      | 104 +++
 src/crypto/tls/testdata/Server-TLSv13-X25519       | 102 +++
 src/crypto/tls/ticket.go                           |  63 +-
 src/crypto/x509/x509.go                            |   2 +-
 src/database/sql/convert.go                        |  45 +-
 src/database/sql/driver/driver.go                  |   5 +
 src/database/sql/fakedb_test.go                    |  20 +-
 src/database/sql/sql.go                            |  10 +-
 src/database/sql/sql_test.go                       |  46 +
 src/debug/gosym/pclntab_test.go                    |  38 +-
 src/debug/gosym/testdata/main.go                   |  10 +
 src/debug/gosym/{ => testdata}/pclinetest.h        |   0
 .../{pclinetest.asm => testdata/pclinetest.s}      |  14 +-
 src/encoding/asn1/asn1.go                          |   2 +-
 src/go/build/deps_test.go                          |   2 +-
 src/go/build/read_test.go                          |   7 +-
 src/go/doc/example.go                              |  12 +
 src/go/doc/example_test.go                         |  62 ++
 src/go/doc/reader.go                               |   2 +-
 src/go/internal/gcimporter/gcimporter_test.go      | 113 ++-
 src/go/printer/nodes.go                            |   2 +-
 src/go/types/builtins.go                           |   2 +-
 src/go/types/resolver.go                           |  18 +
 src/go/types/scope.go                              |   2 +-
 src/go/types/type.go                               |   2 +-
 src/html/template/js.go                            |   2 +-
 src/html/template/url.go                           |   2 +-
 src/internal/bytealg/compare_386.s                 |   9 -
 src/internal/bytealg/compare_amd64.s               |   9 -
 src/internal/bytealg/compare_amd64p32.s            |  10 -
 src/internal/bytealg/compare_arm.s                 |   9 -
 src/internal/bytealg/compare_arm64.s               |   9 -
 src/internal/bytealg/compare_generic.go            |  28 -
 src/internal/bytealg/compare_mipsx.s               |  33 -
 src/internal/bytealg/compare_native.go             |   9 +
 src/internal/bytealg/compare_ppc64x.s              |  31 -
 src/internal/bytealg/compare_s390x.s               |   9 -
 src/internal/bytealg/compare_wasm.s                |  11 -
 src/internal/bytealg/equal_386.s                   |  19 -
 src/internal/bytealg/equal_amd64.s                 |  19 -
 src/internal/bytealg/equal_amd64p32.s              |  20 -
 src/internal/bytealg/equal_arm.s                   |   4 -
 src/internal/bytealg/equal_arm64.s                 |  21 -
 src/internal/bytealg/equal_mips64x.s               |   4 -
 src/internal/bytealg/equal_mipsx.s                 |   4 -
 src/internal/bytealg/equal_native.go               |  12 +
 src/internal/bytealg/equal_ppc64x.s                |  20 -
 src/internal/bytealg/equal_s390x.s                 |  13 -
 src/internal/bytealg/equal_wasm.s                  |  21 -
 src/internal/bytealg/indexbyte_386.s               |   8 -
 src/internal/bytealg/indexbyte_amd64.s             |  24 -
 src/internal/bytealg/indexbyte_amd64p32.s          |  18 -
 src/internal/bytealg/indexbyte_arm.s               |   8 -
 src/internal/bytealg/indexbyte_arm64.s             |  16 -
 src/internal/bytealg/indexbyte_generic.go          |  22 -
 src/internal/bytealg/indexbyte_mips64x.s           |   8 -
 src/internal/bytealg/indexbyte_mipsx.s             |   8 -
 src/internal/bytealg/indexbyte_ppc64x.s            |  16 -
 src/internal/bytealg/indexbyte_s390x.s             |  16 -
 src/internal/bytealg/indexbyte_wasm.s              |  45 -
 src/internal/poll/fd_fsync_darwin.go               |  16 +-
 src/internal/poll/fd_fsync_posix.go                |  10 +-
 src/internal/poll/fd_fsync_windows.go              |  16 +
 src/internal/poll/fd_plan9.go                      |   2 +-
 src/internal/poll/fd_poll_nacljs.go                |   2 +-
 src/internal/poll/fd_poll_runtime.go               |   2 +-
 src/internal/poll/fd_unix.go                       |   9 +-
 src/internal/poll/fd_writev_darwin.go              |  16 +
 src/internal/poll/fd_writev_unix.go                |  20 +
 src/internal/poll/writev.go                        |  19 +-
 src/internal/syscall/unix/at.go                    |   2 +-
 src/internal/syscall/unix/at_darwin.go             |  31 +
 src/internal/syscall/unix/empty.s                  |   5 +
 src/internal/syscall/unix/nonblocking.go           |   2 +-
 src/internal/syscall/unix/nonblocking_darwin.go    |  24 +
 src/internal/traceparser/gc.go                     | 825 ++++++++++++++++++
 src/internal/traceparser/gc_test.go                | 198 +++++
 src/internal/traceparser/mud.go                    | 223 +++++
 src/internal/traceparser/mud_test.go               |  87 ++
 src/math/big/float.go                              |   2 +-
 src/math/cmplx/isinf.go                            |   2 +-
 src/math/cmplx/isnan.go                            |   2 +-
 src/math/signbit.go                                |   2 +-
 src/mime/multipart/multipart.go                    |   3 +-
 src/mime/multipart/multipart_test.go               |  10 +-
 src/net/http/roundtrip_js.go                       |  21 +-
 src/net/http/server.go                             |  55 +-
 src/net/http/server_test.go                        |  45 +
 src/net/http/socks_bundle.go                       |   1 +
 src/net/interface.go                               |  40 +-
 src/net/interface_bsd_test.go                      |   5 +
 src/net/interface_linux_test.go                    |  25 +
 src/net/interface_unix_test.go                     |  34 +
 src/os/exec_windows.go                             |   6 +
 src/os/stat_windows.go                             |   2 +-
 src/path/filepath/match_test.go                    |   2 +-
 src/reflect/all_test.go                            |  11 +
 src/reflect/type.go                                |  81 +-
 src/reflect/value.go                               |   2 +
 src/regexp/syntax/regexp.go                        |   2 +-
 src/runtime/asm.s                                  |   8 +
 src/runtime/asm_386.s                              |   3 -
 src/runtime/asm_amd64.s                            |   3 -
 src/runtime/asm_amd64p32.s                         |   3 -
 src/runtime/asm_arm.s                              |   3 -
 src/runtime/asm_arm64.s                            |   3 -
 src/runtime/asm_mips64x.s                          |   3 -
 src/runtime/asm_mipsx.s                            |   3 -
 src/runtime/asm_ppc64x.s                           |   3 -
 src/runtime/asm_s390x.s                            |   3 -
 src/runtime/asm_wasm.s                             |   3 -
 src/runtime/cgo/callbacks.go                       |   9 +-
 src/runtime/cgocall.go                             |  28 +-
 src/runtime/extern.go                              |   1 +
 src/runtime/heapdump.go                            |   4 +-
 src/runtime/iface.go                               | 134 +--
 src/runtime/internal/sys/zgoos_aix.go              |   4 +-
 src/runtime/internal/sys/zgoos_android.go          |   3 +-
 src/runtime/internal/sys/zgoos_darwin.go           |   3 +-
 src/runtime/internal/sys/zgoos_dragonfly.go        |   3 +-
 src/runtime/internal/sys/zgoos_freebsd.go          |   3 +-
 src/runtime/internal/sys/zgoos_hurd.go             |  23 +
 src/runtime/internal/sys/zgoos_js.go               |   2 +
 src/runtime/internal/sys/zgoos_linux.go            |   3 +-
 src/runtime/internal/sys/zgoos_nacl.go             |   3 +-
 src/runtime/internal/sys/zgoos_netbsd.go           |   3 +-
 src/runtime/internal/sys/zgoos_openbsd.go          |   3 +-
 src/runtime/internal/sys/zgoos_plan9.go            |   3 +-
 src/runtime/internal/sys/zgoos_solaris.go          |   3 +-
 src/runtime/internal/sys/zgoos_windows.go          |   3 +-
 src/runtime/internal/sys/zgoos_zos.go              |   3 +-
 src/runtime/lock_futex.go                          |   2 +-
 src/runtime/lock_js.go                             |  67 +-
 src/runtime/lock_sema.go                           |   2 +-
 src/runtime/map_test.go                            |  10 +-
 src/runtime/mbitmap.go                             |   2 +-
 src/runtime/mcache.go                              |   2 +-
 src/runtime/mcentral.go                            |  12 +-
 src/runtime/memclr_ppc64x.s                        | 129 ++-
 src/runtime/memmove_ppc64x.s                       |  51 +-
 src/runtime/mfixalloc.go                           |   2 +-
 src/runtime/mgc.go                                 |   6 +-
 src/runtime/mgcmark.go                             |   2 +-
 src/runtime/mgcsweep.go                            |  20 +-
 src/runtime/mgcwork.go                             |   4 +-
 src/runtime/mheap.go                               |  80 +-
 src/runtime/mstats.go                              |   2 +-
 src/runtime/mwbbuf.go                              |   2 +-
 src/runtime/netpoll.go                             |   2 +-
 src/runtime/os_linux_arm64.go                      |  10 +-
 src/runtime/os_nacl.go                             |   9 +
 src/runtime/panic.go                               |   4 +-
 src/runtime/pprof/internal/profile/profile.go      |   2 +-
 src/runtime/proc.go                                |  68 +-
 src/runtime/race.go                                |  77 ++
 src/runtime/rt0_js_wasm.s                          | 122 +--
 src/runtime/runtime-gdb_test.go                    |   8 +-
 src/runtime/runtime2.go                            |   1 +
 src/runtime/signal_windows.go                      |   2 +-
 src/runtime/stack_test.go                          |   3 +
 src/runtime/stubs.go                               |   2 +
 src/runtime/stubs_386.go                           |   8 +
 src/runtime/symtab.go                              |  24 +-
 src/runtime/sys_darwin.go                          |  55 ++
 src/runtime/sys_darwin_32.go                       |  21 +
 src/runtime/sys_darwin_386.s                       | 234 +++++
 src/runtime/sys_darwin_64.go                       |  21 +
 src/runtime/sys_darwin_amd64.s                     | 196 +++++
 src/runtime/sys_darwin_arm.s                       | 174 ++++
 src/runtime/sys_darwin_arm64.s                     | 190 +++-
 .../testdata/testprog/traceback_ancestors.go       |  56 +-
 src/runtime/traceback.go                           |   4 +-
 src/strings/compare_test.go                        |  13 +-
 src/strings/strings.go                             |   6 +-
 src/strings/strings_decl.go                        |  10 -
 src/sync/runtime.go                                |   2 +-
 src/syscall/asm_windows.s                          |  11 +
 src/syscall/bpf_bsd.go                             |   2 +-
 src/syscall/bpf_darwin.go                          | 185 ++++
 src/syscall/exec_bsd.go                            |  17 +-
 src/syscall/exec_darwin.go                         | 248 ++++++
 src/syscall/exec_unix.go                           |   8 +-
 src/syscall/flock.go                               |   2 +-
 src/syscall/flock_darwin.go                        |  13 +
 src/syscall/fs_js.go                               |   5 +-
 src/syscall/js/callback.go                         | 116 +--
 src/syscall/js/js_test.go                          |  44 +-
 src/syscall/mkall.sh                               |  16 +-
 src/syscall/mkasm_darwin.go                        |  58 ++
 src/syscall/mksyscall.pl                           |  47 +
 src/syscall/mksyscall_windows.go                   |   2 +-
 src/syscall/syscall_bsd.go                         |   2 -
 src/syscall/syscall_darwin.go                      |  95 +-
 src/syscall/syscall_darwin_386.go                  |  28 +-
 src/syscall/syscall_darwin_amd64.go                |  28 +-
 src/syscall/syscall_darwin_arm.go                  |  26 +-
 src/syscall/syscall_darwin_arm64.go                |  26 +-
 src/syscall/syscall_dragonfly.go                   |   1 +
 src/syscall/syscall_freebsd.go                     |   1 +
 src/syscall/syscall_netbsd.go                      |   2 +-
 src/syscall/syscall_openbsd.go                     |   2 +-
 src/syscall/syscall_unix_test.go                   |  18 +-
 src/syscall/zsyscall_darwin_386.go                 | 852 +++++++++++++++---
 src/syscall/zsyscall_darwin_386.s                  | 249 ++++++
 src/syscall/zsyscall_darwin_amd64.go               | 852 +++++++++++++++---
 src/syscall/zsyscall_darwin_amd64.s                | 249 ++++++
 src/syscall/zsyscall_darwin_arm.go                 | 852 +++++++++++++++---
 src/syscall/zsyscall_darwin_arm.s                  | 249 ++++++
 src/syscall/zsyscall_darwin_arm64.go               | 852 +++++++++++++++---
 src/syscall/zsyscall_darwin_arm64.s                | 249 ++++++
 src/time/time.go                                   |   4 +
 src/time/zoneinfo_js.go                            |   5 +-
 test/closure3.dir/main.go                          |   2 +
 test/codegen/comparisons.go                        |  33 +
 test/fixedbugs/issue18640.go                       |   5 +-
 test/fixedbugs/issue20780.go                       |  15 +-
 test/fixedbugs/issue23823.go                       |   8 +-
 test/fixedbugs/issue24939.go                       |   4 +-
 test/fixedbugs/issue27232.go                       |  19 +
 test/fixedbugs/issue27267.go                       |  21 +
 test/fixedbugs/issue28601.go                       |  15 +
 test/fixedbugs/issue28616.go                       |  25 +
 test/fixedbugs/issue7921.go                        |   2 +-
 test/inline.go                                     |  18 +
 test/live_syscall.go                               |   8 +-
 487 files changed, 30246 insertions(+), 4535 deletions(-)

diff --cc src/crypto/tls/handshake_client_tls13.go
index 5f0cb6d22b,1a819cc32f..0fb70ba3ef
--- a/src/crypto/tls/handshake_client_tls13.go
+++ b/src/crypto/tls/handshake_client_tls13.go
@@@ -349,7 -449,7 +449,7 @@@ func (hs *clientHandshakeStateTLS13) re
  	}
  
  	// See RFC 8446, Section 4.4.3.
- 	if !isSupportedSignatureAlgorithm(certVerify.signatureAlgorithm, hs.hello.supportedSignatureAlgorithms) {
 -	if !isSupportedSignatureAlgorithm(certVerify.signatureAlgorithm, supportedSignatureAlgorithms) {
++	if !isSupportedSignatureAlgorithm(certVerify.signatureAlgorithm, supportedSignatureAlgorithms()) {
  		c.sendAlert(alertIllegalParameter)
  		return errors.New("tls: invalid certificate signature algorithm")
  	}
diff --cc src/crypto/tls/handshake_messages_test.go
index ce2b04344c,21beb8ef2d..1f08f6ac0e
--- a/src/crypto/tls/handshake_messages_test.go
+++ b/src/crypto/tls/handshake_messages_test.go
@@@ -364,11 -386,17 +386,17 @@@ func (*certificateRequestMsgTLS13) Gene
  		m.scts = true
  	}
  	if rand.Intn(10) > 5 {
 -		m.supportedSignatureAlgorithms = supportedSignatureAlgorithms
 +		m.supportedSignatureAlgorithms = supportedSignatureAlgorithms()
  	}
  	if rand.Intn(10) > 5 {
 -		m.supportedSignatureAlgorithmsCert = supportedSignatureAlgorithms
 +		m.supportedSignatureAlgorithmsCert = supportedSignatureAlgorithms()
  	}
+ 	if rand.Intn(10) > 5 {
+ 		m.certificateAuthorities = make([][]byte, 3)
+ 		for i := 0; i < 3; i++ {
+ 			m.certificateAuthorities[i] = randomBytes(rand.Intn(10)+1, rand)
+ 		}
+ 	}
  	return reflect.ValueOf(m)
  }
  
diff --cc src/crypto/tls/handshake_server.go
index 00ce49f444,c3ab276724..d5a32879d0
--- a/src/crypto/tls/handshake_server.go
+++ b/src/crypto/tls/handshake_server.go
@@@ -679,10 -706,13 +706,15 @@@ func (c *Conn) processCertsFromClient(c
  		}
  	}
  
+ 	if len(certs) == 0 && requiresClientCert(c.config.ClientAuth) {
+ 		c.sendAlert(alertBadCertificate)
+ 		return errors.New("tls: client didn't provide a certificate")
+ 	}
+ 
  	if c.config.ClientAuth >= VerifyClientCertIfGiven && len(certs) > 0 {
  		opts := x509.VerifyOptions{
 +			IsBoring: isBoringCertificate,
 +
  			Roots:         c.config.ClientCAs,
  			CurrentTime:   c.config.time(),
  			Intermediates: x509.NewCertPool(),
diff --cc src/crypto/tls/handshake_server_tls13.go
index 0000000000,17bac61e19..ccbe045a68
mode 000000,100644..100644
--- a/src/crypto/tls/handshake_server_tls13.go
+++ b/src/crypto/tls/handshake_server_tls13.go
@@@ -1,0 -1,827 +1,827 @@@
+ // Copyright 2018 The Go Authors. All rights reserved.
+ // Use of this source code is governed by a BSD-style
+ // license that can be found in the LICENSE file.
+ 
+ package tls
+ 
+ import (
+ 	"bytes"
+ 	"crypto"
+ 	"crypto/hmac"
+ 	"crypto/rsa"
+ 	"errors"
+ 	"fmt"
+ 	"hash"
+ 	"io"
+ 	"sync/atomic"
+ 	"time"
+ )
+ 
+ // maxClientPSKIdentities is the number of client PSK identities the server will
+ // attempt to validate. It will ignore the rest not to let cheap ClientHello
+ // messages cause too much work in session ticket decryption attempts.
+ const maxClientPSKIdentities = 5
+ 
+ type serverHandshakeStateTLS13 struct {
+ 	c               *Conn
+ 	clientHello     *clientHelloMsg
+ 	hello           *serverHelloMsg
+ 	sentDummyCCS    bool
+ 	usingPSK        bool
+ 	suite           *cipherSuiteTLS13
+ 	cert            *Certificate
+ 	sigAlg          SignatureScheme
+ 	earlySecret     []byte
+ 	sharedKey       []byte
+ 	handshakeSecret []byte
+ 	masterSecret    []byte
+ 	trafficSecret   []byte // client_application_traffic_secret_0
+ 	transcript      hash.Hash
+ 	clientFinished  []byte
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) handshake() error {
+ 	c := hs.c
+ 
+ 	// For an overview of the TLS 1.3 handshake, see RFC 8446, Section 2.
+ 	if err := hs.processClientHello(); err != nil {
+ 		return err
+ 	}
+ 	if err := hs.checkForResumption(); err != nil {
+ 		return err
+ 	}
+ 	if err := hs.pickCertificate(); err != nil {
+ 		return err
+ 	}
+ 	c.buffering = true
+ 	if err := hs.sendServerParameters(); err != nil {
+ 		return err
+ 	}
+ 	if err := hs.sendServerCertificate(); err != nil {
+ 		return err
+ 	}
+ 	if err := hs.sendServerFinished(); err != nil {
+ 		return err
+ 	}
+ 	// Note that at this point we could start sending application data without
+ 	// waiting for the client's second flight, but the application might not
+ 	// expect the lack of replay protection of the ClientHello parameters.
+ 	if _, err := c.flush(); err != nil {
+ 		return err
+ 	}
+ 	if err := hs.readClientCertificate(); err != nil {
+ 		return err
+ 	}
+ 	if err := hs.readClientFinished(); err != nil {
+ 		return err
+ 	}
+ 
+ 	atomic.StoreUint32(&c.handshakeStatus, 1)
+ 
+ 	return nil
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) processClientHello() error {
+ 	c := hs.c
+ 
+ 	hs.hello = new(serverHelloMsg)
+ 
+ 	// TLS 1.3 froze the ServerHello.legacy_version field, and uses
+ 	// supported_versions instead. See RFC 8446, sections 4.1.3 and 4.2.1.
+ 	hs.hello.vers = VersionTLS12
+ 	hs.hello.supportedVersion = c.vers
+ 
+ 	if len(hs.clientHello.supportedVersions) == 0 {
+ 		c.sendAlert(alertIllegalParameter)
+ 		return errors.New("tls: client used the legacy version field to negotiate TLS 1.3")
+ 	}
+ 
+ 	if len(hs.clientHello.compressionMethods) != 1 ||
+ 		hs.clientHello.compressionMethods[0] != compressionNone {
+ 		c.sendAlert(alertIllegalParameter)
+ 		return errors.New("tls: TLS 1.3 client supports illegal compression methods")
+ 	}
+ 
+ 	hs.hello.random = make([]byte, 32)
+ 	if _, err := io.ReadFull(c.config.rand(), hs.hello.random); err != nil {
+ 		c.sendAlert(alertInternalError)
+ 		return err
+ 	}
+ 
+ 	if len(hs.clientHello.secureRenegotiation) != 0 {
+ 		c.sendAlert(alertHandshakeFailure)
+ 		return errors.New("tls: initial handshake had non-empty renegotiation extension")
+ 	}
+ 
+ 	if hs.clientHello.earlyData {
+ 		return errors.New("tls: early data skipping not implemented") // TODO(filippo)
+ 	}
+ 
+ 	hs.hello.sessionId = hs.clientHello.sessionId
+ 	hs.hello.compressionMethod = compressionNone
+ 
+ 	var preferenceList, supportedList []uint16
+ 	if c.config.PreferServerCipherSuites {
+ 		preferenceList = defaultCipherSuitesTLS13()
+ 		supportedList = hs.clientHello.cipherSuites
+ 	} else {
+ 		preferenceList = hs.clientHello.cipherSuites
+ 		supportedList = defaultCipherSuitesTLS13()
+ 	}
+ 	for _, suiteID := range preferenceList {
+ 		hs.suite = mutualCipherSuiteTLS13(supportedList, suiteID)
+ 		if hs.suite != nil {
+ 			break
+ 		}
+ 	}
+ 	if hs.suite == nil {
+ 		c.sendAlert(alertHandshakeFailure)
+ 		return errors.New("tls: no cipher suite supported by both client and server")
+ 	}
+ 	c.cipherSuite = hs.suite.id
+ 	hs.hello.cipherSuite = hs.suite.id
+ 	hs.transcript = hs.suite.hash.New()
+ 
+ 	// Pick the ECDHE group in server preference order, but give priority to
+ 	// groups with a key share, to avoid a HelloRetryRequest round-trip.
+ 	var selectedGroup CurveID
+ 	var clientKeyShare *keyShare
+ GroupSelection:
+ 	for _, preferredGroup := range c.config.curvePreferences() {
+ 		for _, ks := range hs.clientHello.keyShares {
+ 			if ks.group == preferredGroup {
+ 				selectedGroup = ks.group
+ 				clientKeyShare = &ks
+ 				break GroupSelection
+ 			}
+ 		}
+ 		if selectedGroup != 0 {
+ 			continue
+ 		}
+ 		for _, group := range hs.clientHello.supportedCurves {
+ 			if group == preferredGroup {
+ 				selectedGroup = group
+ 				break
+ 			}
+ 		}
+ 	}
+ 	if selectedGroup == 0 {
+ 		c.sendAlert(alertHandshakeFailure)
+ 		return errors.New("tls: no ECDHE curve supported by both client and server")
+ 	}
+ 	if clientKeyShare == nil {
+ 		if err := hs.doHelloRetryRequest(selectedGroup); err != nil {
+ 			return err
+ 		}
+ 		clientKeyShare = &hs.clientHello.keyShares[0]
+ 	}
+ 
+ 	if _, ok := curveForCurveID(selectedGroup); selectedGroup != X25519 && !ok {
+ 		c.sendAlert(alertInternalError)
+ 		return errors.New("tls: CurvePreferences includes unsupported curve")
+ 	}
+ 	params, err := generateECDHEParameters(c.config.rand(), selectedGroup)
+ 	if err != nil {
+ 		c.sendAlert(alertInternalError)
+ 		return err
+ 	}
+ 	hs.hello.serverShare = keyShare{group: selectedGroup, data: params.PublicKey()}
+ 	hs.sharedKey = params.SharedKey(clientKeyShare.data)
+ 	if hs.sharedKey == nil {
+ 		c.sendAlert(alertIllegalParameter)
+ 		return errors.New("tls: invalid client key share")
+ 	}
+ 
+ 	return nil
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) checkForResumption() error {
+ 	c := hs.c
+ 
+ 	if c.config.SessionTicketsDisabled {
+ 		return nil
+ 	}
+ 
+ 	modeOK := false
+ 	for _, mode := range hs.clientHello.pskModes {
+ 		if mode == pskModeDHE {
+ 			modeOK = true
+ 			break
+ 		}
+ 	}
+ 	if !modeOK {
+ 		return nil
+ 	}
+ 
+ 	if len(hs.clientHello.pskIdentities) != len(hs.clientHello.pskBinders) {
+ 		c.sendAlert(alertIllegalParameter)
+ 		return errors.New("tls: invalid or missing PSK binders")
+ 	}
+ 	if len(hs.clientHello.pskIdentities) == 0 {
+ 		return nil
+ 	}
+ 
+ 	for i, identity := range hs.clientHello.pskIdentities {
+ 		if i >= maxClientPSKIdentities {
+ 			break
+ 		}
+ 
+ 		plaintext, _ := c.decryptTicket(identity.label)
+ 		if plaintext == nil {
+ 			continue
+ 		}
+ 		sessionState := new(sessionStateTLS13)
+ 		if ok := sessionState.unmarshal(plaintext); !ok {
+ 			continue
+ 		}
+ 
+ 		createdAt := time.Unix(int64(sessionState.createdAt), 0)
+ 		if c.config.time().Sub(createdAt) > maxSessionTicketLifetime {
+ 			continue
+ 		}
+ 
+ 		// We don't check the obfuscated ticket age because it's affected by
+ 		// clock skew and it's only a freshness signal useful for shrinking the
+ 		// window for replay attacks, which don't affect us as we don't do 0-RTT.
+ 
+ 		pskSuite := cipherSuiteTLS13ByID(sessionState.cipherSuite)
+ 		if pskSuite == nil || pskSuite.hash != hs.suite.hash {
+ 			continue
+ 		}
+ 
+ 		// PSK connections don't re-establish client certificates, but carry
+ 		// them over in the session ticket. Ensure the presence of client certs
+ 		// in the ticket is consistent with the configured requirements.
+ 		sessionHasClientCerts := len(sessionState.certificate.Certificate) != 0
+ 		needClientCerts := requiresClientCert(c.config.ClientAuth)
+ 		if needClientCerts && !sessionHasClientCerts {
+ 			continue
+ 		}
+ 		if sessionHasClientCerts && c.config.ClientAuth == NoClientCert {
+ 			continue
+ 		}
+ 
+ 		psk := hs.suite.expandLabel(sessionState.resumptionSecret, "resumption",
+ 			nil, hs.suite.hash.Size())
+ 		hs.earlySecret = hs.suite.extract(psk, nil)
+ 		binderKey := hs.suite.deriveSecret(hs.earlySecret, resumptionBinderLabel, nil)
+ 		// Clone the transcript in case a HelloRetryRequest was recorded.
+ 		transcript := cloneHash(hs.transcript, hs.suite.hash)
+ 		if transcript == nil {
+ 			c.sendAlert(alertInternalError)
+ 			return errors.New("tls: internal error: failed to clone hash")
+ 		}
+ 		transcript.Write(hs.clientHello.marshalWithoutBinders())
+ 		pskBinder := hs.suite.finishedHash(binderKey, transcript)
+ 		if !hmac.Equal(hs.clientHello.pskBinders[i], pskBinder) {
+ 			c.sendAlert(alertDecryptError)
+ 			return errors.New("tls: invalid PSK binder")
+ 		}
+ 
+ 		if err := c.processCertsFromClient(sessionState.certificate); err != nil {
+ 			return err
+ 		}
+ 
+ 		hs.hello.selectedIdentityPresent = true
+ 		hs.hello.selectedIdentity = uint16(i)
+ 		hs.usingPSK = true
+ 		c.didResume = true
+ 		return nil
+ 	}
+ 
+ 	return nil
+ }
+ 
+ // cloneHash uses the encoding.BinaryMarshaler and encoding.BinaryUnmarshaler
+ // interfaces implemented by standard library hashes to clone the state of in
+ // to a new instance of h. It returns nil if the operation fails.
+ func cloneHash(in hash.Hash, h crypto.Hash) hash.Hash {
+ 	// Recreate the interface to avoid importing encoding.
+ 	type binaryMarshaler interface {
+ 		MarshalBinary() (data []byte, err error)
+ 		UnmarshalBinary(data []byte) error
+ 	}
+ 	marshaler, ok := in.(binaryMarshaler)
+ 	if !ok {
+ 		return nil
+ 	}
+ 	state, err := marshaler.MarshalBinary()
+ 	if err != nil {
+ 		return nil
+ 	}
+ 	out := h.New()
+ 	unmarshaler, ok := out.(binaryMarshaler)
+ 	if !ok {
+ 		return nil
+ 	}
+ 	if err := unmarshaler.UnmarshalBinary(state); err != nil {
+ 		return nil
+ 	}
+ 	return out
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) pickCertificate() error {
+ 	c := hs.c
+ 
+ 	// Only one of PSK and certificates are used at a time.
+ 	if hs.usingPSK {
+ 		return nil
+ 	}
+ 
+ 	// This implements a very simplistic certificate selection strategy for now:
+ 	// getCertificate delegates to the application Config.GetCertificate, or
+ 	// selects based on the server_name only. If the selected certificate's
+ 	// public key does not match the client signature_algorithms, the handshake
+ 	// is aborted. No attention is given to signature_algorithms_cert, and it is
+ 	// not passed to the application Config.GetCertificate. This will need to
+ 	// improve according to RFC 8446, sections 4.4.2.2 and 4.2.3.
+ 	certificate, err := c.config.getCertificate(clientHelloInfo(c, hs.clientHello))
+ 	if err != nil {
+ 		c.sendAlert(alertInternalError)
+ 		return err
+ 	}
+ 	supportedAlgs := signatureSchemesForCertificate(certificate)
+ 	if supportedAlgs == nil {
+ 		c.sendAlert(alertInternalError)
+ 		return fmt.Errorf("tls: unsupported certificate key (%T)", certificate.PrivateKey)
+ 	}
+ 	// Pick signature scheme in client preference order, as the server
+ 	// preference order is not configurable.
+ 	for _, preferredAlg := range hs.clientHello.supportedSignatureAlgorithms {
+ 		if isSupportedSignatureAlgorithm(preferredAlg, supportedAlgs) {
+ 			hs.sigAlg = preferredAlg
+ 			break
+ 		}
+ 	}
+ 	if hs.sigAlg == 0 {
+ 		c.sendAlert(alertHandshakeFailure)
+ 		return errors.New("tls: client doesn't support selected certificate")
+ 	}
+ 	hs.cert = certificate
+ 
+ 	return nil
+ }
+ 
+ // sendDummyChangeCipherSpec sends a ChangeCipherSpec record for compatibility
+ // with middleboxes that didn't implement TLS correctly. See RFC 8446, Appendix D.4.
+ func (hs *serverHandshakeStateTLS13) sendDummyChangeCipherSpec() error {
+ 	if hs.sentDummyCCS {
+ 		return nil
+ 	}
+ 	hs.sentDummyCCS = true
+ 
+ 	_, err := hs.c.writeRecord(recordTypeChangeCipherSpec, []byte{1})
+ 	return err
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) doHelloRetryRequest(selectedGroup CurveID) error {
+ 	c := hs.c
+ 
+ 	// The first ClientHello gets double-hashed into the transcript upon a
+ 	// HelloRetryRequest. See RFC 8446, Section 4.4.1.
+ 	hs.transcript.Write(hs.clientHello.marshal())
+ 	chHash := hs.transcript.Sum(nil)
+ 	hs.transcript.Reset()
+ 	hs.transcript.Write([]byte{typeMessageHash, 0, 0, uint8(len(chHash))})
+ 	hs.transcript.Write(chHash)
+ 
+ 	helloRetryRequest := &serverHelloMsg{
+ 		vers:              hs.hello.vers,
+ 		random:            helloRetryRequestRandom,
+ 		sessionId:         hs.hello.sessionId,
+ 		cipherSuite:       hs.hello.cipherSuite,
+ 		compressionMethod: hs.hello.compressionMethod,
+ 		supportedVersion:  hs.hello.supportedVersion,
+ 		selectedGroup:     selectedGroup,
+ 	}
+ 
+ 	hs.transcript.Write(helloRetryRequest.marshal())
+ 	if _, err := c.writeRecord(recordTypeHandshake, helloRetryRequest.marshal()); err != nil {
+ 		return err
+ 	}
+ 
+ 	if err := hs.sendDummyChangeCipherSpec(); err != nil {
+ 		return err
+ 	}
+ 
+ 	msg, err := c.readHandshake()
+ 	if err != nil {
+ 		return err
+ 	}
+ 
+ 	clientHello, ok := msg.(*clientHelloMsg)
+ 	if !ok {
+ 		c.sendAlert(alertUnexpectedMessage)
+ 		return unexpectedMessageError(clientHello, msg)
+ 	}
+ 
+ 	if len(clientHello.keyShares) != 1 || clientHello.keyShares[0].group != selectedGroup {
+ 		c.sendAlert(alertIllegalParameter)
+ 		return errors.New("tls: client sent invalid key share in second ClientHello")
+ 	}
+ 
+ 	if clientHello.earlyData {
+ 		c.sendAlert(alertIllegalParameter)
+ 		return errors.New("tls: client indicated early data in second ClientHello")
+ 	}
+ 
+ 	if illegalClientHelloChange(clientHello, hs.clientHello) {
+ 		c.sendAlert(alertIllegalParameter)
+ 		return errors.New("tls: client illegally modified second ClientHello")
+ 	}
+ 
+ 	hs.clientHello = clientHello
+ 	return nil
+ }
+ 
+ // illegalClientHelloChange returns whether the two ClientHello messages are
+ // different, with the exception of the changes allowed before and after a
+ // HelloRetryRequest. See RFC 8446, Section 4.1.2.
+ func illegalClientHelloChange(ch, ch1 *clientHelloMsg) bool {
+ 	if len(ch.supportedVersions) != len(ch1.supportedVersions) ||
+ 		len(ch.cipherSuites) != len(ch1.cipherSuites) ||
+ 		len(ch.supportedCurves) != len(ch1.supportedCurves) ||
+ 		len(ch.supportedSignatureAlgorithms) != len(ch1.supportedSignatureAlgorithms) ||
+ 		len(ch.supportedSignatureAlgorithmsCert) != len(ch1.supportedSignatureAlgorithmsCert) ||
+ 		len(ch.alpnProtocols) != len(ch1.alpnProtocols) {
+ 		return true
+ 	}
+ 	for i := range ch.supportedVersions {
+ 		if ch.supportedVersions[i] != ch1.supportedVersions[i] {
+ 			return true
+ 		}
+ 	}
+ 	for i := range ch.cipherSuites {
+ 		if ch.cipherSuites[i] != ch1.cipherSuites[i] {
+ 			return true
+ 		}
+ 	}
+ 	for i := range ch.supportedCurves {
+ 		if ch.supportedCurves[i] != ch1.supportedCurves[i] {
+ 			return true
+ 		}
+ 	}
+ 	for i := range ch.supportedSignatureAlgorithms {
+ 		if ch.supportedSignatureAlgorithms[i] != ch1.supportedSignatureAlgorithms[i] {
+ 			return true
+ 		}
+ 	}
+ 	for i := range ch.supportedSignatureAlgorithmsCert {
+ 		if ch.supportedSignatureAlgorithmsCert[i] != ch1.supportedSignatureAlgorithmsCert[i] {
+ 			return true
+ 		}
+ 	}
+ 	for i := range ch.alpnProtocols {
+ 		if ch.alpnProtocols[i] != ch1.alpnProtocols[i] {
+ 			return true
+ 		}
+ 	}
+ 	return ch.vers != ch1.vers ||
+ 		!bytes.Equal(ch.random, ch1.random) ||
+ 		!bytes.Equal(ch.sessionId, ch1.sessionId) ||
+ 		!bytes.Equal(ch.compressionMethods, ch1.compressionMethods) ||
+ 		ch.nextProtoNeg != ch1.nextProtoNeg ||
+ 		ch.serverName != ch1.serverName ||
+ 		ch.ocspStapling != ch1.ocspStapling ||
+ 		!bytes.Equal(ch.supportedPoints, ch1.supportedPoints) ||
+ 		ch.ticketSupported != ch1.ticketSupported ||
+ 		!bytes.Equal(ch.sessionTicket, ch1.sessionTicket) ||
+ 		ch.secureRenegotiationSupported != ch1.secureRenegotiationSupported ||
+ 		!bytes.Equal(ch.secureRenegotiation, ch1.secureRenegotiation) ||
+ 		ch.scts != ch1.scts ||
+ 		!bytes.Equal(ch.cookie, ch1.cookie) ||
+ 		!bytes.Equal(ch.pskModes, ch1.pskModes)
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) sendServerParameters() error {
+ 	c := hs.c
+ 
+ 	hs.transcript.Write(hs.clientHello.marshal())
+ 	hs.transcript.Write(hs.hello.marshal())
+ 	if _, err := c.writeRecord(recordTypeHandshake, hs.hello.marshal()); err != nil {
+ 		return err
+ 	}
+ 
+ 	if err := hs.sendDummyChangeCipherSpec(); err != nil {
+ 		return err
+ 	}
+ 
+ 	earlySecret := hs.earlySecret
+ 	if earlySecret == nil {
+ 		earlySecret = hs.suite.extract(nil, nil)
+ 	}
+ 	hs.handshakeSecret = hs.suite.extract(hs.sharedKey,
+ 		hs.suite.deriveSecret(earlySecret, "derived", nil))
+ 
+ 	clientSecret := hs.suite.deriveSecret(hs.handshakeSecret,
+ 		clientHandshakeTrafficLabel, hs.transcript)
+ 	c.in.setTrafficSecret(hs.suite, clientSecret)
+ 	serverSecret := hs.suite.deriveSecret(hs.handshakeSecret,
+ 		serverHandshakeTrafficLabel, hs.transcript)
+ 	c.out.setTrafficSecret(hs.suite, serverSecret)
+ 
+ 	err := c.config.writeKeyLog(keyLogLabelClientHandshake, hs.clientHello.random, clientSecret)
+ 	if err != nil {
+ 		c.sendAlert(alertInternalError)
+ 		return err
+ 	}
+ 	err = c.config.writeKeyLog(keyLogLabelServerHandshake, hs.clientHello.random, serverSecret)
+ 	if err != nil {
+ 		c.sendAlert(alertInternalError)
+ 		return err
+ 	}
+ 
+ 	encryptedExtensions := new(encryptedExtensionsMsg)
+ 
+ 	if len(hs.clientHello.alpnProtocols) > 0 {
+ 		if selectedProto, fallback := mutualProtocol(hs.clientHello.alpnProtocols, c.config.NextProtos); !fallback {
+ 			encryptedExtensions.alpnProtocol = selectedProto
+ 			c.clientProtocol = selectedProto
+ 		}
+ 	}
+ 
+ 	hs.transcript.Write(encryptedExtensions.marshal())
+ 	if _, err := c.writeRecord(recordTypeHandshake, encryptedExtensions.marshal()); err != nil {
+ 		return err
+ 	}
+ 
+ 	return nil
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) requestClientCert() bool {
+ 	return hs.c.config.ClientAuth >= RequestClientCert && !hs.usingPSK
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) sendServerCertificate() error {
+ 	c := hs.c
+ 
+ 	// Only one of PSK and certificates are used at a time.
+ 	if hs.usingPSK {
+ 		return nil
+ 	}
+ 
+ 	if hs.requestClientCert() {
+ 		// Request a client certificate
+ 		certReq := new(certificateRequestMsgTLS13)
+ 		certReq.ocspStapling = true
+ 		certReq.scts = true
 -		certReq.supportedSignatureAlgorithms = supportedSignatureAlgorithms
++		certReq.supportedSignatureAlgorithms = supportedSignatureAlgorithms()
+ 		if c.config.ClientCAs != nil {
+ 			certReq.certificateAuthorities = c.config.ClientCAs.Subjects()
+ 		}
+ 
+ 		hs.transcript.Write(certReq.marshal())
+ 		if _, err := c.writeRecord(recordTypeHandshake, certReq.marshal()); err != nil {
+ 			return err
+ 		}
+ 	}
+ 
+ 	certMsg := new(certificateMsgTLS13)
+ 
+ 	certMsg.certificate = *hs.cert
+ 	certMsg.scts = hs.clientHello.scts && len(hs.cert.SignedCertificateTimestamps) > 0
+ 	certMsg.ocspStapling = hs.clientHello.ocspStapling && len(hs.cert.OCSPStaple) > 0
+ 
+ 	hs.transcript.Write(certMsg.marshal())
+ 	if _, err := c.writeRecord(recordTypeHandshake, certMsg.marshal()); err != nil {
+ 		return err
+ 	}
+ 
+ 	certVerifyMsg := new(certificateVerifyMsg)
+ 	certVerifyMsg.hasSignatureAlgorithm = true
+ 	certVerifyMsg.signatureAlgorithm = hs.sigAlg
+ 
+ 	sigType := signatureFromSignatureScheme(hs.sigAlg)
+ 	sigHash, err := hashFromSignatureScheme(hs.sigAlg)
+ 	if sigType == 0 || err != nil {
+ 		// getCertificate returned a certificate incompatible with the
+ 		// ClientHello supported signature algorithms.
+ 		c.sendAlert(alertInternalError)
+ 		return err
+ 	}
+ 	h := sigHash.New()
+ 	writeSignedMessage(h, serverSignatureContext, hs.transcript)
+ 
+ 	signOpts := crypto.SignerOpts(sigHash)
+ 	if sigType == signatureRSAPSS {
+ 		signOpts = &rsa.PSSOptions{SaltLength: rsa.PSSSaltLengthEqualsHash, Hash: sigHash}
+ 	}
+ 	sig, err := hs.cert.PrivateKey.(crypto.Signer).Sign(c.config.rand(), h.Sum(nil), signOpts)
+ 	if err != nil {
+ 		c.sendAlert(alertInternalError)
+ 		return errors.New("tls: failed to sign handshake: " + err.Error())
+ 	}
+ 	certVerifyMsg.signature = sig
+ 
+ 	hs.transcript.Write(certVerifyMsg.marshal())
+ 	if _, err := c.writeRecord(recordTypeHandshake, certVerifyMsg.marshal()); err != nil {
+ 		return err
+ 	}
+ 
+ 	return nil
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) sendServerFinished() error {
+ 	c := hs.c
+ 
+ 	finished := &finishedMsg{
+ 		verifyData: hs.suite.finishedHash(c.out.trafficSecret, hs.transcript),
+ 	}
+ 
+ 	hs.transcript.Write(finished.marshal())
+ 	if _, err := c.writeRecord(recordTypeHandshake, finished.marshal()); err != nil {
+ 		return err
+ 	}
+ 
+ 	// Derive secrets that take context through the server Finished.
+ 
+ 	hs.masterSecret = hs.suite.extract(nil,
+ 		hs.suite.deriveSecret(hs.handshakeSecret, "derived", nil))
+ 
+ 	hs.trafficSecret = hs.suite.deriveSecret(hs.masterSecret,
+ 		clientApplicationTrafficLabel, hs.transcript)
+ 	serverSecret := hs.suite.deriveSecret(hs.masterSecret,
+ 		serverApplicationTrafficLabel, hs.transcript)
+ 	c.out.setTrafficSecret(hs.suite, serverSecret)
+ 
+ 	err := c.config.writeKeyLog(keyLogLabelClientTraffic, hs.clientHello.random, hs.trafficSecret)
+ 	if err != nil {
+ 		c.sendAlert(alertInternalError)
+ 		return err
+ 	}
+ 	err = c.config.writeKeyLog(keyLogLabelServerTraffic, hs.clientHello.random, serverSecret)
+ 	if err != nil {
+ 		c.sendAlert(alertInternalError)
+ 		return err
+ 	}
+ 
+ 	c.ekm = hs.suite.exportKeyingMaterial(hs.masterSecret, hs.transcript)
+ 
+ 	// If we did not request client certificates, at this point we can
+ 	// precompute the client finished and roll the transcript forward to send
+ 	// session tickets in our first flight.
+ 	if !hs.requestClientCert() {
+ 		if err := hs.sendSessionTickets(); err != nil {
+ 			return err
+ 		}
+ 	}
+ 
+ 	return nil
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) shouldSendSessionTickets() bool {
+ 	if hs.c.config.SessionTicketsDisabled {
+ 		return false
+ 	}
+ 
+ 	// Don't send tickets the client wouldn't use. See RFC 8446, Section 4.2.9.
+ 	for _, pskMode := range hs.clientHello.pskModes {
+ 		if pskMode == pskModeDHE {
+ 			return true
+ 		}
+ 	}
+ 	return false
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) sendSessionTickets() error {
+ 	c := hs.c
+ 
+ 	hs.clientFinished = hs.suite.finishedHash(c.in.trafficSecret, hs.transcript)
+ 	finishedMsg := &finishedMsg{
+ 		verifyData: hs.clientFinished,
+ 	}
+ 	hs.transcript.Write(finishedMsg.marshal())
+ 
+ 	if !hs.shouldSendSessionTickets() {
+ 		return nil
+ 	}
+ 
+ 	resumptionSecret := hs.suite.deriveSecret(hs.masterSecret,
+ 		resumptionLabel, hs.transcript)
+ 
+ 	m := new(newSessionTicketMsgTLS13)
+ 
+ 	var certsFromClient [][]byte
+ 	for _, cert := range c.peerCertificates {
+ 		certsFromClient = append(certsFromClient, cert.Raw)
+ 	}
+ 	state := sessionStateTLS13{
+ 		cipherSuite:      hs.suite.id,
+ 		createdAt:        uint64(c.config.time().Unix()),
+ 		resumptionSecret: resumptionSecret,
+ 		certificate: Certificate{
+ 			Certificate:                 certsFromClient,
+ 			OCSPStaple:                  c.ocspResponse,
+ 			SignedCertificateTimestamps: c.scts,
+ 		},
+ 	}
+ 	var err error
+ 	m.label, err = c.encryptTicket(state.marshal())
+ 	if err != nil {
+ 		return err
+ 	}
+ 	m.lifetime = uint32(maxSessionTicketLifetime / time.Second)
+ 
+ 	if _, err := c.writeRecord(recordTypeHandshake, m.marshal()); err != nil {
+ 		return err
+ 	}
+ 
+ 	return nil
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) readClientCertificate() error {
+ 	c := hs.c
+ 
+ 	if !hs.requestClientCert() {
+ 		return nil
+ 	}
+ 
+ 	// If we requested a client certificate, then the client must send a
+ 	// certificate message. If it's empty, no CertificateVerify is sent.
+ 
+ 	msg, err := c.readHandshake()
+ 	if err != nil {
+ 		return err
+ 	}
+ 
+ 	certMsg, ok := msg.(*certificateMsgTLS13)
+ 	if !ok {
+ 		c.sendAlert(alertUnexpectedMessage)
+ 		return unexpectedMessageError(certMsg, msg)
+ 	}
+ 	hs.transcript.Write(certMsg.marshal())
+ 
+ 	if err := c.processCertsFromClient(certMsg.certificate); err != nil {
+ 		return err
+ 	}
+ 
+ 	if len(certMsg.certificate.Certificate) != 0 {
+ 		msg, err = c.readHandshake()
+ 		if err != nil {
+ 			return err
+ 		}
+ 
+ 		certVerify, ok := msg.(*certificateVerifyMsg)
+ 		if !ok {
+ 			c.sendAlert(alertUnexpectedMessage)
+ 			return unexpectedMessageError(certVerify, msg)
+ 		}
+ 
+ 		// See RFC 8446, Section 4.4.3.
 -		if !isSupportedSignatureAlgorithm(certVerify.signatureAlgorithm, supportedSignatureAlgorithms) {
++		if !isSupportedSignatureAlgorithm(certVerify.signatureAlgorithm, supportedSignatureAlgorithms()) {
+ 			c.sendAlert(alertIllegalParameter)
+ 			return errors.New("tls: invalid certificate signature algorithm")
+ 		}
+ 		sigType := signatureFromSignatureScheme(certVerify.signatureAlgorithm)
+ 		sigHash, err := hashFromSignatureScheme(certVerify.signatureAlgorithm)
+ 		if sigType == 0 || err != nil {
+ 			c.sendAlert(alertInternalError)
+ 			return err
+ 		}
+ 		if sigType == signaturePKCS1v15 || sigHash == crypto.SHA1 {
+ 			c.sendAlert(alertIllegalParameter)
+ 			return errors.New("tls: invalid certificate signature algorithm")
+ 		}
+ 		h := sigHash.New()
+ 		writeSignedMessage(h, clientSignatureContext, hs.transcript)
+ 		if err := verifyHandshakeSignature(sigType, c.peerCertificates[0].PublicKey,
+ 			sigHash, h.Sum(nil), certVerify.signature); err != nil {
+ 			c.sendAlert(alertDecryptError)
+ 			return errors.New("tls: invalid certificate signature")
+ 		}
+ 
+ 		hs.transcript.Write(certVerify.marshal())
+ 	}
+ 
+ 	// If we waited until the client certificates to send session tickets, we
+ 	// are ready to do it now.
+ 	if err := hs.sendSessionTickets(); err != nil {
+ 		return err
+ 	}
+ 
+ 	return nil
+ }
+ 
+ func (hs *serverHandshakeStateTLS13) readClientFinished() error {
+ 	c := hs.c
+ 
+ 	msg, err := c.readHandshake()
+ 	if err != nil {
+ 		return err
+ 	}
+ 
+ 	finished, ok := msg.(*finishedMsg)
+ 	if !ok {
+ 		c.sendAlert(alertUnexpectedMessage)
+ 		return unexpectedMessageError(finished, msg)
+ 	}
+ 
+ 	if !hmac.Equal(hs.clientFinished, finished.verifyData) {
+ 		c.sendAlert(alertDecryptError)
+ 		return errors.New("tls: invalid client finished hash")
+ 	}
+ 
+ 	c.in.setTrafficSecret(hs.suite, hs.trafficSecret)
+ 
+ 	return nil
+ }
