commit 81484cf6263461057251bbda825f2c3dc4cdcd09
Author: Keith Randall <khr@golang.org>
Date:   Thu Oct 14 21:08:11 2021 -0700

    doc: document new reflect.SetIter{Key,Value} functions
    
    Update #48294
    Update #47694
    
    Change-Id: I4d4c01be74a9736d89a4ec92318ce29ff7289a0d
    Reviewed-on: https://go-review.googlesource.com/c/go/+/356050
    Trust: Keith Randall <khr@golang.org>
    Reviewed-by: Joe Tsai <joetsai@digital-static.net>
---
 doc/go1.18.html | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/doc/go1.18.html b/doc/go1.18.html
index a5b47fa261..f4d097d06b 100644
--- a/doc/go1.18.html
+++ b/doc/go1.18.html
@@ -127,12 +127,25 @@ Do not send CLs removing the interior tags from such phrases.
   </dd>
 </dl><!-- image/draw -->
 
+<dl id="reflect"><dt><a href="/pkg/reflect/">reflect</a></dt>
+  <dd>
+    <p><!-- CL 356049, 320929 -->
+      The new
+      <a href="/pkg/reflect/#Value.SetIterKey"><code>Value.SetIterKey</code></a>
+      and <a href="/pkg/reflect/#Value.SetIterValue"><code>Value.SetIterValue</code></a>
+      methods set a Value using a map iterator as the source. They are equivalent to
+      <code>Value.Set(iter.Key())</code> and <code>Value.Set(iter.Value())</code> but
+      do fewer allocations.
+    </p>
+  </dd>
+</dl><!-- reflect -->
+
 <dl id="syscall"><dt><a href="/pkg/syscall/">syscall</a></dt>
   <dd>
     <p><!-- CL 336550 -->
       The new function <a href="/pkg/syscall/?GOOS=windows#SyscallN"><code>SyscallN</code></a>
       has been introduced for Windows, allowing for calls with arbitrary number
-      of arguments. As results,
+      of arguments. As a result,
       <a href="/pkg/syscall/?GOOS=windows#Syscall"><code>Syscall</code></a>,
       <a href="/pkg/syscall/?GOOS=windows#Syscall6"><code>Syscall6</code></a>,
       <a href="/pkg/syscall/?GOOS=windows#Syscall9"><code>Syscall9</code></a>,
