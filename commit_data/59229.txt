commit 269e0df5f315bd24943d2607bed7b7c0200037e9
Author: guoguangwu <guoguangwu@magic-shield.com>
Date:   Sat Feb 24 10:29:13 2024 +0000

    syscall: fix typo in comment
    
    Change-Id: I1804315fd3ec50ab1e3f480efd92c59e36fd47d0
    GitHub-Last-Rev: 07d969ab71eabfe7034b62f45a1f4058b66ee014
    GitHub-Pull-Request: golang/go#65921
    Reviewed-on: https://go-review.googlesource.com/c/go/+/566615
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Reviewed-by: Tobias Klauser <tobias.klauser@gmail.com>
    Reviewed-by: Emmanuel Odeke <emmanuel@orijtech.com>
    Reviewed-by: Carlos Amedee <carlos@golang.org>
---
 src/syscall/exec_linux_test.go | 4 ++--
 src/syscall/fs_wasip1.go       | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/syscall/exec_linux_test.go b/src/syscall/exec_linux_test.go
index 68ec6fe3f8..5ec1a24ba4 100644
--- a/src/syscall/exec_linux_test.go
+++ b/src/syscall/exec_linux_test.go
@@ -219,7 +219,7 @@ func TestGroupCleanupUserNamespace(t *testing.T) {
 // Test for https://go.dev/issue/19661: unshare fails because systemd
 // has forced / to be shared
 func TestUnshareMountNameSpace(t *testing.T) {
-	const mountNotSupported = "mount is not supported: " // Output prefix indicatating a test skip.
+	const mountNotSupported = "mount is not supported: " // Output prefix indicating a test skip.
 	if os.Getenv("GO_WANT_HELPER_PROCESS") == "1" {
 		dir := flag.Args()[0]
 		err := syscall.Mount("none", dir, "proc", 0, "")
@@ -273,7 +273,7 @@ func TestUnshareMountNameSpace(t *testing.T) {
 
 // Test for Issue 20103: unshare fails when chroot is used
 func TestUnshareMountNameSpaceChroot(t *testing.T) {
-	const mountNotSupported = "mount is not supported: " // Output prefix indicatating a test skip.
+	const mountNotSupported = "mount is not supported: " // Output prefix indicating a test skip.
 	if os.Getenv("GO_WANT_HELPER_PROCESS") == "1" {
 		dir := flag.Args()[0]
 		err := syscall.Mount("none", dir, "proc", 0, "")
diff --git a/src/syscall/fs_wasip1.go b/src/syscall/fs_wasip1.go
index 4ad3f9610b..4d3d7d72c6 100644
--- a/src/syscall/fs_wasip1.go
+++ b/src/syscall/fs_wasip1.go
@@ -566,7 +566,7 @@ func Open(path string, openmode int, perm uint32) (int, error) {
 	if errno == EISDIR && oflags == 0 && fdflags == 0 && ((rights & writeRights) == 0) {
 		// wasmtime and wasmedge will error if attempting to open a directory
 		// because we are asking for too many rights. However, we cannot
-		// determine ahread of time if the path we are about to open is a
+		// determine ahead of time if the path we are about to open is a
 		// directory, so instead we fallback to a second call to path_open with
 		// a more limited set of rights.
 		//
