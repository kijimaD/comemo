commit b2249f2018155184abe10781633b8d66e566fa86
Author: Akshat Kumar <seed@mail.nanosouffle.net>
Date:   Thu Feb 28 07:18:02 2013 +0100

    net: pass tests on Plan 9
    
    Ignore problematic tests and un-ignore one
    we can now pass.
    
    R=rsc, rminnich, ality, dave, bradfitz
    CC=golang-dev
    https://golang.org/cl/7396060
---
 src/pkg/net/file_test.go      |  2 +-
 src/pkg/net/net_test.go       |  4 ++++
 src/pkg/net/protoconn_test.go |  5 +++++
 src/pkg/net/timeout_test.go   | 15 +++++++++++++++
 4 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/src/pkg/net/file_test.go b/src/pkg/net/file_test.go
index 78c62221da..acaf188510 100644
--- a/src/pkg/net/file_test.go
+++ b/src/pkg/net/file_test.go
@@ -89,7 +89,7 @@ var fileListenerTests = []struct {
 
 func TestFileListener(t *testing.T) {
 	switch runtime.GOOS {
-	case "plan9", "windows":
+	case "windows":
 		t.Skipf("skipping test on %q", runtime.GOOS)
 	}
 
diff --git a/src/pkg/net/net_test.go b/src/pkg/net/net_test.go
index 8a560b5219..1a512a5b11 100644
--- a/src/pkg/net/net_test.go
+++ b/src/pkg/net/net_test.go
@@ -173,6 +173,10 @@ func TestUDPListenClose(t *testing.T) {
 }
 
 func TestTCPClose(t *testing.T) {
+	switch runtime.GOOS {
+	case "plan9":
+		t.Skipf("skipping test on %q", runtime.GOOS)
+	}
 	l, err := Listen("tcp", "127.0.0.1:0")
 	if err != nil {
 		t.Fatal(err)
diff --git a/src/pkg/net/protoconn_test.go b/src/pkg/net/protoconn_test.go
index 0c3b3abeb6..fd7e4be14b 100644
--- a/src/pkg/net/protoconn_test.go
+++ b/src/pkg/net/protoconn_test.go
@@ -25,6 +25,11 @@ var condErrorf = func() func(*testing.T, string, ...interface{}) {
 }()
 
 func TestTCPListenerSpecificMethods(t *testing.T) {
+	switch runtime.GOOS {
+	case "plan9":
+		t.Skipf("skipping test on %q", runtime.GOOS)
+	}
+
 	la, err := ResolveTCPAddr("tcp4", "127.0.0.1:0")
 	if err != nil {
 		t.Fatalf("net.ResolveTCPAddr failed: %v", err)
diff --git a/src/pkg/net/timeout_test.go b/src/pkg/net/timeout_test.go
index 7cf45ca0a0..0260efcc0b 100644
--- a/src/pkg/net/timeout_test.go
+++ b/src/pkg/net/timeout_test.go
@@ -420,6 +420,11 @@ func TestVariousDeadlines4Proc(t *testing.T) {
 }
 
 func testVariousDeadlines(t *testing.T, maxProcs int) {
+	switch runtime.GOOS {
+	case "plan9":
+		t.Skipf("skipping test on %q", runtime.GOOS)
+	}
+
 	defer runtime.GOMAXPROCS(runtime.GOMAXPROCS(maxProcs))
 	ln := newLocalListener(t)
 	defer ln.Close()
@@ -518,6 +523,11 @@ func testVariousDeadlines(t *testing.T, maxProcs int) {
 // TestReadDeadlineDataAvailable tests that read deadlines work, even
 // if there's data ready to be read.
 func TestReadDeadlineDataAvailable(t *testing.T) {
+	switch runtime.GOOS {
+	case "plan9":
+		t.Skipf("skipping test on %q", runtime.GOOS)
+	}
+
 	ln := newLocalListener(t)
 	defer ln.Close()
 
@@ -552,6 +562,11 @@ func TestReadDeadlineDataAvailable(t *testing.T) {
 // TestWriteDeadlineBufferAvailable tests that write deadlines work, even
 // if there's buffer space available to write.
 func TestWriteDeadlineBufferAvailable(t *testing.T) {
+	switch runtime.GOOS {
+	case "plan9":
+		t.Skipf("skipping test on %q", runtime.GOOS)
+	}
+
 	ln := newLocalListener(t)
 	defer ln.Close()
 
