commit a6a0ed3c4760fb6c59c55c1a01ddba8a558e04eb
Author: Russ Cox <rsc@golang.org>
Date:   Wed May 15 14:31:48 2019 -0400

    misc/cgo: disable testcarchive, testplugin during -short test (including all.bash)
    
    These tests take 20 seconds each to rebuild the entire world
    in their respective modes. That's too much for short mode,
    including all.bash on developer machines.
    
    Keep doing it on builders and if someone runs 'go test' by hand
    in that directory.
    
    For #26473.
    
    Change-Id: I3dc6955bc3aa7a20fd170efcde72a7d19b37bdbf
    Reviewed-on: https://go-review.googlesource.com/c/go/+/177417
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 misc/cgo/testcarchive/carchive_test.go | 6 ++++++
 misc/cgo/testcshared/cshared_test.go   | 6 ++++++
 misc/cgo/testplugin/plugin_test.go     | 6 ++++++
 src/cmd/dist/test.go                   | 2 +-
 4 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/misc/cgo/testcarchive/carchive_test.go b/misc/cgo/testcarchive/carchive_test.go
index 1fa3f21491..381239ab79 100644
--- a/misc/cgo/testcarchive/carchive_test.go
+++ b/misc/cgo/testcarchive/carchive_test.go
@@ -8,6 +8,7 @@ import (
 	"bufio"
 	"bytes"
 	"debug/elf"
+	"flag"
 	"fmt"
 	"io/ioutil"
 	"log"
@@ -36,6 +37,11 @@ var GOOS, GOARCH, GOPATH string
 var libgodir string
 
 func TestMain(m *testing.M) {
+	flag.Parse()
+	if testing.Short() && os.Getenv("GO_BUILDER_NAME") == "" {
+		fmt.Printf("SKIP - short mode and $GO_BUILDER_NAME not set\n")
+		os.Exit(0)
+	}
 	log.SetFlags(log.Lshortfile)
 	os.Exit(testMain(m))
 }
diff --git a/misc/cgo/testcshared/cshared_test.go b/misc/cgo/testcshared/cshared_test.go
index 4b3968e417..daef3a9e54 100644
--- a/misc/cgo/testcshared/cshared_test.go
+++ b/misc/cgo/testcshared/cshared_test.go
@@ -7,6 +7,7 @@ package cshared_test
 import (
 	"bytes"
 	"debug/elf"
+	"flag"
 	"fmt"
 	"io/ioutil"
 	"log"
@@ -36,6 +37,11 @@ func TestMain(m *testing.M) {
 
 func testMain(m *testing.M) int {
 	log.SetFlags(log.Lshortfile)
+	flag.Parse()
+	if testing.Short() && os.Getenv("GO_BUILDER_NAME") == "" {
+		fmt.Printf("SKIP - short mode and $GO_BUILDER_NAME not set\n")
+		os.Exit(0)
+	}
 
 	GOOS = goEnv("GOOS")
 	GOARCH = goEnv("GOARCH")
diff --git a/misc/cgo/testplugin/plugin_test.go b/misc/cgo/testplugin/plugin_test.go
index 54e3db36c4..7e2b6eb04c 100644
--- a/misc/cgo/testplugin/plugin_test.go
+++ b/misc/cgo/testplugin/plugin_test.go
@@ -7,6 +7,7 @@ package plugin_test
 import (
 	"bytes"
 	"context"
+	"flag"
 	"fmt"
 	"io/ioutil"
 	"log"
@@ -22,6 +23,11 @@ import (
 var gcflags string = os.Getenv("GO_GCFLAGS")
 
 func TestMain(m *testing.M) {
+	flag.Parse()
+	if testing.Short() && os.Getenv("GO_BUILDER_NAME") == "" {
+		fmt.Printf("SKIP - short mode and $GO_BUILDER_NAME not set\n")
+		os.Exit(0)
+	}
 	log.SetFlags(log.Lshortfile)
 	os.Exit(testMain(m))
 }
diff --git a/src/cmd/dist/test.go b/src/cmd/dist/test.go
index 8f9aabdbbd..54d9a644ba 100644
--- a/src/cmd/dist/test.go
+++ b/src/cmd/dist/test.go
@@ -991,7 +991,7 @@ func (t *tester) runHostTest(dir, pkg string) error {
 	if err := cmd.Run(); err != nil {
 		return err
 	}
-	return t.dirCmd(dir, "./test.test").Run()
+	return t.dirCmd(dir, "./test.test", "-test.short").Run()
 }
 
 func (t *tester) cgoTest(dt *distTest) error {
