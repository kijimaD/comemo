commit 1ae124b5ff38045008402b51017c8303eef2cda1
Author: Austin Clements <austin@google.com>
Date:   Wed Feb 18 16:40:31 2015 -0500

    runtime: make gcDrainN take an int instead of uintptr
    
    Nit.  There's no reason to take a uintptr and doing so just requires
    casts in annoying places.
    
    Change-Id: Ifeb9638c6d94eae619c490930cf724cc315680ba
    Reviewed-on: https://go-review.googlesource.com/5230
    Reviewed-by: Russ Cox <rsc@golang.org>
---
 src/runtime/mgc.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/runtime/mgc.go b/src/runtime/mgc.go
index 1a3e70fcdd..7d68d5bf5f 100644
--- a/src/runtime/mgc.go
+++ b/src/runtime/mgc.go
@@ -494,9 +494,9 @@ func gcDrain(wbuf *workbuf) {
 // gcDrainN scans n objects starting with those in wbuf, blackening
 // grey objects.
 //go:nowritebarrier
-func gcDrainN(wbuf *workbuf, n uintptr) *workbuf {
+func gcDrainN(wbuf *workbuf, n int) *workbuf {
 	checknocurrentwbuf()
-	for i := uintptr(0); i < n; i++ {
+	for i := 0; i < n; i++ {
 		if wbuf.nobj == 0 {
 			putempty(wbuf, 544)
 			wbuf = trygetfull(545)
@@ -817,7 +817,7 @@ func gchelpwork() {
 			wbuf = trygetfull(1228)
 		}
 		if wbuf != nil {
-			wbuf = gcDrainN(wbuf, uintptr(len(wbuf.obj))) // drain upto one buffer's worth of objects
+			wbuf = gcDrainN(wbuf, len(wbuf.obj)) // drain upto one buffer's worth of objects
 			if wbuf != nil {
 				if wbuf.nobj != 0 {
 					putfull(wbuf, 1175)
