commit 8620e2b04e0ca6296070fe36ca7f5952af3b90e9
Author: Keith Randall <khr@golang.org>
Date:   Sat Sep 6 10:12:47 2014 -0700

    runtime: badreflectcall runs on the G stack - convert to Go.
    
    LGTM=iant
    R=golang-codereviews, iant
    CC=golang-codereviews
    https://golang.org/cl/136260043
---
 src/pkg/runtime/proc.c  | 6 ------
 src/pkg/runtime/proc.go | 4 ++++
 2 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/src/pkg/runtime/proc.c b/src/pkg/runtime/proc.c
index c9a56a4bbd..414196ceb0 100644
--- a/src/pkg/runtime/proc.c
+++ b/src/pkg/runtime/proc.c
@@ -2617,12 +2617,6 @@ runtime路mcount(void)
 	return runtime路sched.mcount;
 }
 
-void
-runtime路badreflectcall(void) // called from assembly
-{
-	runtime路panicstring("runtime: arg size to reflect.call more than 1GB");
-}
-
 static struct {
 	uint32 lock;
 	int32 hz;
diff --git a/src/pkg/runtime/proc.go b/src/pkg/runtime/proc.go
index f324d5c90f..a9cac266ba 100644
--- a/src/pkg/runtime/proc.go
+++ b/src/pkg/runtime/proc.go
@@ -101,6 +101,10 @@ func badmcall2(fn func(*g)) {
 	gothrow("runtime: mcall function returned")
 }
 
+func badreflectcall() {
+	panic("runtime: arg size to reflect.call more than 1GB")
+}
+
 func lockedOSThread() bool {
 	gp := getg()
 	return gp.lockedm != nil && gp.m.lockedg != nil
