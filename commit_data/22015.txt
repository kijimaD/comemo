commit 23fd374bf22aa2eea9c07076061ef8cfbc6cf3d7
Author: Robert Griesemer <gri@golang.org>
Date:   Fri Mar 13 17:24:30 2015 -0700

    math/big: wrap Float.Cmp result in struct to prevent wrong use
    
    Float.Cmp used to return a value < 0, 0, or > 0 depending on how
    arguments x, y compared against each other. With the possibility
    of NaNs, the result was changed into an Accuracy (to include Undef).
    Consequently, Float.Cmp results could still be compared for (in-)
    equality with 0, but comparing if < 0 or > 0 would provide the
    wrong answer w/o any obvious notice by the compiler.
    
    This change wraps Float.Cmp results into a struct and accessors
    are used to access the desired result. This prevents incorrect
    use.
    
    Change-Id: I34e6a6c1859251ec99b5cf953e82542025ace56f
    Reviewed-on: https://go-review.googlesource.com/7526
    Reviewed-by: Rob Pike <r@golang.org>

 src/math/big/float.go             | 31 ++++++++++++++++++-------------
 src/math/big/float_test.go        | 20 ++++++++++----------
 src/math/big/floatconv_test.go    |  2 +-
 src/math/big/floatexample_test.go |  2 +-
 4 files changed, 30 insertions(+), 25 deletions(-)
