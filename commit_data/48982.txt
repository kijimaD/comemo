commit 973dcbb87c0097c783abe35e319725c68167f718
Author: Michael Anthony Knyszek <mknyszek@google.com>
Date:   Sun Mar 27 20:52:52 2022 +0000

    runtime: remove float64 multiplication in heap trigger compute path
    
    As of the last CL, the heap trigger is computed as-needed. This means
    that some of the niceties we assumed (that the float64 computations
    don't matter because we're doing this rarely anyway) are no longer true.
    While we're not exactly on a hot path right now, the trigger check still
    happens often enough that it's a little too hot for comfort.
    
    This change optimizes the computation by replacing the float64
    multiplication with a shift and a constant integer multiplication.
    
    I ran an allocation microbenchmark for an allocation size that would hit
    this path often. CPU profiles seem to indicate this path was ~0.1% of
    cycles (dwarfed by other costs, e.g. zeroing memory) even if all we're
    doing is allocating, so the "optimization" here isn't particularly
    important. However, since the code here is executed significantly more
    frequently, and this change isn't particularly complicated, let's err
    on the size of efficiency if we can help it.
    
    Note that because of the way the constants are represented now, they're
    ever so slightly different from before, so this change technically isn't
    a total no-op. In practice however, it should be. These constants are
    fuzzy and hand-picked anyway, so having them shift a little is unlikely
    to make a significant change to the behavior of the GC.
    
    For #48409.
    
    Change-Id: Iabb2385920f7d891b25040226f35a3f31b7bf844
    Reviewed-on: https://go-review.googlesource.com/c/go/+/397015
    Run-TryBot: Michael Knyszek <mknyszek@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Michael Pratt <mpratt@google.com>

 src/runtime/mgcpacer.go | 41 +++++++++++++++++++++++++++++------------
 1 file changed, 29 insertions(+), 12 deletions(-)
