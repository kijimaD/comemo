commit efbb120d8e7af19b7c2bbb2dbacce73f73d5916b
Author: Robert Griesemer <gri@golang.org>
Date:   Mon Mar 9 18:53:11 2009 -0700

    - more documentation adjustments
    
    R=rsc
    DELTA=6  (0 added, 1 deleted, 5 changed)
    OCL=25970
    CL=25973
---
 src/lib/go/scanner.go | 10 +++++-----
 src/lib/go/token.go   |  1 -
 2 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/src/lib/go/scanner.go b/src/lib/go/scanner.go
index 7e20d194d7..94391c0446 100644
--- a/src/lib/go/scanner.go
+++ b/src/lib/go/scanner.go
@@ -3,7 +3,7 @@
 // license that can be found in the LICENSE file.
 
 // A scanner for Go source text. Takes a []byte as source which can
-// then be tokenized through repeated calls to the Scan() function.
+// then be tokenized through repeated calls to the Scan function.
 //
 // Sample use:
 //
@@ -33,7 +33,7 @@ import (
 
 
 // An implementation of an ErrorHandler must be provided to the Scanner.
-// If a syntax error is encountered, Error() is called with the exact
+// If a syntax error is encountered, Error is called with the exact
 // token position (the byte position of the token in the source) and the
 // error message.
 //
@@ -44,7 +44,7 @@ type ErrorHandler interface {
 
 // A Scanner holds the scanner's internal state while processing
 // a given text.  It can be allocated as part of another data
-// structure but must be initialized via Init() before use.
+// structure but must be initialized via Init before use.
 // See also the package comment for a sample use.
 //
 type Scanner struct {
@@ -99,7 +99,7 @@ func (S *Scanner) next() {
 }
 
 
-// Init() prepares the scanner S to tokenize the text src. Calls to Scan()
+// Init prepares the scanner S to tokenize the text src. Calls to Scan
 // will use the error handler err if they encounter a syntax error. The boolean
 // scan_comments specifies whether newline characters and comments should be
 // recognized and returned by Scan as token.COMMENT. If scan_comments is false,
@@ -401,7 +401,7 @@ func (S *Scanner) switch4(tok0, tok1, ch2, tok2, tok3 int) int {
 }
 
 
-// Scan() scans the next token and returns the token byte position in the
+// Scan scans the next token and returns the token byte position in the
 // source, its token value, and the corresponding literal text if the token
 // is an identifier, basic type literal (token.IsLiteral(tok) == true), or
 // comment.
diff --git a/src/lib/go/token.go b/src/lib/go/token.go
index 0cc9bcb8fd..1961fb10ee 100644
--- a/src/lib/go/token.go
+++ b/src/lib/go/token.go
@@ -11,7 +11,6 @@ package token
 import "strconv"
 
 // The list of tokens.
-//
 const (
 	// Special tokens
 	ILLEGAL = iota;
