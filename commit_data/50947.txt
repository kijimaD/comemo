commit c4aae23d6426442402b3de0e5f7de1ef8da3842a
Author: Mikhail Faraponov <11322032+moredure@users.noreply.github.com>
Date:   Tue Nov 16 19:41:43 2021 +0000

    net: optimize ctxDone usage
    
    Change-Id: I6db6fcf0ebe36da77af062114b5264405f15fee8
    GitHub-Last-Rev: 80a97262bb220bb3958c94016eadf385cdf915e8
    GitHub-Pull-Request: golang/go#49620
    Reviewed-on: https://go-review.googlesource.com/c/go/+/364514
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Damien Neil <dneil@google.com>
    Trust: Damien Neil <dneil@google.com>
---
 src/net/fd_unix.go | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/net/fd_unix.go b/src/net/fd_unix.go
index 4ded833bbf..aaa7a1c185 100644
--- a/src/net/fd_unix.go
+++ b/src/net/fd_unix.go
@@ -95,7 +95,8 @@ func (fd *netFD) connect(ctx context.Context, la, ra syscall.Sockaddr) (rsa sysc
 	// The interrupter goroutine waits for the context to be done and
 	// interrupts the dial (by altering the fd's write deadline, which
 	// wakes up waitWrite).
-	if ctxDone := ctx.Done(); ctxDone != nil {
+	ctxDone := ctx.Done()
+	if ctxDone != nil {
 		// Wait for the interrupter goroutine to exit before returning
 		// from connect.
 		done := make(chan struct{})
@@ -139,7 +140,7 @@ func (fd *netFD) connect(ctx context.Context, la, ra syscall.Sockaddr) (rsa sysc
 		// details.
 		if err := fd.pfd.WaitWrite(); err != nil {
 			select {
-			case <-ctx.Done():
+			case <-ctxDone:
 				return nil, mapErr(ctx.Err())
 			default:
 			}
