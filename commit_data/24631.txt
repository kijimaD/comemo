commit d4cc51d4118027464f61034179908abd0005fab6
Author: Keith Randall <khr@golang.org>
Date:   Fri Aug 14 21:47:20 2015 -0700

    [dev.ssa] cmd/compile/internal/ssa: Use explicit size for store ops
    
    Using the type of the store argument is not safe, it may change
    during rewriting, giving us the wrong store width.
    
    (Store ptr (Trunc32to16 val) mem)
    
    This should be a 2-byte store.  But we have the rule:
    
    (Trunc32to16 x) -> x
    
    So if the Trunc rewrite happens before the Store -> MOVW rewrite,
    then the Store thinks that the value it is storing is 4 bytes
    in size and uses a MOVL.  Bad things ensue.
    
    Fix this by encoding the store width explicitly in the auxint field.
    
    In general, we can't rely on the type of arguments, as they may
    change during rewrites.  The type of the op itself (as used by
    the Load rules) is still ok to use.
    
    Change-Id: I9e2359e4f657bb0ea0e40038969628bf0f84e584
    Reviewed-on: https://go-review.googlesource.com/13636
    Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>

 src/cmd/compile/internal/gc/ssa.go                 | 16 ++++-
 .../compile/internal/gc/testdata/loadstore_ssa.go  | 29 +++++++++
 src/cmd/compile/internal/ssa/deadstore_test.go     | 14 ++--
 src/cmd/compile/internal/ssa/func.go               | 15 +++++
 src/cmd/compile/internal/ssa/gen/AMD64.rules       |  9 ++-
 src/cmd/compile/internal/ssa/gen/generic.rules     |  3 +-
 src/cmd/compile/internal/ssa/gen/genericOps.go     |  2 +-
 src/cmd/compile/internal/ssa/rewriteAMD64.go       | 76 ++++++++--------------
 src/cmd/compile/internal/ssa/rewritegeneric.go     | 22 +++----
 src/cmd/compile/internal/ssa/schedule_test.go      |  6 +-
 src/cmd/compile/internal/ssa/shift_test.go         |  2 +-
 11 files changed, 113 insertions(+), 81 deletions(-)
