commit 0a0e3a3dea72d8d64d4250c9f7649da3b942eae5
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Mon Jun 21 22:35:01 2021 -0700

    [dev.typeparams] cmd/compile: move call logic from order.go to escape
    
    This CL moves two bits of related code from order.go to escape
    analysis:
    
    1. The recognition of "unsafe uintptr" arguments passed to
    syscall-like functions.
    
    2. The wrapping of go/defer function calls in parameter-free function
    literals.
    
    As with previous CLs, it would be nice to push this logic even further
    forward, but for now escape analysis seems most pragmatic.
    
    A couple side benefits:
    
    1. It allows getting rid of the uintptrEscapesHack kludge.
    
    2. When inserting wrappers, we can move some expressions into the
    wrapper and escape analyze them better. For example, the test
    expectation changes are all due to slice literals in go/defer calls
    where the slice is now constructed at the call site, and can now be
    stack allocated.
    
    Change-Id: I73679bcad7fa8d61d2fc52d4cea0dc5ff0de8c0c
    Reviewed-on: https://go-review.googlesource.com/c/go/+/330330
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Trust: Matthew Dempsky <mdempsky@google.com>
    Reviewed-by: Cuong Manh Le <cuong.manhle.vn@gmail.com>

 src/cmd/compile/internal/escape/call.go   | 237 +++++++++++++++++++---
 src/cmd/compile/internal/escape/escape.go |   9 +-
 src/cmd/compile/internal/escape/expr.go   |   8 +-
 src/cmd/compile/internal/escape/graph.go  |   4 -
 src/cmd/compile/internal/ir/func.go       |  11 ++
 src/cmd/compile/internal/walk/order.go    | 317 ------------------------------
 src/cmd/compile/internal/walk/stmt.go     |  19 --
 test/escape2.go                           |  12 +-
 test/escape2n.go                          |  12 +-
 test/fixedbugs/issue31573.go              |  30 +--
 10 files changed, 259 insertions(+), 400 deletions(-)
