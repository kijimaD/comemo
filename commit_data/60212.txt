commit 3dcb9623dfe412761fc3aa6fa654649d7139f056
Author: Mauri de Souza Meneguzzo <mauri870@gmail.com>
Date:   Sun May 26 17:56:45 2024 +0000

    syscall: add Setuid for aix
    
    Fixes #67651
    
    Change-Id: I8128433ddd040c8b91d7b6264200e19433d7a7dc
    GitHub-Last-Rev: 7557a88cf5a52a99e7689b604964cd4ec8e6bfec
    GitHub-Pull-Request: golang/go#67656
    Reviewed-on: https://go-review.googlesource.com/c/go/+/588119
    Reviewed-by: Than McIntosh <thanm@google.com>
    LUCI-TryBot-Result: Go LUCI <golang-scoped@luci-project-accounts.iam.gserviceaccount.com>
    Run-TryBot: Mauri de Souza Meneguzzo <mauri870@gmail.com>
    TryBot-Bypass: Ian Lance Taylor <iant@golang.org>
    Auto-Submit: Ian Lance Taylor <iant@google.com>
    Reviewed-by: Ian Lance Taylor <iant@google.com>
---
 src/syscall/syscall_aix.go        |  1 +
 src/syscall/zsyscall_aix_ppc64.go | 13 +++++++++++++
 2 files changed, 14 insertions(+)

diff --git a/src/syscall/syscall_aix.go b/src/syscall/syscall_aix.go
index 18827e9e8b..a9bd7a3733 100644
--- a/src/syscall/syscall_aix.go
+++ b/src/syscall/syscall_aix.go
@@ -629,6 +629,7 @@ func PtraceDetach(pid int) (err error) { return ptrace64(PT_DETACH, int64(pid),
 //sysnb	Setegid(egid int) (err error)
 //sysnb	Seteuid(euid int) (err error)
 //sysnb	Setgid(gid int) (err error)
+//sysnb	Setuid(uid int) (err error)
 //sysnb	Setpgid(pid int, pgid int) (err error)
 //sys	Setpriority(which int, who int, prio int) (err error)
 //sysnb	Setregid(rgid int, egid int) (err error)
diff --git a/src/syscall/zsyscall_aix_ppc64.go b/src/syscall/zsyscall_aix_ppc64.go
index 111e6711d7..27657aa1e9 100644
--- a/src/syscall/zsyscall_aix_ppc64.go
+++ b/src/syscall/zsyscall_aix_ppc64.go
@@ -83,6 +83,7 @@ import "unsafe"
 //go:cgo_import_dynamic libc_Setegid setegid "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Seteuid seteuid "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Setgid setgid "libc.a/shr_64.o"
+//go:cgo_import_dynamic libc_Setuid setuid "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Setpgid setpgid "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Setpriority setpriority "libc.a/shr_64.o"
 //go:cgo_import_dynamic libc_Setregid setregid "libc.a/shr_64.o"
@@ -177,6 +178,7 @@ import "unsafe"
 //go:linkname libc_Setegid libc_Setegid
 //go:linkname libc_Seteuid libc_Seteuid
 //go:linkname libc_Setgid libc_Setgid
+//go:linkname libc_Setuid libc_Setuid
 //go:linkname libc_Setpgid libc_Setpgid
 //go:linkname libc_Setpriority libc_Setpriority
 //go:linkname libc_Setregid libc_Setregid
@@ -274,6 +276,7 @@ var (
 	libc_Setegid,
 	libc_Seteuid,
 	libc_Setgid,
+	libc_Setuid,
 	libc_Setpgid,
 	libc_Setpriority,
 	libc_Setregid,
@@ -1231,6 +1234,16 @@ func Setgid(gid int) (err error) {
 
 // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
 
+func Setuid(uid int) (err error) {
+	_, _, e1 := rawSyscall6(uintptr(unsafe.Pointer(&libc_Setuid)), 1, uintptr(uid), 0, 0, 0, 0, 0)
+	if e1 != 0 {
+		err = errnoErr(e1)
+	}
+	return
+}
+
+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
+
 func Setpgid(pid int, pgid int) (err error) {
 	_, _, e1 := rawSyscall6(uintptr(unsafe.Pointer(&libc_Setpgid)), 2, uintptr(pid), uintptr(pgid), 0, 0, 0, 0)
 	if e1 != 0 {
