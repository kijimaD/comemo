commit 2b063bdff1a61961936db7ef1e963aecf1ae3db7
Author: Josh Bleecher Snyder <josharian@gmail.com>
Date:   Thu May 14 19:33:31 2015 -0700

    cmd/internal/gc: make all Node depths int32
    
    Funcdepth was already int32. Make Escloopdepth
    and Decldepth also int32 instead of int.
    
    No functional changes for non-absurd code. Passes toolstash -cmp.
    
    Change-Id: I47e145dd732b6a73cfcc6d45956df0dbccdcd999
    Reviewed-on: https://go-review.googlesource.com/10129
    Reviewed-by: Russ Cox <rsc@golang.org>
---
 src/cmd/internal/gc/esc.go    | 2 +-
 src/cmd/internal/gc/go.go     | 2 +-
 src/cmd/internal/gc/syntax.go | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/cmd/internal/gc/esc.go b/src/cmd/internal/gc/esc.go
index a5b6a9b2b1..a9a1748b9a 100644
--- a/src/cmd/internal/gc/esc.go
+++ b/src/cmd/internal/gc/esc.go
@@ -379,7 +379,7 @@ type EscState struct {
 	theSink Node
 
 	dsts      *NodeList // all dst nodes
-	loopdepth int       // for detecting nested loop scopes
+	loopdepth int32     // for detecting nested loop scopes
 	pdepth    int       // for debug printing in recursions.
 	dstcount  int       // diagnostic
 	edgecount int       // diagnostic
diff --git a/src/cmd/internal/gc/go.go b/src/cmd/internal/gc/go.go
index 5fa85e25a7..6a3379b896 100644
--- a/src/cmd/internal/gc/go.go
+++ b/src/cmd/internal/gc/go.go
@@ -448,7 +448,7 @@ var nsavederrors int
 
 var nsyntaxerrors int
 
-var decldepth int
+var decldepth int32
 
 var safemode int
 
diff --git a/src/cmd/internal/gc/syntax.go b/src/cmd/internal/gc/syntax.go
index 818d546970..50de7f74de 100644
--- a/src/cmd/internal/gc/syntax.go
+++ b/src/cmd/internal/gc/syntax.go
@@ -90,7 +90,7 @@ type Node struct {
 	// Escape analysis.
 	Escflowsrc   *NodeList // flow(this, src)
 	Escretval    *NodeList // on OCALLxxx, list of dummy return values
-	Escloopdepth int       // -1: global, 0: return variables, 1:function top level, increased inside function for every loop or label to mark scopes
+	Escloopdepth int32     // -1: global, 0: return variables, 1:function top level, increased inside function for every loop or label to mark scopes
 
 	Sym      *Sym  // various
 	Vargen   int32 // unique name for OTYPE/ONAME within a function.  Function outputs are numbered starting at one.
@@ -108,7 +108,7 @@ type Node struct {
 type Name struct {
 	Heapaddr  *Node // temp holding heap address of param
 	Inlvar    *Node // ONAME substitute while inlining
-	Decldepth int   // declaration loop depth, increased for every loop or label
+	Decldepth int32 // declaration loop depth, increased for every loop or label
 	Method    bool  // OCALLMETH name
 	Readonly  bool
 	Captured  bool // is the variable captured by a closure
