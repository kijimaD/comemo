commit e5ce13c178cc0be72ca220b4c3f0c95f570c19ab
Author: Michael Anthony Knyszek <mknyszek@google.com>
Date:   Thu Sep 12 18:24:56 2019 +0000

    runtime: add option to scavenge with lock held throughout
    
    This change adds a "locked" parameter to scavenge() and scavengeone()
    which allows these methods to be run with the heap lock acquired, and
    synchronously with respect to others which acquire the heap lock.
    
    This mode is necessary for both heap-growth scavenging (multiple
    asynchronous scavengers here could be problematic) and
    debug.FreeOSMemory.
    
    Updates #35112.
    
    Change-Id: I24eea8e40f971760999c980981893676b4c9b666
    Reviewed-on: https://go-review.googlesource.com/c/go/+/195699
    Reviewed-by: Austin Clements <austin@google.com>
    Reviewed-by: Keith Randall <khr@golang.org>

 src/runtime/export_test.go      |  4 ++--
 src/runtime/mgcscavenge.go      | 46 +++++++++++++++++++++++++++--------------
 src/runtime/mgcscavenge_test.go | 10 +++++++--
 3 files changed, 41 insertions(+), 19 deletions(-)
