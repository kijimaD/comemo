commit f5c6875f3228951afa1fcf2ec01c614e0fb7e2dd
Author: Michael Anthony Knyszek <mknyszek@google.com>
Date:   Thu Jul 23 20:24:56 2020 +0000

    runtime: make next_gc atomically accessed
    
    next_gc is mostly updated only during a STW, but may occasionally be
    updated by calls to e.g. debug.SetGCPercent. In this case the update is
    supposed to be protected by the heap lock, but in reality it's accessed
    by gcController.revise which may be called without the heap lock held
    (despite its documentation, which will be updated in a later change).
    
    Change the synchronization policy on next_gc so that it's atomically
    accessed when the world is not stopped to aid in making revise safe for
    concurrent use.
    
    Change-Id: I79657a72f91563f3241aaeda66e8a7757d399529
    Reviewed-on: https://go-review.googlesource.com/c/go/+/246962
    Trust: Michael Knyszek <mknyszek@google.com>
    Run-TryBot: Michael Knyszek <mknyszek@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Michael Pratt <mpratt@google.com>

 src/runtime/mgc.go         | 13 +++++++------
 src/runtime/mgcscavenge.go |  2 +-
 src/runtime/mstats.go      | 10 ++++++++--
 src/runtime/trace.go       |  5 +++--
 4 files changed, 19 insertions(+), 11 deletions(-)
