commit 0d8c6b4fcdcbaa56ce1ccaf6dcd99b58af830c5b
Author: Sanjay Menakuru <balasanjay@gmail.com>
Date:   Thu Jan 19 13:28:25 2012 +1100

    path: added examples
    
    R=rsc, adg
    CC=golang-dev
    https://golang.org/cl/5503089
---
 src/pkg/path/example_test.go | 61 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 61 insertions(+)

diff --git a/src/pkg/path/example_test.go b/src/pkg/path/example_test.go
new file mode 100644
index 0000000000..82ddfab93e
--- /dev/null
+++ b/src/pkg/path/example_test.go
@@ -0,0 +1,61 @@
+// Copyright 2012 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package path_test
+
+import (
+	"fmt"
+	"path"
+)
+
+// b
+func ExampleBase() {
+	fmt.Println(path.Base("/a/b"))
+}
+
+// Clean("a/c") = "a/c"
+// Clean("a//c") = "a/c"
+// Clean("a/c/.") = "a/c"
+// Clean("a/c/b/..") = "a/c"
+// Clean("/../a/c") = "/a/c"
+// Clean("/../a/b/../././/c") = "/a/c"
+func ExampleClean() {
+	paths := []string{
+		"a/c",
+		"a//c",
+		"a/c/.",
+		"a/c/b/..",
+		"/../a/c",
+		"/../a/b/../././/c",
+	}
+
+	for _, p := range paths {
+		fmt.Printf("Clean(%q) = %q\n", p, path.Clean(p))
+	}
+}
+
+// /a/b
+func ExampleDir() {
+	fmt.Println(path.Dir("/a/b/c"))
+}
+
+// .css
+func ExampleExt() {
+	fmt.Println(path.Ext("/a/b/c/bar.css"))
+}
+
+// true
+func ExampleIsAbs() {
+	fmt.Println(path.IsAbs("/dev/null"))
+}
+
+// a/b/c
+func ExampleJoin() {
+	fmt.Println(path.Join("a", "b", "c"))
+}
+
+// static/ myfile.css
+func ExampleSplit() {
+	fmt.Println(path.Split("static/myfile.css"))
+}
