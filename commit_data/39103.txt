commit 1f035d036c2a49c1b858af3260552ccaac80858d
Author: Brad Fitzpatrick <bradfitz@golang.org>
Date:   Wed Jan 2 18:53:23 2019 +0000

    runtime: disable GDB tests on freebsd/arm for now
    
    Updates #29508
    Updates #28679
    
    Change-Id: I19bc9f88aeb2b1f3e69856173a00c5a4d5ed3613
    Reviewed-on: https://go-review.googlesource.com/c/155932
    Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
    Reviewed-by: Katie Hockman <katie@golang.org>
---
 src/runtime/runtime-gdb_test.go | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/src/runtime/runtime-gdb_test.go b/src/runtime/runtime-gdb_test.go
index 2c1653172e..442ee9ca81 100644
--- a/src/runtime/runtime-gdb_test.go
+++ b/src/runtime/runtime-gdb_test.go
@@ -26,18 +26,22 @@ func checkGdbEnvironment(t *testing.T) {
 	case "darwin":
 		t.Skip("gdb does not work on darwin")
 	case "netbsd":
-		t.Skip("gdb does not work with threads on NetBSD; see golang.org/issue/22893 and gnats.netbsd.org/52548")
+		t.Skip("gdb does not work with threads on NetBSD; see https://golang.org/issue/22893 and https://gnats.netbsd.org/52548")
 	case "windows":
 		t.Skip("gdb tests fail on Windows: https://golang.org/issue/22687")
 	case "linux":
 		if runtime.GOARCH == "ppc64" {
-			t.Skip("skipping gdb tests on linux/ppc64; see golang.org/issue/17366")
+			t.Skip("skipping gdb tests on linux/ppc64; see https://golang.org/issue/17366")
 		}
 		if runtime.GOARCH == "mips" {
 			t.Skip("skipping gdb tests on linux/mips; see https://golang.org/issue/25939")
 		}
 	case "aix":
-		t.Skip("gdb does not work on AIX; see golang.org/issue/28558")
+		t.Skip("gdb does not work on AIX; see https://golang.org/issue/28558")
+	case "freebsd":
+		if runtime.GOARCH == "arm" {
+			t.Skip("skipping gdb tests on freebsd/arm; see https://golang.org/issue/29508")
+		}
 	}
 	if final := os.Getenv("GOROOT_FINAL"); final != "" && runtime.GOROOT() != final {
 		t.Skip("gdb test can fail with GOROOT_FINAL pending")
