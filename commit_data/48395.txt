commit f39200b037e022d0f79ed478a45492306aaf5629
Author: Robert Griesemer <gri@golang.org>
Date:   Mon May 17 11:49:53 2021 -0700

    [dev.typeparams] go/constant: implement Kind.String
    
    Fixes #46211.
    
    Change-Id: I7e373be5ccf9c6b53d58ed942addd17d28c3efa1
    Reviewed-on: https://go-review.googlesource.com/c/go/+/320491
    Trust: Robert Griesemer <gri@golang.org>
    Run-TryBot: Robert Griesemer <gri@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
---
 src/go/constant/kind_string.go | 28 ++++++++++++++++++++++++++++
 src/go/constant/value.go       |  2 ++
 2 files changed, 30 insertions(+)

diff --git a/src/go/constant/kind_string.go b/src/go/constant/kind_string.go
new file mode 100644
index 0000000000..700332511d
--- /dev/null
+++ b/src/go/constant/kind_string.go
@@ -0,0 +1,28 @@
+// Code generated by "stringer -type Kind"; DO NOT EDIT.
+
+package constant
+
+import "strconv"
+
+func _() {
+	// An "invalid array index" compiler error signifies that the constant values have changed.
+	// Re-run the stringer command to generate them again.
+	var x [1]struct{}
+	_ = x[Unknown-0]
+	_ = x[Bool-1]
+	_ = x[String-2]
+	_ = x[Int-3]
+	_ = x[Float-4]
+	_ = x[Complex-5]
+}
+
+const _Kind_name = "UnknownBoolStringIntFloatComplex"
+
+var _Kind_index = [...]uint8{0, 7, 11, 17, 20, 25, 32}
+
+func (i Kind) String() string {
+	if i < 0 || i >= Kind(len(_Kind_index)-1) {
+		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
+	}
+	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
+}
diff --git a/src/go/constant/value.go b/src/go/constant/value.go
index 78cb3f896f..014e873100 100644
--- a/src/go/constant/value.go
+++ b/src/go/constant/value.go
@@ -24,6 +24,8 @@ import (
 	"unicode/utf8"
 )
 
+//go:generate stringer -type Kind
+
 // Kind specifies the kind of value represented by a Value.
 type Kind int
 
