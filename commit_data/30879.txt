commit afb350811e926c7521b766946976cf88dd7d29f2
Author: Euan Kemp <euank@euank.com>
Date:   Tue Dec 13 21:49:57 2016 -0800

    runtime: correct writebarrier typos
    
    Change-Id: I7d67c3d64be915f0be5932d2c068606d74f93c29
    Reviewed-on: https://go-review.googlesource.com/34378
    Run-TryBot: Austin Clements <austin@google.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Austin Clements <austin@google.com>
---
 src/runtime/os_windows.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/runtime/os_windows.go b/src/runtime/os_windows.go
index 0db57f8c5b..10cab90d47 100644
--- a/src/runtime/os_windows.go
+++ b/src/runtime/os_windows.go
@@ -510,7 +510,7 @@ func semacreate(mp *m) {
 // May run with m.p==nil, so write barriers are not allowed. This
 // function is called by newosproc0, so it is also required to
 // operate without stack guards.
-//go:nowritebarrierc
+//go:nowritebarrierrec
 //go:nosplit
 func newosproc(mp *m, stk unsafe.Pointer) {
 	const _STACK_SIZE_PARAM_IS_A_RESERVATION = 0x00010000
@@ -527,7 +527,7 @@ func newosproc(mp *m, stk unsafe.Pointer) {
 // Used by the C library build mode. On Linux this function would allocate a
 // stack, but that's not necessary for Windows. No stack guards are present
 // and the GC has not been initialized, so write barriers will fail.
-//go:nowritebarrierc
+//go:nowritebarrierrec
 //go:nosplit
 func newosproc0(mp *m, stk unsafe.Pointer) {
 	newosproc(mp, stk)
