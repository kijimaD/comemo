commit f9b761aa76d0cf439a0c996e1b7c06a0fe49314e
Author: Michael Pratt <mpratt@google.com>
Date:   Mon Jan 31 16:37:40 2022 -0500

    runtime: regression test for issue 50936
    
    Add a regression test for issue 50936 which coerces the runtime into
    frequent execution of the cgocall dropg/execute curg assignment race by
    making many concurrent cgo calls eligible for P retake by sysmon. This
    results in no P during exitsyscall, at which point they will update curg
    and will crash if SIGPROF arrives in between updating mp.curg and
    mp.curg.m.
    
    This test is conceptually similar to the basic cgo callback test in
    aprof.go but with additional concurrency and a sleep in C.
    
    On my machine this test fails ~5% of the time prior to CL 382079.
    
    For #50936.
    
    Change-Id: I21b6c7f2594f9a615a64580ef70a88b692505678
    Reviewed-on: https://go-review.googlesource.com/c/go/+/382244
    Trust: Michael Pratt <mpratt@google.com>
    Run-TryBot: Michael Pratt <mpratt@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Cherry Mui <cherryyz@google.com>

 src/runtime/crash_cgo_test.go                      | 13 ++++
 src/runtime/testdata/testprogcgo/aprof.go          |  7 +-
 src/runtime/testdata/testprogcgo/pprof_callback.go | 89 ++++++++++++++++++++++
 3 files changed, 107 insertions(+), 2 deletions(-)
