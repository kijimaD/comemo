commit f265f5db5d71f120eb6e2cec25ab6dfc3fb249f3
Author: Carl Mastrangelo <carl.mastrangelo@gmail.com>
Date:   Mon Jul 3 15:38:55 2017 -0700

    archive/zip, crypto/tls: use rand.Read instead of casting ints to bytes
    
    Makes tests run ~1ms faster.
    
    Change-Id: Ida509952469540280996d2bd9266724829e53c91
    Reviewed-on: https://go-review.googlesource.com/47359
    Reviewed-by: Filippo Valsorda <hi@filippo.io>
    Run-TryBot: Filippo Valsorda <hi@filippo.io>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
---
 src/archive/zip/writer_test.go            | 8 ++++----
 src/crypto/tls/handshake_messages_test.go | 4 ++--
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/archive/zip/writer_test.go b/src/archive/zip/writer_test.go
index 3072f60027..e0bcad61d3 100644
--- a/src/archive/zip/writer_test.go
+++ b/src/archive/zip/writer_test.go
@@ -58,8 +58,8 @@ var writeTests = []WriteTest{
 
 func TestWriter(t *testing.T) {
 	largeData := make([]byte, 1<<17)
-	for i := range largeData {
-		largeData[i] = byte(rand.Int())
+	if _, err := rand.Read(largeData); err != nil {
+		t.Fatal("rand.Read failed:", err)
 	}
 	writeTests[1].Data = largeData
 	defer func() {
@@ -201,8 +201,8 @@ func TestWriterUTF8(t *testing.T) {
 
 func TestWriterOffset(t *testing.T) {
 	largeData := make([]byte, 1<<17)
-	for i := range largeData {
-		largeData[i] = byte(rand.Int())
+	if _, err := rand.Read(largeData); err != nil {
+		t.Fatal("rand.Read failed:", err)
 	}
 	writeTests[1].Data = largeData
 	defer func() {
diff --git a/src/crypto/tls/handshake_messages_test.go b/src/crypto/tls/handshake_messages_test.go
index aa7f9370bf..37eb748eea 100644
--- a/src/crypto/tls/handshake_messages_test.go
+++ b/src/crypto/tls/handshake_messages_test.go
@@ -98,8 +98,8 @@ func TestFuzz(t *testing.T) {
 
 func randomBytes(n int, rand *rand.Rand) []byte {
 	r := make([]byte, n)
-	for i := 0; i < n; i++ {
-		r[i] = byte(rand.Int31())
+	if _, err := rand.Read(r); err != nil {
+		panic("rand.Read failed: " + err.Error())
 	}
 	return r
 }
