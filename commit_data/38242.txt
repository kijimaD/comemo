commit bf68744a122b83f44cc454417d5723be04215091
Author: Russ Cox <rsc@golang.org>
Date:   Fri Sep 28 15:17:24 2018 -0400

    regexp: add partial Deprecation comment to Copy
    
    Change-Id: I21b7817e604a48330f1ee250f7b1b2adc1f16067
    Reviewed-on: https://go-review.googlesource.com/c/139784
    Run-TryBot: Russ Cox <rsc@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/regexp/regexp.go | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/src/regexp/regexp.go b/src/regexp/regexp.go
index 3586029555..38b3c86d9f 100644
--- a/src/regexp/regexp.go
+++ b/src/regexp/regexp.go
@@ -105,9 +105,13 @@ func (re *Regexp) String() string {
 }
 
 // Copy returns a new Regexp object copied from re.
+// Calling Longest on one copy does not affect another.
 //
-// When using a Regexp in multiple goroutines, giving each goroutine
-// its own copy helps to avoid lock contention.
+// Deprecated: In earlier releases, when using a Regexp in multiple goroutines,
+// giving each goroutine its own copy helped to avoid lock contention.
+// As of Go 1.12, using Copy is no longer necessary to avoid lock contention.
+// Copy may still be appropriate if the reason for its use is to make
+// two copies with different Longest settings.
 func (re *Regexp) Copy() *Regexp {
 	re2 := *re
 	return &re2
