commit 466cae6ca9f28c971a2d716a5a49dc76bbd1d5bb
Author: Austin Clements <austin@google.com>
Date:   Mon May 16 15:27:48 2016 -0400

    runtime: use GOTRACEBACK=system for TestStackBarrierProfiling
    
    This should help with debugging failures.
    
    For #15138 and #15477.
    
    Change-Id: I77db2b6375d8b4403d3edf5527899d076291e02c
    Reviewed-on: https://go-review.googlesource.com/23134
    Run-TryBot: Austin Clements <austin@google.com>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Rick Hudson <rlh@golang.org>
---
 src/runtime/pprof/pprof_test.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/runtime/pprof/pprof_test.go b/src/runtime/pprof/pprof_test.go
index 8b2f3d5291..3852d93e72 100644
--- a/src/runtime/pprof/pprof_test.go
+++ b/src/runtime/pprof/pprof_test.go
@@ -388,7 +388,7 @@ func TestStackBarrierProfiling(t *testing.T) {
 			args = append(args, "-test.short")
 		}
 		cmd := exec.Command(os.Args[0], args...)
-		cmd.Env = append([]string{"GODEBUG=gcstackbarrierall=1", "GOGC=1"}, os.Environ()...)
+		cmd.Env = append([]string{"GODEBUG=gcstackbarrierall=1", "GOGC=1", "GOTRACEBACK=system"}, os.Environ()...)
 		if out, err := cmd.CombinedOutput(); err != nil {
 			t.Fatalf("subprocess failed with %v:\n%s", err, out)
 		}
