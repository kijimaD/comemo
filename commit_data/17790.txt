commit 89ebc28b587228c6ce90b78db33925e19aeba7d5
Author: Shenghou Ma <minux.ma@gmail.com>
Date:   Mon Oct 14 00:18:46 2013 -0400

    cmd/api: make it work even when cgo is disabled
    make use of $USER or %USERNAME% to determine the current user.
    Fixes #6578.
    
    R=golang-dev, bradfitz, alex.brainman
    CC=golang-dev
    https://golang.org/cl/14649043
---
 src/cmd/api/run.go | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/src/cmd/api/run.go b/src/cmd/api/run.go
index f7c590bbe1..ffa2d61bf3 100644
--- a/src/cmd/api/run.go
+++ b/src/cmd/api/run.go
@@ -93,13 +93,21 @@ func file(s ...string) string {
 func prepGoPath() string {
 	const tempBase = "go.tools.TMP"
 
+	username := ""
 	u, err := user.Current()
-	if err != nil {
-		log.Fatalf("Error getting current user: %v", err)
+	if err == nil {
+		username = u.Username
+	} else {
+		// Only need to handle Unix here, as Windows's os/user uses
+		// native syscall and should work fine without cgo.
+		username = os.Getenv("USER")
+		if username == "" {
+			log.Fatalf("Error getting current user: %v", err)
+		}
 	}
 
 	// The GOPATH we'll return
-	gopath := filepath.Join(os.TempDir(), "gopath-api-"+cleanUsername(u.Username), goToolsVersion)
+	gopath := filepath.Join(os.TempDir(), "gopath-api-"+cleanUsername(username), goToolsVersion)
 
 	// cloneDir is where we run "hg clone".
 	cloneDir := filepath.Join(gopath, "src", "code.google.com", "p")
