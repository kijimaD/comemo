commit 086d7b0e9e34555f32248c9242b641273a32bc7e
Author: Mikio Hara <mikioh.mikioh@gmail.com>
Date:   Thu May 19 17:36:47 2016 +0900

    net: deflake TestDialerDualStackFDLeak
    
    Fixes #14717.
    Updates #15157.
    
    Change-Id: I7238b4fe39f3670c2dfe09b3a3df51a982f261ed
    Reviewed-on: https://go-review.googlesource.com/23244
    Run-TryBot: Mikio Hara <mikioh.mikioh@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/net/dial_test.go | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/net/dial_test.go b/src/net/dial_test.go
index 93cffca93d..a07c5850e1 100644
--- a/src/net/dial_test.go
+++ b/src/net/dial_test.go
@@ -128,13 +128,16 @@ func TestDialerDualStackFDLeak(t *testing.T) {
 		t.Skipf("%s does not have full support of socktest", runtime.GOOS)
 	case "windows":
 		t.Skipf("not implemented a way to cancel dial racers in TCP SYN-SENT state on %s", runtime.GOOS)
-	case "openbsd":
-		testenv.SkipFlaky(t, 15157)
 	}
 	if !supportsIPv4 || !supportsIPv6 {
 		t.Skip("both IPv4 and IPv6 are required")
 	}
 
+	closedPortDelay, expectClosedPortDelay := dialClosedPort()
+	if closedPortDelay > expectClosedPortDelay {
+		t.Errorf("got %v; want <= %v", closedPortDelay, expectClosedPortDelay)
+	}
+
 	before := sw.Sockets()
 	origTestHookLookupIP := testHookLookupIP
 	defer func() { testHookLookupIP = origTestHookLookupIP }()
@@ -163,7 +166,7 @@ func TestDialerDualStackFDLeak(t *testing.T) {
 	const N = 10
 	var wg sync.WaitGroup
 	wg.Add(N)
-	d := &Dialer{DualStack: true, Timeout: 100 * time.Millisecond}
+	d := &Dialer{DualStack: true, Timeout: 100*time.Millisecond + closedPortDelay}
 	for i := 0; i < N; i++ {
 		go func() {
 			defer wg.Done()
