commit bfcc3a755cbd9b5c38a4961f1df76c4db0d41442
Author: Robert Griesemer <gri@golang.org>
Date:   Wed Oct 19 14:22:25 2022 -0700

    go/types, types2: remove global goVersion flag (cleanup)
    
    Now that we have an easy mechanism to set the Go version with a comment
    line directly in test files, we don't need this flag anymore.
    
    Change-Id: Ic1f1a6fdf2c6c692512bff49650916ec43645aee
    Reviewed-on: https://go-review.googlesource.com/c/go/+/444275
    Reviewed-by: Robert Findley <rfindley@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Robert Griesemer <gri@google.com>
    Run-TryBot: Robert Griesemer <gri@google.com>
    Auto-Submit: Robert Griesemer <gri@google.com>
---
 src/cmd/compile/internal/types2/check_test.go | 1 -
 src/go/types/check_test.go                    | 6 ------
 2 files changed, 7 deletions(-)

diff --git a/src/cmd/compile/internal/types2/check_test.go b/src/cmd/compile/internal/types2/check_test.go
index 98813ad5a7..2d7783611d 100644
--- a/src/cmd/compile/internal/types2/check_test.go
+++ b/src/cmd/compile/internal/types2/check_test.go
@@ -41,7 +41,6 @@ import (
 var (
 	haltOnError  = flag.Bool("halt", false, "halt on error")
 	verifyErrors = flag.Bool("verify", false, "verify errors (rather than list them) in TestManual")
-	goVersion    = flag.String("lang", "", "Go language version (e.g. \"go1.12\")")
 )
 
 func parseFiles(t *testing.T, filenames []string, mode syntax.Mode) ([]*syntax.File, []error) {
diff --git a/src/go/types/check_test.go b/src/go/types/check_test.go
index da2cb6467f..f19a904f7f 100644
--- a/src/go/types/check_test.go
+++ b/src/go/types/check_test.go
@@ -45,7 +45,6 @@ import (
 var (
 	haltOnError  = flag.Bool("halt", false, "halt on error")
 	verifyErrors = flag.Bool("verify", false, "verify errors (rather than list them) in TestManual")
-	goVersion    = flag.String("lang", "", "Go language version (e.g. \"go1.12\") for TestManual")
 )
 
 var fset = token.NewFileSet()
@@ -222,11 +221,6 @@ func testFiles(t *testing.T, sizes Sizes, filenames []string, srcs [][]byte, man
 		t.Fatal(err)
 	}
 
-	if manual && *goVersion != "" {
-		// goVersion overrides -lang for manual tests.
-		conf.GoVersion = *goVersion
-	}
-
 	// TODO(gri) remove this or use flag mechanism to set mode if still needed
 	if strings.HasSuffix(filenames[0], ".go1") {
 		// TODO(rfindley): re-enable this test by using GoVersion.
