commit 689ee112dfb872e97116acd4c8d96ece1533604e
Author: Brian Kessler <brian.m.kessler@gmail.com>
Date:   Thu May 2 20:37:27 2019 -0600

    math/big: document Int.String
    
    Int.String had no documentation and the documentation for Int.Text
    did not mention the handling of the nil pointer case.
    
    Change-Id: I9f21921e431c948545b7cabc7829e4b4e574bbe9
    Reviewed-on: https://go-review.googlesource.com/c/go/+/175118
    Reviewed-by: Robert Griesemer <gri@golang.org>
---
 src/math/big/intconv.go | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/math/big/intconv.go b/src/math/big/intconv.go
index d37d077920..0567284105 100644
--- a/src/math/big/intconv.go
+++ b/src/math/big/intconv.go
@@ -16,7 +16,8 @@ import (
 // Base must be between 2 and 62, inclusive. The result uses the
 // lower-case letters 'a' to 'z' for digit values 10 to 35, and
 // the upper-case letters 'A' to 'Z' for digit values 36 to 61.
-// No prefix (such as "0x") is added to the string.
+// No prefix (such as "0x") is added to the string. If x is a nil
+// pointer it returns "<nil>".
 func (x *Int) Text(base int) string {
 	if x == nil {
 		return "<nil>"
@@ -33,6 +34,8 @@ func (x *Int) Append(buf []byte, base int) []byte {
 	return append(buf, x.abs.itoa(x.neg, base)...)
 }
 
+// String returns the decimal representation of x as generated by
+// x.Text(10).
 func (x *Int) String() string {
 	return x.Text(10)
 }
