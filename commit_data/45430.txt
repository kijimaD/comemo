commit 94eda9ae37d9f8a34c44c1ad1a030b4475f79faf
Author: Andrew G. Morgan <agm@google.com>
Date:   Fri Oct 23 16:33:38 2020 -0700

    syscall: disable TestAllThreadsSyscall on linux-ppc64
    
    For some reason, currently unknown, this test case fails exclusively
    on the linux-ppc64 platform. Until such time as it can be made to
    work, we'll disable this test case on that platform.
    
    The same issue causes TestSetuidEtc to fail too, so disable that
    on this platform.
    
    Updates #42178
    
    Change-Id: Idd3f6c2ee9f2fba2eb8ce4de69de7f316858bb15
    Reviewed-on: https://go-review.googlesource.com/c/go/+/264719
    Trust: Emmanuel Odeke <emm.odeke@gmail.com>
    Run-TryBot: Emmanuel Odeke <emm.odeke@gmail.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 src/syscall/syscall_linux_test.go | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/syscall/syscall_linux_test.go b/src/syscall/syscall_linux_test.go
index d196534c64..0742ef5b07 100644
--- a/src/syscall/syscall_linux_test.go
+++ b/src/syscall/syscall_linux_test.go
@@ -410,6 +410,9 @@ const (
 // syscalls that execute on all OSThreads - with which to support
 // POSIX semantics for security state changes.
 func TestAllThreadsSyscall(t *testing.T) {
+	if runtime.GOARCH == "ppc64" {
+		t.Skip("skipping on linux/ppc64; see issue #42178")
+	}
 	if _, _, err := syscall.AllThreadsSyscall(syscall.SYS_PRCTL, PR_SET_KEEPCAPS, 0, 0); err == syscall.ENOTSUP {
 		t.Skip("AllThreadsSyscall disabled with cgo")
 	}
@@ -577,6 +580,9 @@ func compareStatus(filter, expect string) error {
 // the syscalls. Care should be taken to mirror any enhancements to
 // this test here in that file too.
 func TestSetuidEtc(t *testing.T) {
+	if runtime.GOARCH == "ppc64" {
+		t.Skip("skipping on linux/ppc64; see issue #42178")
+	}
 	if syscall.Getuid() != 0 {
 		t.Skip("skipping root only test")
 	}
