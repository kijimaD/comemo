commit 6b85a218b86fbc46916d838724d674baf312cc3c
Author: Matthew Dempsky <mdempsky@google.com>
Date:   Thu Jul 15 13:06:13 2021 -0700

    [dev.typeparams] cmd/compile: make TestUnifiedCompare insensitive to default -G level
    
    The test currently fails if the default -G level is changed from 0 to
    3, and it only makes sense to run in -G=0 mode anyway. So might as
    well hard code it that way.
    
    Change-Id: I026d25d567157df5d3f2ca3c68d31d75d9c74532
    Reviewed-on: https://go-review.googlesource.com/c/go/+/334910
    Trust: Matthew Dempsky <mdempsky@google.com>
    Trust: Dan Scales <danscales@google.com>
    Run-TryBot: Matthew Dempsky <mdempsky@google.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Reviewed-by: Dan Scales <danscales@google.com>
---
 src/cmd/compile/internal/noder/unified_test.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/cmd/compile/internal/noder/unified_test.go b/src/cmd/compile/internal/noder/unified_test.go
index 26173682fb..96cc66f775 100644
--- a/src/cmd/compile/internal/noder/unified_test.go
+++ b/src/cmd/compile/internal/noder/unified_test.go
@@ -54,8 +54,8 @@ func TestUnifiedCompare(t *testing.T) {
 				t.Parallel()
 			}
 
-			pkgs1 := loadPackages(t, goos, goarch, "-d=unified=0 -d=inlfuncswithclosures=0 -d=unifiedquirks=1")
-			pkgs2 := loadPackages(t, goos, goarch, "-d=unified=1 -d=inlfuncswithclosures=0 -d=unifiedquirks=1")
+			pkgs1 := loadPackages(t, goos, goarch, "-d=unified=0 -d=inlfuncswithclosures=0 -d=unifiedquirks=1 -G=0")
+			pkgs2 := loadPackages(t, goos, goarch, "-d=unified=1 -d=inlfuncswithclosures=0 -d=unifiedquirks=1 -G=0")
 
 			if len(pkgs1) != len(pkgs2) {
 				t.Fatalf("length mismatch: %v != %v", len(pkgs1), len(pkgs2))
