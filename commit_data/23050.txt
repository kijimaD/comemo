commit e00e65638ac33c13d39b7b4225354e932256005b
Author: Sebastien Binet <seb.binet@gmail.com>
Date:   Tue Jan 27 10:04:11 2015 +0100

    reflect: use arrayAt consistently
    
    This change refactors reflect.Value to consistently use arrayAt when an element
    of an array of bytes is indexed.
    
    This effectively replaces:
     arr := unsafe.Pointer(...)
     arri := unsafe.Pointer(uintptr(arr) + uintptr(i)*elementSize)
    
    with:
     arr := unsafe.Pointer(...)
     arri := arrayAt(arr, i, elementSize)
    
    Change-Id: I53ffd0d6de693b43d5c10c0aa4cd6d4f5e95a1e3
    Reviewed-on: https://go-review.googlesource.com/9183
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
    Run-TryBot: Ian Lance Taylor <iant@golang.org>
    Reviewed-by: Keith Randall <khr@golang.org>
    TryBot-Result: Gobot Gobot <gobot@golang.org>

 src/reflect/value.go | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)
