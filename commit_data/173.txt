commit 30706a7ee7bcd997e7b6317ed5cdddc23f408dbc
Author: Rob Pike <r@golang.org>
Date:   Sun Jun 15 12:22:35 2008 -0700

    error messages now have colon after line number
    
    SVN=122803
---
 test/golden.out | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/test/golden.out b/test/golden.out
index f9cbc2e65f..674bbca1b1 100644
--- a/test/golden.out
+++ b/test/golden.out
@@ -27,11 +27,11 @@ BUG: known to succeed incorrectly
 =========== ./literal.go
 
 =========== ./nil.go
-nil.go:30: fatal error: naddr: const <T>{<i><int32>INT32;}
+nil.go:30 fatal error: naddr: const <T>{<i><int32>INT32;}
 BUG: known to fail incorrectly
 
 =========== ./sieve.go
-sieve.go:8: fatal error: walktype: switch 1 unknown op SEND l(8)
+sieve.go:8 fatal error: walktype: switch 1 unknown op SEND l(114)
 BUG: known to fail incorrectly
 
 =========== ./string_lit.go
@@ -42,7 +42,7 @@ BUG: known to fail incorrectly
 BUG: known to succeed incorrectly
 
 =========== ./test0.go
-test0.go:23: addtyp: renaming Point/<Point>{<x><int32>INT32;<y><int32>INT32;} to Point2/<Point2>FORW
+test0.go:23 warning: addtyp: renaming Point/<Point>{<x><int32>INT32;<y><int32>INT32;} to Point2/<Point2>FORW
 test0.go:48: illegal types for operand
 	(<float32>FLOAT32) AS (<int32>INT32)
 test0.go:49: illegal types for operand
@@ -121,7 +121,7 @@ BUG: known to succeed incorrectly
 
 =========== bugs/bug003.go
 bugs/bug003.go:6: switch statement must have case labels
-bugs/bug003.go:6: fatal error: walkswitch: not case EMPTY
+bugs/bug003.go:6 fatal error: walkswitch: not case EMPTY
 
 BUG: fatal error
 
@@ -139,7 +139,7 @@ bugs/bug006.go:6: expression must be a constant
 bugs/bug006.go:6: expression must be a constant
 bugs/bug006.go:6: expression must be a constant
 bugs/bug006.go:6: expression must be a constant
-bugs/bug006.go:6: fatal error: too many errors
+bugs/bug006.go:6 fatal error: too many errors
 BUG: known to fail incorrectly
 
 =========== bugs/bug010.go
@@ -149,11 +149,11 @@ bugs/bug010.go:9: error in shape across assignment
 BUG: known to fail incorrectly
 
 =========== bugs/bug014.go
-bugs/bug014.go:6: non-oct character in escape sequence: '
-bugs/bug014.go:6: non-oct character in escape sequence: '
-bugs/bug014.go:7: non-oct character in escape sequence: '
-bugs/bug014.go:8: non-hex character in escape sequence: '
-bugs/bug014.go:9: non-hex character in escape sequence: '
+bugs/bug014.go:6 warning: non-oct character in escape sequence: '
+bugs/bug014.go:6 warning: non-oct character in escape sequence: '
+bugs/bug014.go:7 warning: non-oct character in escape sequence: '
+bugs/bug014.go:8 warning: non-hex character in escape sequence: '
+bugs/bug014.go:9 warning: non-hex character in escape sequence: '
 BUG: errors caught but exit code should be non-zero
 
 =========== bugs/bug015.go
@@ -167,11 +167,11 @@ bugs/bug022.go:8: illegal types for operand
 BUG: known to fail incorrectly
 
 =========== bugs/bug023.go
-bugs/bug023.go:20: fatal error: naddr: const <Type>I{<TypeName>110(<_t138>{},<_o140>{},{});}
+bugs/bug023.go:20 fatal error: naddr: const <Type>I{<TypeName>110(<_t138>{},<_o140>{},{});}
 BUG: known to fail incorrectly
 
 =========== bugs/bug025.go
-bugs/bug025.go:7: fatal error: dumpexportvar: oname nil: Foo
+bugs/bug025.go:7 fatal error: dumpexportvar: oname nil: Foo
 
 BUG: known to fail incorrectly or at least with a bad message
 
@@ -240,7 +240,7 @@ bugs/bug044.go:23: error in shape across assignment
 BUG: compilation should succeed
 
 =========== bugs/bug045.go
-bugs/bug045.go:13: fatal error: naddr: const <T>{<i><int32>INT32;}
+bugs/bug045.go:13 fatal error: naddr: const <T>{<i><int32>INT32;}
 BUG: known to fail incorrectly
 
 =========== bugs/bug046.go
@@ -252,7 +252,7 @@ BUG: known to fail incorrectly
 =========== fixedbugs/bug005.go
 
 =========== fixedbugs/bug007.go
-fixedbugs/bug007.go:7: addtyp: renaming Point/<Point>{<x><float32>FLOAT32;<y><float32>FLOAT32;} to Polar/<Polar>FORW
+fixedbugs/bug007.go:7 warning: addtyp: renaming Point/<Point>{<x><float32>FLOAT32;<y><float32>FLOAT32;} to Polar/<Polar>FORW
 
 =========== fixedbugs/bug008.go
 
