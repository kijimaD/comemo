commit 4cde035a720448b2bca07ecdc12beef3b1322939
Author: Jay Conrod <jayconrod@google.com>
Date:   Fri Mar 19 15:11:29 2021 -0400

    [dev.fuzz] internal/fuzz: improve cancellation in worker event loops
    
    worker.runFuzzing now accepts a Context, used for cancellation instead
    of doneC (which is removed). This is passed down through workerClient
    RPC methods (ping, fuzz).
    
    workerClient RPC methods now wrap the call method, which handles
    marshaling and cancellation.
    
    Both workerClient.call and workerServer.serve should return quickly
    when their contexts are cancelled. Turns out, closing the pipe won't
    actually unblock a read on all platforms. Instead, we were falling
    back to SIGKILL in worker.stop, which works but takes longer than
    necessary.
    
    Also fixed missing newline in log message.
    
    Change-Id: I7b5ae54d6eb9afd6361a07759f049f048952e0cc
    Reviewed-on: https://go-review.googlesource.com/c/go/+/303429
    Trust: Jay Conrod <jayconrod@google.com>
    Trust: Katie Hockman <katie@golang.org>
    Run-TryBot: Jay Conrod <jayconrod@google.com>
    Reviewed-by: Katie Hockman <katie@golang.org>

 src/cmd/go/testdata/script/test_fuzz_io_error.txt | 101 +++++++
 src/internal/fuzz/fuzz.go                         |  35 ++-
 src/internal/fuzz/sys_windows.go                  |   3 +-
 src/internal/fuzz/worker.go                       | 322 +++++++++++-----------
 src/testing/fuzz.go                               |   2 +-
 5 files changed, 290 insertions(+), 173 deletions(-)
