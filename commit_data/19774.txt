commit d2f322e9be85d4888a166a271f5a7fb2b2d8333c
Author: Josh Bleecher Snyder <josharian@gmail.com>
Date:   Fri Jul 18 12:41:20 2014 -0700

    runtime: use uint32 arrays in BenchmarkClearFat*
    
    The CopyFat benchmarks were changed in CL 92760044. See CL 111350043 for discussion.
    
    LGTM=khr
    R=khr
    CC=golang-codereviews
    https://golang.org/cl/116000043
---
 src/pkg/runtime/memmove_test.go | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/pkg/runtime/memmove_test.go b/src/pkg/runtime/memmove_test.go
index 09f5dbdac5..8dea1f9e7a 100644
--- a/src/pkg/runtime/memmove_test.go
+++ b/src/pkg/runtime/memmove_test.go
@@ -164,49 +164,49 @@ func BenchmarkMemclr65536(b *testing.B) { bmMemclr(b, 65536) }
 
 func BenchmarkClearFat16(b *testing.B) {
 	for i := 0; i < b.N; i++ {
-		var x [16]byte
+		var x [16 / 4]uint32
 		_ = x
 	}
 }
 func BenchmarkClearFat24(b *testing.B) {
 	for i := 0; i < b.N; i++ {
-		var x [24]byte
+		var x [24 / 4]uint32
 		_ = x
 	}
 }
 func BenchmarkClearFat32(b *testing.B) {
 	for i := 0; i < b.N; i++ {
-		var x [32]byte
+		var x [32 / 4]uint32
 		_ = x
 	}
 }
 func BenchmarkClearFat64(b *testing.B) {
 	for i := 0; i < b.N; i++ {
-		var x [64]byte
+		var x [64 / 4]uint32
 		_ = x
 	}
 }
 func BenchmarkClearFat128(b *testing.B) {
 	for i := 0; i < b.N; i++ {
-		var x [128]byte
+		var x [128 / 4]uint32
 		_ = x
 	}
 }
 func BenchmarkClearFat256(b *testing.B) {
 	for i := 0; i < b.N; i++ {
-		var x [256]byte
+		var x [256 / 4]uint32
 		_ = x
 	}
 }
 func BenchmarkClearFat512(b *testing.B) {
 	for i := 0; i < b.N; i++ {
-		var x [512]byte
+		var x [512 / 4]uint32
 		_ = x
 	}
 }
 func BenchmarkClearFat1024(b *testing.B) {
 	for i := 0; i < b.N; i++ {
-		var x [1024]byte
+		var x [1024 / 4]uint32
 		_ = x
 	}
 }
