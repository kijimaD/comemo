commit 4ca3a8f7a807bba55e9db82b9aa8c43b1a186b8e
Author: Elias Naur <elias.naur@gmail.com>
Date:   Thu Nov 17 13:52:00 2016 +0100

    misc/cgo: decrease test failure timeouts
    
    CL 33239 changed the polling loops from using sched_yield to a sleep
    for 1/1000 of a second. The loop counters were not updated, so failing
    tests now take 100 seconds to complete. Lower the loop counts to 5
    seconds instead.
    
    Change-Id: I7c9a343dacc8188603ecf7e58bd00b535cfc87f5
    Reviewed-on: https://go-review.googlesource.com/33280
    Run-TryBot: Elias Naur <elias.naur@gmail.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Ian Lance Taylor <iant@golang.org>
---
 misc/cgo/testcarchive/main2.c | 2 +-
 misc/cgo/testcarchive/main3.c | 4 ++--
 misc/cgo/testcarchive/main4.c | 4 ++--
 misc/cgo/testcshared/main4.c  | 2 +-
 misc/cgo/testcshared/main5.c  | 4 ++--
 5 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/misc/cgo/testcarchive/main2.c b/misc/cgo/testcarchive/main2.c
index ea37986129..774e014a16 100644
--- a/misc/cgo/testcarchive/main2.c
+++ b/misc/cgo/testcarchive/main2.c
@@ -166,7 +166,7 @@ int main(int argc, char** argv) {
 		ts.tv_nsec = 1000000;
 		nanosleep(&ts, NULL);
 		i++;
-		if (i > 100000) {
+		if (i > 5000) {
 			fprintf(stderr, "looping too long waiting for signal\n");
 			exit(EXIT_FAILURE);
 		}
diff --git a/misc/cgo/testcarchive/main3.c b/misc/cgo/testcarchive/main3.c
index bb7eeda032..0a6c0d3f74 100644
--- a/misc/cgo/testcarchive/main3.c
+++ b/misc/cgo/testcarchive/main3.c
@@ -70,7 +70,7 @@ int main(int argc, char** argv) {
 		ts.tv_nsec = 1000000;
 		nanosleep(&ts, NULL);
 		i++;
-		if (i > 100000) {
+		if (i > 5000) {
 			fprintf(stderr, "looping too long waiting for signal\n");
 			exit(EXIT_FAILURE);
 		}
@@ -144,7 +144,7 @@ int main(int argc, char** argv) {
 		ts.tv_nsec = 1000000;
 		nanosleep(&ts, NULL);
 		i++;
-		if (i > 100000) {
+		if (i > 5000) {
 			fprintf(stderr, "looping too long waiting for signal\n");
 			exit(EXIT_FAILURE);
 		}
diff --git a/misc/cgo/testcarchive/main4.c b/misc/cgo/testcarchive/main4.c
index 39f7c309df..4fd55e753d 100644
--- a/misc/cgo/testcarchive/main4.c
+++ b/misc/cgo/testcarchive/main4.c
@@ -79,7 +79,7 @@ static void* thread1(void* arg __attribute__ ((unused))) {
 		ts.tv_nsec = 1000000;
 		nanosleep(&ts, NULL);
 		i++;
-		if (i > 100000) {
+		if (i > 5000) {
 			fprintf(stderr, "looping too long waiting for signal\n");
 			exit(EXIT_FAILURE);
 		}
@@ -136,7 +136,7 @@ static void* thread2(void* arg __attribute__ ((unused))) {
 		ts.tv_nsec = 1000000;
 		nanosleep(&ts, NULL);
 		i++;
-		if (i > 100000) {
+		if (i > 5000) {
 			fprintf(stderr, "looping too long waiting for signal\n");
 			exit(EXIT_FAILURE);
 		}
diff --git a/misc/cgo/testcshared/main4.c b/misc/cgo/testcshared/main4.c
index ffc4ecabad..355cdefb01 100644
--- a/misc/cgo/testcshared/main4.c
+++ b/misc/cgo/testcshared/main4.c
@@ -171,7 +171,7 @@ int main(int argc, char** argv) {
 		ts.tv_nsec = 1000000;
 		nanosleep(&ts, NULL);
 		i++;
-		if (i > 100000) {
+		if (i > 5000) {
 			fprintf(stderr, "looping too long waiting for signal\n");
 			exit(EXIT_FAILURE);
 		}
diff --git a/misc/cgo/testcshared/main5.c b/misc/cgo/testcshared/main5.c
index 57c64a122e..1bc99101d7 100644
--- a/misc/cgo/testcshared/main5.c
+++ b/misc/cgo/testcshared/main5.c
@@ -83,7 +83,7 @@ int main(int argc, char** argv) {
 		ts.tv_nsec = 1000000;
 		nanosleep(&ts, NULL);
 		i++;
-		if (i > 100000) {
+		if (i > 5000) {
 			fprintf(stderr, "looping too long waiting for signal\n");
 			exit(EXIT_FAILURE);
 		}
@@ -188,7 +188,7 @@ int main(int argc, char** argv) {
 		ts.tv_nsec = 1000000;
 		nanosleep(&ts, NULL);
 		i++;
-		if (i > 100000) {
+		if (i > 5000) {
 			fprintf(stderr, "looping too long waiting for signal\n");
 			exit(EXIT_FAILURE);
 		}
