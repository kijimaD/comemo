commit a76099f0d9699ee0017951a541197bdaa2c2d112
Author: Josh Bleecher Snyder <josharian@gmail.com>
Date:   Tue Apr 21 16:15:05 2015 -0700

    runtime: fix arm64 asm vet issues
    
    Several naming changes and a real issue in asmcgocall_errno.
    
    Change-Id: Ieb0a328a168819fe233d74e0397358384d7e71b3
    Reviewed-on: https://go-review.googlesource.com/9212
    Reviewed-by: Minux Ma <minux@golang.org>
---
 src/runtime/asm_arm64.s        |  4 ++--
 src/runtime/os_darwin.go       |  2 +-
 src/runtime/sys_darwin_arm64.s | 14 +++++++-------
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/runtime/asm_arm64.s b/src/runtime/asm_arm64.s
index d124f9b7b3..c43621a997 100644
--- a/src/runtime/asm_arm64.s
+++ b/src/runtime/asm_arm64.s
@@ -538,11 +538,11 @@ TEXT ·asmcgocall(SB),NOSPLIT,$0-16
 	BL	asmcgocall<>(SB)
 	RET
 
-TEXT ·asmcgocall_errno(SB),NOSPLIT,$0-24
+TEXT ·asmcgocall_errno(SB),NOSPLIT,$0-20
 	MOVD	fn+0(FP), R1
 	MOVD	arg+8(FP), R0
 	BL	asmcgocall<>(SB)
-	MOVD	R0, ret+16(FP)
+	MOVW	R0, ret+16(FP)
 	RET
 
 // asmcgocall common code. fn in R1, arg in R0. returns errno in R0.
diff --git a/src/runtime/os_darwin.go b/src/runtime/os_darwin.go
index 573eb13531..c432c99208 100644
--- a/src/runtime/os_darwin.go
+++ b/src/runtime/os_darwin.go
@@ -33,5 +33,5 @@ func sigtramp()
 //go:noescape
 func setitimer(mode int32, new, old *itimerval)
 
-func raise(int32)
+func raise(sig int32)
 func raiseproc(int32)
diff --git a/src/runtime/sys_darwin_arm64.s b/src/runtime/sys_darwin_arm64.s
index de040e3bb7..7aaf6b681b 100644
--- a/src/runtime/sys_darwin_arm64.s
+++ b/src/runtime/sys_darwin_arm64.s
@@ -81,7 +81,7 @@ TEXT runtime·read(SB),NOSPLIT,$0
 	RET
 
 TEXT runtime·exit(SB),NOSPLIT,$-8
-	MOVW	n+0(FP), R0
+	MOVW	code+0(FP), R0
 	MOVW	$SYS_exit, R16
 	SVC	$0x80
 	MOVD	$1234, R0
@@ -419,14 +419,14 @@ TEXT runtime·kqueue(SB),NOSPLIT,$0
 	MOVW	R0, ret+0(FP)
 	RET
 
-// int32 runtime·kevent(int kq, Kevent *changelist, int nchanges, Kevent *eventlist, int events, Timespec *timeout)
+// int32 runtime·kevent(int kq, Kevent *ch, int nch, Kevent *ev, int nev, Timespec *ts)
 TEXT runtime·kevent(SB),NOSPLIT,$0
 	MOVW	kq+0(FP), R0
-	MOVD	changelist+8(FP), R1
-	MOVW	nchanges+16(FP), R2
-	MOVD	eventlist+24(FP), R3
-	MOVW	nevents+32(FP), R4
-	MOVD	timeout+40(FP), R5
+	MOVD	ch+8(FP), R1
+	MOVW	nch+16(FP), R2
+	MOVD	ev+24(FP), R3
+	MOVW	nev+32(FP), R4
+	MOVD	ts+40(FP), R5
 	MOVW	$SYS_kevent, R16
 	SVC	$0x80
 	BCC	2(PC)
