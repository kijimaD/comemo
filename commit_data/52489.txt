commit 2ff684a5419a72771fd750cebf06370f560dd96a
Author: Austin Clements <austin@google.com>
Date:   Thu Mar 23 15:50:21 2023 -0400

    cmd/compile: allow more inlining of functions that construct closures
    
    Currently, when the inliner is determining if a function is
    inlineable, it descends into the bodies of closures constructed by
    that function. This has several unfortunate consequences:
    
    - If the closure contains a disallowed operation (e.g., a defer), then
      the outer function can't be inlined. It makes sense that the
      *closure* can't be inlined in this case, but it doesn't make sense
      to punish the function that constructs the closure.
    
    - The hairiness of the closure counts against the inlining budget of
      the outer function. Since we currently copy the closure body when
      inlining the outer function, this makes sense from the perspective
      of export data size and binary size, but ultimately doesn't make
      much sense from the perspective of what should be inlineable.
    
    - Since the inliner walks into every closure created by an outer
      function in addition to starting a walk at every closure, this adds
      an n^2 factor to inlinability analysis.
    
    This CL simply drops this behavior.
    
    In std, this makes 57 more functions inlinable, and disallows inlining
    for 10 (due to the basic instability of our bottom-up inlining
    approach), for an net increase of 47 inlinable functions (+0.6%).
    
    This will help significantly with the performance of the functions to
    be added for #56102, which have a somewhat complicated nesting of
    closures with a performance-critical fast path.
    
    The downside of this seems to be a potential increase in export data
    and text size, but the practical impact of this seems to be
    negligible:
    
                   │    before    │           after            │
                   │    bytes     │    bytes      vs base      │
    Go/binary        15.12Mi ± 0%   15.14Mi ± 0%  +0.16% (n=1)
    Go/text          5.220Mi ± 0%   5.237Mi ± 0%  +0.32% (n=1)
    Compile/binary   22.92Mi ± 0%   22.94Mi ± 0%  +0.07% (n=1)
    Compile/text     8.428Mi ± 0%   8.435Mi ± 0%  +0.08% (n=1)
    
    Change-Id: Ie9e38104fed5689a94c368288653fd7cb4b7a35e
    Reviewed-on: https://go-review.googlesource.com/c/go/+/479095
    Reviewed-by: Than McIntosh <thanm@google.com>
    TryBot-Result: Gopher Robot <gobot@golang.org>
    Reviewed-by: Matthew Dempsky <mdempsky@google.com>
    Auto-Submit: Austin Clements <austin@google.com>
    Run-TryBot: Austin Clements <austin@google.com>

 src/cmd/compile/internal/inline/inl.go | 11 +++++------
 test/closure3.dir/main.go              | 26 +++++++++++++++-----------
 2 files changed, 20 insertions(+), 17 deletions(-)
